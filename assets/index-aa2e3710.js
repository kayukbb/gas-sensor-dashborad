function sp(e, n) {
  for (var r = 0; r < n.length; r++) {
    const c = n[r];
    if (typeof c != 'string' && !Array.isArray(c)) {
      for (const f in c)
        if (f !== 'default' && !(f in e)) {
          const g = Object.getOwnPropertyDescriptor(c, f);
          g &&
            Object.defineProperty(
              e,
              f,
              g.get ? g : { enumerable: !0, get: () => c[f] }
            );
        }
    }
  }
  return Object.freeze(
    Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' })
  );
}
(function () {
  const n = document.createElement('link').relList;
  if (n && n.supports && n.supports('modulepreload')) return;
  for (const f of document.querySelectorAll('link[rel="modulepreload"]')) c(f);
  new MutationObserver((f) => {
    for (const g of f)
      if (g.type === 'childList')
        for (const w of g.addedNodes)
          w.tagName === 'LINK' && w.rel === 'modulepreload' && c(w);
  }).observe(document, { childList: !0, subtree: !0 });
  function r(f) {
    const g = {};
    return (
      f.integrity && (g.integrity = f.integrity),
      f.referrerPolicy && (g.referrerPolicy = f.referrerPolicy),
      f.crossOrigin === 'use-credentials'
        ? (g.credentials = 'include')
        : f.crossOrigin === 'anonymous'
        ? (g.credentials = 'omit')
        : (g.credentials = 'same-origin'),
      g
    );
  }
  function c(f) {
    if (f.ep) return;
    f.ep = !0;
    const g = r(f);
    fetch(f.href, g);
  }
})();
function op(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, 'default')
    ? e.default
    : e;
}
var th = { exports: {} },
  Gs = {},
  ih = { exports: {} },
  Le = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ma = Symbol.for('react.element'),
  lp = Symbol.for('react.portal'),
  cp = Symbol.for('react.fragment'),
  dp = Symbol.for('react.strict_mode'),
  up = Symbol.for('react.profiler'),
  hp = Symbol.for('react.provider'),
  fp = Symbol.for('react.context'),
  pp = Symbol.for('react.forward_ref'),
  gp = Symbol.for('react.suspense'),
  mp = Symbol.for('react.memo'),
  xp = Symbol.for('react.lazy'),
  yd = Symbol.iterator;
function vp(e) {
  return e === null || typeof e != 'object'
    ? null
    : ((e = (yd && e[yd]) || e['@@iterator']),
      typeof e == 'function' ? e : null);
}
var rh = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  nh = Object.assign,
  ah = {};
function dn(e, n, r) {
  (this.props = e),
    (this.context = n),
    (this.refs = ah),
    (this.updater = r || rh);
}
dn.prototype.isReactComponent = {};
dn.prototype.setState = function (e, n) {
  if (typeof e != 'object' && typeof e != 'function' && e != null)
    throw Error(
      'setState(...): takes an object of state variables to update or a function which returns an object of state variables.'
    );
  this.updater.enqueueSetState(this, e, n, 'setState');
};
dn.prototype.forceUpdate = function (e) {
  this.updater.enqueueForceUpdate(this, e, 'forceUpdate');
};
function sh() {}
sh.prototype = dn.prototype;
function hc(e, n, r) {
  (this.props = e),
    (this.context = n),
    (this.refs = ah),
    (this.updater = r || rh);
}
var fc = (hc.prototype = new sh());
fc.constructor = hc;
nh(fc, dn.prototype);
fc.isPureReactComponent = !0;
var wd = Array.isArray,
  oh = Object.prototype.hasOwnProperty,
  pc = { current: null },
  lh = { key: !0, ref: !0, __self: !0, __source: !0 };
function ch(e, n, r) {
  var c,
    f = {},
    g = null,
    w = null;
  if (n != null)
    for (c in (n.ref !== void 0 && (w = n.ref),
    n.key !== void 0 && (g = '' + n.key),
    n))
      oh.call(n, c) && !lh.hasOwnProperty(c) && (f[c] = n[c]);
  var k = arguments.length - 2;
  if (k === 1) f.children = r;
  else if (1 < k) {
    for (var M = Array(k), D = 0; D < k; D++) M[D] = arguments[D + 2];
    f.children = M;
  }
  if (e && e.defaultProps)
    for (c in ((k = e.defaultProps), k)) f[c] === void 0 && (f[c] = k[c]);
  return {
    $$typeof: ma,
    type: e,
    key: g,
    ref: w,
    props: f,
    _owner: pc.current,
  };
}
function bp(e, n) {
  return {
    $$typeof: ma,
    type: e.type,
    key: n,
    ref: e.ref,
    props: e.props,
    _owner: e._owner,
  };
}
function gc(e) {
  return typeof e == 'object' && e !== null && e.$$typeof === ma;
}
function yp(e) {
  var n = { '=': '=0', ':': '=2' };
  return (
    '$' +
    e.replace(/[=:]/g, function (r) {
      return n[r];
    })
  );
}
var Cd = /\/+/g;
function Ao(e, n) {
  return typeof e == 'object' && e !== null && e.key != null
    ? yp('' + e.key)
    : n.toString(36);
}
function es(e, n, r, c, f) {
  var g = typeof e;
  (g === 'undefined' || g === 'boolean') && (e = null);
  var w = !1;
  if (e === null) w = !0;
  else
    switch (g) {
      case 'string':
      case 'number':
        w = !0;
        break;
      case 'object':
        switch (e.$$typeof) {
          case ma:
          case lp:
            w = !0;
        }
    }
  if (w)
    return (
      (w = e),
      (f = f(w)),
      (e = c === '' ? '.' + Ao(w, 0) : c),
      wd(f)
        ? ((r = ''),
          e != null && (r = e.replace(Cd, '$&/') + '/'),
          es(f, n, r, '', function (D) {
            return D;
          }))
        : f != null &&
          (gc(f) &&
            (f = bp(
              f,
              r +
                (!f.key || (w && w.key === f.key)
                  ? ''
                  : ('' + f.key).replace(Cd, '$&/') + '/') +
                e
            )),
          n.push(f)),
      1
    );
  if (((w = 0), (c = c === '' ? '.' : c + ':'), wd(e)))
    for (var k = 0; k < e.length; k++) {
      g = e[k];
      var M = c + Ao(g, k);
      w += es(g, n, r, M, f);
    }
  else if (((M = vp(e)), typeof M == 'function'))
    for (e = M.call(e), k = 0; !(g = e.next()).done; )
      (g = g.value), (M = c + Ao(g, k++)), (w += es(g, n, r, M, f));
  else if (g === 'object')
    throw (
      ((n = String(e)),
      Error(
        'Objects are not valid as a React child (found: ' +
          (n === '[object Object]'
            ? 'object with keys {' + Object.keys(e).join(', ') + '}'
            : n) +
          '). If you meant to render a collection of children, use an array instead.'
      ))
    );
  return w;
}
function Ra(e, n, r) {
  if (e == null) return e;
  var c = [],
    f = 0;
  return (
    es(e, c, '', '', function (g) {
      return n.call(r, g, f++);
    }),
    c
  );
}
function wp(e) {
  if (e._status === -1) {
    var n = e._result;
    (n = n()),
      n.then(
        function (r) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 1), (e._result = r));
        },
        function (r) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 2), (e._result = r));
        }
      ),
      e._status === -1 && ((e._status = 0), (e._result = n));
  }
  if (e._status === 1) return e._result.default;
  throw e._result;
}
var Ct = { current: null },
  ts = { transition: null },
  Cp = {
    ReactCurrentDispatcher: Ct,
    ReactCurrentBatchConfig: ts,
    ReactCurrentOwner: pc,
  };
Le.Children = {
  map: Ra,
  forEach: function (e, n, r) {
    Ra(
      e,
      function () {
        n.apply(this, arguments);
      },
      r
    );
  },
  count: function (e) {
    var n = 0;
    return (
      Ra(e, function () {
        n++;
      }),
      n
    );
  },
  toArray: function (e) {
    return (
      Ra(e, function (n) {
        return n;
      }) || []
    );
  },
  only: function (e) {
    if (!gc(e))
      throw Error(
        'React.Children.only expected to receive a single React element child.'
      );
    return e;
  },
};
Le.Component = dn;
Le.Fragment = cp;
Le.Profiler = up;
Le.PureComponent = hc;
Le.StrictMode = dp;
Le.Suspense = gp;
Le.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Cp;
Le.cloneElement = function (e, n, r) {
  if (e == null)
    throw Error(
      'React.cloneElement(...): The argument must be a React element, but you passed ' +
        e +
        '.'
    );
  var c = nh({}, e.props),
    f = e.key,
    g = e.ref,
    w = e._owner;
  if (n != null) {
    if (
      (n.ref !== void 0 && ((g = n.ref), (w = pc.current)),
      n.key !== void 0 && (f = '' + n.key),
      e.type && e.type.defaultProps)
    )
      var k = e.type.defaultProps;
    for (M in n)
      oh.call(n, M) &&
        !lh.hasOwnProperty(M) &&
        (c[M] = n[M] === void 0 && k !== void 0 ? k[M] : n[M]);
  }
  var M = arguments.length - 2;
  if (M === 1) c.children = r;
  else if (1 < M) {
    k = Array(M);
    for (var D = 0; D < M; D++) k[D] = arguments[D + 2];
    c.children = k;
  }
  return { $$typeof: ma, type: e.type, key: f, ref: g, props: c, _owner: w };
};
Le.createContext = function (e) {
  return (
    (e = {
      $$typeof: fp,
      _currentValue: e,
      _currentValue2: e,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (e.Provider = { $$typeof: hp, _context: e }),
    (e.Consumer = e)
  );
};
Le.createElement = ch;
Le.createFactory = function (e) {
  var n = ch.bind(null, e);
  return (n.type = e), n;
};
Le.createRef = function () {
  return { current: null };
};
Le.forwardRef = function (e) {
  return { $$typeof: pp, render: e };
};
Le.isValidElement = gc;
Le.lazy = function (e) {
  return { $$typeof: xp, _payload: { _status: -1, _result: e }, _init: wp };
};
Le.memo = function (e, n) {
  return { $$typeof: mp, type: e, compare: n === void 0 ? null : n };
};
Le.startTransition = function (e) {
  var n = ts.transition;
  ts.transition = {};
  try {
    e();
  } finally {
    ts.transition = n;
  }
};
Le.unstable_act = function () {
  throw Error('act(...) is not supported in production builds of React.');
};
Le.useCallback = function (e, n) {
  return Ct.current.useCallback(e, n);
};
Le.useContext = function (e) {
  return Ct.current.useContext(e);
};
Le.useDebugValue = function () {};
Le.useDeferredValue = function (e) {
  return Ct.current.useDeferredValue(e);
};
Le.useEffect = function (e, n) {
  return Ct.current.useEffect(e, n);
};
Le.useId = function () {
  return Ct.current.useId();
};
Le.useImperativeHandle = function (e, n, r) {
  return Ct.current.useImperativeHandle(e, n, r);
};
Le.useInsertionEffect = function (e, n) {
  return Ct.current.useInsertionEffect(e, n);
};
Le.useLayoutEffect = function (e, n) {
  return Ct.current.useLayoutEffect(e, n);
};
Le.useMemo = function (e, n) {
  return Ct.current.useMemo(e, n);
};
Le.useReducer = function (e, n, r) {
  return Ct.current.useReducer(e, n, r);
};
Le.useRef = function (e) {
  return Ct.current.useRef(e);
};
Le.useState = function (e) {
  return Ct.current.useState(e);
};
Le.useSyncExternalStore = function (e, n, r) {
  return Ct.current.useSyncExternalStore(e, n, r);
};
Le.useTransition = function () {
  return Ct.current.useTransition();
};
Le.version = '18.2.0';
ih.exports = Le;
var ne = ih.exports;
const mc = op(ne),
  kp = sp({ __proto__: null, default: mc }, [ne]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Sp = ne,
  Ap = Symbol.for('react.element'),
  Lp = Symbol.for('react.fragment'),
  Np = Object.prototype.hasOwnProperty,
  Ep = Sp.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  jp = { key: !0, ref: !0, __self: !0, __source: !0 };
function dh(e, n, r) {
  var c,
    f = {},
    g = null,
    w = null;
  r !== void 0 && (g = '' + r),
    n.key !== void 0 && (g = '' + n.key),
    n.ref !== void 0 && (w = n.ref);
  for (c in n) Np.call(n, c) && !jp.hasOwnProperty(c) && (f[c] = n[c]);
  if (e && e.defaultProps)
    for (c in ((n = e.defaultProps), n)) f[c] === void 0 && (f[c] = n[c]);
  return {
    $$typeof: Ap,
    type: e,
    key: g,
    ref: w,
    props: f,
    _owner: Ep.current,
  };
}
Gs.Fragment = Lp;
Gs.jsx = dh;
Gs.jsxs = dh;
th.exports = Gs;
var m = th.exports,
  ol = {},
  uh = { exports: {} },
  Yt = {},
  hh = { exports: {} },
  fh = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (e) {
  function n(de, xe) {
    var we = de.length;
    de.push(xe);
    e: for (; 0 < we; ) {
      var Re = (we - 1) >>> 1,
        je = de[Re];
      if (0 < f(je, xe)) (de[Re] = xe), (de[we] = je), (we = Re);
      else break e;
    }
  }
  function r(de) {
    return de.length === 0 ? null : de[0];
  }
  function c(de) {
    if (de.length === 0) return null;
    var xe = de[0],
      we = de.pop();
    if (we !== xe) {
      de[0] = we;
      e: for (var Re = 0, je = de.length, _t = je >>> 1; Re < _t; ) {
        var Vt = 2 * (Re + 1) - 1,
          dt = de[Vt],
          Be = Vt + 1,
          Wt = de[Be];
        if (0 > f(dt, we))
          Be < je && 0 > f(Wt, dt)
            ? ((de[Re] = Wt), (de[Be] = we), (Re = Be))
            : ((de[Re] = dt), (de[Vt] = we), (Re = Vt));
        else if (Be < je && 0 > f(Wt, we))
          (de[Re] = Wt), (de[Be] = we), (Re = Be);
        else break e;
      }
    }
    return xe;
  }
  function f(de, xe) {
    var we = de.sortIndex - xe.sortIndex;
    return we !== 0 ? we : de.id - xe.id;
  }
  if (typeof performance == 'object' && typeof performance.now == 'function') {
    var g = performance;
    e.unstable_now = function () {
      return g.now();
    };
  } else {
    var w = Date,
      k = w.now();
    e.unstable_now = function () {
      return w.now() - k;
    };
  }
  var M = [],
    D = [],
    z = 1,
    Y = null,
    U = 3,
    K = !1,
    Z = !1,
    V = !1,
    ee = typeof setTimeout == 'function' ? setTimeout : null,
    B = typeof clearTimeout == 'function' ? clearTimeout : null,
    E = typeof setImmediate < 'u' ? setImmediate : null;
  typeof navigator < 'u' &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function _(de) {
    for (var xe = r(D); xe !== null; ) {
      if (xe.callback === null) c(D);
      else if (xe.startTime <= de)
        c(D), (xe.sortIndex = xe.expirationTime), n(M, xe);
      else break;
      xe = r(D);
    }
  }
  function Q(de) {
    if (((V = !1), _(de), !Z))
      if (r(M) !== null) (Z = !0), yi(W);
      else {
        var xe = r(D);
        xe !== null && wi(Q, xe.startTime - de);
      }
  }
  function W(de, xe) {
    (Z = !1), V && ((V = !1), B(he), (he = -1)), (K = !0);
    var we = U;
    try {
      for (
        _(xe), Y = r(M);
        Y !== null && (!(Y.expirationTime > xe) || (de && !ct()));

      ) {
        var Re = Y.callback;
        if (typeof Re == 'function') {
          (Y.callback = null), (U = Y.priorityLevel);
          var je = Re(Y.expirationTime <= xe);
          (xe = e.unstable_now()),
            typeof je == 'function' ? (Y.callback = je) : Y === r(M) && c(M),
            _(xe);
        } else c(M);
        Y = r(M);
      }
      if (Y !== null) var _t = !0;
      else {
        var Vt = r(D);
        Vt !== null && wi(Q, Vt.startTime - xe), (_t = !1);
      }
      return _t;
    } finally {
      (Y = null), (U = we), (K = !1);
    }
  }
  var ae = !1,
    ce = null,
    he = -1,
    Te = 5,
    ye = -1;
  function ct() {
    return !(e.unstable_now() - ye < Te);
  }
  function rt() {
    if (ce !== null) {
      var de = e.unstable_now();
      ye = de;
      var xe = !0;
      try {
        xe = ce(!0, de);
      } finally {
        xe ? St() : ((ae = !1), (ce = null));
      }
    } else ae = !1;
  }
  var St;
  if (typeof E == 'function')
    St = function () {
      E(rt);
    };
  else if (typeof MessageChannel < 'u') {
    var Ge = new MessageChannel(),
      fi = Ge.port2;
    (Ge.port1.onmessage = rt),
      (St = function () {
        fi.postMessage(null);
      });
  } else
    St = function () {
      ee(rt, 0);
    };
  function yi(de) {
    (ce = de), ae || ((ae = !0), St());
  }
  function wi(de, xe) {
    he = ee(function () {
      de(e.unstable_now());
    }, xe);
  }
  (e.unstable_IdlePriority = 5),
    (e.unstable_ImmediatePriority = 1),
    (e.unstable_LowPriority = 4),
    (e.unstable_NormalPriority = 3),
    (e.unstable_Profiling = null),
    (e.unstable_UserBlockingPriority = 2),
    (e.unstable_cancelCallback = function (de) {
      de.callback = null;
    }),
    (e.unstable_continueExecution = function () {
      Z || K || ((Z = !0), yi(W));
    }),
    (e.unstable_forceFrameRate = function (de) {
      0 > de || 125 < de
        ? console.error(
            'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported'
          )
        : (Te = 0 < de ? Math.floor(1e3 / de) : 5);
    }),
    (e.unstable_getCurrentPriorityLevel = function () {
      return U;
    }),
    (e.unstable_getFirstCallbackNode = function () {
      return r(M);
    }),
    (e.unstable_next = function (de) {
      switch (U) {
        case 1:
        case 2:
        case 3:
          var xe = 3;
          break;
        default:
          xe = U;
      }
      var we = U;
      U = xe;
      try {
        return de();
      } finally {
        U = we;
      }
    }),
    (e.unstable_pauseExecution = function () {}),
    (e.unstable_requestPaint = function () {}),
    (e.unstable_runWithPriority = function (de, xe) {
      switch (de) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          de = 3;
      }
      var we = U;
      U = de;
      try {
        return xe();
      } finally {
        U = we;
      }
    }),
    (e.unstable_scheduleCallback = function (de, xe, we) {
      var Re = e.unstable_now();
      switch (
        (typeof we == 'object' && we !== null
          ? ((we = we.delay),
            (we = typeof we == 'number' && 0 < we ? Re + we : Re))
          : (we = Re),
        de)
      ) {
        case 1:
          var je = -1;
          break;
        case 2:
          je = 250;
          break;
        case 5:
          je = 1073741823;
          break;
        case 4:
          je = 1e4;
          break;
        default:
          je = 5e3;
      }
      return (
        (je = we + je),
        (de = {
          id: z++,
          callback: xe,
          priorityLevel: de,
          startTime: we,
          expirationTime: je,
          sortIndex: -1,
        }),
        we > Re
          ? ((de.sortIndex = we),
            n(D, de),
            r(M) === null &&
              de === r(D) &&
              (V ? (B(he), (he = -1)) : (V = !0), wi(Q, we - Re)))
          : ((de.sortIndex = je), n(M, de), Z || K || ((Z = !0), yi(W))),
        de
      );
    }),
    (e.unstable_shouldYield = ct),
    (e.unstable_wrapCallback = function (de) {
      var xe = U;
      return function () {
        var we = U;
        U = xe;
        try {
          return de.apply(this, arguments);
        } finally {
          U = we;
        }
      };
    });
})(fh);
hh.exports = fh;
var Mp = hh.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ph = ne,
  Bt = Mp;
function oe(e) {
  for (
    var n = 'https://reactjs.org/docs/error-decoder.html?invariant=' + e, r = 1;
    r < arguments.length;
    r++
  )
    n += '&args[]=' + encodeURIComponent(arguments[r]);
  return (
    'Minified React error #' +
    e +
    '; visit ' +
    n +
    ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
  );
}
var gh = new Set(),
  $n = {};
function Ar(e, n) {
  rn(e, n), rn(e + 'Capture', n);
}
function rn(e, n) {
  for ($n[e] = n, e = 0; e < n.length; e++) gh.add(n[e]);
}
var Mi = !(
    typeof window > 'u' ||
    typeof window.document > 'u' ||
    typeof window.document.createElement > 'u'
  ),
  ll = Object.prototype.hasOwnProperty,
  Pp =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  kd = {},
  Sd = {};
function Tp(e) {
  return ll.call(Sd, e)
    ? !0
    : ll.call(kd, e)
    ? !1
    : Pp.test(e)
    ? (Sd[e] = !0)
    : ((kd[e] = !0), !1);
}
function Dp(e, n, r, c) {
  if (r !== null && r.type === 0) return !1;
  switch (typeof n) {
    case 'function':
    case 'symbol':
      return !0;
    case 'boolean':
      return c
        ? !1
        : r !== null
        ? !r.acceptsBooleans
        : ((e = e.toLowerCase().slice(0, 5)), e !== 'data-' && e !== 'aria-');
    default:
      return !1;
  }
}
function Ip(e, n, r, c) {
  if (n === null || typeof n > 'u' || Dp(e, n, r, c)) return !0;
  if (c) return !1;
  if (r !== null)
    switch (r.type) {
      case 3:
        return !n;
      case 4:
        return n === !1;
      case 5:
        return isNaN(n);
      case 6:
        return isNaN(n) || 1 > n;
    }
  return !1;
}
function kt(e, n, r, c, f, g, w) {
  (this.acceptsBooleans = n === 2 || n === 3 || n === 4),
    (this.attributeName = c),
    (this.attributeNamespace = f),
    (this.mustUseProperty = r),
    (this.propertyName = e),
    (this.type = n),
    (this.sanitizeURL = g),
    (this.removeEmptyString = w);
}
var lt = {};
'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
  .split(' ')
  .forEach(function (e) {
    lt[e] = new kt(e, 0, !1, e, null, !1, !1);
  });
[
  ['acceptCharset', 'accept-charset'],
  ['className', 'class'],
  ['htmlFor', 'for'],
  ['httpEquiv', 'http-equiv'],
].forEach(function (e) {
  var n = e[0];
  lt[n] = new kt(n, 1, !1, e[1], null, !1, !1);
});
['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (e) {
  lt[e] = new kt(e, 2, !1, e.toLowerCase(), null, !1, !1);
});
[
  'autoReverse',
  'externalResourcesRequired',
  'focusable',
  'preserveAlpha',
].forEach(function (e) {
  lt[e] = new kt(e, 2, !1, e, null, !1, !1);
});
'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
  .split(' ')
  .forEach(function (e) {
    lt[e] = new kt(e, 3, !1, e.toLowerCase(), null, !1, !1);
  });
['checked', 'multiple', 'muted', 'selected'].forEach(function (e) {
  lt[e] = new kt(e, 3, !0, e, null, !1, !1);
});
['capture', 'download'].forEach(function (e) {
  lt[e] = new kt(e, 4, !1, e, null, !1, !1);
});
['cols', 'rows', 'size', 'span'].forEach(function (e) {
  lt[e] = new kt(e, 6, !1, e, null, !1, !1);
});
['rowSpan', 'start'].forEach(function (e) {
  lt[e] = new kt(e, 5, !1, e.toLowerCase(), null, !1, !1);
});
var xc = /[\-:]([a-z])/g;
function vc(e) {
  return e[1].toUpperCase();
}
'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
  .split(' ')
  .forEach(function (e) {
    var n = e.replace(xc, vc);
    lt[n] = new kt(n, 1, !1, e, null, !1, !1);
  });
'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
  .split(' ')
  .forEach(function (e) {
    var n = e.replace(xc, vc);
    lt[n] = new kt(n, 1, !1, e, 'http://www.w3.org/1999/xlink', !1, !1);
  });
['xml:base', 'xml:lang', 'xml:space'].forEach(function (e) {
  var n = e.replace(xc, vc);
  lt[n] = new kt(n, 1, !1, e, 'http://www.w3.org/XML/1998/namespace', !1, !1);
});
['tabIndex', 'crossOrigin'].forEach(function (e) {
  lt[e] = new kt(e, 1, !1, e.toLowerCase(), null, !1, !1);
});
lt.xlinkHref = new kt(
  'xlinkHref',
  1,
  !1,
  'xlink:href',
  'http://www.w3.org/1999/xlink',
  !0,
  !1
);
['src', 'href', 'action', 'formAction'].forEach(function (e) {
  lt[e] = new kt(e, 1, !1, e.toLowerCase(), null, !0, !0);
});
function bc(e, n, r, c) {
  var f = lt.hasOwnProperty(n) ? lt[n] : null;
  (f !== null
    ? f.type !== 0
    : c ||
      !(2 < n.length) ||
      (n[0] !== 'o' && n[0] !== 'O') ||
      (n[1] !== 'n' && n[1] !== 'N')) &&
    (Ip(n, r, f, c) && (r = null),
    c || f === null
      ? Tp(n) && (r === null ? e.removeAttribute(n) : e.setAttribute(n, '' + r))
      : f.mustUseProperty
      ? (e[f.propertyName] = r === null ? (f.type === 3 ? !1 : '') : r)
      : ((n = f.attributeName),
        (c = f.attributeNamespace),
        r === null
          ? e.removeAttribute(n)
          : ((f = f.type),
            (r = f === 3 || (f === 4 && r === !0) ? '' : '' + r),
            c ? e.setAttributeNS(c, n, r) : e.setAttribute(n, r))));
}
var Ii = ph.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  Oa = Symbol.for('react.element'),
  Or = Symbol.for('react.portal'),
  Fr = Symbol.for('react.fragment'),
  yc = Symbol.for('react.strict_mode'),
  cl = Symbol.for('react.profiler'),
  mh = Symbol.for('react.provider'),
  xh = Symbol.for('react.context'),
  wc = Symbol.for('react.forward_ref'),
  dl = Symbol.for('react.suspense'),
  ul = Symbol.for('react.suspense_list'),
  Cc = Symbol.for('react.memo'),
  zi = Symbol.for('react.lazy'),
  vh = Symbol.for('react.offscreen'),
  Ad = Symbol.iterator;
function Sn(e) {
  return e === null || typeof e != 'object'
    ? null
    : ((e = (Ad && e[Ad]) || e['@@iterator']),
      typeof e == 'function' ? e : null);
}
var We = Object.assign,
  Lo;
function Rn(e) {
  if (Lo === void 0)
    try {
      throw Error();
    } catch (r) {
      var n = r.stack.trim().match(/\n( *(at )?)/);
      Lo = (n && n[1]) || '';
    }
  return (
    `
` +
    Lo +
    e
  );
}
var No = !1;
function Eo(e, n) {
  if (!e || No) return '';
  No = !0;
  var r = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (n)
      if (
        ((n = function () {
          throw Error();
        }),
        Object.defineProperty(n.prototype, 'props', {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == 'object' && Reflect.construct)
      ) {
        try {
          Reflect.construct(n, []);
        } catch (D) {
          var c = D;
        }
        Reflect.construct(e, [], n);
      } else {
        try {
          n.call();
        } catch (D) {
          c = D;
        }
        e.call(n.prototype);
      }
    else {
      try {
        throw Error();
      } catch (D) {
        c = D;
      }
      e();
    }
  } catch (D) {
    if (D && c && typeof D.stack == 'string') {
      for (
        var f = D.stack.split(`
`),
          g = c.stack.split(`
`),
          w = f.length - 1,
          k = g.length - 1;
        1 <= w && 0 <= k && f[w] !== g[k];

      )
        k--;
      for (; 1 <= w && 0 <= k; w--, k--)
        if (f[w] !== g[k]) {
          if (w !== 1 || k !== 1)
            do
              if ((w--, k--, 0 > k || f[w] !== g[k])) {
                var M =
                  `
` + f[w].replace(' at new ', ' at ');
                return (
                  e.displayName &&
                    M.includes('<anonymous>') &&
                    (M = M.replace('<anonymous>', e.displayName)),
                  M
                );
              }
            while (1 <= w && 0 <= k);
          break;
        }
    }
  } finally {
    (No = !1), (Error.prepareStackTrace = r);
  }
  return (e = e ? e.displayName || e.name : '') ? Rn(e) : '';
}
function Rp(e) {
  switch (e.tag) {
    case 5:
      return Rn(e.type);
    case 16:
      return Rn('Lazy');
    case 13:
      return Rn('Suspense');
    case 19:
      return Rn('SuspenseList');
    case 0:
    case 2:
    case 15:
      return (e = Eo(e.type, !1)), e;
    case 11:
      return (e = Eo(e.type.render, !1)), e;
    case 1:
      return (e = Eo(e.type, !0)), e;
    default:
      return '';
  }
}
function hl(e) {
  if (e == null) return null;
  if (typeof e == 'function') return e.displayName || e.name || null;
  if (typeof e == 'string') return e;
  switch (e) {
    case Fr:
      return 'Fragment';
    case Or:
      return 'Portal';
    case cl:
      return 'Profiler';
    case yc:
      return 'StrictMode';
    case dl:
      return 'Suspense';
    case ul:
      return 'SuspenseList';
  }
  if (typeof e == 'object')
    switch (e.$$typeof) {
      case xh:
        return (e.displayName || 'Context') + '.Consumer';
      case mh:
        return (e._context.displayName || 'Context') + '.Provider';
      case wc:
        var n = e.render;
        return (
          (e = e.displayName),
          e ||
            ((e = n.displayName || n.name || ''),
            (e = e !== '' ? 'ForwardRef(' + e + ')' : 'ForwardRef')),
          e
        );
      case Cc:
        return (
          (n = e.displayName || null), n !== null ? n : hl(e.type) || 'Memo'
        );
      case zi:
        (n = e._payload), (e = e._init);
        try {
          return hl(e(n));
        } catch {}
    }
  return null;
}
function Op(e) {
  var n = e.type;
  switch (e.tag) {
    case 24:
      return 'Cache';
    case 9:
      return (n.displayName || 'Context') + '.Consumer';
    case 10:
      return (n._context.displayName || 'Context') + '.Provider';
    case 18:
      return 'DehydratedFragment';
    case 11:
      return (
        (e = n.render),
        (e = e.displayName || e.name || ''),
        n.displayName || (e !== '' ? 'ForwardRef(' + e + ')' : 'ForwardRef')
      );
    case 7:
      return 'Fragment';
    case 5:
      return n;
    case 4:
      return 'Portal';
    case 3:
      return 'Root';
    case 6:
      return 'Text';
    case 16:
      return hl(n);
    case 8:
      return n === yc ? 'StrictMode' : 'Mode';
    case 22:
      return 'Offscreen';
    case 12:
      return 'Profiler';
    case 21:
      return 'Scope';
    case 13:
      return 'Suspense';
    case 19:
      return 'SuspenseList';
    case 25:
      return 'TracingMarker';
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof n == 'function') return n.displayName || n.name || null;
      if (typeof n == 'string') return n;
  }
  return null;
}
function er(e) {
  switch (typeof e) {
    case 'boolean':
    case 'number':
    case 'string':
    case 'undefined':
      return e;
    case 'object':
      return e;
    default:
      return '';
  }
}
function bh(e) {
  var n = e.type;
  return (
    (e = e.nodeName) &&
    e.toLowerCase() === 'input' &&
    (n === 'checkbox' || n === 'radio')
  );
}
function Fp(e) {
  var n = bh(e) ? 'checked' : 'value',
    r = Object.getOwnPropertyDescriptor(e.constructor.prototype, n),
    c = '' + e[n];
  if (
    !e.hasOwnProperty(n) &&
    typeof r < 'u' &&
    typeof r.get == 'function' &&
    typeof r.set == 'function'
  ) {
    var f = r.get,
      g = r.set;
    return (
      Object.defineProperty(e, n, {
        configurable: !0,
        get: function () {
          return f.call(this);
        },
        set: function (w) {
          (c = '' + w), g.call(this, w);
        },
      }),
      Object.defineProperty(e, n, { enumerable: r.enumerable }),
      {
        getValue: function () {
          return c;
        },
        setValue: function (w) {
          c = '' + w;
        },
        stopTracking: function () {
          (e._valueTracker = null), delete e[n];
        },
      }
    );
  }
}
function Fa(e) {
  e._valueTracker || (e._valueTracker = Fp(e));
}
function yh(e) {
  if (!e) return !1;
  var n = e._valueTracker;
  if (!n) return !0;
  var r = n.getValue(),
    c = '';
  return (
    e && (c = bh(e) ? (e.checked ? 'true' : 'false') : e.value),
    (e = c),
    e !== r ? (n.setValue(e), !0) : !1
  );
}
function gs(e) {
  if (((e = e || (typeof document < 'u' ? document : void 0)), typeof e > 'u'))
    return null;
  try {
    return e.activeElement || e.body;
  } catch {
    return e.body;
  }
}
function fl(e, n) {
  var r = n.checked;
  return We({}, n, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: r ?? e._wrapperState.initialChecked,
  });
}
function Ld(e, n) {
  var r = n.defaultValue == null ? '' : n.defaultValue,
    c = n.checked != null ? n.checked : n.defaultChecked;
  (r = er(n.value != null ? n.value : r)),
    (e._wrapperState = {
      initialChecked: c,
      initialValue: r,
      controlled:
        n.type === 'checkbox' || n.type === 'radio'
          ? n.checked != null
          : n.value != null,
    });
}
function wh(e, n) {
  (n = n.checked), n != null && bc(e, 'checked', n, !1);
}
function pl(e, n) {
  wh(e, n);
  var r = er(n.value),
    c = n.type;
  if (r != null)
    c === 'number'
      ? ((r === 0 && e.value === '') || e.value != r) && (e.value = '' + r)
      : e.value !== '' + r && (e.value = '' + r);
  else if (c === 'submit' || c === 'reset') {
    e.removeAttribute('value');
    return;
  }
  n.hasOwnProperty('value')
    ? gl(e, n.type, r)
    : n.hasOwnProperty('defaultValue') && gl(e, n.type, er(n.defaultValue)),
    n.checked == null &&
      n.defaultChecked != null &&
      (e.defaultChecked = !!n.defaultChecked);
}
function Nd(e, n, r) {
  if (n.hasOwnProperty('value') || n.hasOwnProperty('defaultValue')) {
    var c = n.type;
    if (
      !(
        (c !== 'submit' && c !== 'reset') ||
        (n.value !== void 0 && n.value !== null)
      )
    )
      return;
    (n = '' + e._wrapperState.initialValue),
      r || n === e.value || (e.value = n),
      (e.defaultValue = n);
  }
  (r = e.name),
    r !== '' && (e.name = ''),
    (e.defaultChecked = !!e._wrapperState.initialChecked),
    r !== '' && (e.name = r);
}
function gl(e, n, r) {
  (n !== 'number' || gs(e.ownerDocument) !== e) &&
    (r == null
      ? (e.defaultValue = '' + e._wrapperState.initialValue)
      : e.defaultValue !== '' + r && (e.defaultValue = '' + r));
}
var On = Array.isArray;
function Zr(e, n, r, c) {
  if (((e = e.options), n)) {
    n = {};
    for (var f = 0; f < r.length; f++) n['$' + r[f]] = !0;
    for (r = 0; r < e.length; r++)
      (f = n.hasOwnProperty('$' + e[r].value)),
        e[r].selected !== f && (e[r].selected = f),
        f && c && (e[r].defaultSelected = !0);
  } else {
    for (r = '' + er(r), n = null, f = 0; f < e.length; f++) {
      if (e[f].value === r) {
        (e[f].selected = !0), c && (e[f].defaultSelected = !0);
        return;
      }
      n !== null || e[f].disabled || (n = e[f]);
    }
    n !== null && (n.selected = !0);
  }
}
function ml(e, n) {
  if (n.dangerouslySetInnerHTML != null) throw Error(oe(91));
  return We({}, n, {
    value: void 0,
    defaultValue: void 0,
    children: '' + e._wrapperState.initialValue,
  });
}
function Ed(e, n) {
  var r = n.value;
  if (r == null) {
    if (((r = n.children), (n = n.defaultValue), r != null)) {
      if (n != null) throw Error(oe(92));
      if (On(r)) {
        if (1 < r.length) throw Error(oe(93));
        r = r[0];
      }
      n = r;
    }
    n == null && (n = ''), (r = n);
  }
  e._wrapperState = { initialValue: er(r) };
}
function Ch(e, n) {
  var r = er(n.value),
    c = er(n.defaultValue);
  r != null &&
    ((r = '' + r),
    r !== e.value && (e.value = r),
    n.defaultValue == null && e.defaultValue !== r && (e.defaultValue = r)),
    c != null && (e.defaultValue = '' + c);
}
function jd(e) {
  var n = e.textContent;
  n === e._wrapperState.initialValue && n !== '' && n !== null && (e.value = n);
}
function kh(e) {
  switch (e) {
    case 'svg':
      return 'http://www.w3.org/2000/svg';
    case 'math':
      return 'http://www.w3.org/1998/Math/MathML';
    default:
      return 'http://www.w3.org/1999/xhtml';
  }
}
function xl(e, n) {
  return e == null || e === 'http://www.w3.org/1999/xhtml'
    ? kh(n)
    : e === 'http://www.w3.org/2000/svg' && n === 'foreignObject'
    ? 'http://www.w3.org/1999/xhtml'
    : e;
}
var za,
  Sh = (function (e) {
    return typeof MSApp < 'u' && MSApp.execUnsafeLocalFunction
      ? function (n, r, c, f) {
          MSApp.execUnsafeLocalFunction(function () {
            return e(n, r, c, f);
          });
        }
      : e;
  })(function (e, n) {
    if (e.namespaceURI !== 'http://www.w3.org/2000/svg' || 'innerHTML' in e)
      e.innerHTML = n;
    else {
      for (
        za = za || document.createElement('div'),
          za.innerHTML = '<svg>' + n.valueOf().toString() + '</svg>',
          n = za.firstChild;
        e.firstChild;

      )
        e.removeChild(e.firstChild);
      for (; n.firstChild; ) e.appendChild(n.firstChild);
    }
  });
function qn(e, n) {
  if (n) {
    var r = e.firstChild;
    if (r && r === e.lastChild && r.nodeType === 3) {
      r.nodeValue = n;
      return;
    }
  }
  e.textContent = n;
}
var Hn = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  zp = ['Webkit', 'ms', 'Moz', 'O'];
Object.keys(Hn).forEach(function (e) {
  zp.forEach(function (n) {
    (n = n + e.charAt(0).toUpperCase() + e.substring(1)), (Hn[n] = Hn[e]);
  });
});
function Ah(e, n, r) {
  return n == null || typeof n == 'boolean' || n === ''
    ? ''
    : r || typeof n != 'number' || n === 0 || (Hn.hasOwnProperty(e) && Hn[e])
    ? ('' + n).trim()
    : n + 'px';
}
function Lh(e, n) {
  e = e.style;
  for (var r in n)
    if (n.hasOwnProperty(r)) {
      var c = r.indexOf('--') === 0,
        f = Ah(r, n[r], c);
      r === 'float' && (r = 'cssFloat'), c ? e.setProperty(r, f) : (e[r] = f);
    }
}
var Hp = We(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  }
);
function vl(e, n) {
  if (n) {
    if (Hp[e] && (n.children != null || n.dangerouslySetInnerHTML != null))
      throw Error(oe(137, e));
    if (n.dangerouslySetInnerHTML != null) {
      if (n.children != null) throw Error(oe(60));
      if (
        typeof n.dangerouslySetInnerHTML != 'object' ||
        !('__html' in n.dangerouslySetInnerHTML)
      )
        throw Error(oe(61));
    }
    if (n.style != null && typeof n.style != 'object') throw Error(oe(62));
  }
}
function bl(e, n) {
  if (e.indexOf('-') === -1) return typeof n.is == 'string';
  switch (e) {
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return !1;
    default:
      return !0;
  }
}
var yl = null;
function kc(e) {
  return (
    (e = e.target || e.srcElement || window),
    e.correspondingUseElement && (e = e.correspondingUseElement),
    e.nodeType === 3 ? e.parentNode : e
  );
}
var wl = null,
  $r = null,
  qr = null;
function Md(e) {
  if ((e = ba(e))) {
    if (typeof wl != 'function') throw Error(oe(280));
    var n = e.stateNode;
    n && ((n = Ks(n)), wl(e.stateNode, e.type, n));
  }
}
function Nh(e) {
  $r ? (qr ? qr.push(e) : (qr = [e])) : ($r = e);
}
function Eh() {
  if ($r) {
    var e = $r,
      n = qr;
    if (((qr = $r = null), Md(e), n)) for (e = 0; e < n.length; e++) Md(n[e]);
  }
}
function jh(e, n) {
  return e(n);
}
function Mh() {}
var jo = !1;
function Ph(e, n, r) {
  if (jo) return e(n, r);
  jo = !0;
  try {
    return jh(e, n, r);
  } finally {
    (jo = !1), ($r !== null || qr !== null) && (Mh(), Eh());
  }
}
function Kn(e, n) {
  var r = e.stateNode;
  if (r === null) return null;
  var c = Ks(r);
  if (c === null) return null;
  r = c[n];
  e: switch (n) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
    case 'onMouseEnter':
      (c = !c.disabled) ||
        ((e = e.type),
        (c = !(
          e === 'button' ||
          e === 'input' ||
          e === 'select' ||
          e === 'textarea'
        ))),
        (e = !c);
      break e;
    default:
      e = !1;
  }
  if (e) return null;
  if (r && typeof r != 'function') throw Error(oe(231, n, typeof r));
  return r;
}
var Cl = !1;
if (Mi)
  try {
    var An = {};
    Object.defineProperty(An, 'passive', {
      get: function () {
        Cl = !0;
      },
    }),
      window.addEventListener('test', An, An),
      window.removeEventListener('test', An, An);
  } catch {
    Cl = !1;
  }
function Bp(e, n, r, c, f, g, w, k, M) {
  var D = Array.prototype.slice.call(arguments, 3);
  try {
    n.apply(r, D);
  } catch (z) {
    this.onError(z);
  }
}
var Bn = !1,
  ms = null,
  xs = !1,
  kl = null,
  Yp = {
    onError: function (e) {
      (Bn = !0), (ms = e);
    },
  };
function Xp(e, n, r, c, f, g, w, k, M) {
  (Bn = !1), (ms = null), Bp.apply(Yp, arguments);
}
function _p(e, n, r, c, f, g, w, k, M) {
  if ((Xp.apply(this, arguments), Bn)) {
    if (Bn) {
      var D = ms;
      (Bn = !1), (ms = null);
    } else throw Error(oe(198));
    xs || ((xs = !0), (kl = D));
  }
}
function Lr(e) {
  var n = e,
    r = e;
  if (e.alternate) for (; n.return; ) n = n.return;
  else {
    e = n;
    do (n = e), n.flags & 4098 && (r = n.return), (e = n.return);
    while (e);
  }
  return n.tag === 3 ? r : null;
}
function Th(e) {
  if (e.tag === 13) {
    var n = e.memoizedState;
    if (
      (n === null && ((e = e.alternate), e !== null && (n = e.memoizedState)),
      n !== null)
    )
      return n.dehydrated;
  }
  return null;
}
function Pd(e) {
  if (Lr(e) !== e) throw Error(oe(188));
}
function Vp(e) {
  var n = e.alternate;
  if (!n) {
    if (((n = Lr(e)), n === null)) throw Error(oe(188));
    return n !== e ? null : e;
  }
  for (var r = e, c = n; ; ) {
    var f = r.return;
    if (f === null) break;
    var g = f.alternate;
    if (g === null) {
      if (((c = f.return), c !== null)) {
        r = c;
        continue;
      }
      break;
    }
    if (f.child === g.child) {
      for (g = f.child; g; ) {
        if (g === r) return Pd(f), e;
        if (g === c) return Pd(f), n;
        g = g.sibling;
      }
      throw Error(oe(188));
    }
    if (r.return !== c.return) (r = f), (c = g);
    else {
      for (var w = !1, k = f.child; k; ) {
        if (k === r) {
          (w = !0), (r = f), (c = g);
          break;
        }
        if (k === c) {
          (w = !0), (c = f), (r = g);
          break;
        }
        k = k.sibling;
      }
      if (!w) {
        for (k = g.child; k; ) {
          if (k === r) {
            (w = !0), (r = g), (c = f);
            break;
          }
          if (k === c) {
            (w = !0), (c = g), (r = f);
            break;
          }
          k = k.sibling;
        }
        if (!w) throw Error(oe(189));
      }
    }
    if (r.alternate !== c) throw Error(oe(190));
  }
  if (r.tag !== 3) throw Error(oe(188));
  return r.stateNode.current === r ? e : n;
}
function Dh(e) {
  return (e = Vp(e)), e !== null ? Ih(e) : null;
}
function Ih(e) {
  if (e.tag === 5 || e.tag === 6) return e;
  for (e = e.child; e !== null; ) {
    var n = Ih(e);
    if (n !== null) return n;
    e = e.sibling;
  }
  return null;
}
var Rh = Bt.unstable_scheduleCallback,
  Td = Bt.unstable_cancelCallback,
  Wp = Bt.unstable_shouldYield,
  Gp = Bt.unstable_requestPaint,
  qe = Bt.unstable_now,
  Up = Bt.unstable_getCurrentPriorityLevel,
  Sc = Bt.unstable_ImmediatePriority,
  Oh = Bt.unstable_UserBlockingPriority,
  vs = Bt.unstable_NormalPriority,
  Zp = Bt.unstable_LowPriority,
  Fh = Bt.unstable_IdlePriority,
  Us = null,
  vi = null;
function $p(e) {
  if (vi && typeof vi.onCommitFiberRoot == 'function')
    try {
      vi.onCommitFiberRoot(Us, e, void 0, (e.current.flags & 128) === 128);
    } catch {}
}
var oi = Math.clz32 ? Math.clz32 : Qp,
  qp = Math.log,
  Kp = Math.LN2;
function Qp(e) {
  return (e >>>= 0), e === 0 ? 32 : (31 - ((qp(e) / Kp) | 0)) | 0;
}
var Ha = 64,
  Ba = 4194304;
function Fn(e) {
  switch (e & -e) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return e & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return e & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return e;
  }
}
function bs(e, n) {
  var r = e.pendingLanes;
  if (r === 0) return 0;
  var c = 0,
    f = e.suspendedLanes,
    g = e.pingedLanes,
    w = r & 268435455;
  if (w !== 0) {
    var k = w & ~f;
    k !== 0 ? (c = Fn(k)) : ((g &= w), g !== 0 && (c = Fn(g)));
  } else (w = r & ~f), w !== 0 ? (c = Fn(w)) : g !== 0 && (c = Fn(g));
  if (c === 0) return 0;
  if (
    n !== 0 &&
    n !== c &&
    !(n & f) &&
    ((f = c & -c), (g = n & -n), f >= g || (f === 16 && (g & 4194240) !== 0))
  )
    return n;
  if ((c & 4 && (c |= r & 16), (n = e.entangledLanes), n !== 0))
    for (e = e.entanglements, n &= c; 0 < n; )
      (r = 31 - oi(n)), (f = 1 << r), (c |= e[r]), (n &= ~f);
  return c;
}
function Jp(e, n) {
  switch (e) {
    case 1:
    case 2:
    case 4:
      return n + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return n + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function eg(e, n) {
  for (
    var r = e.suspendedLanes,
      c = e.pingedLanes,
      f = e.expirationTimes,
      g = e.pendingLanes;
    0 < g;

  ) {
    var w = 31 - oi(g),
      k = 1 << w,
      M = f[w];
    M === -1
      ? (!(k & r) || k & c) && (f[w] = Jp(k, n))
      : M <= n && (e.expiredLanes |= k),
      (g &= ~k);
  }
}
function Sl(e) {
  return (
    (e = e.pendingLanes & -1073741825),
    e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
  );
}
function zh() {
  var e = Ha;
  return (Ha <<= 1), !(Ha & 4194240) && (Ha = 64), e;
}
function Mo(e) {
  for (var n = [], r = 0; 31 > r; r++) n.push(e);
  return n;
}
function xa(e, n, r) {
  (e.pendingLanes |= n),
    n !== 536870912 && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
    (e = e.eventTimes),
    (n = 31 - oi(n)),
    (e[n] = r);
}
function tg(e, n) {
  var r = e.pendingLanes & ~n;
  (e.pendingLanes = n),
    (e.suspendedLanes = 0),
    (e.pingedLanes = 0),
    (e.expiredLanes &= n),
    (e.mutableReadLanes &= n),
    (e.entangledLanes &= n),
    (n = e.entanglements);
  var c = e.eventTimes;
  for (e = e.expirationTimes; 0 < r; ) {
    var f = 31 - oi(r),
      g = 1 << f;
    (n[f] = 0), (c[f] = -1), (e[f] = -1), (r &= ~g);
  }
}
function Ac(e, n) {
  var r = (e.entangledLanes |= n);
  for (e = e.entanglements; r; ) {
    var c = 31 - oi(r),
      f = 1 << c;
    (f & n) | (e[c] & n) && (e[c] |= n), (r &= ~f);
  }
}
var Ie = 0;
function Hh(e) {
  return (e &= -e), 1 < e ? (4 < e ? (e & 268435455 ? 16 : 536870912) : 4) : 1;
}
var Bh,
  Lc,
  Yh,
  Xh,
  _h,
  Al = !1,
  Ya = [],
  Wi = null,
  Gi = null,
  Ui = null,
  Qn = new Map(),
  Jn = new Map(),
  Bi = [],
  ig =
    'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
      ' '
    );
function Dd(e, n) {
  switch (e) {
    case 'focusin':
    case 'focusout':
      Wi = null;
      break;
    case 'dragenter':
    case 'dragleave':
      Gi = null;
      break;
    case 'mouseover':
    case 'mouseout':
      Ui = null;
      break;
    case 'pointerover':
    case 'pointerout':
      Qn.delete(n.pointerId);
      break;
    case 'gotpointercapture':
    case 'lostpointercapture':
      Jn.delete(n.pointerId);
  }
}
function Ln(e, n, r, c, f, g) {
  return e === null || e.nativeEvent !== g
    ? ((e = {
        blockedOn: n,
        domEventName: r,
        eventSystemFlags: c,
        nativeEvent: g,
        targetContainers: [f],
      }),
      n !== null && ((n = ba(n)), n !== null && Lc(n)),
      e)
    : ((e.eventSystemFlags |= c),
      (n = e.targetContainers),
      f !== null && n.indexOf(f) === -1 && n.push(f),
      e);
}
function rg(e, n, r, c, f) {
  switch (n) {
    case 'focusin':
      return (Wi = Ln(Wi, e, n, r, c, f)), !0;
    case 'dragenter':
      return (Gi = Ln(Gi, e, n, r, c, f)), !0;
    case 'mouseover':
      return (Ui = Ln(Ui, e, n, r, c, f)), !0;
    case 'pointerover':
      var g = f.pointerId;
      return Qn.set(g, Ln(Qn.get(g) || null, e, n, r, c, f)), !0;
    case 'gotpointercapture':
      return (
        (g = f.pointerId), Jn.set(g, Ln(Jn.get(g) || null, e, n, r, c, f)), !0
      );
  }
  return !1;
}
function Vh(e) {
  var n = fr(e.target);
  if (n !== null) {
    var r = Lr(n);
    if (r !== null) {
      if (((n = r.tag), n === 13)) {
        if (((n = Th(r)), n !== null)) {
          (e.blockedOn = n),
            _h(e.priority, function () {
              Yh(r);
            });
          return;
        }
      } else if (n === 3 && r.stateNode.current.memoizedState.isDehydrated) {
        e.blockedOn = r.tag === 3 ? r.stateNode.containerInfo : null;
        return;
      }
    }
  }
  e.blockedOn = null;
}
function is(e) {
  if (e.blockedOn !== null) return !1;
  for (var n = e.targetContainers; 0 < n.length; ) {
    var r = Ll(e.domEventName, e.eventSystemFlags, n[0], e.nativeEvent);
    if (r === null) {
      r = e.nativeEvent;
      var c = new r.constructor(r.type, r);
      (yl = c), r.target.dispatchEvent(c), (yl = null);
    } else return (n = ba(r)), n !== null && Lc(n), (e.blockedOn = r), !1;
    n.shift();
  }
  return !0;
}
function Id(e, n, r) {
  is(e) && r.delete(n);
}
function ng() {
  (Al = !1),
    Wi !== null && is(Wi) && (Wi = null),
    Gi !== null && is(Gi) && (Gi = null),
    Ui !== null && is(Ui) && (Ui = null),
    Qn.forEach(Id),
    Jn.forEach(Id);
}
function Nn(e, n) {
  e.blockedOn === n &&
    ((e.blockedOn = null),
    Al ||
      ((Al = !0),
      Bt.unstable_scheduleCallback(Bt.unstable_NormalPriority, ng)));
}
function ea(e) {
  function n(f) {
    return Nn(f, e);
  }
  if (0 < Ya.length) {
    Nn(Ya[0], e);
    for (var r = 1; r < Ya.length; r++) {
      var c = Ya[r];
      c.blockedOn === e && (c.blockedOn = null);
    }
  }
  for (
    Wi !== null && Nn(Wi, e),
      Gi !== null && Nn(Gi, e),
      Ui !== null && Nn(Ui, e),
      Qn.forEach(n),
      Jn.forEach(n),
      r = 0;
    r < Bi.length;
    r++
  )
    (c = Bi[r]), c.blockedOn === e && (c.blockedOn = null);
  for (; 0 < Bi.length && ((r = Bi[0]), r.blockedOn === null); )
    Vh(r), r.blockedOn === null && Bi.shift();
}
var Kr = Ii.ReactCurrentBatchConfig,
  ys = !0;
function ag(e, n, r, c) {
  var f = Ie,
    g = Kr.transition;
  Kr.transition = null;
  try {
    (Ie = 1), Nc(e, n, r, c);
  } finally {
    (Ie = f), (Kr.transition = g);
  }
}
function sg(e, n, r, c) {
  var f = Ie,
    g = Kr.transition;
  Kr.transition = null;
  try {
    (Ie = 4), Nc(e, n, r, c);
  } finally {
    (Ie = f), (Kr.transition = g);
  }
}
function Nc(e, n, r, c) {
  if (ys) {
    var f = Ll(e, n, r, c);
    if (f === null) Bo(e, n, c, ws, r), Dd(e, c);
    else if (rg(f, e, n, r, c)) c.stopPropagation();
    else if ((Dd(e, c), n & 4 && -1 < ig.indexOf(e))) {
      for (; f !== null; ) {
        var g = ba(f);
        if (
          (g !== null && Bh(g),
          (g = Ll(e, n, r, c)),
          g === null && Bo(e, n, c, ws, r),
          g === f)
        )
          break;
        f = g;
      }
      f !== null && c.stopPropagation();
    } else Bo(e, n, c, null, r);
  }
}
var ws = null;
function Ll(e, n, r, c) {
  if (((ws = null), (e = kc(c)), (e = fr(e)), e !== null))
    if (((n = Lr(e)), n === null)) e = null;
    else if (((r = n.tag), r === 13)) {
      if (((e = Th(n)), e !== null)) return e;
      e = null;
    } else if (r === 3) {
      if (n.stateNode.current.memoizedState.isDehydrated)
        return n.tag === 3 ? n.stateNode.containerInfo : null;
      e = null;
    } else n !== e && (e = null);
  return (ws = e), null;
}
function Wh(e) {
  switch (e) {
    case 'cancel':
    case 'click':
    case 'close':
    case 'contextmenu':
    case 'copy':
    case 'cut':
    case 'auxclick':
    case 'dblclick':
    case 'dragend':
    case 'dragstart':
    case 'drop':
    case 'focusin':
    case 'focusout':
    case 'input':
    case 'invalid':
    case 'keydown':
    case 'keypress':
    case 'keyup':
    case 'mousedown':
    case 'mouseup':
    case 'paste':
    case 'pause':
    case 'play':
    case 'pointercancel':
    case 'pointerdown':
    case 'pointerup':
    case 'ratechange':
    case 'reset':
    case 'resize':
    case 'seeked':
    case 'submit':
    case 'touchcancel':
    case 'touchend':
    case 'touchstart':
    case 'volumechange':
    case 'change':
    case 'selectionchange':
    case 'textInput':
    case 'compositionstart':
    case 'compositionend':
    case 'compositionupdate':
    case 'beforeblur':
    case 'afterblur':
    case 'beforeinput':
    case 'blur':
    case 'fullscreenchange':
    case 'focus':
    case 'hashchange':
    case 'popstate':
    case 'select':
    case 'selectstart':
      return 1;
    case 'drag':
    case 'dragenter':
    case 'dragexit':
    case 'dragleave':
    case 'dragover':
    case 'mousemove':
    case 'mouseout':
    case 'mouseover':
    case 'pointermove':
    case 'pointerout':
    case 'pointerover':
    case 'scroll':
    case 'toggle':
    case 'touchmove':
    case 'wheel':
    case 'mouseenter':
    case 'mouseleave':
    case 'pointerenter':
    case 'pointerleave':
      return 4;
    case 'message':
      switch (Up()) {
        case Sc:
          return 1;
        case Oh:
          return 4;
        case vs:
        case Zp:
          return 16;
        case Fh:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var Xi = null,
  Ec = null,
  rs = null;
function Gh() {
  if (rs) return rs;
  var e,
    n = Ec,
    r = n.length,
    c,
    f = 'value' in Xi ? Xi.value : Xi.textContent,
    g = f.length;
  for (e = 0; e < r && n[e] === f[e]; e++);
  var w = r - e;
  for (c = 1; c <= w && n[r - c] === f[g - c]; c++);
  return (rs = f.slice(e, 1 < c ? 1 - c : void 0));
}
function ns(e) {
  var n = e.keyCode;
  return (
    'charCode' in e
      ? ((e = e.charCode), e === 0 && n === 13 && (e = 13))
      : (e = n),
    e === 10 && (e = 13),
    32 <= e || e === 13 ? e : 0
  );
}
function Xa() {
  return !0;
}
function Rd() {
  return !1;
}
function Xt(e) {
  function n(r, c, f, g, w) {
    (this._reactName = r),
      (this._targetInst = f),
      (this.type = c),
      (this.nativeEvent = g),
      (this.target = w),
      (this.currentTarget = null);
    for (var k in e)
      e.hasOwnProperty(k) && ((r = e[k]), (this[k] = r ? r(g) : g[k]));
    return (
      (this.isDefaultPrevented = (
        g.defaultPrevented != null ? g.defaultPrevented : g.returnValue === !1
      )
        ? Xa
        : Rd),
      (this.isPropagationStopped = Rd),
      this
    );
  }
  return (
    We(n.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var r = this.nativeEvent;
        r &&
          (r.preventDefault
            ? r.preventDefault()
            : typeof r.returnValue != 'unknown' && (r.returnValue = !1),
          (this.isDefaultPrevented = Xa));
      },
      stopPropagation: function () {
        var r = this.nativeEvent;
        r &&
          (r.stopPropagation
            ? r.stopPropagation()
            : typeof r.cancelBubble != 'unknown' && (r.cancelBubble = !0),
          (this.isPropagationStopped = Xa));
      },
      persist: function () {},
      isPersistent: Xa,
    }),
    n
  );
}
var un = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (e) {
      return e.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  jc = Xt(un),
  va = We({}, un, { view: 0, detail: 0 }),
  og = Xt(va),
  Po,
  To,
  En,
  Zs = We({}, va, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: Mc,
    button: 0,
    buttons: 0,
    relatedTarget: function (e) {
      return e.relatedTarget === void 0
        ? e.fromElement === e.srcElement
          ? e.toElement
          : e.fromElement
        : e.relatedTarget;
    },
    movementX: function (e) {
      return 'movementX' in e
        ? e.movementX
        : (e !== En &&
            (En && e.type === 'mousemove'
              ? ((Po = e.screenX - En.screenX), (To = e.screenY - En.screenY))
              : (To = Po = 0),
            (En = e)),
          Po);
    },
    movementY: function (e) {
      return 'movementY' in e ? e.movementY : To;
    },
  }),
  Od = Xt(Zs),
  lg = We({}, Zs, { dataTransfer: 0 }),
  cg = Xt(lg),
  dg = We({}, va, { relatedTarget: 0 }),
  Do = Xt(dg),
  ug = We({}, un, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  hg = Xt(ug),
  fg = We({}, un, {
    clipboardData: function (e) {
      return 'clipboardData' in e ? e.clipboardData : window.clipboardData;
    },
  }),
  pg = Xt(fg),
  gg = We({}, un, { data: 0 }),
  Fd = Xt(gg),
  mg = {
    Esc: 'Escape',
    Spacebar: ' ',
    Left: 'ArrowLeft',
    Up: 'ArrowUp',
    Right: 'ArrowRight',
    Down: 'ArrowDown',
    Del: 'Delete',
    Win: 'OS',
    Menu: 'ContextMenu',
    Apps: 'ContextMenu',
    Scroll: 'ScrollLock',
    MozPrintableKey: 'Unidentified',
  },
  xg = {
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    45: 'Insert',
    46: 'Delete',
    112: 'F1',
    113: 'F2',
    114: 'F3',
    115: 'F4',
    116: 'F5',
    117: 'F6',
    118: 'F7',
    119: 'F8',
    120: 'F9',
    121: 'F10',
    122: 'F11',
    123: 'F12',
    144: 'NumLock',
    145: 'ScrollLock',
    224: 'Meta',
  },
  vg = {
    Alt: 'altKey',
    Control: 'ctrlKey',
    Meta: 'metaKey',
    Shift: 'shiftKey',
  };
function bg(e) {
  var n = this.nativeEvent;
  return n.getModifierState ? n.getModifierState(e) : (e = vg[e]) ? !!n[e] : !1;
}
function Mc() {
  return bg;
}
var yg = We({}, va, {
    key: function (e) {
      if (e.key) {
        var n = mg[e.key] || e.key;
        if (n !== 'Unidentified') return n;
      }
      return e.type === 'keypress'
        ? ((e = ns(e)), e === 13 ? 'Enter' : String.fromCharCode(e))
        : e.type === 'keydown' || e.type === 'keyup'
        ? xg[e.keyCode] || 'Unidentified'
        : '';
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: Mc,
    charCode: function (e) {
      return e.type === 'keypress' ? ns(e) : 0;
    },
    keyCode: function (e) {
      return e.type === 'keydown' || e.type === 'keyup' ? e.keyCode : 0;
    },
    which: function (e) {
      return e.type === 'keypress'
        ? ns(e)
        : e.type === 'keydown' || e.type === 'keyup'
        ? e.keyCode
        : 0;
    },
  }),
  wg = Xt(yg),
  Cg = We({}, Zs, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  zd = Xt(Cg),
  kg = We({}, va, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: Mc,
  }),
  Sg = Xt(kg),
  Ag = We({}, un, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Lg = Xt(Ag),
  Ng = We({}, Zs, {
    deltaX: function (e) {
      return 'deltaX' in e ? e.deltaX : 'wheelDeltaX' in e ? -e.wheelDeltaX : 0;
    },
    deltaY: function (e) {
      return 'deltaY' in e
        ? e.deltaY
        : 'wheelDeltaY' in e
        ? -e.wheelDeltaY
        : 'wheelDelta' in e
        ? -e.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  Eg = Xt(Ng),
  jg = [9, 13, 27, 32],
  Pc = Mi && 'CompositionEvent' in window,
  Yn = null;
Mi && 'documentMode' in document && (Yn = document.documentMode);
var Mg = Mi && 'TextEvent' in window && !Yn,
  Uh = Mi && (!Pc || (Yn && 8 < Yn && 11 >= Yn)),
  Hd = String.fromCharCode(32),
  Bd = !1;
function Zh(e, n) {
  switch (e) {
    case 'keyup':
      return jg.indexOf(n.keyCode) !== -1;
    case 'keydown':
      return n.keyCode !== 229;
    case 'keypress':
    case 'mousedown':
    case 'focusout':
      return !0;
    default:
      return !1;
  }
}
function $h(e) {
  return (e = e.detail), typeof e == 'object' && 'data' in e ? e.data : null;
}
var zr = !1;
function Pg(e, n) {
  switch (e) {
    case 'compositionend':
      return $h(n);
    case 'keypress':
      return n.which !== 32 ? null : ((Bd = !0), Hd);
    case 'textInput':
      return (e = n.data), e === Hd && Bd ? null : e;
    default:
      return null;
  }
}
function Tg(e, n) {
  if (zr)
    return e === 'compositionend' || (!Pc && Zh(e, n))
      ? ((e = Gh()), (rs = Ec = Xi = null), (zr = !1), e)
      : null;
  switch (e) {
    case 'paste':
      return null;
    case 'keypress':
      if (!(n.ctrlKey || n.altKey || n.metaKey) || (n.ctrlKey && n.altKey)) {
        if (n.char && 1 < n.char.length) return n.char;
        if (n.which) return String.fromCharCode(n.which);
      }
      return null;
    case 'compositionend':
      return Uh && n.locale !== 'ko' ? null : n.data;
    default:
      return null;
  }
}
var Dg = {
  color: !0,
  date: !0,
  datetime: !0,
  'datetime-local': !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function Yd(e) {
  var n = e && e.nodeName && e.nodeName.toLowerCase();
  return n === 'input' ? !!Dg[e.type] : n === 'textarea';
}
function qh(e, n, r, c) {
  Nh(c),
    (n = Cs(n, 'onChange')),
    0 < n.length &&
      ((r = new jc('onChange', 'change', null, r, c)),
      e.push({ event: r, listeners: n }));
}
var Xn = null,
  ta = null;
function Ig(e) {
  o1(e, 0);
}
function $s(e) {
  var n = Yr(e);
  if (yh(n)) return e;
}
function Rg(e, n) {
  if (e === 'change') return n;
}
var Kh = !1;
if (Mi) {
  var Io;
  if (Mi) {
    var Ro = 'oninput' in document;
    if (!Ro) {
      var Xd = document.createElement('div');
      Xd.setAttribute('oninput', 'return;'),
        (Ro = typeof Xd.oninput == 'function');
    }
    Io = Ro;
  } else Io = !1;
  Kh = Io && (!document.documentMode || 9 < document.documentMode);
}
function _d() {
  Xn && (Xn.detachEvent('onpropertychange', Qh), (ta = Xn = null));
}
function Qh(e) {
  if (e.propertyName === 'value' && $s(ta)) {
    var n = [];
    qh(n, ta, e, kc(e)), Ph(Ig, n);
  }
}
function Og(e, n, r) {
  e === 'focusin'
    ? (_d(), (Xn = n), (ta = r), Xn.attachEvent('onpropertychange', Qh))
    : e === 'focusout' && _d();
}
function Fg(e) {
  if (e === 'selectionchange' || e === 'keyup' || e === 'keydown')
    return $s(ta);
}
function zg(e, n) {
  if (e === 'click') return $s(n);
}
function Hg(e, n) {
  if (e === 'input' || e === 'change') return $s(n);
}
function Bg(e, n) {
  return (e === n && (e !== 0 || 1 / e === 1 / n)) || (e !== e && n !== n);
}
var di = typeof Object.is == 'function' ? Object.is : Bg;
function ia(e, n) {
  if (di(e, n)) return !0;
  if (typeof e != 'object' || e === null || typeof n != 'object' || n === null)
    return !1;
  var r = Object.keys(e),
    c = Object.keys(n);
  if (r.length !== c.length) return !1;
  for (c = 0; c < r.length; c++) {
    var f = r[c];
    if (!ll.call(n, f) || !di(e[f], n[f])) return !1;
  }
  return !0;
}
function Vd(e) {
  for (; e && e.firstChild; ) e = e.firstChild;
  return e;
}
function Wd(e, n) {
  var r = Vd(e);
  e = 0;
  for (var c; r; ) {
    if (r.nodeType === 3) {
      if (((c = e + r.textContent.length), e <= n && c >= n))
        return { node: r, offset: n - e };
      e = c;
    }
    e: {
      for (; r; ) {
        if (r.nextSibling) {
          r = r.nextSibling;
          break e;
        }
        r = r.parentNode;
      }
      r = void 0;
    }
    r = Vd(r);
  }
}
function Jh(e, n) {
  return e && n
    ? e === n
      ? !0
      : e && e.nodeType === 3
      ? !1
      : n && n.nodeType === 3
      ? Jh(e, n.parentNode)
      : 'contains' in e
      ? e.contains(n)
      : e.compareDocumentPosition
      ? !!(e.compareDocumentPosition(n) & 16)
      : !1
    : !1;
}
function e1() {
  for (var e = window, n = gs(); n instanceof e.HTMLIFrameElement; ) {
    try {
      var r = typeof n.contentWindow.location.href == 'string';
    } catch {
      r = !1;
    }
    if (r) e = n.contentWindow;
    else break;
    n = gs(e.document);
  }
  return n;
}
function Tc(e) {
  var n = e && e.nodeName && e.nodeName.toLowerCase();
  return (
    n &&
    ((n === 'input' &&
      (e.type === 'text' ||
        e.type === 'search' ||
        e.type === 'tel' ||
        e.type === 'url' ||
        e.type === 'password')) ||
      n === 'textarea' ||
      e.contentEditable === 'true')
  );
}
function Yg(e) {
  var n = e1(),
    r = e.focusedElem,
    c = e.selectionRange;
  if (
    n !== r &&
    r &&
    r.ownerDocument &&
    Jh(r.ownerDocument.documentElement, r)
  ) {
    if (c !== null && Tc(r)) {
      if (
        ((n = c.start),
        (e = c.end),
        e === void 0 && (e = n),
        'selectionStart' in r)
      )
        (r.selectionStart = n), (r.selectionEnd = Math.min(e, r.value.length));
      else if (
        ((e = ((n = r.ownerDocument || document) && n.defaultView) || window),
        e.getSelection)
      ) {
        e = e.getSelection();
        var f = r.textContent.length,
          g = Math.min(c.start, f);
        (c = c.end === void 0 ? g : Math.min(c.end, f)),
          !e.extend && g > c && ((f = c), (c = g), (g = f)),
          (f = Wd(r, g));
        var w = Wd(r, c);
        f &&
          w &&
          (e.rangeCount !== 1 ||
            e.anchorNode !== f.node ||
            e.anchorOffset !== f.offset ||
            e.focusNode !== w.node ||
            e.focusOffset !== w.offset) &&
          ((n = n.createRange()),
          n.setStart(f.node, f.offset),
          e.removeAllRanges(),
          g > c
            ? (e.addRange(n), e.extend(w.node, w.offset))
            : (n.setEnd(w.node, w.offset), e.addRange(n)));
      }
    }
    for (n = [], e = r; (e = e.parentNode); )
      e.nodeType === 1 &&
        n.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
    for (typeof r.focus == 'function' && r.focus(), r = 0; r < n.length; r++)
      (e = n[r]),
        (e.element.scrollLeft = e.left),
        (e.element.scrollTop = e.top);
  }
}
var Xg = Mi && 'documentMode' in document && 11 >= document.documentMode,
  Hr = null,
  Nl = null,
  _n = null,
  El = !1;
function Gd(e, n, r) {
  var c = r.window === r ? r.document : r.nodeType === 9 ? r : r.ownerDocument;
  El ||
    Hr == null ||
    Hr !== gs(c) ||
    ((c = Hr),
    'selectionStart' in c && Tc(c)
      ? (c = { start: c.selectionStart, end: c.selectionEnd })
      : ((c = (
          (c.ownerDocument && c.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (c = {
          anchorNode: c.anchorNode,
          anchorOffset: c.anchorOffset,
          focusNode: c.focusNode,
          focusOffset: c.focusOffset,
        })),
    (_n && ia(_n, c)) ||
      ((_n = c),
      (c = Cs(Nl, 'onSelect')),
      0 < c.length &&
        ((n = new jc('onSelect', 'select', null, n, r)),
        e.push({ event: n, listeners: c }),
        (n.target = Hr))));
}
function _a(e, n) {
  var r = {};
  return (
    (r[e.toLowerCase()] = n.toLowerCase()),
    (r['Webkit' + e] = 'webkit' + n),
    (r['Moz' + e] = 'moz' + n),
    r
  );
}
var Br = {
    animationend: _a('Animation', 'AnimationEnd'),
    animationiteration: _a('Animation', 'AnimationIteration'),
    animationstart: _a('Animation', 'AnimationStart'),
    transitionend: _a('Transition', 'TransitionEnd'),
  },
  Oo = {},
  t1 = {};
Mi &&
  ((t1 = document.createElement('div').style),
  'AnimationEvent' in window ||
    (delete Br.animationend.animation,
    delete Br.animationiteration.animation,
    delete Br.animationstart.animation),
  'TransitionEvent' in window || delete Br.transitionend.transition);
function qs(e) {
  if (Oo[e]) return Oo[e];
  if (!Br[e]) return e;
  var n = Br[e],
    r;
  for (r in n) if (n.hasOwnProperty(r) && r in t1) return (Oo[e] = n[r]);
  return e;
}
var i1 = qs('animationend'),
  r1 = qs('animationiteration'),
  n1 = qs('animationstart'),
  a1 = qs('transitionend'),
  s1 = new Map(),
  Ud =
    'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
      ' '
    );
function ir(e, n) {
  s1.set(e, n), Ar(n, [e]);
}
for (var Fo = 0; Fo < Ud.length; Fo++) {
  var zo = Ud[Fo],
    _g = zo.toLowerCase(),
    Vg = zo[0].toUpperCase() + zo.slice(1);
  ir(_g, 'on' + Vg);
}
ir(i1, 'onAnimationEnd');
ir(r1, 'onAnimationIteration');
ir(n1, 'onAnimationStart');
ir('dblclick', 'onDoubleClick');
ir('focusin', 'onFocus');
ir('focusout', 'onBlur');
ir(a1, 'onTransitionEnd');
rn('onMouseEnter', ['mouseout', 'mouseover']);
rn('onMouseLeave', ['mouseout', 'mouseover']);
rn('onPointerEnter', ['pointerout', 'pointerover']);
rn('onPointerLeave', ['pointerout', 'pointerover']);
Ar(
  'onChange',
  'change click focusin focusout input keydown keyup selectionchange'.split(' ')
);
Ar(
  'onSelect',
  'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(
    ' '
  )
);
Ar('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);
Ar(
  'onCompositionEnd',
  'compositionend focusout keydown keypress keyup mousedown'.split(' ')
);
Ar(
  'onCompositionStart',
  'compositionstart focusout keydown keypress keyup mousedown'.split(' ')
);
Ar(
  'onCompositionUpdate',
  'compositionupdate focusout keydown keypress keyup mousedown'.split(' ')
);
var zn =
    'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
      ' '
    ),
  Wg = new Set('cancel close invalid load scroll toggle'.split(' ').concat(zn));
function Zd(e, n, r) {
  var c = e.type || 'unknown-event';
  (e.currentTarget = r), _p(c, n, void 0, e), (e.currentTarget = null);
}
function o1(e, n) {
  n = (n & 4) !== 0;
  for (var r = 0; r < e.length; r++) {
    var c = e[r],
      f = c.event;
    c = c.listeners;
    e: {
      var g = void 0;
      if (n)
        for (var w = c.length - 1; 0 <= w; w--) {
          var k = c[w],
            M = k.instance,
            D = k.currentTarget;
          if (((k = k.listener), M !== g && f.isPropagationStopped())) break e;
          Zd(f, k, D), (g = M);
        }
      else
        for (w = 0; w < c.length; w++) {
          if (
            ((k = c[w]),
            (M = k.instance),
            (D = k.currentTarget),
            (k = k.listener),
            M !== g && f.isPropagationStopped())
          )
            break e;
          Zd(f, k, D), (g = M);
        }
    }
  }
  if (xs) throw ((e = kl), (xs = !1), (kl = null), e);
}
function ze(e, n) {
  var r = n[Dl];
  r === void 0 && (r = n[Dl] = new Set());
  var c = e + '__bubble';
  r.has(c) || (l1(n, e, 2, !1), r.add(c));
}
function Ho(e, n, r) {
  var c = 0;
  n && (c |= 4), l1(r, e, c, n);
}
var Va = '_reactListening' + Math.random().toString(36).slice(2);
function ra(e) {
  if (!e[Va]) {
    (e[Va] = !0),
      gh.forEach(function (r) {
        r !== 'selectionchange' && (Wg.has(r) || Ho(r, !1, e), Ho(r, !0, e));
      });
    var n = e.nodeType === 9 ? e : e.ownerDocument;
    n === null || n[Va] || ((n[Va] = !0), Ho('selectionchange', !1, n));
  }
}
function l1(e, n, r, c) {
  switch (Wh(n)) {
    case 1:
      var f = ag;
      break;
    case 4:
      f = sg;
      break;
    default:
      f = Nc;
  }
  (r = f.bind(null, n, r, e)),
    (f = void 0),
    !Cl ||
      (n !== 'touchstart' && n !== 'touchmove' && n !== 'wheel') ||
      (f = !0),
    c
      ? f !== void 0
        ? e.addEventListener(n, r, { capture: !0, passive: f })
        : e.addEventListener(n, r, !0)
      : f !== void 0
      ? e.addEventListener(n, r, { passive: f })
      : e.addEventListener(n, r, !1);
}
function Bo(e, n, r, c, f) {
  var g = c;
  if (!(n & 1) && !(n & 2) && c !== null)
    e: for (;;) {
      if (c === null) return;
      var w = c.tag;
      if (w === 3 || w === 4) {
        var k = c.stateNode.containerInfo;
        if (k === f || (k.nodeType === 8 && k.parentNode === f)) break;
        if (w === 4)
          for (w = c.return; w !== null; ) {
            var M = w.tag;
            if (
              (M === 3 || M === 4) &&
              ((M = w.stateNode.containerInfo),
              M === f || (M.nodeType === 8 && M.parentNode === f))
            )
              return;
            w = w.return;
          }
        for (; k !== null; ) {
          if (((w = fr(k)), w === null)) return;
          if (((M = w.tag), M === 5 || M === 6)) {
            c = g = w;
            continue e;
          }
          k = k.parentNode;
        }
      }
      c = c.return;
    }
  Ph(function () {
    var D = g,
      z = kc(r),
      Y = [];
    e: {
      var U = s1.get(e);
      if (U !== void 0) {
        var K = jc,
          Z = e;
        switch (e) {
          case 'keypress':
            if (ns(r) === 0) break e;
          case 'keydown':
          case 'keyup':
            K = wg;
            break;
          case 'focusin':
            (Z = 'focus'), (K = Do);
            break;
          case 'focusout':
            (Z = 'blur'), (K = Do);
            break;
          case 'beforeblur':
          case 'afterblur':
            K = Do;
            break;
          case 'click':
            if (r.button === 2) break e;
          case 'auxclick':
          case 'dblclick':
          case 'mousedown':
          case 'mousemove':
          case 'mouseup':
          case 'mouseout':
          case 'mouseover':
          case 'contextmenu':
            K = Od;
            break;
          case 'drag':
          case 'dragend':
          case 'dragenter':
          case 'dragexit':
          case 'dragleave':
          case 'dragover':
          case 'dragstart':
          case 'drop':
            K = cg;
            break;
          case 'touchcancel':
          case 'touchend':
          case 'touchmove':
          case 'touchstart':
            K = Sg;
            break;
          case i1:
          case r1:
          case n1:
            K = hg;
            break;
          case a1:
            K = Lg;
            break;
          case 'scroll':
            K = og;
            break;
          case 'wheel':
            K = Eg;
            break;
          case 'copy':
          case 'cut':
          case 'paste':
            K = pg;
            break;
          case 'gotpointercapture':
          case 'lostpointercapture':
          case 'pointercancel':
          case 'pointerdown':
          case 'pointermove':
          case 'pointerout':
          case 'pointerover':
          case 'pointerup':
            K = zd;
        }
        var V = (n & 4) !== 0,
          ee = !V && e === 'scroll',
          B = V ? (U !== null ? U + 'Capture' : null) : U;
        V = [];
        for (var E = D, _; E !== null; ) {
          _ = E;
          var Q = _.stateNode;
          if (
            (_.tag === 5 &&
              Q !== null &&
              ((_ = Q),
              B !== null && ((Q = Kn(E, B)), Q != null && V.push(na(E, Q, _)))),
            ee)
          )
            break;
          E = E.return;
        }
        0 < V.length &&
          ((U = new K(U, Z, null, r, z)), Y.push({ event: U, listeners: V }));
      }
    }
    if (!(n & 7)) {
      e: {
        if (
          ((U = e === 'mouseover' || e === 'pointerover'),
          (K = e === 'mouseout' || e === 'pointerout'),
          U &&
            r !== yl &&
            (Z = r.relatedTarget || r.fromElement) &&
            (fr(Z) || Z[Pi]))
        )
          break e;
        if (
          (K || U) &&
          ((U =
            z.window === z
              ? z
              : (U = z.ownerDocument)
              ? U.defaultView || U.parentWindow
              : window),
          K
            ? ((Z = r.relatedTarget || r.toElement),
              (K = D),
              (Z = Z ? fr(Z) : null),
              Z !== null &&
                ((ee = Lr(Z)), Z !== ee || (Z.tag !== 5 && Z.tag !== 6)) &&
                (Z = null))
            : ((K = null), (Z = D)),
          K !== Z)
        ) {
          if (
            ((V = Od),
            (Q = 'onMouseLeave'),
            (B = 'onMouseEnter'),
            (E = 'mouse'),
            (e === 'pointerout' || e === 'pointerover') &&
              ((V = zd),
              (Q = 'onPointerLeave'),
              (B = 'onPointerEnter'),
              (E = 'pointer')),
            (ee = K == null ? U : Yr(K)),
            (_ = Z == null ? U : Yr(Z)),
            (U = new V(Q, E + 'leave', K, r, z)),
            (U.target = ee),
            (U.relatedTarget = _),
            (Q = null),
            fr(z) === D &&
              ((V = new V(B, E + 'enter', Z, r, z)),
              (V.target = _),
              (V.relatedTarget = ee),
              (Q = V)),
            (ee = Q),
            K && Z)
          )
            t: {
              for (V = K, B = Z, E = 0, _ = V; _; _ = Rr(_)) E++;
              for (_ = 0, Q = B; Q; Q = Rr(Q)) _++;
              for (; 0 < E - _; ) (V = Rr(V)), E--;
              for (; 0 < _ - E; ) (B = Rr(B)), _--;
              for (; E--; ) {
                if (V === B || (B !== null && V === B.alternate)) break t;
                (V = Rr(V)), (B = Rr(B));
              }
              V = null;
            }
          else V = null;
          K !== null && $d(Y, U, K, V, !1),
            Z !== null && ee !== null && $d(Y, ee, Z, V, !0);
        }
      }
      e: {
        if (
          ((U = D ? Yr(D) : window),
          (K = U.nodeName && U.nodeName.toLowerCase()),
          K === 'select' || (K === 'input' && U.type === 'file'))
        )
          var W = Rg;
        else if (Yd(U))
          if (Kh) W = Hg;
          else {
            W = Fg;
            var ae = Og;
          }
        else
          (K = U.nodeName) &&
            K.toLowerCase() === 'input' &&
            (U.type === 'checkbox' || U.type === 'radio') &&
            (W = zg);
        if (W && (W = W(e, D))) {
          qh(Y, W, r, z);
          break e;
        }
        ae && ae(e, U, D),
          e === 'focusout' &&
            (ae = U._wrapperState) &&
            ae.controlled &&
            U.type === 'number' &&
            gl(U, 'number', U.value);
      }
      switch (((ae = D ? Yr(D) : window), e)) {
        case 'focusin':
          (Yd(ae) || ae.contentEditable === 'true') &&
            ((Hr = ae), (Nl = D), (_n = null));
          break;
        case 'focusout':
          _n = Nl = Hr = null;
          break;
        case 'mousedown':
          El = !0;
          break;
        case 'contextmenu':
        case 'mouseup':
        case 'dragend':
          (El = !1), Gd(Y, r, z);
          break;
        case 'selectionchange':
          if (Xg) break;
        case 'keydown':
        case 'keyup':
          Gd(Y, r, z);
      }
      var ce;
      if (Pc)
        e: {
          switch (e) {
            case 'compositionstart':
              var he = 'onCompositionStart';
              break e;
            case 'compositionend':
              he = 'onCompositionEnd';
              break e;
            case 'compositionupdate':
              he = 'onCompositionUpdate';
              break e;
          }
          he = void 0;
        }
      else
        zr
          ? Zh(e, r) && (he = 'onCompositionEnd')
          : e === 'keydown' && r.keyCode === 229 && (he = 'onCompositionStart');
      he &&
        (Uh &&
          r.locale !== 'ko' &&
          (zr || he !== 'onCompositionStart'
            ? he === 'onCompositionEnd' && zr && (ce = Gh())
            : ((Xi = z),
              (Ec = 'value' in Xi ? Xi.value : Xi.textContent),
              (zr = !0))),
        (ae = Cs(D, he)),
        0 < ae.length &&
          ((he = new Fd(he, e, null, r, z)),
          Y.push({ event: he, listeners: ae }),
          ce ? (he.data = ce) : ((ce = $h(r)), ce !== null && (he.data = ce)))),
        (ce = Mg ? Pg(e, r) : Tg(e, r)) &&
          ((D = Cs(D, 'onBeforeInput')),
          0 < D.length &&
            ((z = new Fd('onBeforeInput', 'beforeinput', null, r, z)),
            Y.push({ event: z, listeners: D }),
            (z.data = ce)));
    }
    o1(Y, n);
  });
}
function na(e, n, r) {
  return { instance: e, listener: n, currentTarget: r };
}
function Cs(e, n) {
  for (var r = n + 'Capture', c = []; e !== null; ) {
    var f = e,
      g = f.stateNode;
    f.tag === 5 &&
      g !== null &&
      ((f = g),
      (g = Kn(e, r)),
      g != null && c.unshift(na(e, g, f)),
      (g = Kn(e, n)),
      g != null && c.push(na(e, g, f))),
      (e = e.return);
  }
  return c;
}
function Rr(e) {
  if (e === null) return null;
  do e = e.return;
  while (e && e.tag !== 5);
  return e || null;
}
function $d(e, n, r, c, f) {
  for (var g = n._reactName, w = []; r !== null && r !== c; ) {
    var k = r,
      M = k.alternate,
      D = k.stateNode;
    if (M !== null && M === c) break;
    k.tag === 5 &&
      D !== null &&
      ((k = D),
      f
        ? ((M = Kn(r, g)), M != null && w.unshift(na(r, M, k)))
        : f || ((M = Kn(r, g)), M != null && w.push(na(r, M, k)))),
      (r = r.return);
  }
  w.length !== 0 && e.push({ event: n, listeners: w });
}
var Gg = /\r\n?/g,
  Ug = /\u0000|\uFFFD/g;
function qd(e) {
  return (typeof e == 'string' ? e : '' + e)
    .replace(
      Gg,
      `
`
    )
    .replace(Ug, '');
}
function Wa(e, n, r) {
  if (((n = qd(n)), qd(e) !== n && r)) throw Error(oe(425));
}
function ks() {}
var jl = null,
  Ml = null;
function Pl(e, n) {
  return (
    e === 'textarea' ||
    e === 'noscript' ||
    typeof n.children == 'string' ||
    typeof n.children == 'number' ||
    (typeof n.dangerouslySetInnerHTML == 'object' &&
      n.dangerouslySetInnerHTML !== null &&
      n.dangerouslySetInnerHTML.__html != null)
  );
}
var Tl = typeof setTimeout == 'function' ? setTimeout : void 0,
  Zg = typeof clearTimeout == 'function' ? clearTimeout : void 0,
  Kd = typeof Promise == 'function' ? Promise : void 0,
  $g =
    typeof queueMicrotask == 'function'
      ? queueMicrotask
      : typeof Kd < 'u'
      ? function (e) {
          return Kd.resolve(null).then(e).catch(qg);
        }
      : Tl;
function qg(e) {
  setTimeout(function () {
    throw e;
  });
}
function Yo(e, n) {
  var r = n,
    c = 0;
  do {
    var f = r.nextSibling;
    if ((e.removeChild(r), f && f.nodeType === 8))
      if (((r = f.data), r === '/$')) {
        if (c === 0) {
          e.removeChild(f), ea(n);
          return;
        }
        c--;
      } else (r !== '$' && r !== '$?' && r !== '$!') || c++;
    r = f;
  } while (r);
  ea(n);
}
function Zi(e) {
  for (; e != null; e = e.nextSibling) {
    var n = e.nodeType;
    if (n === 1 || n === 3) break;
    if (n === 8) {
      if (((n = e.data), n === '$' || n === '$!' || n === '$?')) break;
      if (n === '/$') return null;
    }
  }
  return e;
}
function Qd(e) {
  e = e.previousSibling;
  for (var n = 0; e; ) {
    if (e.nodeType === 8) {
      var r = e.data;
      if (r === '$' || r === '$!' || r === '$?') {
        if (n === 0) return e;
        n--;
      } else r === '/$' && n++;
    }
    e = e.previousSibling;
  }
  return null;
}
var hn = Math.random().toString(36).slice(2),
  xi = '__reactFiber$' + hn,
  aa = '__reactProps$' + hn,
  Pi = '__reactContainer$' + hn,
  Dl = '__reactEvents$' + hn,
  Kg = '__reactListeners$' + hn,
  Qg = '__reactHandles$' + hn;
function fr(e) {
  var n = e[xi];
  if (n) return n;
  for (var r = e.parentNode; r; ) {
    if ((n = r[Pi] || r[xi])) {
      if (
        ((r = n.alternate),
        n.child !== null || (r !== null && r.child !== null))
      )
        for (e = Qd(e); e !== null; ) {
          if ((r = e[xi])) return r;
          e = Qd(e);
        }
      return n;
    }
    (e = r), (r = e.parentNode);
  }
  return null;
}
function ba(e) {
  return (
    (e = e[xi] || e[Pi]),
    !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3) ? null : e
  );
}
function Yr(e) {
  if (e.tag === 5 || e.tag === 6) return e.stateNode;
  throw Error(oe(33));
}
function Ks(e) {
  return e[aa] || null;
}
var Il = [],
  Xr = -1;
function rr(e) {
  return { current: e };
}
function He(e) {
  0 > Xr || ((e.current = Il[Xr]), (Il[Xr] = null), Xr--);
}
function Oe(e, n) {
  Xr++, (Il[Xr] = e.current), (e.current = n);
}
var tr = {},
  mt = rr(tr),
  jt = rr(!1),
  br = tr;
function nn(e, n) {
  var r = e.type.contextTypes;
  if (!r) return tr;
  var c = e.stateNode;
  if (c && c.__reactInternalMemoizedUnmaskedChildContext === n)
    return c.__reactInternalMemoizedMaskedChildContext;
  var f = {},
    g;
  for (g in r) f[g] = n[g];
  return (
    c &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = n),
      (e.__reactInternalMemoizedMaskedChildContext = f)),
    f
  );
}
function Mt(e) {
  return (e = e.childContextTypes), e != null;
}
function Ss() {
  He(jt), He(mt);
}
function Jd(e, n, r) {
  if (mt.current !== tr) throw Error(oe(168));
  Oe(mt, n), Oe(jt, r);
}
function c1(e, n, r) {
  var c = e.stateNode;
  if (((n = n.childContextTypes), typeof c.getChildContext != 'function'))
    return r;
  c = c.getChildContext();
  for (var f in c) if (!(f in n)) throw Error(oe(108, Op(e) || 'Unknown', f));
  return We({}, r, c);
}
function As(e) {
  return (
    (e =
      ((e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext) || tr),
    (br = mt.current),
    Oe(mt, e),
    Oe(jt, jt.current),
    !0
  );
}
function eu(e, n, r) {
  var c = e.stateNode;
  if (!c) throw Error(oe(169));
  r
    ? ((e = c1(e, n, br)),
      (c.__reactInternalMemoizedMergedChildContext = e),
      He(jt),
      He(mt),
      Oe(mt, e))
    : He(jt),
    Oe(jt, r);
}
var Li = null,
  Qs = !1,
  Xo = !1;
function d1(e) {
  Li === null ? (Li = [e]) : Li.push(e);
}
function Jg(e) {
  (Qs = !0), d1(e);
}
function nr() {
  if (!Xo && Li !== null) {
    Xo = !0;
    var e = 0,
      n = Ie;
    try {
      var r = Li;
      for (Ie = 1; e < r.length; e++) {
        var c = r[e];
        do c = c(!0);
        while (c !== null);
      }
      (Li = null), (Qs = !1);
    } catch (f) {
      throw (Li !== null && (Li = Li.slice(e + 1)), Rh(Sc, nr), f);
    } finally {
      (Ie = n), (Xo = !1);
    }
  }
  return null;
}
var _r = [],
  Vr = 0,
  Ls = null,
  Ns = 0,
  qt = [],
  Kt = 0,
  yr = null,
  Ni = 1,
  Ei = '';
function dr(e, n) {
  (_r[Vr++] = Ns), (_r[Vr++] = Ls), (Ls = e), (Ns = n);
}
function u1(e, n, r) {
  (qt[Kt++] = Ni), (qt[Kt++] = Ei), (qt[Kt++] = yr), (yr = e);
  var c = Ni;
  e = Ei;
  var f = 32 - oi(c) - 1;
  (c &= ~(1 << f)), (r += 1);
  var g = 32 - oi(n) + f;
  if (30 < g) {
    var w = f - (f % 5);
    (g = (c & ((1 << w) - 1)).toString(32)),
      (c >>= w),
      (f -= w),
      (Ni = (1 << (32 - oi(n) + f)) | (r << f) | c),
      (Ei = g + e);
  } else (Ni = (1 << g) | (r << f) | c), (Ei = e);
}
function Dc(e) {
  e.return !== null && (dr(e, 1), u1(e, 1, 0));
}
function Ic(e) {
  for (; e === Ls; )
    (Ls = _r[--Vr]), (_r[Vr] = null), (Ns = _r[--Vr]), (_r[Vr] = null);
  for (; e === yr; )
    (yr = qt[--Kt]),
      (qt[Kt] = null),
      (Ei = qt[--Kt]),
      (qt[Kt] = null),
      (Ni = qt[--Kt]),
      (qt[Kt] = null);
}
var zt = null,
  Ft = null,
  Xe = !1,
  si = null;
function h1(e, n) {
  var r = Qt(5, null, null, 0);
  (r.elementType = 'DELETED'),
    (r.stateNode = n),
    (r.return = e),
    (n = e.deletions),
    n === null ? ((e.deletions = [r]), (e.flags |= 16)) : n.push(r);
}
function tu(e, n) {
  switch (e.tag) {
    case 5:
      var r = e.type;
      return (
        (n =
          n.nodeType !== 1 || r.toLowerCase() !== n.nodeName.toLowerCase()
            ? null
            : n),
        n !== null
          ? ((e.stateNode = n), (zt = e), (Ft = Zi(n.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (n = e.pendingProps === '' || n.nodeType !== 3 ? null : n),
        n !== null ? ((e.stateNode = n), (zt = e), (Ft = null), !0) : !1
      );
    case 13:
      return (
        (n = n.nodeType !== 8 ? null : n),
        n !== null
          ? ((r = yr !== null ? { id: Ni, overflow: Ei } : null),
            (e.memoizedState = {
              dehydrated: n,
              treeContext: r,
              retryLane: 1073741824,
            }),
            (r = Qt(18, null, null, 0)),
            (r.stateNode = n),
            (r.return = e),
            (e.child = r),
            (zt = e),
            (Ft = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function Rl(e) {
  return (e.mode & 1) !== 0 && (e.flags & 128) === 0;
}
function Ol(e) {
  if (Xe) {
    var n = Ft;
    if (n) {
      var r = n;
      if (!tu(e, n)) {
        if (Rl(e)) throw Error(oe(418));
        n = Zi(r.nextSibling);
        var c = zt;
        n && tu(e, n)
          ? h1(c, r)
          : ((e.flags = (e.flags & -4097) | 2), (Xe = !1), (zt = e));
      }
    } else {
      if (Rl(e)) throw Error(oe(418));
      (e.flags = (e.flags & -4097) | 2), (Xe = !1), (zt = e);
    }
  }
}
function iu(e) {
  for (e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13; )
    e = e.return;
  zt = e;
}
function Ga(e) {
  if (e !== zt) return !1;
  if (!Xe) return iu(e), (Xe = !0), !1;
  var n;
  if (
    ((n = e.tag !== 3) &&
      !(n = e.tag !== 5) &&
      ((n = e.type),
      (n = n !== 'head' && n !== 'body' && !Pl(e.type, e.memoizedProps))),
    n && (n = Ft))
  ) {
    if (Rl(e)) throw (f1(), Error(oe(418)));
    for (; n; ) h1(e, n), (n = Zi(n.nextSibling));
  }
  if ((iu(e), e.tag === 13)) {
    if (((e = e.memoizedState), (e = e !== null ? e.dehydrated : null), !e))
      throw Error(oe(317));
    e: {
      for (e = e.nextSibling, n = 0; e; ) {
        if (e.nodeType === 8) {
          var r = e.data;
          if (r === '/$') {
            if (n === 0) {
              Ft = Zi(e.nextSibling);
              break e;
            }
            n--;
          } else (r !== '$' && r !== '$!' && r !== '$?') || n++;
        }
        e = e.nextSibling;
      }
      Ft = null;
    }
  } else Ft = zt ? Zi(e.stateNode.nextSibling) : null;
  return !0;
}
function f1() {
  for (var e = Ft; e; ) e = Zi(e.nextSibling);
}
function an() {
  (Ft = zt = null), (Xe = !1);
}
function Rc(e) {
  si === null ? (si = [e]) : si.push(e);
}
var e0 = Ii.ReactCurrentBatchConfig;
function ni(e, n) {
  if (e && e.defaultProps) {
    (n = We({}, n)), (e = e.defaultProps);
    for (var r in e) n[r] === void 0 && (n[r] = e[r]);
    return n;
  }
  return n;
}
var Es = rr(null),
  js = null,
  Wr = null,
  Oc = null;
function Fc() {
  Oc = Wr = js = null;
}
function zc(e) {
  var n = Es.current;
  He(Es), (e._currentValue = n);
}
function Fl(e, n, r) {
  for (; e !== null; ) {
    var c = e.alternate;
    if (
      ((e.childLanes & n) !== n
        ? ((e.childLanes |= n), c !== null && (c.childLanes |= n))
        : c !== null && (c.childLanes & n) !== n && (c.childLanes |= n),
      e === r)
    )
      break;
    e = e.return;
  }
}
function Qr(e, n) {
  (js = e),
    (Oc = Wr = null),
    (e = e.dependencies),
    e !== null &&
      e.firstContext !== null &&
      (e.lanes & n && (Et = !0), (e.firstContext = null));
}
function ei(e) {
  var n = e._currentValue;
  if (Oc !== e)
    if (((e = { context: e, memoizedValue: n, next: null }), Wr === null)) {
      if (js === null) throw Error(oe(308));
      (Wr = e), (js.dependencies = { lanes: 0, firstContext: e });
    } else Wr = Wr.next = e;
  return n;
}
var pr = null;
function Hc(e) {
  pr === null ? (pr = [e]) : pr.push(e);
}
function p1(e, n, r, c) {
  var f = n.interleaved;
  return (
    f === null ? ((r.next = r), Hc(n)) : ((r.next = f.next), (f.next = r)),
    (n.interleaved = r),
    Ti(e, c)
  );
}
function Ti(e, n) {
  e.lanes |= n;
  var r = e.alternate;
  for (r !== null && (r.lanes |= n), r = e, e = e.return; e !== null; )
    (e.childLanes |= n),
      (r = e.alternate),
      r !== null && (r.childLanes |= n),
      (r = e),
      (e = e.return);
  return r.tag === 3 ? r.stateNode : null;
}
var Hi = !1;
function Bc(e) {
  e.updateQueue = {
    baseState: e.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function g1(e, n) {
  (e = e.updateQueue),
    n.updateQueue === e &&
      (n.updateQueue = {
        baseState: e.baseState,
        firstBaseUpdate: e.firstBaseUpdate,
        lastBaseUpdate: e.lastBaseUpdate,
        shared: e.shared,
        effects: e.effects,
      });
}
function ji(e, n) {
  return {
    eventTime: e,
    lane: n,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function $i(e, n, r) {
  var c = e.updateQueue;
  if (c === null) return null;
  if (((c = c.shared), Ee & 2)) {
    var f = c.pending;
    return (
      f === null ? (n.next = n) : ((n.next = f.next), (f.next = n)),
      (c.pending = n),
      Ti(e, r)
    );
  }
  return (
    (f = c.interleaved),
    f === null ? ((n.next = n), Hc(c)) : ((n.next = f.next), (f.next = n)),
    (c.interleaved = n),
    Ti(e, r)
  );
}
function as(e, n, r) {
  if (
    ((n = n.updateQueue), n !== null && ((n = n.shared), (r & 4194240) !== 0))
  ) {
    var c = n.lanes;
    (c &= e.pendingLanes), (r |= c), (n.lanes = r), Ac(e, r);
  }
}
function ru(e, n) {
  var r = e.updateQueue,
    c = e.alternate;
  if (c !== null && ((c = c.updateQueue), r === c)) {
    var f = null,
      g = null;
    if (((r = r.firstBaseUpdate), r !== null)) {
      do {
        var w = {
          eventTime: r.eventTime,
          lane: r.lane,
          tag: r.tag,
          payload: r.payload,
          callback: r.callback,
          next: null,
        };
        g === null ? (f = g = w) : (g = g.next = w), (r = r.next);
      } while (r !== null);
      g === null ? (f = g = n) : (g = g.next = n);
    } else f = g = n;
    (r = {
      baseState: c.baseState,
      firstBaseUpdate: f,
      lastBaseUpdate: g,
      shared: c.shared,
      effects: c.effects,
    }),
      (e.updateQueue = r);
    return;
  }
  (e = r.lastBaseUpdate),
    e === null ? (r.firstBaseUpdate = n) : (e.next = n),
    (r.lastBaseUpdate = n);
}
function Ms(e, n, r, c) {
  var f = e.updateQueue;
  Hi = !1;
  var g = f.firstBaseUpdate,
    w = f.lastBaseUpdate,
    k = f.shared.pending;
  if (k !== null) {
    f.shared.pending = null;
    var M = k,
      D = M.next;
    (M.next = null), w === null ? (g = D) : (w.next = D), (w = M);
    var z = e.alternate;
    z !== null &&
      ((z = z.updateQueue),
      (k = z.lastBaseUpdate),
      k !== w &&
        (k === null ? (z.firstBaseUpdate = D) : (k.next = D),
        (z.lastBaseUpdate = M)));
  }
  if (g !== null) {
    var Y = f.baseState;
    (w = 0), (z = D = M = null), (k = g);
    do {
      var U = k.lane,
        K = k.eventTime;
      if ((c & U) === U) {
        z !== null &&
          (z = z.next =
            {
              eventTime: K,
              lane: 0,
              tag: k.tag,
              payload: k.payload,
              callback: k.callback,
              next: null,
            });
        e: {
          var Z = e,
            V = k;
          switch (((U = n), (K = r), V.tag)) {
            case 1:
              if (((Z = V.payload), typeof Z == 'function')) {
                Y = Z.call(K, Y, U);
                break e;
              }
              Y = Z;
              break e;
            case 3:
              Z.flags = (Z.flags & -65537) | 128;
            case 0:
              if (
                ((Z = V.payload),
                (U = typeof Z == 'function' ? Z.call(K, Y, U) : Z),
                U == null)
              )
                break e;
              Y = We({}, Y, U);
              break e;
            case 2:
              Hi = !0;
          }
        }
        k.callback !== null &&
          k.lane !== 0 &&
          ((e.flags |= 64),
          (U = f.effects),
          U === null ? (f.effects = [k]) : U.push(k));
      } else
        (K = {
          eventTime: K,
          lane: U,
          tag: k.tag,
          payload: k.payload,
          callback: k.callback,
          next: null,
        }),
          z === null ? ((D = z = K), (M = Y)) : (z = z.next = K),
          (w |= U);
      if (((k = k.next), k === null)) {
        if (((k = f.shared.pending), k === null)) break;
        (U = k),
          (k = U.next),
          (U.next = null),
          (f.lastBaseUpdate = U),
          (f.shared.pending = null);
      }
    } while (1);
    if (
      (z === null && (M = Y),
      (f.baseState = M),
      (f.firstBaseUpdate = D),
      (f.lastBaseUpdate = z),
      (n = f.shared.interleaved),
      n !== null)
    ) {
      f = n;
      do (w |= f.lane), (f = f.next);
      while (f !== n);
    } else g === null && (f.shared.lanes = 0);
    (Cr |= w), (e.lanes = w), (e.memoizedState = Y);
  }
}
function nu(e, n, r) {
  if (((e = n.effects), (n.effects = null), e !== null))
    for (n = 0; n < e.length; n++) {
      var c = e[n],
        f = c.callback;
      if (f !== null) {
        if (((c.callback = null), (c = r), typeof f != 'function'))
          throw Error(oe(191, f));
        f.call(c);
      }
    }
}
var m1 = new ph.Component().refs;
function zl(e, n, r, c) {
  (n = e.memoizedState),
    (r = r(c, n)),
    (r = r == null ? n : We({}, n, r)),
    (e.memoizedState = r),
    e.lanes === 0 && (e.updateQueue.baseState = r);
}
var Js = {
  isMounted: function (e) {
    return (e = e._reactInternals) ? Lr(e) === e : !1;
  },
  enqueueSetState: function (e, n, r) {
    e = e._reactInternals;
    var c = wt(),
      f = Ki(e),
      g = ji(c, f);
    (g.payload = n),
      r != null && (g.callback = r),
      (n = $i(e, g, f)),
      n !== null && (li(n, e, f, c), as(n, e, f));
  },
  enqueueReplaceState: function (e, n, r) {
    e = e._reactInternals;
    var c = wt(),
      f = Ki(e),
      g = ji(c, f);
    (g.tag = 1),
      (g.payload = n),
      r != null && (g.callback = r),
      (n = $i(e, g, f)),
      n !== null && (li(n, e, f, c), as(n, e, f));
  },
  enqueueForceUpdate: function (e, n) {
    e = e._reactInternals;
    var r = wt(),
      c = Ki(e),
      f = ji(r, c);
    (f.tag = 2),
      n != null && (f.callback = n),
      (n = $i(e, f, c)),
      n !== null && (li(n, e, c, r), as(n, e, c));
  },
};
function au(e, n, r, c, f, g, w) {
  return (
    (e = e.stateNode),
    typeof e.shouldComponentUpdate == 'function'
      ? e.shouldComponentUpdate(c, g, w)
      : n.prototype && n.prototype.isPureReactComponent
      ? !ia(r, c) || !ia(f, g)
      : !0
  );
}
function x1(e, n, r) {
  var c = !1,
    f = tr,
    g = n.contextType;
  return (
    typeof g == 'object' && g !== null
      ? (g = ei(g))
      : ((f = Mt(n) ? br : mt.current),
        (c = n.contextTypes),
        (g = (c = c != null) ? nn(e, f) : tr)),
    (n = new n(r, g)),
    (e.memoizedState = n.state !== null && n.state !== void 0 ? n.state : null),
    (n.updater = Js),
    (e.stateNode = n),
    (n._reactInternals = e),
    c &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = f),
      (e.__reactInternalMemoizedMaskedChildContext = g)),
    n
  );
}
function su(e, n, r, c) {
  (e = n.state),
    typeof n.componentWillReceiveProps == 'function' &&
      n.componentWillReceiveProps(r, c),
    typeof n.UNSAFE_componentWillReceiveProps == 'function' &&
      n.UNSAFE_componentWillReceiveProps(r, c),
    n.state !== e && Js.enqueueReplaceState(n, n.state, null);
}
function Hl(e, n, r, c) {
  var f = e.stateNode;
  (f.props = r), (f.state = e.memoizedState), (f.refs = m1), Bc(e);
  var g = n.contextType;
  typeof g == 'object' && g !== null
    ? (f.context = ei(g))
    : ((g = Mt(n) ? br : mt.current), (f.context = nn(e, g))),
    (f.state = e.memoizedState),
    (g = n.getDerivedStateFromProps),
    typeof g == 'function' && (zl(e, n, g, r), (f.state = e.memoizedState)),
    typeof n.getDerivedStateFromProps == 'function' ||
      typeof f.getSnapshotBeforeUpdate == 'function' ||
      (typeof f.UNSAFE_componentWillMount != 'function' &&
        typeof f.componentWillMount != 'function') ||
      ((n = f.state),
      typeof f.componentWillMount == 'function' && f.componentWillMount(),
      typeof f.UNSAFE_componentWillMount == 'function' &&
        f.UNSAFE_componentWillMount(),
      n !== f.state && Js.enqueueReplaceState(f, f.state, null),
      Ms(e, r, f, c),
      (f.state = e.memoizedState)),
    typeof f.componentDidMount == 'function' && (e.flags |= 4194308);
}
function jn(e, n, r) {
  if (
    ((e = r.ref), e !== null && typeof e != 'function' && typeof e != 'object')
  ) {
    if (r._owner) {
      if (((r = r._owner), r)) {
        if (r.tag !== 1) throw Error(oe(309));
        var c = r.stateNode;
      }
      if (!c) throw Error(oe(147, e));
      var f = c,
        g = '' + e;
      return n !== null &&
        n.ref !== null &&
        typeof n.ref == 'function' &&
        n.ref._stringRef === g
        ? n.ref
        : ((n = function (w) {
            var k = f.refs;
            k === m1 && (k = f.refs = {}),
              w === null ? delete k[g] : (k[g] = w);
          }),
          (n._stringRef = g),
          n);
    }
    if (typeof e != 'string') throw Error(oe(284));
    if (!r._owner) throw Error(oe(290, e));
  }
  return e;
}
function Ua(e, n) {
  throw (
    ((e = Object.prototype.toString.call(n)),
    Error(
      oe(
        31,
        e === '[object Object]'
          ? 'object with keys {' + Object.keys(n).join(', ') + '}'
          : e
      )
    ))
  );
}
function ou(e) {
  var n = e._init;
  return n(e._payload);
}
function v1(e) {
  function n(B, E) {
    if (e) {
      var _ = B.deletions;
      _ === null ? ((B.deletions = [E]), (B.flags |= 16)) : _.push(E);
    }
  }
  function r(B, E) {
    if (!e) return null;
    for (; E !== null; ) n(B, E), (E = E.sibling);
    return null;
  }
  function c(B, E) {
    for (B = new Map(); E !== null; )
      E.key !== null ? B.set(E.key, E) : B.set(E.index, E), (E = E.sibling);
    return B;
  }
  function f(B, E) {
    return (B = Qi(B, E)), (B.index = 0), (B.sibling = null), B;
  }
  function g(B, E, _) {
    return (
      (B.index = _),
      e
        ? ((_ = B.alternate),
          _ !== null
            ? ((_ = _.index), _ < E ? ((B.flags |= 2), E) : _)
            : ((B.flags |= 2), E))
        : ((B.flags |= 1048576), E)
    );
  }
  function w(B) {
    return e && B.alternate === null && (B.flags |= 2), B;
  }
  function k(B, E, _, Q) {
    return E === null || E.tag !== 6
      ? ((E = $o(_, B.mode, Q)), (E.return = B), E)
      : ((E = f(E, _)), (E.return = B), E);
  }
  function M(B, E, _, Q) {
    var W = _.type;
    return W === Fr
      ? z(B, E, _.props.children, Q, _.key)
      : E !== null &&
        (E.elementType === W ||
          (typeof W == 'object' &&
            W !== null &&
            W.$$typeof === zi &&
            ou(W) === E.type))
      ? ((Q = f(E, _.props)), (Q.ref = jn(B, E, _)), (Q.return = B), Q)
      : ((Q = us(_.type, _.key, _.props, null, B.mode, Q)),
        (Q.ref = jn(B, E, _)),
        (Q.return = B),
        Q);
  }
  function D(B, E, _, Q) {
    return E === null ||
      E.tag !== 4 ||
      E.stateNode.containerInfo !== _.containerInfo ||
      E.stateNode.implementation !== _.implementation
      ? ((E = qo(_, B.mode, Q)), (E.return = B), E)
      : ((E = f(E, _.children || [])), (E.return = B), E);
  }
  function z(B, E, _, Q, W) {
    return E === null || E.tag !== 7
      ? ((E = vr(_, B.mode, Q, W)), (E.return = B), E)
      : ((E = f(E, _)), (E.return = B), E);
  }
  function Y(B, E, _) {
    if ((typeof E == 'string' && E !== '') || typeof E == 'number')
      return (E = $o('' + E, B.mode, _)), (E.return = B), E;
    if (typeof E == 'object' && E !== null) {
      switch (E.$$typeof) {
        case Oa:
          return (
            (_ = us(E.type, E.key, E.props, null, B.mode, _)),
            (_.ref = jn(B, null, E)),
            (_.return = B),
            _
          );
        case Or:
          return (E = qo(E, B.mode, _)), (E.return = B), E;
        case zi:
          var Q = E._init;
          return Y(B, Q(E._payload), _);
      }
      if (On(E) || Sn(E))
        return (E = vr(E, B.mode, _, null)), (E.return = B), E;
      Ua(B, E);
    }
    return null;
  }
  function U(B, E, _, Q) {
    var W = E !== null ? E.key : null;
    if ((typeof _ == 'string' && _ !== '') || typeof _ == 'number')
      return W !== null ? null : k(B, E, '' + _, Q);
    if (typeof _ == 'object' && _ !== null) {
      switch (_.$$typeof) {
        case Oa:
          return _.key === W ? M(B, E, _, Q) : null;
        case Or:
          return _.key === W ? D(B, E, _, Q) : null;
        case zi:
          return (W = _._init), U(B, E, W(_._payload), Q);
      }
      if (On(_) || Sn(_)) return W !== null ? null : z(B, E, _, Q, null);
      Ua(B, _);
    }
    return null;
  }
  function K(B, E, _, Q, W) {
    if ((typeof Q == 'string' && Q !== '') || typeof Q == 'number')
      return (B = B.get(_) || null), k(E, B, '' + Q, W);
    if (typeof Q == 'object' && Q !== null) {
      switch (Q.$$typeof) {
        case Oa:
          return (B = B.get(Q.key === null ? _ : Q.key) || null), M(E, B, Q, W);
        case Or:
          return (B = B.get(Q.key === null ? _ : Q.key) || null), D(E, B, Q, W);
        case zi:
          var ae = Q._init;
          return K(B, E, _, ae(Q._payload), W);
      }
      if (On(Q) || Sn(Q)) return (B = B.get(_) || null), z(E, B, Q, W, null);
      Ua(E, Q);
    }
    return null;
  }
  function Z(B, E, _, Q) {
    for (
      var W = null, ae = null, ce = E, he = (E = 0), Te = null;
      ce !== null && he < _.length;
      he++
    ) {
      ce.index > he ? ((Te = ce), (ce = null)) : (Te = ce.sibling);
      var ye = U(B, ce, _[he], Q);
      if (ye === null) {
        ce === null && (ce = Te);
        break;
      }
      e && ce && ye.alternate === null && n(B, ce),
        (E = g(ye, E, he)),
        ae === null ? (W = ye) : (ae.sibling = ye),
        (ae = ye),
        (ce = Te);
    }
    if (he === _.length) return r(B, ce), Xe && dr(B, he), W;
    if (ce === null) {
      for (; he < _.length; he++)
        (ce = Y(B, _[he], Q)),
          ce !== null &&
            ((E = g(ce, E, he)),
            ae === null ? (W = ce) : (ae.sibling = ce),
            (ae = ce));
      return Xe && dr(B, he), W;
    }
    for (ce = c(B, ce); he < _.length; he++)
      (Te = K(ce, B, he, _[he], Q)),
        Te !== null &&
          (e &&
            Te.alternate !== null &&
            ce.delete(Te.key === null ? he : Te.key),
          (E = g(Te, E, he)),
          ae === null ? (W = Te) : (ae.sibling = Te),
          (ae = Te));
    return (
      e &&
        ce.forEach(function (ct) {
          return n(B, ct);
        }),
      Xe && dr(B, he),
      W
    );
  }
  function V(B, E, _, Q) {
    var W = Sn(_);
    if (typeof W != 'function') throw Error(oe(150));
    if (((_ = W.call(_)), _ == null)) throw Error(oe(151));
    for (
      var ae = (W = null), ce = E, he = (E = 0), Te = null, ye = _.next();
      ce !== null && !ye.done;
      he++, ye = _.next()
    ) {
      ce.index > he ? ((Te = ce), (ce = null)) : (Te = ce.sibling);
      var ct = U(B, ce, ye.value, Q);
      if (ct === null) {
        ce === null && (ce = Te);
        break;
      }
      e && ce && ct.alternate === null && n(B, ce),
        (E = g(ct, E, he)),
        ae === null ? (W = ct) : (ae.sibling = ct),
        (ae = ct),
        (ce = Te);
    }
    if (ye.done) return r(B, ce), Xe && dr(B, he), W;
    if (ce === null) {
      for (; !ye.done; he++, ye = _.next())
        (ye = Y(B, ye.value, Q)),
          ye !== null &&
            ((E = g(ye, E, he)),
            ae === null ? (W = ye) : (ae.sibling = ye),
            (ae = ye));
      return Xe && dr(B, he), W;
    }
    for (ce = c(B, ce); !ye.done; he++, ye = _.next())
      (ye = K(ce, B, he, ye.value, Q)),
        ye !== null &&
          (e &&
            ye.alternate !== null &&
            ce.delete(ye.key === null ? he : ye.key),
          (E = g(ye, E, he)),
          ae === null ? (W = ye) : (ae.sibling = ye),
          (ae = ye));
    return (
      e &&
        ce.forEach(function (rt) {
          return n(B, rt);
        }),
      Xe && dr(B, he),
      W
    );
  }
  function ee(B, E, _, Q) {
    if (
      (typeof _ == 'object' &&
        _ !== null &&
        _.type === Fr &&
        _.key === null &&
        (_ = _.props.children),
      typeof _ == 'object' && _ !== null)
    ) {
      switch (_.$$typeof) {
        case Oa:
          e: {
            for (var W = _.key, ae = E; ae !== null; ) {
              if (ae.key === W) {
                if (((W = _.type), W === Fr)) {
                  if (ae.tag === 7) {
                    r(B, ae.sibling),
                      (E = f(ae, _.props.children)),
                      (E.return = B),
                      (B = E);
                    break e;
                  }
                } else if (
                  ae.elementType === W ||
                  (typeof W == 'object' &&
                    W !== null &&
                    W.$$typeof === zi &&
                    ou(W) === ae.type)
                ) {
                  r(B, ae.sibling),
                    (E = f(ae, _.props)),
                    (E.ref = jn(B, ae, _)),
                    (E.return = B),
                    (B = E);
                  break e;
                }
                r(B, ae);
                break;
              } else n(B, ae);
              ae = ae.sibling;
            }
            _.type === Fr
              ? ((E = vr(_.props.children, B.mode, Q, _.key)),
                (E.return = B),
                (B = E))
              : ((Q = us(_.type, _.key, _.props, null, B.mode, Q)),
                (Q.ref = jn(B, E, _)),
                (Q.return = B),
                (B = Q));
          }
          return w(B);
        case Or:
          e: {
            for (ae = _.key; E !== null; ) {
              if (E.key === ae)
                if (
                  E.tag === 4 &&
                  E.stateNode.containerInfo === _.containerInfo &&
                  E.stateNode.implementation === _.implementation
                ) {
                  r(B, E.sibling),
                    (E = f(E, _.children || [])),
                    (E.return = B),
                    (B = E);
                  break e;
                } else {
                  r(B, E);
                  break;
                }
              else n(B, E);
              E = E.sibling;
            }
            (E = qo(_, B.mode, Q)), (E.return = B), (B = E);
          }
          return w(B);
        case zi:
          return (ae = _._init), ee(B, E, ae(_._payload), Q);
      }
      if (On(_)) return Z(B, E, _, Q);
      if (Sn(_)) return V(B, E, _, Q);
      Ua(B, _);
    }
    return (typeof _ == 'string' && _ !== '') || typeof _ == 'number'
      ? ((_ = '' + _),
        E !== null && E.tag === 6
          ? (r(B, E.sibling), (E = f(E, _)), (E.return = B), (B = E))
          : (r(B, E), (E = $o(_, B.mode, Q)), (E.return = B), (B = E)),
        w(B))
      : r(B, E);
  }
  return ee;
}
var sn = v1(!0),
  b1 = v1(!1),
  ya = {},
  bi = rr(ya),
  sa = rr(ya),
  oa = rr(ya);
function gr(e) {
  if (e === ya) throw Error(oe(174));
  return e;
}
function Yc(e, n) {
  switch ((Oe(oa, n), Oe(sa, e), Oe(bi, ya), (e = n.nodeType), e)) {
    case 9:
    case 11:
      n = (n = n.documentElement) ? n.namespaceURI : xl(null, '');
      break;
    default:
      (e = e === 8 ? n.parentNode : n),
        (n = e.namespaceURI || null),
        (e = e.tagName),
        (n = xl(n, e));
  }
  He(bi), Oe(bi, n);
}
function on() {
  He(bi), He(sa), He(oa);
}
function y1(e) {
  gr(oa.current);
  var n = gr(bi.current),
    r = xl(n, e.type);
  n !== r && (Oe(sa, e), Oe(bi, r));
}
function Xc(e) {
  sa.current === e && (He(bi), He(sa));
}
var _e = rr(0);
function Ps(e) {
  for (var n = e; n !== null; ) {
    if (n.tag === 13) {
      var r = n.memoizedState;
      if (
        r !== null &&
        ((r = r.dehydrated), r === null || r.data === '$?' || r.data === '$!')
      )
        return n;
    } else if (n.tag === 19 && n.memoizedProps.revealOrder !== void 0) {
      if (n.flags & 128) return n;
    } else if (n.child !== null) {
      (n.child.return = n), (n = n.child);
      continue;
    }
    if (n === e) break;
    for (; n.sibling === null; ) {
      if (n.return === null || n.return === e) return null;
      n = n.return;
    }
    (n.sibling.return = n.return), (n = n.sibling);
  }
  return null;
}
var _o = [];
function _c() {
  for (var e = 0; e < _o.length; e++)
    _o[e]._workInProgressVersionPrimary = null;
  _o.length = 0;
}
var ss = Ii.ReactCurrentDispatcher,
  Vo = Ii.ReactCurrentBatchConfig,
  wr = 0,
  Ve = null,
  tt = null,
  nt = null,
  Ts = !1,
  Vn = !1,
  la = 0,
  t0 = 0;
function ht() {
  throw Error(oe(321));
}
function Vc(e, n) {
  if (n === null) return !1;
  for (var r = 0; r < n.length && r < e.length; r++)
    if (!di(e[r], n[r])) return !1;
  return !0;
}
function Wc(e, n, r, c, f, g) {
  if (
    ((wr = g),
    (Ve = n),
    (n.memoizedState = null),
    (n.updateQueue = null),
    (n.lanes = 0),
    (ss.current = e === null || e.memoizedState === null ? a0 : s0),
    (e = r(c, f)),
    Vn)
  ) {
    g = 0;
    do {
      if (((Vn = !1), (la = 0), 25 <= g)) throw Error(oe(301));
      (g += 1),
        (nt = tt = null),
        (n.updateQueue = null),
        (ss.current = o0),
        (e = r(c, f));
    } while (Vn);
  }
  if (
    ((ss.current = Ds),
    (n = tt !== null && tt.next !== null),
    (wr = 0),
    (nt = tt = Ve = null),
    (Ts = !1),
    n)
  )
    throw Error(oe(300));
  return e;
}
function Gc() {
  var e = la !== 0;
  return (la = 0), e;
}
function mi() {
  var e = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return nt === null ? (Ve.memoizedState = nt = e) : (nt = nt.next = e), nt;
}
function ti() {
  if (tt === null) {
    var e = Ve.alternate;
    e = e !== null ? e.memoizedState : null;
  } else e = tt.next;
  var n = nt === null ? Ve.memoizedState : nt.next;
  if (n !== null) (nt = n), (tt = e);
  else {
    if (e === null) throw Error(oe(310));
    (tt = e),
      (e = {
        memoizedState: tt.memoizedState,
        baseState: tt.baseState,
        baseQueue: tt.baseQueue,
        queue: tt.queue,
        next: null,
      }),
      nt === null ? (Ve.memoizedState = nt = e) : (nt = nt.next = e);
  }
  return nt;
}
function ca(e, n) {
  return typeof n == 'function' ? n(e) : n;
}
function Wo(e) {
  var n = ti(),
    r = n.queue;
  if (r === null) throw Error(oe(311));
  r.lastRenderedReducer = e;
  var c = tt,
    f = c.baseQueue,
    g = r.pending;
  if (g !== null) {
    if (f !== null) {
      var w = f.next;
      (f.next = g.next), (g.next = w);
    }
    (c.baseQueue = f = g), (r.pending = null);
  }
  if (f !== null) {
    (g = f.next), (c = c.baseState);
    var k = (w = null),
      M = null,
      D = g;
    do {
      var z = D.lane;
      if ((wr & z) === z)
        M !== null &&
          (M = M.next =
            {
              lane: 0,
              action: D.action,
              hasEagerState: D.hasEagerState,
              eagerState: D.eagerState,
              next: null,
            }),
          (c = D.hasEagerState ? D.eagerState : e(c, D.action));
      else {
        var Y = {
          lane: z,
          action: D.action,
          hasEagerState: D.hasEagerState,
          eagerState: D.eagerState,
          next: null,
        };
        M === null ? ((k = M = Y), (w = c)) : (M = M.next = Y),
          (Ve.lanes |= z),
          (Cr |= z);
      }
      D = D.next;
    } while (D !== null && D !== g);
    M === null ? (w = c) : (M.next = k),
      di(c, n.memoizedState) || (Et = !0),
      (n.memoizedState = c),
      (n.baseState = w),
      (n.baseQueue = M),
      (r.lastRenderedState = c);
  }
  if (((e = r.interleaved), e !== null)) {
    f = e;
    do (g = f.lane), (Ve.lanes |= g), (Cr |= g), (f = f.next);
    while (f !== e);
  } else f === null && (r.lanes = 0);
  return [n.memoizedState, r.dispatch];
}
function Go(e) {
  var n = ti(),
    r = n.queue;
  if (r === null) throw Error(oe(311));
  r.lastRenderedReducer = e;
  var c = r.dispatch,
    f = r.pending,
    g = n.memoizedState;
  if (f !== null) {
    r.pending = null;
    var w = (f = f.next);
    do (g = e(g, w.action)), (w = w.next);
    while (w !== f);
    di(g, n.memoizedState) || (Et = !0),
      (n.memoizedState = g),
      n.baseQueue === null && (n.baseState = g),
      (r.lastRenderedState = g);
  }
  return [g, c];
}
function w1() {}
function C1(e, n) {
  var r = Ve,
    c = ti(),
    f = n(),
    g = !di(c.memoizedState, f);
  if (
    (g && ((c.memoizedState = f), (Et = !0)),
    (c = c.queue),
    Uc(A1.bind(null, r, c, e), [e]),
    c.getSnapshot !== n || g || (nt !== null && nt.memoizedState.tag & 1))
  ) {
    if (
      ((r.flags |= 2048),
      da(9, S1.bind(null, r, c, f, n), void 0, null),
      at === null)
    )
      throw Error(oe(349));
    wr & 30 || k1(r, n, f);
  }
  return f;
}
function k1(e, n, r) {
  (e.flags |= 16384),
    (e = { getSnapshot: n, value: r }),
    (n = Ve.updateQueue),
    n === null
      ? ((n = { lastEffect: null, stores: null }),
        (Ve.updateQueue = n),
        (n.stores = [e]))
      : ((r = n.stores), r === null ? (n.stores = [e]) : r.push(e));
}
function S1(e, n, r, c) {
  (n.value = r), (n.getSnapshot = c), L1(n) && N1(e);
}
function A1(e, n, r) {
  return r(function () {
    L1(n) && N1(e);
  });
}
function L1(e) {
  var n = e.getSnapshot;
  e = e.value;
  try {
    var r = n();
    return !di(e, r);
  } catch {
    return !0;
  }
}
function N1(e) {
  var n = Ti(e, 1);
  n !== null && li(n, e, 1, -1);
}
function lu(e) {
  var n = mi();
  return (
    typeof e == 'function' && (e = e()),
    (n.memoizedState = n.baseState = e),
    (e = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: ca,
      lastRenderedState: e,
    }),
    (n.queue = e),
    (e = e.dispatch = n0.bind(null, Ve, e)),
    [n.memoizedState, e]
  );
}
function da(e, n, r, c) {
  return (
    (e = { tag: e, create: n, destroy: r, deps: c, next: null }),
    (n = Ve.updateQueue),
    n === null
      ? ((n = { lastEffect: null, stores: null }),
        (Ve.updateQueue = n),
        (n.lastEffect = e.next = e))
      : ((r = n.lastEffect),
        r === null
          ? (n.lastEffect = e.next = e)
          : ((c = r.next), (r.next = e), (e.next = c), (n.lastEffect = e))),
    e
  );
}
function E1() {
  return ti().memoizedState;
}
function os(e, n, r, c) {
  var f = mi();
  (Ve.flags |= e),
    (f.memoizedState = da(1 | n, r, void 0, c === void 0 ? null : c));
}
function eo(e, n, r, c) {
  var f = ti();
  c = c === void 0 ? null : c;
  var g = void 0;
  if (tt !== null) {
    var w = tt.memoizedState;
    if (((g = w.destroy), c !== null && Vc(c, w.deps))) {
      f.memoizedState = da(n, r, g, c);
      return;
    }
  }
  (Ve.flags |= e), (f.memoizedState = da(1 | n, r, g, c));
}
function cu(e, n) {
  return os(8390656, 8, e, n);
}
function Uc(e, n) {
  return eo(2048, 8, e, n);
}
function j1(e, n) {
  return eo(4, 2, e, n);
}
function M1(e, n) {
  return eo(4, 4, e, n);
}
function P1(e, n) {
  if (typeof n == 'function')
    return (
      (e = e()),
      n(e),
      function () {
        n(null);
      }
    );
  if (n != null)
    return (
      (e = e()),
      (n.current = e),
      function () {
        n.current = null;
      }
    );
}
function T1(e, n, r) {
  return (
    (r = r != null ? r.concat([e]) : null), eo(4, 4, P1.bind(null, n, e), r)
  );
}
function Zc() {}
function D1(e, n) {
  var r = ti();
  n = n === void 0 ? null : n;
  var c = r.memoizedState;
  return c !== null && n !== null && Vc(n, c[1])
    ? c[0]
    : ((r.memoizedState = [e, n]), e);
}
function I1(e, n) {
  var r = ti();
  n = n === void 0 ? null : n;
  var c = r.memoizedState;
  return c !== null && n !== null && Vc(n, c[1])
    ? c[0]
    : ((e = e()), (r.memoizedState = [e, n]), e);
}
function R1(e, n, r) {
  return wr & 21
    ? (di(r, n) || ((r = zh()), (Ve.lanes |= r), (Cr |= r), (e.baseState = !0)),
      n)
    : (e.baseState && ((e.baseState = !1), (Et = !0)), (e.memoizedState = r));
}
function i0(e, n) {
  var r = Ie;
  (Ie = r !== 0 && 4 > r ? r : 4), e(!0);
  var c = Vo.transition;
  Vo.transition = {};
  try {
    e(!1), n();
  } finally {
    (Ie = r), (Vo.transition = c);
  }
}
function O1() {
  return ti().memoizedState;
}
function r0(e, n, r) {
  var c = Ki(e);
  if (
    ((r = {
      lane: c,
      action: r,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    F1(e))
  )
    z1(n, r);
  else if (((r = p1(e, n, r, c)), r !== null)) {
    var f = wt();
    li(r, e, c, f), H1(r, n, c);
  }
}
function n0(e, n, r) {
  var c = Ki(e),
    f = { lane: c, action: r, hasEagerState: !1, eagerState: null, next: null };
  if (F1(e)) z1(n, f);
  else {
    var g = e.alternate;
    if (
      e.lanes === 0 &&
      (g === null || g.lanes === 0) &&
      ((g = n.lastRenderedReducer), g !== null)
    )
      try {
        var w = n.lastRenderedState,
          k = g(w, r);
        if (((f.hasEagerState = !0), (f.eagerState = k), di(k, w))) {
          var M = n.interleaved;
          M === null
            ? ((f.next = f), Hc(n))
            : ((f.next = M.next), (M.next = f)),
            (n.interleaved = f);
          return;
        }
      } catch {
      } finally {
      }
    (r = p1(e, n, f, c)),
      r !== null && ((f = wt()), li(r, e, c, f), H1(r, n, c));
  }
}
function F1(e) {
  var n = e.alternate;
  return e === Ve || (n !== null && n === Ve);
}
function z1(e, n) {
  Vn = Ts = !0;
  var r = e.pending;
  r === null ? (n.next = n) : ((n.next = r.next), (r.next = n)),
    (e.pending = n);
}
function H1(e, n, r) {
  if (r & 4194240) {
    var c = n.lanes;
    (c &= e.pendingLanes), (r |= c), (n.lanes = r), Ac(e, r);
  }
}
var Ds = {
    readContext: ei,
    useCallback: ht,
    useContext: ht,
    useEffect: ht,
    useImperativeHandle: ht,
    useInsertionEffect: ht,
    useLayoutEffect: ht,
    useMemo: ht,
    useReducer: ht,
    useRef: ht,
    useState: ht,
    useDebugValue: ht,
    useDeferredValue: ht,
    useTransition: ht,
    useMutableSource: ht,
    useSyncExternalStore: ht,
    useId: ht,
    unstable_isNewReconciler: !1,
  },
  a0 = {
    readContext: ei,
    useCallback: function (e, n) {
      return (mi().memoizedState = [e, n === void 0 ? null : n]), e;
    },
    useContext: ei,
    useEffect: cu,
    useImperativeHandle: function (e, n, r) {
      return (
        (r = r != null ? r.concat([e]) : null),
        os(4194308, 4, P1.bind(null, n, e), r)
      );
    },
    useLayoutEffect: function (e, n) {
      return os(4194308, 4, e, n);
    },
    useInsertionEffect: function (e, n) {
      return os(4, 2, e, n);
    },
    useMemo: function (e, n) {
      var r = mi();
      return (
        (n = n === void 0 ? null : n), (e = e()), (r.memoizedState = [e, n]), e
      );
    },
    useReducer: function (e, n, r) {
      var c = mi();
      return (
        (n = r !== void 0 ? r(n) : n),
        (c.memoizedState = c.baseState = n),
        (e = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: e,
          lastRenderedState: n,
        }),
        (c.queue = e),
        (e = e.dispatch = r0.bind(null, Ve, e)),
        [c.memoizedState, e]
      );
    },
    useRef: function (e) {
      var n = mi();
      return (e = { current: e }), (n.memoizedState = e);
    },
    useState: lu,
    useDebugValue: Zc,
    useDeferredValue: function (e) {
      return (mi().memoizedState = e);
    },
    useTransition: function () {
      var e = lu(!1),
        n = e[0];
      return (e = i0.bind(null, e[1])), (mi().memoizedState = e), [n, e];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (e, n, r) {
      var c = Ve,
        f = mi();
      if (Xe) {
        if (r === void 0) throw Error(oe(407));
        r = r();
      } else {
        if (((r = n()), at === null)) throw Error(oe(349));
        wr & 30 || k1(c, n, r);
      }
      f.memoizedState = r;
      var g = { value: r, getSnapshot: n };
      return (
        (f.queue = g),
        cu(A1.bind(null, c, g, e), [e]),
        (c.flags |= 2048),
        da(9, S1.bind(null, c, g, r, n), void 0, null),
        r
      );
    },
    useId: function () {
      var e = mi(),
        n = at.identifierPrefix;
      if (Xe) {
        var r = Ei,
          c = Ni;
        (r = (c & ~(1 << (32 - oi(c) - 1))).toString(32) + r),
          (n = ':' + n + 'R' + r),
          (r = la++),
          0 < r && (n += 'H' + r.toString(32)),
          (n += ':');
      } else (r = t0++), (n = ':' + n + 'r' + r.toString(32) + ':');
      return (e.memoizedState = n);
    },
    unstable_isNewReconciler: !1,
  },
  s0 = {
    readContext: ei,
    useCallback: D1,
    useContext: ei,
    useEffect: Uc,
    useImperativeHandle: T1,
    useInsertionEffect: j1,
    useLayoutEffect: M1,
    useMemo: I1,
    useReducer: Wo,
    useRef: E1,
    useState: function () {
      return Wo(ca);
    },
    useDebugValue: Zc,
    useDeferredValue: function (e) {
      var n = ti();
      return R1(n, tt.memoizedState, e);
    },
    useTransition: function () {
      var e = Wo(ca)[0],
        n = ti().memoizedState;
      return [e, n];
    },
    useMutableSource: w1,
    useSyncExternalStore: C1,
    useId: O1,
    unstable_isNewReconciler: !1,
  },
  o0 = {
    readContext: ei,
    useCallback: D1,
    useContext: ei,
    useEffect: Uc,
    useImperativeHandle: T1,
    useInsertionEffect: j1,
    useLayoutEffect: M1,
    useMemo: I1,
    useReducer: Go,
    useRef: E1,
    useState: function () {
      return Go(ca);
    },
    useDebugValue: Zc,
    useDeferredValue: function (e) {
      var n = ti();
      return tt === null ? (n.memoizedState = e) : R1(n, tt.memoizedState, e);
    },
    useTransition: function () {
      var e = Go(ca)[0],
        n = ti().memoizedState;
      return [e, n];
    },
    useMutableSource: w1,
    useSyncExternalStore: C1,
    useId: O1,
    unstable_isNewReconciler: !1,
  };
function ln(e, n) {
  try {
    var r = '',
      c = n;
    do (r += Rp(c)), (c = c.return);
    while (c);
    var f = r;
  } catch (g) {
    f =
      `
Error generating stack: ` +
      g.message +
      `
` +
      g.stack;
  }
  return { value: e, source: n, stack: f, digest: null };
}
function Uo(e, n, r) {
  return { value: e, source: null, stack: r ?? null, digest: n ?? null };
}
function Bl(e, n) {
  try {
    console.error(n.value);
  } catch (r) {
    setTimeout(function () {
      throw r;
    });
  }
}
var l0 = typeof WeakMap == 'function' ? WeakMap : Map;
function B1(e, n, r) {
  (r = ji(-1, r)), (r.tag = 3), (r.payload = { element: null });
  var c = n.value;
  return (
    (r.callback = function () {
      Rs || ((Rs = !0), (ql = c)), Bl(e, n);
    }),
    r
  );
}
function Y1(e, n, r) {
  (r = ji(-1, r)), (r.tag = 3);
  var c = e.type.getDerivedStateFromError;
  if (typeof c == 'function') {
    var f = n.value;
    (r.payload = function () {
      return c(f);
    }),
      (r.callback = function () {
        Bl(e, n);
      });
  }
  var g = e.stateNode;
  return (
    g !== null &&
      typeof g.componentDidCatch == 'function' &&
      (r.callback = function () {
        Bl(e, n),
          typeof c != 'function' &&
            (qi === null ? (qi = new Set([this])) : qi.add(this));
        var w = n.stack;
        this.componentDidCatch(n.value, {
          componentStack: w !== null ? w : '',
        });
      }),
    r
  );
}
function du(e, n, r) {
  var c = e.pingCache;
  if (c === null) {
    c = e.pingCache = new l0();
    var f = new Set();
    c.set(n, f);
  } else (f = c.get(n)), f === void 0 && ((f = new Set()), c.set(n, f));
  f.has(r) || (f.add(r), (e = C0.bind(null, e, n, r)), n.then(e, e));
}
function uu(e) {
  do {
    var n;
    if (
      ((n = e.tag === 13) &&
        ((n = e.memoizedState), (n = n !== null ? n.dehydrated !== null : !0)),
      n)
    )
      return e;
    e = e.return;
  } while (e !== null);
  return null;
}
function hu(e, n, r, c, f) {
  return e.mode & 1
    ? ((e.flags |= 65536), (e.lanes = f), e)
    : (e === n
        ? (e.flags |= 65536)
        : ((e.flags |= 128),
          (r.flags |= 131072),
          (r.flags &= -52805),
          r.tag === 1 &&
            (r.alternate === null
              ? (r.tag = 17)
              : ((n = ji(-1, 1)), (n.tag = 2), $i(r, n, 1))),
          (r.lanes |= 1)),
      e);
}
var c0 = Ii.ReactCurrentOwner,
  Et = !1;
function yt(e, n, r, c) {
  n.child = e === null ? b1(n, null, r, c) : sn(n, e.child, r, c);
}
function fu(e, n, r, c, f) {
  r = r.render;
  var g = n.ref;
  return (
    Qr(n, f),
    (c = Wc(e, n, r, c, g, f)),
    (r = Gc()),
    e !== null && !Et
      ? ((n.updateQueue = e.updateQueue),
        (n.flags &= -2053),
        (e.lanes &= ~f),
        Di(e, n, f))
      : (Xe && r && Dc(n), (n.flags |= 1), yt(e, n, c, f), n.child)
  );
}
function pu(e, n, r, c, f) {
  if (e === null) {
    var g = r.type;
    return typeof g == 'function' &&
      !id(g) &&
      g.defaultProps === void 0 &&
      r.compare === null &&
      r.defaultProps === void 0
      ? ((n.tag = 15), (n.type = g), X1(e, n, g, c, f))
      : ((e = us(r.type, null, c, n, n.mode, f)),
        (e.ref = n.ref),
        (e.return = n),
        (n.child = e));
  }
  if (((g = e.child), !(e.lanes & f))) {
    var w = g.memoizedProps;
    if (
      ((r = r.compare), (r = r !== null ? r : ia), r(w, c) && e.ref === n.ref)
    )
      return Di(e, n, f);
  }
  return (
    (n.flags |= 1),
    (e = Qi(g, c)),
    (e.ref = n.ref),
    (e.return = n),
    (n.child = e)
  );
}
function X1(e, n, r, c, f) {
  if (e !== null) {
    var g = e.memoizedProps;
    if (ia(g, c) && e.ref === n.ref)
      if (((Et = !1), (n.pendingProps = c = g), (e.lanes & f) !== 0))
        e.flags & 131072 && (Et = !0);
      else return (n.lanes = e.lanes), Di(e, n, f);
  }
  return Yl(e, n, r, c, f);
}
function _1(e, n, r) {
  var c = n.pendingProps,
    f = c.children,
    g = e !== null ? e.memoizedState : null;
  if (c.mode === 'hidden')
    if (!(n.mode & 1))
      (n.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        Oe(Ur, Ot),
        (Ot |= r);
    else {
      if (!(r & 1073741824))
        return (
          (e = g !== null ? g.baseLanes | r : r),
          (n.lanes = n.childLanes = 1073741824),
          (n.memoizedState = {
            baseLanes: e,
            cachePool: null,
            transitions: null,
          }),
          (n.updateQueue = null),
          Oe(Ur, Ot),
          (Ot |= e),
          null
        );
      (n.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (c = g !== null ? g.baseLanes : r),
        Oe(Ur, Ot),
        (Ot |= c);
    }
  else
    g !== null ? ((c = g.baseLanes | r), (n.memoizedState = null)) : (c = r),
      Oe(Ur, Ot),
      (Ot |= c);
  return yt(e, n, f, r), n.child;
}
function V1(e, n) {
  var r = n.ref;
  ((e === null && r !== null) || (e !== null && e.ref !== r)) &&
    ((n.flags |= 512), (n.flags |= 2097152));
}
function Yl(e, n, r, c, f) {
  var g = Mt(r) ? br : mt.current;
  return (
    (g = nn(n, g)),
    Qr(n, f),
    (r = Wc(e, n, r, c, g, f)),
    (c = Gc()),
    e !== null && !Et
      ? ((n.updateQueue = e.updateQueue),
        (n.flags &= -2053),
        (e.lanes &= ~f),
        Di(e, n, f))
      : (Xe && c && Dc(n), (n.flags |= 1), yt(e, n, r, f), n.child)
  );
}
function gu(e, n, r, c, f) {
  if (Mt(r)) {
    var g = !0;
    As(n);
  } else g = !1;
  if ((Qr(n, f), n.stateNode === null))
    ls(e, n), x1(n, r, c), Hl(n, r, c, f), (c = !0);
  else if (e === null) {
    var w = n.stateNode,
      k = n.memoizedProps;
    w.props = k;
    var M = w.context,
      D = r.contextType;
    typeof D == 'object' && D !== null
      ? (D = ei(D))
      : ((D = Mt(r) ? br : mt.current), (D = nn(n, D)));
    var z = r.getDerivedStateFromProps,
      Y =
        typeof z == 'function' ||
        typeof w.getSnapshotBeforeUpdate == 'function';
    Y ||
      (typeof w.UNSAFE_componentWillReceiveProps != 'function' &&
        typeof w.componentWillReceiveProps != 'function') ||
      ((k !== c || M !== D) && su(n, w, c, D)),
      (Hi = !1);
    var U = n.memoizedState;
    (w.state = U),
      Ms(n, c, w, f),
      (M = n.memoizedState),
      k !== c || U !== M || jt.current || Hi
        ? (typeof z == 'function' && (zl(n, r, z, c), (M = n.memoizedState)),
          (k = Hi || au(n, r, k, c, U, M, D))
            ? (Y ||
                (typeof w.UNSAFE_componentWillMount != 'function' &&
                  typeof w.componentWillMount != 'function') ||
                (typeof w.componentWillMount == 'function' &&
                  w.componentWillMount(),
                typeof w.UNSAFE_componentWillMount == 'function' &&
                  w.UNSAFE_componentWillMount()),
              typeof w.componentDidMount == 'function' && (n.flags |= 4194308))
            : (typeof w.componentDidMount == 'function' && (n.flags |= 4194308),
              (n.memoizedProps = c),
              (n.memoizedState = M)),
          (w.props = c),
          (w.state = M),
          (w.context = D),
          (c = k))
        : (typeof w.componentDidMount == 'function' && (n.flags |= 4194308),
          (c = !1));
  } else {
    (w = n.stateNode),
      g1(e, n),
      (k = n.memoizedProps),
      (D = n.type === n.elementType ? k : ni(n.type, k)),
      (w.props = D),
      (Y = n.pendingProps),
      (U = w.context),
      (M = r.contextType),
      typeof M == 'object' && M !== null
        ? (M = ei(M))
        : ((M = Mt(r) ? br : mt.current), (M = nn(n, M)));
    var K = r.getDerivedStateFromProps;
    (z =
      typeof K == 'function' ||
      typeof w.getSnapshotBeforeUpdate == 'function') ||
      (typeof w.UNSAFE_componentWillReceiveProps != 'function' &&
        typeof w.componentWillReceiveProps != 'function') ||
      ((k !== Y || U !== M) && su(n, w, c, M)),
      (Hi = !1),
      (U = n.memoizedState),
      (w.state = U),
      Ms(n, c, w, f);
    var Z = n.memoizedState;
    k !== Y || U !== Z || jt.current || Hi
      ? (typeof K == 'function' && (zl(n, r, K, c), (Z = n.memoizedState)),
        (D = Hi || au(n, r, D, c, U, Z, M) || !1)
          ? (z ||
              (typeof w.UNSAFE_componentWillUpdate != 'function' &&
                typeof w.componentWillUpdate != 'function') ||
              (typeof w.componentWillUpdate == 'function' &&
                w.componentWillUpdate(c, Z, M),
              typeof w.UNSAFE_componentWillUpdate == 'function' &&
                w.UNSAFE_componentWillUpdate(c, Z, M)),
            typeof w.componentDidUpdate == 'function' && (n.flags |= 4),
            typeof w.getSnapshotBeforeUpdate == 'function' && (n.flags |= 1024))
          : (typeof w.componentDidUpdate != 'function' ||
              (k === e.memoizedProps && U === e.memoizedState) ||
              (n.flags |= 4),
            typeof w.getSnapshotBeforeUpdate != 'function' ||
              (k === e.memoizedProps && U === e.memoizedState) ||
              (n.flags |= 1024),
            (n.memoizedProps = c),
            (n.memoizedState = Z)),
        (w.props = c),
        (w.state = Z),
        (w.context = M),
        (c = D))
      : (typeof w.componentDidUpdate != 'function' ||
          (k === e.memoizedProps && U === e.memoizedState) ||
          (n.flags |= 4),
        typeof w.getSnapshotBeforeUpdate != 'function' ||
          (k === e.memoizedProps && U === e.memoizedState) ||
          (n.flags |= 1024),
        (c = !1));
  }
  return Xl(e, n, r, c, g, f);
}
function Xl(e, n, r, c, f, g) {
  V1(e, n);
  var w = (n.flags & 128) !== 0;
  if (!c && !w) return f && eu(n, r, !1), Di(e, n, g);
  (c = n.stateNode), (c0.current = n);
  var k =
    w && typeof r.getDerivedStateFromError != 'function' ? null : c.render();
  return (
    (n.flags |= 1),
    e !== null && w
      ? ((n.child = sn(n, e.child, null, g)), (n.child = sn(n, null, k, g)))
      : yt(e, n, k, g),
    (n.memoizedState = c.state),
    f && eu(n, r, !0),
    n.child
  );
}
function W1(e) {
  var n = e.stateNode;
  n.pendingContext
    ? Jd(e, n.pendingContext, n.pendingContext !== n.context)
    : n.context && Jd(e, n.context, !1),
    Yc(e, n.containerInfo);
}
function mu(e, n, r, c, f) {
  return an(), Rc(f), (n.flags |= 256), yt(e, n, r, c), n.child;
}
var _l = { dehydrated: null, treeContext: null, retryLane: 0 };
function Vl(e) {
  return { baseLanes: e, cachePool: null, transitions: null };
}
function G1(e, n, r) {
  var c = n.pendingProps,
    f = _e.current,
    g = !1,
    w = (n.flags & 128) !== 0,
    k;
  if (
    ((k = w) ||
      (k = e !== null && e.memoizedState === null ? !1 : (f & 2) !== 0),
    k
      ? ((g = !0), (n.flags &= -129))
      : (e === null || e.memoizedState !== null) && (f |= 1),
    Oe(_e, f & 1),
    e === null)
  )
    return (
      Ol(n),
      (e = n.memoizedState),
      e !== null && ((e = e.dehydrated), e !== null)
        ? (n.mode & 1
            ? e.data === '$!'
              ? (n.lanes = 8)
              : (n.lanes = 1073741824)
            : (n.lanes = 1),
          null)
        : ((w = c.children),
          (e = c.fallback),
          g
            ? ((c = n.mode),
              (g = n.child),
              (w = { mode: 'hidden', children: w }),
              !(c & 1) && g !== null
                ? ((g.childLanes = 0), (g.pendingProps = w))
                : (g = ro(w, c, 0, null)),
              (e = vr(e, c, r, null)),
              (g.return = n),
              (e.return = n),
              (g.sibling = e),
              (n.child = g),
              (n.child.memoizedState = Vl(r)),
              (n.memoizedState = _l),
              e)
            : $c(n, w))
    );
  if (((f = e.memoizedState), f !== null && ((k = f.dehydrated), k !== null)))
    return d0(e, n, w, c, k, f, r);
  if (g) {
    (g = c.fallback), (w = n.mode), (f = e.child), (k = f.sibling);
    var M = { mode: 'hidden', children: c.children };
    return (
      !(w & 1) && n.child !== f
        ? ((c = n.child),
          (c.childLanes = 0),
          (c.pendingProps = M),
          (n.deletions = null))
        : ((c = Qi(f, M)), (c.subtreeFlags = f.subtreeFlags & 14680064)),
      k !== null ? (g = Qi(k, g)) : ((g = vr(g, w, r, null)), (g.flags |= 2)),
      (g.return = n),
      (c.return = n),
      (c.sibling = g),
      (n.child = c),
      (c = g),
      (g = n.child),
      (w = e.child.memoizedState),
      (w =
        w === null
          ? Vl(r)
          : {
              baseLanes: w.baseLanes | r,
              cachePool: null,
              transitions: w.transitions,
            }),
      (g.memoizedState = w),
      (g.childLanes = e.childLanes & ~r),
      (n.memoizedState = _l),
      c
    );
  }
  return (
    (g = e.child),
    (e = g.sibling),
    (c = Qi(g, { mode: 'visible', children: c.children })),
    !(n.mode & 1) && (c.lanes = r),
    (c.return = n),
    (c.sibling = null),
    e !== null &&
      ((r = n.deletions),
      r === null ? ((n.deletions = [e]), (n.flags |= 16)) : r.push(e)),
    (n.child = c),
    (n.memoizedState = null),
    c
  );
}
function $c(e, n) {
  return (
    (n = ro({ mode: 'visible', children: n }, e.mode, 0, null)),
    (n.return = e),
    (e.child = n)
  );
}
function Za(e, n, r, c) {
  return (
    c !== null && Rc(c),
    sn(n, e.child, null, r),
    (e = $c(n, n.pendingProps.children)),
    (e.flags |= 2),
    (n.memoizedState = null),
    e
  );
}
function d0(e, n, r, c, f, g, w) {
  if (r)
    return n.flags & 256
      ? ((n.flags &= -257), (c = Uo(Error(oe(422)))), Za(e, n, w, c))
      : n.memoizedState !== null
      ? ((n.child = e.child), (n.flags |= 128), null)
      : ((g = c.fallback),
        (f = n.mode),
        (c = ro({ mode: 'visible', children: c.children }, f, 0, null)),
        (g = vr(g, f, w, null)),
        (g.flags |= 2),
        (c.return = n),
        (g.return = n),
        (c.sibling = g),
        (n.child = c),
        n.mode & 1 && sn(n, e.child, null, w),
        (n.child.memoizedState = Vl(w)),
        (n.memoizedState = _l),
        g);
  if (!(n.mode & 1)) return Za(e, n, w, null);
  if (f.data === '$!') {
    if (((c = f.nextSibling && f.nextSibling.dataset), c)) var k = c.dgst;
    return (
      (c = k), (g = Error(oe(419))), (c = Uo(g, c, void 0)), Za(e, n, w, c)
    );
  }
  if (((k = (w & e.childLanes) !== 0), Et || k)) {
    if (((c = at), c !== null)) {
      switch (w & -w) {
        case 4:
          f = 2;
          break;
        case 16:
          f = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          f = 32;
          break;
        case 536870912:
          f = 268435456;
          break;
        default:
          f = 0;
      }
      (f = f & (c.suspendedLanes | w) ? 0 : f),
        f !== 0 &&
          f !== g.retryLane &&
          ((g.retryLane = f), Ti(e, f), li(c, e, f, -1));
    }
    return td(), (c = Uo(Error(oe(421)))), Za(e, n, w, c);
  }
  return f.data === '$?'
    ? ((n.flags |= 128),
      (n.child = e.child),
      (n = k0.bind(null, e)),
      (f._reactRetry = n),
      null)
    : ((e = g.treeContext),
      (Ft = Zi(f.nextSibling)),
      (zt = n),
      (Xe = !0),
      (si = null),
      e !== null &&
        ((qt[Kt++] = Ni),
        (qt[Kt++] = Ei),
        (qt[Kt++] = yr),
        (Ni = e.id),
        (Ei = e.overflow),
        (yr = n)),
      (n = $c(n, c.children)),
      (n.flags |= 4096),
      n);
}
function xu(e, n, r) {
  e.lanes |= n;
  var c = e.alternate;
  c !== null && (c.lanes |= n), Fl(e.return, n, r);
}
function Zo(e, n, r, c, f) {
  var g = e.memoizedState;
  g === null
    ? (e.memoizedState = {
        isBackwards: n,
        rendering: null,
        renderingStartTime: 0,
        last: c,
        tail: r,
        tailMode: f,
      })
    : ((g.isBackwards = n),
      (g.rendering = null),
      (g.renderingStartTime = 0),
      (g.last = c),
      (g.tail = r),
      (g.tailMode = f));
}
function U1(e, n, r) {
  var c = n.pendingProps,
    f = c.revealOrder,
    g = c.tail;
  if ((yt(e, n, c.children, r), (c = _e.current), c & 2))
    (c = (c & 1) | 2), (n.flags |= 128);
  else {
    if (e !== null && e.flags & 128)
      e: for (e = n.child; e !== null; ) {
        if (e.tag === 13) e.memoizedState !== null && xu(e, r, n);
        else if (e.tag === 19) xu(e, r, n);
        else if (e.child !== null) {
          (e.child.return = e), (e = e.child);
          continue;
        }
        if (e === n) break e;
        for (; e.sibling === null; ) {
          if (e.return === null || e.return === n) break e;
          e = e.return;
        }
        (e.sibling.return = e.return), (e = e.sibling);
      }
    c &= 1;
  }
  if ((Oe(_e, c), !(n.mode & 1))) n.memoizedState = null;
  else
    switch (f) {
      case 'forwards':
        for (r = n.child, f = null; r !== null; )
          (e = r.alternate),
            e !== null && Ps(e) === null && (f = r),
            (r = r.sibling);
        (r = f),
          r === null
            ? ((f = n.child), (n.child = null))
            : ((f = r.sibling), (r.sibling = null)),
          Zo(n, !1, f, r, g);
        break;
      case 'backwards':
        for (r = null, f = n.child, n.child = null; f !== null; ) {
          if (((e = f.alternate), e !== null && Ps(e) === null)) {
            n.child = f;
            break;
          }
          (e = f.sibling), (f.sibling = r), (r = f), (f = e);
        }
        Zo(n, !0, r, null, g);
        break;
      case 'together':
        Zo(n, !1, null, null, void 0);
        break;
      default:
        n.memoizedState = null;
    }
  return n.child;
}
function ls(e, n) {
  !(n.mode & 1) &&
    e !== null &&
    ((e.alternate = null), (n.alternate = null), (n.flags |= 2));
}
function Di(e, n, r) {
  if (
    (e !== null && (n.dependencies = e.dependencies),
    (Cr |= n.lanes),
    !(r & n.childLanes))
  )
    return null;
  if (e !== null && n.child !== e.child) throw Error(oe(153));
  if (n.child !== null) {
    for (
      e = n.child, r = Qi(e, e.pendingProps), n.child = r, r.return = n;
      e.sibling !== null;

    )
      (e = e.sibling), (r = r.sibling = Qi(e, e.pendingProps)), (r.return = n);
    r.sibling = null;
  }
  return n.child;
}
function u0(e, n, r) {
  switch (n.tag) {
    case 3:
      W1(n), an();
      break;
    case 5:
      y1(n);
      break;
    case 1:
      Mt(n.type) && As(n);
      break;
    case 4:
      Yc(n, n.stateNode.containerInfo);
      break;
    case 10:
      var c = n.type._context,
        f = n.memoizedProps.value;
      Oe(Es, c._currentValue), (c._currentValue = f);
      break;
    case 13:
      if (((c = n.memoizedState), c !== null))
        return c.dehydrated !== null
          ? (Oe(_e, _e.current & 1), (n.flags |= 128), null)
          : r & n.child.childLanes
          ? G1(e, n, r)
          : (Oe(_e, _e.current & 1),
            (e = Di(e, n, r)),
            e !== null ? e.sibling : null);
      Oe(_e, _e.current & 1);
      break;
    case 19:
      if (((c = (r & n.childLanes) !== 0), e.flags & 128)) {
        if (c) return U1(e, n, r);
        n.flags |= 128;
      }
      if (
        ((f = n.memoizedState),
        f !== null &&
          ((f.rendering = null), (f.tail = null), (f.lastEffect = null)),
        Oe(_e, _e.current),
        c)
      )
        break;
      return null;
    case 22:
    case 23:
      return (n.lanes = 0), _1(e, n, r);
  }
  return Di(e, n, r);
}
var Z1, Wl, $1, q1;
Z1 = function (e, n) {
  for (var r = n.child; r !== null; ) {
    if (r.tag === 5 || r.tag === 6) e.appendChild(r.stateNode);
    else if (r.tag !== 4 && r.child !== null) {
      (r.child.return = r), (r = r.child);
      continue;
    }
    if (r === n) break;
    for (; r.sibling === null; ) {
      if (r.return === null || r.return === n) return;
      r = r.return;
    }
    (r.sibling.return = r.return), (r = r.sibling);
  }
};
Wl = function () {};
$1 = function (e, n, r, c) {
  var f = e.memoizedProps;
  if (f !== c) {
    (e = n.stateNode), gr(bi.current);
    var g = null;
    switch (r) {
      case 'input':
        (f = fl(e, f)), (c = fl(e, c)), (g = []);
        break;
      case 'select':
        (f = We({}, f, { value: void 0 })),
          (c = We({}, c, { value: void 0 })),
          (g = []);
        break;
      case 'textarea':
        (f = ml(e, f)), (c = ml(e, c)), (g = []);
        break;
      default:
        typeof f.onClick != 'function' &&
          typeof c.onClick == 'function' &&
          (e.onclick = ks);
    }
    vl(r, c);
    var w;
    r = null;
    for (D in f)
      if (!c.hasOwnProperty(D) && f.hasOwnProperty(D) && f[D] != null)
        if (D === 'style') {
          var k = f[D];
          for (w in k) k.hasOwnProperty(w) && (r || (r = {}), (r[w] = ''));
        } else
          D !== 'dangerouslySetInnerHTML' &&
            D !== 'children' &&
            D !== 'suppressContentEditableWarning' &&
            D !== 'suppressHydrationWarning' &&
            D !== 'autoFocus' &&
            ($n.hasOwnProperty(D)
              ? g || (g = [])
              : (g = g || []).push(D, null));
    for (D in c) {
      var M = c[D];
      if (
        ((k = f != null ? f[D] : void 0),
        c.hasOwnProperty(D) && M !== k && (M != null || k != null))
      )
        if (D === 'style')
          if (k) {
            for (w in k)
              !k.hasOwnProperty(w) ||
                (M && M.hasOwnProperty(w)) ||
                (r || (r = {}), (r[w] = ''));
            for (w in M)
              M.hasOwnProperty(w) &&
                k[w] !== M[w] &&
                (r || (r = {}), (r[w] = M[w]));
          } else r || (g || (g = []), g.push(D, r)), (r = M);
        else
          D === 'dangerouslySetInnerHTML'
            ? ((M = M ? M.__html : void 0),
              (k = k ? k.__html : void 0),
              M != null && k !== M && (g = g || []).push(D, M))
            : D === 'children'
            ? (typeof M != 'string' && typeof M != 'number') ||
              (g = g || []).push(D, '' + M)
            : D !== 'suppressContentEditableWarning' &&
              D !== 'suppressHydrationWarning' &&
              ($n.hasOwnProperty(D)
                ? (M != null && D === 'onScroll' && ze('scroll', e),
                  g || k === M || (g = []))
                : (g = g || []).push(D, M));
    }
    r && (g = g || []).push('style', r);
    var D = g;
    (n.updateQueue = D) && (n.flags |= 4);
  }
};
q1 = function (e, n, r, c) {
  r !== c && (n.flags |= 4);
};
function Mn(e, n) {
  if (!Xe)
    switch (e.tailMode) {
      case 'hidden':
        n = e.tail;
        for (var r = null; n !== null; )
          n.alternate !== null && (r = n), (n = n.sibling);
        r === null ? (e.tail = null) : (r.sibling = null);
        break;
      case 'collapsed':
        r = e.tail;
        for (var c = null; r !== null; )
          r.alternate !== null && (c = r), (r = r.sibling);
        c === null
          ? n || e.tail === null
            ? (e.tail = null)
            : (e.tail.sibling = null)
          : (c.sibling = null);
    }
}
function ft(e) {
  var n = e.alternate !== null && e.alternate.child === e.child,
    r = 0,
    c = 0;
  if (n)
    for (var f = e.child; f !== null; )
      (r |= f.lanes | f.childLanes),
        (c |= f.subtreeFlags & 14680064),
        (c |= f.flags & 14680064),
        (f.return = e),
        (f = f.sibling);
  else
    for (f = e.child; f !== null; )
      (r |= f.lanes | f.childLanes),
        (c |= f.subtreeFlags),
        (c |= f.flags),
        (f.return = e),
        (f = f.sibling);
  return (e.subtreeFlags |= c), (e.childLanes = r), n;
}
function h0(e, n, r) {
  var c = n.pendingProps;
  switch ((Ic(n), n.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return ft(n), null;
    case 1:
      return Mt(n.type) && Ss(), ft(n), null;
    case 3:
      return (
        (c = n.stateNode),
        on(),
        He(jt),
        He(mt),
        _c(),
        c.pendingContext &&
          ((c.context = c.pendingContext), (c.pendingContext = null)),
        (e === null || e.child === null) &&
          (Ga(n)
            ? (n.flags |= 4)
            : e === null ||
              (e.memoizedState.isDehydrated && !(n.flags & 256)) ||
              ((n.flags |= 1024), si !== null && (Jl(si), (si = null)))),
        Wl(e, n),
        ft(n),
        null
      );
    case 5:
      Xc(n);
      var f = gr(oa.current);
      if (((r = n.type), e !== null && n.stateNode != null))
        $1(e, n, r, c, f),
          e.ref !== n.ref && ((n.flags |= 512), (n.flags |= 2097152));
      else {
        if (!c) {
          if (n.stateNode === null) throw Error(oe(166));
          return ft(n), null;
        }
        if (((e = gr(bi.current)), Ga(n))) {
          (c = n.stateNode), (r = n.type);
          var g = n.memoizedProps;
          switch (((c[xi] = n), (c[aa] = g), (e = (n.mode & 1) !== 0), r)) {
            case 'dialog':
              ze('cancel', c), ze('close', c);
              break;
            case 'iframe':
            case 'object':
            case 'embed':
              ze('load', c);
              break;
            case 'video':
            case 'audio':
              for (f = 0; f < zn.length; f++) ze(zn[f], c);
              break;
            case 'source':
              ze('error', c);
              break;
            case 'img':
            case 'image':
            case 'link':
              ze('error', c), ze('load', c);
              break;
            case 'details':
              ze('toggle', c);
              break;
            case 'input':
              Ld(c, g), ze('invalid', c);
              break;
            case 'select':
              (c._wrapperState = { wasMultiple: !!g.multiple }),
                ze('invalid', c);
              break;
            case 'textarea':
              Ed(c, g), ze('invalid', c);
          }
          vl(r, g), (f = null);
          for (var w in g)
            if (g.hasOwnProperty(w)) {
              var k = g[w];
              w === 'children'
                ? typeof k == 'string'
                  ? c.textContent !== k &&
                    (g.suppressHydrationWarning !== !0 &&
                      Wa(c.textContent, k, e),
                    (f = ['children', k]))
                  : typeof k == 'number' &&
                    c.textContent !== '' + k &&
                    (g.suppressHydrationWarning !== !0 &&
                      Wa(c.textContent, k, e),
                    (f = ['children', '' + k]))
                : $n.hasOwnProperty(w) &&
                  k != null &&
                  w === 'onScroll' &&
                  ze('scroll', c);
            }
          switch (r) {
            case 'input':
              Fa(c), Nd(c, g, !0);
              break;
            case 'textarea':
              Fa(c), jd(c);
              break;
            case 'select':
            case 'option':
              break;
            default:
              typeof g.onClick == 'function' && (c.onclick = ks);
          }
          (c = f), (n.updateQueue = c), c !== null && (n.flags |= 4);
        } else {
          (w = f.nodeType === 9 ? f : f.ownerDocument),
            e === 'http://www.w3.org/1999/xhtml' && (e = kh(r)),
            e === 'http://www.w3.org/1999/xhtml'
              ? r === 'script'
                ? ((e = w.createElement('div')),
                  (e.innerHTML = '<script></script>'),
                  (e = e.removeChild(e.firstChild)))
                : typeof c.is == 'string'
                ? (e = w.createElement(r, { is: c.is }))
                : ((e = w.createElement(r)),
                  r === 'select' &&
                    ((w = e),
                    c.multiple
                      ? (w.multiple = !0)
                      : c.size && (w.size = c.size)))
              : (e = w.createElementNS(e, r)),
            (e[xi] = n),
            (e[aa] = c),
            Z1(e, n, !1, !1),
            (n.stateNode = e);
          e: {
            switch (((w = bl(r, c)), r)) {
              case 'dialog':
                ze('cancel', e), ze('close', e), (f = c);
                break;
              case 'iframe':
              case 'object':
              case 'embed':
                ze('load', e), (f = c);
                break;
              case 'video':
              case 'audio':
                for (f = 0; f < zn.length; f++) ze(zn[f], e);
                f = c;
                break;
              case 'source':
                ze('error', e), (f = c);
                break;
              case 'img':
              case 'image':
              case 'link':
                ze('error', e), ze('load', e), (f = c);
                break;
              case 'details':
                ze('toggle', e), (f = c);
                break;
              case 'input':
                Ld(e, c), (f = fl(e, c)), ze('invalid', e);
                break;
              case 'option':
                f = c;
                break;
              case 'select':
                (e._wrapperState = { wasMultiple: !!c.multiple }),
                  (f = We({}, c, { value: void 0 })),
                  ze('invalid', e);
                break;
              case 'textarea':
                Ed(e, c), (f = ml(e, c)), ze('invalid', e);
                break;
              default:
                f = c;
            }
            vl(r, f), (k = f);
            for (g in k)
              if (k.hasOwnProperty(g)) {
                var M = k[g];
                g === 'style'
                  ? Lh(e, M)
                  : g === 'dangerouslySetInnerHTML'
                  ? ((M = M ? M.__html : void 0), M != null && Sh(e, M))
                  : g === 'children'
                  ? typeof M == 'string'
                    ? (r !== 'textarea' || M !== '') && qn(e, M)
                    : typeof M == 'number' && qn(e, '' + M)
                  : g !== 'suppressContentEditableWarning' &&
                    g !== 'suppressHydrationWarning' &&
                    g !== 'autoFocus' &&
                    ($n.hasOwnProperty(g)
                      ? M != null && g === 'onScroll' && ze('scroll', e)
                      : M != null && bc(e, g, M, w));
              }
            switch (r) {
              case 'input':
                Fa(e), Nd(e, c, !1);
                break;
              case 'textarea':
                Fa(e), jd(e);
                break;
              case 'option':
                c.value != null && e.setAttribute('value', '' + er(c.value));
                break;
              case 'select':
                (e.multiple = !!c.multiple),
                  (g = c.value),
                  g != null
                    ? Zr(e, !!c.multiple, g, !1)
                    : c.defaultValue != null &&
                      Zr(e, !!c.multiple, c.defaultValue, !0);
                break;
              default:
                typeof f.onClick == 'function' && (e.onclick = ks);
            }
            switch (r) {
              case 'button':
              case 'input':
              case 'select':
              case 'textarea':
                c = !!c.autoFocus;
                break e;
              case 'img':
                c = !0;
                break e;
              default:
                c = !1;
            }
          }
          c && (n.flags |= 4);
        }
        n.ref !== null && ((n.flags |= 512), (n.flags |= 2097152));
      }
      return ft(n), null;
    case 6:
      if (e && n.stateNode != null) q1(e, n, e.memoizedProps, c);
      else {
        if (typeof c != 'string' && n.stateNode === null) throw Error(oe(166));
        if (((r = gr(oa.current)), gr(bi.current), Ga(n))) {
          if (
            ((c = n.stateNode),
            (r = n.memoizedProps),
            (c[xi] = n),
            (g = c.nodeValue !== r) && ((e = zt), e !== null))
          )
            switch (e.tag) {
              case 3:
                Wa(c.nodeValue, r, (e.mode & 1) !== 0);
                break;
              case 5:
                e.memoizedProps.suppressHydrationWarning !== !0 &&
                  Wa(c.nodeValue, r, (e.mode & 1) !== 0);
            }
          g && (n.flags |= 4);
        } else
          (c = (r.nodeType === 9 ? r : r.ownerDocument).createTextNode(c)),
            (c[xi] = n),
            (n.stateNode = c);
      }
      return ft(n), null;
    case 13:
      if (
        (He(_e),
        (c = n.memoizedState),
        e === null ||
          (e.memoizedState !== null && e.memoizedState.dehydrated !== null))
      ) {
        if (Xe && Ft !== null && n.mode & 1 && !(n.flags & 128))
          f1(), an(), (n.flags |= 98560), (g = !1);
        else if (((g = Ga(n)), c !== null && c.dehydrated !== null)) {
          if (e === null) {
            if (!g) throw Error(oe(318));
            if (
              ((g = n.memoizedState),
              (g = g !== null ? g.dehydrated : null),
              !g)
            )
              throw Error(oe(317));
            g[xi] = n;
          } else
            an(), !(n.flags & 128) && (n.memoizedState = null), (n.flags |= 4);
          ft(n), (g = !1);
        } else si !== null && (Jl(si), (si = null)), (g = !0);
        if (!g) return n.flags & 65536 ? n : null;
      }
      return n.flags & 128
        ? ((n.lanes = r), n)
        : ((c = c !== null),
          c !== (e !== null && e.memoizedState !== null) &&
            c &&
            ((n.child.flags |= 8192),
            n.mode & 1 &&
              (e === null || _e.current & 1 ? it === 0 && (it = 3) : td())),
          n.updateQueue !== null && (n.flags |= 4),
          ft(n),
          null);
    case 4:
      return (
        on(), Wl(e, n), e === null && ra(n.stateNode.containerInfo), ft(n), null
      );
    case 10:
      return zc(n.type._context), ft(n), null;
    case 17:
      return Mt(n.type) && Ss(), ft(n), null;
    case 19:
      if ((He(_e), (g = n.memoizedState), g === null)) return ft(n), null;
      if (((c = (n.flags & 128) !== 0), (w = g.rendering), w === null))
        if (c) Mn(g, !1);
        else {
          if (it !== 0 || (e !== null && e.flags & 128))
            for (e = n.child; e !== null; ) {
              if (((w = Ps(e)), w !== null)) {
                for (
                  n.flags |= 128,
                    Mn(g, !1),
                    c = w.updateQueue,
                    c !== null && ((n.updateQueue = c), (n.flags |= 4)),
                    n.subtreeFlags = 0,
                    c = r,
                    r = n.child;
                  r !== null;

                )
                  (g = r),
                    (e = c),
                    (g.flags &= 14680066),
                    (w = g.alternate),
                    w === null
                      ? ((g.childLanes = 0),
                        (g.lanes = e),
                        (g.child = null),
                        (g.subtreeFlags = 0),
                        (g.memoizedProps = null),
                        (g.memoizedState = null),
                        (g.updateQueue = null),
                        (g.dependencies = null),
                        (g.stateNode = null))
                      : ((g.childLanes = w.childLanes),
                        (g.lanes = w.lanes),
                        (g.child = w.child),
                        (g.subtreeFlags = 0),
                        (g.deletions = null),
                        (g.memoizedProps = w.memoizedProps),
                        (g.memoizedState = w.memoizedState),
                        (g.updateQueue = w.updateQueue),
                        (g.type = w.type),
                        (e = w.dependencies),
                        (g.dependencies =
                          e === null
                            ? null
                            : {
                                lanes: e.lanes,
                                firstContext: e.firstContext,
                              })),
                    (r = r.sibling);
                return Oe(_e, (_e.current & 1) | 2), n.child;
              }
              e = e.sibling;
            }
          g.tail !== null &&
            qe() > cn &&
            ((n.flags |= 128), (c = !0), Mn(g, !1), (n.lanes = 4194304));
        }
      else {
        if (!c)
          if (((e = Ps(w)), e !== null)) {
            if (
              ((n.flags |= 128),
              (c = !0),
              (r = e.updateQueue),
              r !== null && ((n.updateQueue = r), (n.flags |= 4)),
              Mn(g, !0),
              g.tail === null && g.tailMode === 'hidden' && !w.alternate && !Xe)
            )
              return ft(n), null;
          } else
            2 * qe() - g.renderingStartTime > cn &&
              r !== 1073741824 &&
              ((n.flags |= 128), (c = !0), Mn(g, !1), (n.lanes = 4194304));
        g.isBackwards
          ? ((w.sibling = n.child), (n.child = w))
          : ((r = g.last),
            r !== null ? (r.sibling = w) : (n.child = w),
            (g.last = w));
      }
      return g.tail !== null
        ? ((n = g.tail),
          (g.rendering = n),
          (g.tail = n.sibling),
          (g.renderingStartTime = qe()),
          (n.sibling = null),
          (r = _e.current),
          Oe(_e, c ? (r & 1) | 2 : r & 1),
          n)
        : (ft(n), null);
    case 22:
    case 23:
      return (
        ed(),
        (c = n.memoizedState !== null),
        e !== null && (e.memoizedState !== null) !== c && (n.flags |= 8192),
        c && n.mode & 1
          ? Ot & 1073741824 && (ft(n), n.subtreeFlags & 6 && (n.flags |= 8192))
          : ft(n),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(oe(156, n.tag));
}
function f0(e, n) {
  switch ((Ic(n), n.tag)) {
    case 1:
      return (
        Mt(n.type) && Ss(),
        (e = n.flags),
        e & 65536 ? ((n.flags = (e & -65537) | 128), n) : null
      );
    case 3:
      return (
        on(),
        He(jt),
        He(mt),
        _c(),
        (e = n.flags),
        e & 65536 && !(e & 128) ? ((n.flags = (e & -65537) | 128), n) : null
      );
    case 5:
      return Xc(n), null;
    case 13:
      if (
        (He(_e), (e = n.memoizedState), e !== null && e.dehydrated !== null)
      ) {
        if (n.alternate === null) throw Error(oe(340));
        an();
      }
      return (
        (e = n.flags), e & 65536 ? ((n.flags = (e & -65537) | 128), n) : null
      );
    case 19:
      return He(_e), null;
    case 4:
      return on(), null;
    case 10:
      return zc(n.type._context), null;
    case 22:
    case 23:
      return ed(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var $a = !1,
  gt = !1,
  p0 = typeof WeakSet == 'function' ? WeakSet : Set,
  pe = null;
function Gr(e, n) {
  var r = e.ref;
  if (r !== null)
    if (typeof r == 'function')
      try {
        r(null);
      } catch (c) {
        Ue(e, n, c);
      }
    else r.current = null;
}
function Gl(e, n, r) {
  try {
    r();
  } catch (c) {
    Ue(e, n, c);
  }
}
var vu = !1;
function g0(e, n) {
  if (((jl = ys), (e = e1()), Tc(e))) {
    if ('selectionStart' in e)
      var r = { start: e.selectionStart, end: e.selectionEnd };
    else
      e: {
        r = ((r = e.ownerDocument) && r.defaultView) || window;
        var c = r.getSelection && r.getSelection();
        if (c && c.rangeCount !== 0) {
          r = c.anchorNode;
          var f = c.anchorOffset,
            g = c.focusNode;
          c = c.focusOffset;
          try {
            r.nodeType, g.nodeType;
          } catch {
            r = null;
            break e;
          }
          var w = 0,
            k = -1,
            M = -1,
            D = 0,
            z = 0,
            Y = e,
            U = null;
          t: for (;;) {
            for (
              var K;
              Y !== r || (f !== 0 && Y.nodeType !== 3) || (k = w + f),
                Y !== g || (c !== 0 && Y.nodeType !== 3) || (M = w + c),
                Y.nodeType === 3 && (w += Y.nodeValue.length),
                (K = Y.firstChild) !== null;

            )
              (U = Y), (Y = K);
            for (;;) {
              if (Y === e) break t;
              if (
                (U === r && ++D === f && (k = w),
                U === g && ++z === c && (M = w),
                (K = Y.nextSibling) !== null)
              )
                break;
              (Y = U), (U = Y.parentNode);
            }
            Y = K;
          }
          r = k === -1 || M === -1 ? null : { start: k, end: M };
        } else r = null;
      }
    r = r || { start: 0, end: 0 };
  } else r = null;
  for (
    Ml = { focusedElem: e, selectionRange: r }, ys = !1, pe = n;
    pe !== null;

  )
    if (((n = pe), (e = n.child), (n.subtreeFlags & 1028) !== 0 && e !== null))
      (e.return = n), (pe = e);
    else
      for (; pe !== null; ) {
        n = pe;
        try {
          var Z = n.alternate;
          if (n.flags & 1024)
            switch (n.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (Z !== null) {
                  var V = Z.memoizedProps,
                    ee = Z.memoizedState,
                    B = n.stateNode,
                    E = B.getSnapshotBeforeUpdate(
                      n.elementType === n.type ? V : ni(n.type, V),
                      ee
                    );
                  B.__reactInternalSnapshotBeforeUpdate = E;
                }
                break;
              case 3:
                var _ = n.stateNode.containerInfo;
                _.nodeType === 1
                  ? (_.textContent = '')
                  : _.nodeType === 9 &&
                    _.documentElement &&
                    _.removeChild(_.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(oe(163));
            }
        } catch (Q) {
          Ue(n, n.return, Q);
        }
        if (((e = n.sibling), e !== null)) {
          (e.return = n.return), (pe = e);
          break;
        }
        pe = n.return;
      }
  return (Z = vu), (vu = !1), Z;
}
function Wn(e, n, r) {
  var c = n.updateQueue;
  if (((c = c !== null ? c.lastEffect : null), c !== null)) {
    var f = (c = c.next);
    do {
      if ((f.tag & e) === e) {
        var g = f.destroy;
        (f.destroy = void 0), g !== void 0 && Gl(n, r, g);
      }
      f = f.next;
    } while (f !== c);
  }
}
function to(e, n) {
  if (
    ((n = n.updateQueue), (n = n !== null ? n.lastEffect : null), n !== null)
  ) {
    var r = (n = n.next);
    do {
      if ((r.tag & e) === e) {
        var c = r.create;
        r.destroy = c();
      }
      r = r.next;
    } while (r !== n);
  }
}
function Ul(e) {
  var n = e.ref;
  if (n !== null) {
    var r = e.stateNode;
    switch (e.tag) {
      case 5:
        e = r;
        break;
      default:
        e = r;
    }
    typeof n == 'function' ? n(e) : (n.current = e);
  }
}
function K1(e) {
  var n = e.alternate;
  n !== null && ((e.alternate = null), K1(n)),
    (e.child = null),
    (e.deletions = null),
    (e.sibling = null),
    e.tag === 5 &&
      ((n = e.stateNode),
      n !== null &&
        (delete n[xi], delete n[aa], delete n[Dl], delete n[Kg], delete n[Qg])),
    (e.stateNode = null),
    (e.return = null),
    (e.dependencies = null),
    (e.memoizedProps = null),
    (e.memoizedState = null),
    (e.pendingProps = null),
    (e.stateNode = null),
    (e.updateQueue = null);
}
function Q1(e) {
  return e.tag === 5 || e.tag === 3 || e.tag === 4;
}
function bu(e) {
  e: for (;;) {
    for (; e.sibling === null; ) {
      if (e.return === null || Q1(e.return)) return null;
      e = e.return;
    }
    for (
      e.sibling.return = e.return, e = e.sibling;
      e.tag !== 5 && e.tag !== 6 && e.tag !== 18;

    ) {
      if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
      (e.child.return = e), (e = e.child);
    }
    if (!(e.flags & 2)) return e.stateNode;
  }
}
function Zl(e, n, r) {
  var c = e.tag;
  if (c === 5 || c === 6)
    (e = e.stateNode),
      n
        ? r.nodeType === 8
          ? r.parentNode.insertBefore(e, n)
          : r.insertBefore(e, n)
        : (r.nodeType === 8
            ? ((n = r.parentNode), n.insertBefore(e, r))
            : ((n = r), n.appendChild(e)),
          (r = r._reactRootContainer),
          r != null || n.onclick !== null || (n.onclick = ks));
  else if (c !== 4 && ((e = e.child), e !== null))
    for (Zl(e, n, r), e = e.sibling; e !== null; ) Zl(e, n, r), (e = e.sibling);
}
function $l(e, n, r) {
  var c = e.tag;
  if (c === 5 || c === 6)
    (e = e.stateNode), n ? r.insertBefore(e, n) : r.appendChild(e);
  else if (c !== 4 && ((e = e.child), e !== null))
    for ($l(e, n, r), e = e.sibling; e !== null; ) $l(e, n, r), (e = e.sibling);
}
var st = null,
  ai = !1;
function Oi(e, n, r) {
  for (r = r.child; r !== null; ) J1(e, n, r), (r = r.sibling);
}
function J1(e, n, r) {
  if (vi && typeof vi.onCommitFiberUnmount == 'function')
    try {
      vi.onCommitFiberUnmount(Us, r);
    } catch {}
  switch (r.tag) {
    case 5:
      gt || Gr(r, n);
    case 6:
      var c = st,
        f = ai;
      (st = null),
        Oi(e, n, r),
        (st = c),
        (ai = f),
        st !== null &&
          (ai
            ? ((e = st),
              (r = r.stateNode),
              e.nodeType === 8 ? e.parentNode.removeChild(r) : e.removeChild(r))
            : st.removeChild(r.stateNode));
      break;
    case 18:
      st !== null &&
        (ai
          ? ((e = st),
            (r = r.stateNode),
            e.nodeType === 8
              ? Yo(e.parentNode, r)
              : e.nodeType === 1 && Yo(e, r),
            ea(e))
          : Yo(st, r.stateNode));
      break;
    case 4:
      (c = st),
        (f = ai),
        (st = r.stateNode.containerInfo),
        (ai = !0),
        Oi(e, n, r),
        (st = c),
        (ai = f);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !gt &&
        ((c = r.updateQueue), c !== null && ((c = c.lastEffect), c !== null))
      ) {
        f = c = c.next;
        do {
          var g = f,
            w = g.destroy;
          (g = g.tag),
            w !== void 0 && (g & 2 || g & 4) && Gl(r, n, w),
            (f = f.next);
        } while (f !== c);
      }
      Oi(e, n, r);
      break;
    case 1:
      if (
        !gt &&
        (Gr(r, n),
        (c = r.stateNode),
        typeof c.componentWillUnmount == 'function')
      )
        try {
          (c.props = r.memoizedProps),
            (c.state = r.memoizedState),
            c.componentWillUnmount();
        } catch (k) {
          Ue(r, n, k);
        }
      Oi(e, n, r);
      break;
    case 21:
      Oi(e, n, r);
      break;
    case 22:
      r.mode & 1
        ? ((gt = (c = gt) || r.memoizedState !== null), Oi(e, n, r), (gt = c))
        : Oi(e, n, r);
      break;
    default:
      Oi(e, n, r);
  }
}
function yu(e) {
  var n = e.updateQueue;
  if (n !== null) {
    e.updateQueue = null;
    var r = e.stateNode;
    r === null && (r = e.stateNode = new p0()),
      n.forEach(function (c) {
        var f = S0.bind(null, e, c);
        r.has(c) || (r.add(c), c.then(f, f));
      });
  }
}
function ri(e, n) {
  var r = n.deletions;
  if (r !== null)
    for (var c = 0; c < r.length; c++) {
      var f = r[c];
      try {
        var g = e,
          w = n,
          k = w;
        e: for (; k !== null; ) {
          switch (k.tag) {
            case 5:
              (st = k.stateNode), (ai = !1);
              break e;
            case 3:
              (st = k.stateNode.containerInfo), (ai = !0);
              break e;
            case 4:
              (st = k.stateNode.containerInfo), (ai = !0);
              break e;
          }
          k = k.return;
        }
        if (st === null) throw Error(oe(160));
        J1(g, w, f), (st = null), (ai = !1);
        var M = f.alternate;
        M !== null && (M.return = null), (f.return = null);
      } catch (D) {
        Ue(f, n, D);
      }
    }
  if (n.subtreeFlags & 12854)
    for (n = n.child; n !== null; ) ef(n, e), (n = n.sibling);
}
function ef(e, n) {
  var r = e.alternate,
    c = e.flags;
  switch (e.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((ri(n, e), gi(e), c & 4)) {
        try {
          Wn(3, e, e.return), to(3, e);
        } catch (V) {
          Ue(e, e.return, V);
        }
        try {
          Wn(5, e, e.return);
        } catch (V) {
          Ue(e, e.return, V);
        }
      }
      break;
    case 1:
      ri(n, e), gi(e), c & 512 && r !== null && Gr(r, r.return);
      break;
    case 5:
      if (
        (ri(n, e),
        gi(e),
        c & 512 && r !== null && Gr(r, r.return),
        e.flags & 32)
      ) {
        var f = e.stateNode;
        try {
          qn(f, '');
        } catch (V) {
          Ue(e, e.return, V);
        }
      }
      if (c & 4 && ((f = e.stateNode), f != null)) {
        var g = e.memoizedProps,
          w = r !== null ? r.memoizedProps : g,
          k = e.type,
          M = e.updateQueue;
        if (((e.updateQueue = null), M !== null))
          try {
            k === 'input' && g.type === 'radio' && g.name != null && wh(f, g),
              bl(k, w);
            var D = bl(k, g);
            for (w = 0; w < M.length; w += 2) {
              var z = M[w],
                Y = M[w + 1];
              z === 'style'
                ? Lh(f, Y)
                : z === 'dangerouslySetInnerHTML'
                ? Sh(f, Y)
                : z === 'children'
                ? qn(f, Y)
                : bc(f, z, Y, D);
            }
            switch (k) {
              case 'input':
                pl(f, g);
                break;
              case 'textarea':
                Ch(f, g);
                break;
              case 'select':
                var U = f._wrapperState.wasMultiple;
                f._wrapperState.wasMultiple = !!g.multiple;
                var K = g.value;
                K != null
                  ? Zr(f, !!g.multiple, K, !1)
                  : U !== !!g.multiple &&
                    (g.defaultValue != null
                      ? Zr(f, !!g.multiple, g.defaultValue, !0)
                      : Zr(f, !!g.multiple, g.multiple ? [] : '', !1));
            }
            f[aa] = g;
          } catch (V) {
            Ue(e, e.return, V);
          }
      }
      break;
    case 6:
      if ((ri(n, e), gi(e), c & 4)) {
        if (e.stateNode === null) throw Error(oe(162));
        (f = e.stateNode), (g = e.memoizedProps);
        try {
          f.nodeValue = g;
        } catch (V) {
          Ue(e, e.return, V);
        }
      }
      break;
    case 3:
      if (
        (ri(n, e), gi(e), c & 4 && r !== null && r.memoizedState.isDehydrated)
      )
        try {
          ea(n.containerInfo);
        } catch (V) {
          Ue(e, e.return, V);
        }
      break;
    case 4:
      ri(n, e), gi(e);
      break;
    case 13:
      ri(n, e),
        gi(e),
        (f = e.child),
        f.flags & 8192 &&
          ((g = f.memoizedState !== null),
          (f.stateNode.isHidden = g),
          !g ||
            (f.alternate !== null && f.alternate.memoizedState !== null) ||
            (Qc = qe())),
        c & 4 && yu(e);
      break;
    case 22:
      if (
        ((z = r !== null && r.memoizedState !== null),
        e.mode & 1 ? ((gt = (D = gt) || z), ri(n, e), (gt = D)) : ri(n, e),
        gi(e),
        c & 8192)
      ) {
        if (
          ((D = e.memoizedState !== null),
          (e.stateNode.isHidden = D) && !z && e.mode & 1)
        )
          for (pe = e, z = e.child; z !== null; ) {
            for (Y = pe = z; pe !== null; ) {
              switch (((U = pe), (K = U.child), U.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Wn(4, U, U.return);
                  break;
                case 1:
                  Gr(U, U.return);
                  var Z = U.stateNode;
                  if (typeof Z.componentWillUnmount == 'function') {
                    (c = U), (r = U.return);
                    try {
                      (n = c),
                        (Z.props = n.memoizedProps),
                        (Z.state = n.memoizedState),
                        Z.componentWillUnmount();
                    } catch (V) {
                      Ue(c, r, V);
                    }
                  }
                  break;
                case 5:
                  Gr(U, U.return);
                  break;
                case 22:
                  if (U.memoizedState !== null) {
                    Cu(Y);
                    continue;
                  }
              }
              K !== null ? ((K.return = U), (pe = K)) : Cu(Y);
            }
            z = z.sibling;
          }
        e: for (z = null, Y = e; ; ) {
          if (Y.tag === 5) {
            if (z === null) {
              z = Y;
              try {
                (f = Y.stateNode),
                  D
                    ? ((g = f.style),
                      typeof g.setProperty == 'function'
                        ? g.setProperty('display', 'none', 'important')
                        : (g.display = 'none'))
                    : ((k = Y.stateNode),
                      (M = Y.memoizedProps.style),
                      (w =
                        M != null && M.hasOwnProperty('display')
                          ? M.display
                          : null),
                      (k.style.display = Ah('display', w)));
              } catch (V) {
                Ue(e, e.return, V);
              }
            }
          } else if (Y.tag === 6) {
            if (z === null)
              try {
                Y.stateNode.nodeValue = D ? '' : Y.memoizedProps;
              } catch (V) {
                Ue(e, e.return, V);
              }
          } else if (
            ((Y.tag !== 22 && Y.tag !== 23) ||
              Y.memoizedState === null ||
              Y === e) &&
            Y.child !== null
          ) {
            (Y.child.return = Y), (Y = Y.child);
            continue;
          }
          if (Y === e) break e;
          for (; Y.sibling === null; ) {
            if (Y.return === null || Y.return === e) break e;
            z === Y && (z = null), (Y = Y.return);
          }
          z === Y && (z = null), (Y.sibling.return = Y.return), (Y = Y.sibling);
        }
      }
      break;
    case 19:
      ri(n, e), gi(e), c & 4 && yu(e);
      break;
    case 21:
      break;
    default:
      ri(n, e), gi(e);
  }
}
function gi(e) {
  var n = e.flags;
  if (n & 2) {
    try {
      e: {
        for (var r = e.return; r !== null; ) {
          if (Q1(r)) {
            var c = r;
            break e;
          }
          r = r.return;
        }
        throw Error(oe(160));
      }
      switch (c.tag) {
        case 5:
          var f = c.stateNode;
          c.flags & 32 && (qn(f, ''), (c.flags &= -33));
          var g = bu(e);
          $l(e, g, f);
          break;
        case 3:
        case 4:
          var w = c.stateNode.containerInfo,
            k = bu(e);
          Zl(e, k, w);
          break;
        default:
          throw Error(oe(161));
      }
    } catch (M) {
      Ue(e, e.return, M);
    }
    e.flags &= -3;
  }
  n & 4096 && (e.flags &= -4097);
}
function m0(e, n, r) {
  (pe = e), tf(e);
}
function tf(e, n, r) {
  for (var c = (e.mode & 1) !== 0; pe !== null; ) {
    var f = pe,
      g = f.child;
    if (f.tag === 22 && c) {
      var w = f.memoizedState !== null || $a;
      if (!w) {
        var k = f.alternate,
          M = (k !== null && k.memoizedState !== null) || gt;
        k = $a;
        var D = gt;
        if ((($a = w), (gt = M) && !D))
          for (pe = f; pe !== null; )
            (w = pe),
              (M = w.child),
              w.tag === 22 && w.memoizedState !== null
                ? ku(f)
                : M !== null
                ? ((M.return = w), (pe = M))
                : ku(f);
        for (; g !== null; ) (pe = g), tf(g), (g = g.sibling);
        (pe = f), ($a = k), (gt = D);
      }
      wu(e);
    } else
      f.subtreeFlags & 8772 && g !== null ? ((g.return = f), (pe = g)) : wu(e);
  }
}
function wu(e) {
  for (; pe !== null; ) {
    var n = pe;
    if (n.flags & 8772) {
      var r = n.alternate;
      try {
        if (n.flags & 8772)
          switch (n.tag) {
            case 0:
            case 11:
            case 15:
              gt || to(5, n);
              break;
            case 1:
              var c = n.stateNode;
              if (n.flags & 4 && !gt)
                if (r === null) c.componentDidMount();
                else {
                  var f =
                    n.elementType === n.type
                      ? r.memoizedProps
                      : ni(n.type, r.memoizedProps);
                  c.componentDidUpdate(
                    f,
                    r.memoizedState,
                    c.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var g = n.updateQueue;
              g !== null && nu(n, g, c);
              break;
            case 3:
              var w = n.updateQueue;
              if (w !== null) {
                if (((r = null), n.child !== null))
                  switch (n.child.tag) {
                    case 5:
                      r = n.child.stateNode;
                      break;
                    case 1:
                      r = n.child.stateNode;
                  }
                nu(n, w, r);
              }
              break;
            case 5:
              var k = n.stateNode;
              if (r === null && n.flags & 4) {
                r = k;
                var M = n.memoizedProps;
                switch (n.type) {
                  case 'button':
                  case 'input':
                  case 'select':
                  case 'textarea':
                    M.autoFocus && r.focus();
                    break;
                  case 'img':
                    M.src && (r.src = M.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (n.memoizedState === null) {
                var D = n.alternate;
                if (D !== null) {
                  var z = D.memoizedState;
                  if (z !== null) {
                    var Y = z.dehydrated;
                    Y !== null && ea(Y);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(oe(163));
          }
        gt || (n.flags & 512 && Ul(n));
      } catch (U) {
        Ue(n, n.return, U);
      }
    }
    if (n === e) {
      pe = null;
      break;
    }
    if (((r = n.sibling), r !== null)) {
      (r.return = n.return), (pe = r);
      break;
    }
    pe = n.return;
  }
}
function Cu(e) {
  for (; pe !== null; ) {
    var n = pe;
    if (n === e) {
      pe = null;
      break;
    }
    var r = n.sibling;
    if (r !== null) {
      (r.return = n.return), (pe = r);
      break;
    }
    pe = n.return;
  }
}
function ku(e) {
  for (; pe !== null; ) {
    var n = pe;
    try {
      switch (n.tag) {
        case 0:
        case 11:
        case 15:
          var r = n.return;
          try {
            to(4, n);
          } catch (M) {
            Ue(n, r, M);
          }
          break;
        case 1:
          var c = n.stateNode;
          if (typeof c.componentDidMount == 'function') {
            var f = n.return;
            try {
              c.componentDidMount();
            } catch (M) {
              Ue(n, f, M);
            }
          }
          var g = n.return;
          try {
            Ul(n);
          } catch (M) {
            Ue(n, g, M);
          }
          break;
        case 5:
          var w = n.return;
          try {
            Ul(n);
          } catch (M) {
            Ue(n, w, M);
          }
      }
    } catch (M) {
      Ue(n, n.return, M);
    }
    if (n === e) {
      pe = null;
      break;
    }
    var k = n.sibling;
    if (k !== null) {
      (k.return = n.return), (pe = k);
      break;
    }
    pe = n.return;
  }
}
var x0 = Math.ceil,
  Is = Ii.ReactCurrentDispatcher,
  qc = Ii.ReactCurrentOwner,
  Jt = Ii.ReactCurrentBatchConfig,
  Ee = 0,
  at = null,
  Ke = null,
  ot = 0,
  Ot = 0,
  Ur = rr(0),
  it = 0,
  ua = null,
  Cr = 0,
  io = 0,
  Kc = 0,
  Gn = null,
  Nt = null,
  Qc = 0,
  cn = 1 / 0,
  Ai = null,
  Rs = !1,
  ql = null,
  qi = null,
  qa = !1,
  _i = null,
  Os = 0,
  Un = 0,
  Kl = null,
  cs = -1,
  ds = 0;
function wt() {
  return Ee & 6 ? qe() : cs !== -1 ? cs : (cs = qe());
}
function Ki(e) {
  return e.mode & 1
    ? Ee & 2 && ot !== 0
      ? ot & -ot
      : e0.transition !== null
      ? (ds === 0 && (ds = zh()), ds)
      : ((e = Ie),
        e !== 0 || ((e = window.event), (e = e === void 0 ? 16 : Wh(e.type))),
        e)
    : 1;
}
function li(e, n, r, c) {
  if (50 < Un) throw ((Un = 0), (Kl = null), Error(oe(185)));
  xa(e, r, c),
    (!(Ee & 2) || e !== at) &&
      (e === at && (!(Ee & 2) && (io |= r), it === 4 && Yi(e, ot)),
      Pt(e, c),
      r === 1 && Ee === 0 && !(n.mode & 1) && ((cn = qe() + 500), Qs && nr()));
}
function Pt(e, n) {
  var r = e.callbackNode;
  eg(e, n);
  var c = bs(e, e === at ? ot : 0);
  if (c === 0)
    r !== null && Td(r), (e.callbackNode = null), (e.callbackPriority = 0);
  else if (((n = c & -c), e.callbackPriority !== n)) {
    if ((r != null && Td(r), n === 1))
      e.tag === 0 ? Jg(Su.bind(null, e)) : d1(Su.bind(null, e)),
        $g(function () {
          !(Ee & 6) && nr();
        }),
        (r = null);
    else {
      switch (Hh(c)) {
        case 1:
          r = Sc;
          break;
        case 4:
          r = Oh;
          break;
        case 16:
          r = vs;
          break;
        case 536870912:
          r = Fh;
          break;
        default:
          r = vs;
      }
      r = df(r, rf.bind(null, e));
    }
    (e.callbackPriority = n), (e.callbackNode = r);
  }
}
function rf(e, n) {
  if (((cs = -1), (ds = 0), Ee & 6)) throw Error(oe(327));
  var r = e.callbackNode;
  if (Jr() && e.callbackNode !== r) return null;
  var c = bs(e, e === at ? ot : 0);
  if (c === 0) return null;
  if (c & 30 || c & e.expiredLanes || n) n = Fs(e, c);
  else {
    n = c;
    var f = Ee;
    Ee |= 2;
    var g = af();
    (at !== e || ot !== n) && ((Ai = null), (cn = qe() + 500), xr(e, n));
    do
      try {
        y0();
        break;
      } catch (k) {
        nf(e, k);
      }
    while (1);
    Fc(),
      (Is.current = g),
      (Ee = f),
      Ke !== null ? (n = 0) : ((at = null), (ot = 0), (n = it));
  }
  if (n !== 0) {
    if (
      (n === 2 && ((f = Sl(e)), f !== 0 && ((c = f), (n = Ql(e, f)))), n === 1)
    )
      throw ((r = ua), xr(e, 0), Yi(e, c), Pt(e, qe()), r);
    if (n === 6) Yi(e, c);
    else {
      if (
        ((f = e.current.alternate),
        !(c & 30) &&
          !v0(f) &&
          ((n = Fs(e, c)),
          n === 2 && ((g = Sl(e)), g !== 0 && ((c = g), (n = Ql(e, g)))),
          n === 1))
      )
        throw ((r = ua), xr(e, 0), Yi(e, c), Pt(e, qe()), r);
      switch (((e.finishedWork = f), (e.finishedLanes = c), n)) {
        case 0:
        case 1:
          throw Error(oe(345));
        case 2:
          ur(e, Nt, Ai);
          break;
        case 3:
          if (
            (Yi(e, c), (c & 130023424) === c && ((n = Qc + 500 - qe()), 10 < n))
          ) {
            if (bs(e, 0) !== 0) break;
            if (((f = e.suspendedLanes), (f & c) !== c)) {
              wt(), (e.pingedLanes |= e.suspendedLanes & f);
              break;
            }
            e.timeoutHandle = Tl(ur.bind(null, e, Nt, Ai), n);
            break;
          }
          ur(e, Nt, Ai);
          break;
        case 4:
          if ((Yi(e, c), (c & 4194240) === c)) break;
          for (n = e.eventTimes, f = -1; 0 < c; ) {
            var w = 31 - oi(c);
            (g = 1 << w), (w = n[w]), w > f && (f = w), (c &= ~g);
          }
          if (
            ((c = f),
            (c = qe() - c),
            (c =
              (120 > c
                ? 120
                : 480 > c
                ? 480
                : 1080 > c
                ? 1080
                : 1920 > c
                ? 1920
                : 3e3 > c
                ? 3e3
                : 4320 > c
                ? 4320
                : 1960 * x0(c / 1960)) - c),
            10 < c)
          ) {
            e.timeoutHandle = Tl(ur.bind(null, e, Nt, Ai), c);
            break;
          }
          ur(e, Nt, Ai);
          break;
        case 5:
          ur(e, Nt, Ai);
          break;
        default:
          throw Error(oe(329));
      }
    }
  }
  return Pt(e, qe()), e.callbackNode === r ? rf.bind(null, e) : null;
}
function Ql(e, n) {
  var r = Gn;
  return (
    e.current.memoizedState.isDehydrated && (xr(e, n).flags |= 256),
    (e = Fs(e, n)),
    e !== 2 && ((n = Nt), (Nt = r), n !== null && Jl(n)),
    e
  );
}
function Jl(e) {
  Nt === null ? (Nt = e) : Nt.push.apply(Nt, e);
}
function v0(e) {
  for (var n = e; ; ) {
    if (n.flags & 16384) {
      var r = n.updateQueue;
      if (r !== null && ((r = r.stores), r !== null))
        for (var c = 0; c < r.length; c++) {
          var f = r[c],
            g = f.getSnapshot;
          f = f.value;
          try {
            if (!di(g(), f)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((r = n.child), n.subtreeFlags & 16384 && r !== null))
      (r.return = n), (n = r);
    else {
      if (n === e) break;
      for (; n.sibling === null; ) {
        if (n.return === null || n.return === e) return !0;
        n = n.return;
      }
      (n.sibling.return = n.return), (n = n.sibling);
    }
  }
  return !0;
}
function Yi(e, n) {
  for (
    n &= ~Kc,
      n &= ~io,
      e.suspendedLanes |= n,
      e.pingedLanes &= ~n,
      e = e.expirationTimes;
    0 < n;

  ) {
    var r = 31 - oi(n),
      c = 1 << r;
    (e[r] = -1), (n &= ~c);
  }
}
function Su(e) {
  if (Ee & 6) throw Error(oe(327));
  Jr();
  var n = bs(e, 0);
  if (!(n & 1)) return Pt(e, qe()), null;
  var r = Fs(e, n);
  if (e.tag !== 0 && r === 2) {
    var c = Sl(e);
    c !== 0 && ((n = c), (r = Ql(e, c)));
  }
  if (r === 1) throw ((r = ua), xr(e, 0), Yi(e, n), Pt(e, qe()), r);
  if (r === 6) throw Error(oe(345));
  return (
    (e.finishedWork = e.current.alternate),
    (e.finishedLanes = n),
    ur(e, Nt, Ai),
    Pt(e, qe()),
    null
  );
}
function Jc(e, n) {
  var r = Ee;
  Ee |= 1;
  try {
    return e(n);
  } finally {
    (Ee = r), Ee === 0 && ((cn = qe() + 500), Qs && nr());
  }
}
function kr(e) {
  _i !== null && _i.tag === 0 && !(Ee & 6) && Jr();
  var n = Ee;
  Ee |= 1;
  var r = Jt.transition,
    c = Ie;
  try {
    if (((Jt.transition = null), (Ie = 1), e)) return e();
  } finally {
    (Ie = c), (Jt.transition = r), (Ee = n), !(Ee & 6) && nr();
  }
}
function ed() {
  (Ot = Ur.current), He(Ur);
}
function xr(e, n) {
  (e.finishedWork = null), (e.finishedLanes = 0);
  var r = e.timeoutHandle;
  if ((r !== -1 && ((e.timeoutHandle = -1), Zg(r)), Ke !== null))
    for (r = Ke.return; r !== null; ) {
      var c = r;
      switch ((Ic(c), c.tag)) {
        case 1:
          (c = c.type.childContextTypes), c != null && Ss();
          break;
        case 3:
          on(), He(jt), He(mt), _c();
          break;
        case 5:
          Xc(c);
          break;
        case 4:
          on();
          break;
        case 13:
          He(_e);
          break;
        case 19:
          He(_e);
          break;
        case 10:
          zc(c.type._context);
          break;
        case 22:
        case 23:
          ed();
      }
      r = r.return;
    }
  if (
    ((at = e),
    (Ke = e = Qi(e.current, null)),
    (ot = Ot = n),
    (it = 0),
    (ua = null),
    (Kc = io = Cr = 0),
    (Nt = Gn = null),
    pr !== null)
  ) {
    for (n = 0; n < pr.length; n++)
      if (((r = pr[n]), (c = r.interleaved), c !== null)) {
        r.interleaved = null;
        var f = c.next,
          g = r.pending;
        if (g !== null) {
          var w = g.next;
          (g.next = f), (c.next = w);
        }
        r.pending = c;
      }
    pr = null;
  }
  return e;
}
function nf(e, n) {
  do {
    var r = Ke;
    try {
      if ((Fc(), (ss.current = Ds), Ts)) {
        for (var c = Ve.memoizedState; c !== null; ) {
          var f = c.queue;
          f !== null && (f.pending = null), (c = c.next);
        }
        Ts = !1;
      }
      if (
        ((wr = 0),
        (nt = tt = Ve = null),
        (Vn = !1),
        (la = 0),
        (qc.current = null),
        r === null || r.return === null)
      ) {
        (it = 1), (ua = n), (Ke = null);
        break;
      }
      e: {
        var g = e,
          w = r.return,
          k = r,
          M = n;
        if (
          ((n = ot),
          (k.flags |= 32768),
          M !== null && typeof M == 'object' && typeof M.then == 'function')
        ) {
          var D = M,
            z = k,
            Y = z.tag;
          if (!(z.mode & 1) && (Y === 0 || Y === 11 || Y === 15)) {
            var U = z.alternate;
            U
              ? ((z.updateQueue = U.updateQueue),
                (z.memoizedState = U.memoizedState),
                (z.lanes = U.lanes))
              : ((z.updateQueue = null), (z.memoizedState = null));
          }
          var K = uu(w);
          if (K !== null) {
            (K.flags &= -257),
              hu(K, w, k, g, n),
              K.mode & 1 && du(g, D, n),
              (n = K),
              (M = D);
            var Z = n.updateQueue;
            if (Z === null) {
              var V = new Set();
              V.add(M), (n.updateQueue = V);
            } else Z.add(M);
            break e;
          } else {
            if (!(n & 1)) {
              du(g, D, n), td();
              break e;
            }
            M = Error(oe(426));
          }
        } else if (Xe && k.mode & 1) {
          var ee = uu(w);
          if (ee !== null) {
            !(ee.flags & 65536) && (ee.flags |= 256),
              hu(ee, w, k, g, n),
              Rc(ln(M, k));
            break e;
          }
        }
        (g = M = ln(M, k)),
          it !== 4 && (it = 2),
          Gn === null ? (Gn = [g]) : Gn.push(g),
          (g = w);
        do {
          switch (g.tag) {
            case 3:
              (g.flags |= 65536), (n &= -n), (g.lanes |= n);
              var B = B1(g, M, n);
              ru(g, B);
              break e;
            case 1:
              k = M;
              var E = g.type,
                _ = g.stateNode;
              if (
                !(g.flags & 128) &&
                (typeof E.getDerivedStateFromError == 'function' ||
                  (_ !== null &&
                    typeof _.componentDidCatch == 'function' &&
                    (qi === null || !qi.has(_))))
              ) {
                (g.flags |= 65536), (n &= -n), (g.lanes |= n);
                var Q = Y1(g, k, n);
                ru(g, Q);
                break e;
              }
          }
          g = g.return;
        } while (g !== null);
      }
      of(r);
    } catch (W) {
      (n = W), Ke === r && r !== null && (Ke = r = r.return);
      continue;
    }
    break;
  } while (1);
}
function af() {
  var e = Is.current;
  return (Is.current = Ds), e === null ? Ds : e;
}
function td() {
  (it === 0 || it === 3 || it === 2) && (it = 4),
    at === null || (!(Cr & 268435455) && !(io & 268435455)) || Yi(at, ot);
}
function Fs(e, n) {
  var r = Ee;
  Ee |= 2;
  var c = af();
  (at !== e || ot !== n) && ((Ai = null), xr(e, n));
  do
    try {
      b0();
      break;
    } catch (f) {
      nf(e, f);
    }
  while (1);
  if ((Fc(), (Ee = r), (Is.current = c), Ke !== null)) throw Error(oe(261));
  return (at = null), (ot = 0), it;
}
function b0() {
  for (; Ke !== null; ) sf(Ke);
}
function y0() {
  for (; Ke !== null && !Wp(); ) sf(Ke);
}
function sf(e) {
  var n = cf(e.alternate, e, Ot);
  (e.memoizedProps = e.pendingProps),
    n === null ? of(e) : (Ke = n),
    (qc.current = null);
}
function of(e) {
  var n = e;
  do {
    var r = n.alternate;
    if (((e = n.return), n.flags & 32768)) {
      if (((r = f0(r, n)), r !== null)) {
        (r.flags &= 32767), (Ke = r);
        return;
      }
      if (e !== null)
        (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
      else {
        (it = 6), (Ke = null);
        return;
      }
    } else if (((r = h0(r, n, Ot)), r !== null)) {
      Ke = r;
      return;
    }
    if (((n = n.sibling), n !== null)) {
      Ke = n;
      return;
    }
    Ke = n = e;
  } while (n !== null);
  it === 0 && (it = 5);
}
function ur(e, n, r) {
  var c = Ie,
    f = Jt.transition;
  try {
    (Jt.transition = null), (Ie = 1), w0(e, n, r, c);
  } finally {
    (Jt.transition = f), (Ie = c);
  }
  return null;
}
function w0(e, n, r, c) {
  do Jr();
  while (_i !== null);
  if (Ee & 6) throw Error(oe(327));
  r = e.finishedWork;
  var f = e.finishedLanes;
  if (r === null) return null;
  if (((e.finishedWork = null), (e.finishedLanes = 0), r === e.current))
    throw Error(oe(177));
  (e.callbackNode = null), (e.callbackPriority = 0);
  var g = r.lanes | r.childLanes;
  if (
    (tg(e, g),
    e === at && ((Ke = at = null), (ot = 0)),
    (!(r.subtreeFlags & 2064) && !(r.flags & 2064)) ||
      qa ||
      ((qa = !0),
      df(vs, function () {
        return Jr(), null;
      })),
    (g = (r.flags & 15990) !== 0),
    r.subtreeFlags & 15990 || g)
  ) {
    (g = Jt.transition), (Jt.transition = null);
    var w = Ie;
    Ie = 1;
    var k = Ee;
    (Ee |= 4),
      (qc.current = null),
      g0(e, r),
      ef(r, e),
      Yg(Ml),
      (ys = !!jl),
      (Ml = jl = null),
      (e.current = r),
      m0(r),
      Gp(),
      (Ee = k),
      (Ie = w),
      (Jt.transition = g);
  } else e.current = r;
  if (
    (qa && ((qa = !1), (_i = e), (Os = f)),
    (g = e.pendingLanes),
    g === 0 && (qi = null),
    $p(r.stateNode),
    Pt(e, qe()),
    n !== null)
  )
    for (c = e.onRecoverableError, r = 0; r < n.length; r++)
      (f = n[r]), c(f.value, { componentStack: f.stack, digest: f.digest });
  if (Rs) throw ((Rs = !1), (e = ql), (ql = null), e);
  return (
    Os & 1 && e.tag !== 0 && Jr(),
    (g = e.pendingLanes),
    g & 1 ? (e === Kl ? Un++ : ((Un = 0), (Kl = e))) : (Un = 0),
    nr(),
    null
  );
}
function Jr() {
  if (_i !== null) {
    var e = Hh(Os),
      n = Jt.transition,
      r = Ie;
    try {
      if (((Jt.transition = null), (Ie = 16 > e ? 16 : e), _i === null))
        var c = !1;
      else {
        if (((e = _i), (_i = null), (Os = 0), Ee & 6)) throw Error(oe(331));
        var f = Ee;
        for (Ee |= 4, pe = e.current; pe !== null; ) {
          var g = pe,
            w = g.child;
          if (pe.flags & 16) {
            var k = g.deletions;
            if (k !== null) {
              for (var M = 0; M < k.length; M++) {
                var D = k[M];
                for (pe = D; pe !== null; ) {
                  var z = pe;
                  switch (z.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Wn(8, z, g);
                  }
                  var Y = z.child;
                  if (Y !== null) (Y.return = z), (pe = Y);
                  else
                    for (; pe !== null; ) {
                      z = pe;
                      var U = z.sibling,
                        K = z.return;
                      if ((K1(z), z === D)) {
                        pe = null;
                        break;
                      }
                      if (U !== null) {
                        (U.return = K), (pe = U);
                        break;
                      }
                      pe = K;
                    }
                }
              }
              var Z = g.alternate;
              if (Z !== null) {
                var V = Z.child;
                if (V !== null) {
                  Z.child = null;
                  do {
                    var ee = V.sibling;
                    (V.sibling = null), (V = ee);
                  } while (V !== null);
                }
              }
              pe = g;
            }
          }
          if (g.subtreeFlags & 2064 && w !== null) (w.return = g), (pe = w);
          else
            e: for (; pe !== null; ) {
              if (((g = pe), g.flags & 2048))
                switch (g.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Wn(9, g, g.return);
                }
              var B = g.sibling;
              if (B !== null) {
                (B.return = g.return), (pe = B);
                break e;
              }
              pe = g.return;
            }
        }
        var E = e.current;
        for (pe = E; pe !== null; ) {
          w = pe;
          var _ = w.child;
          if (w.subtreeFlags & 2064 && _ !== null) (_.return = w), (pe = _);
          else
            e: for (w = E; pe !== null; ) {
              if (((k = pe), k.flags & 2048))
                try {
                  switch (k.tag) {
                    case 0:
                    case 11:
                    case 15:
                      to(9, k);
                  }
                } catch (W) {
                  Ue(k, k.return, W);
                }
              if (k === w) {
                pe = null;
                break e;
              }
              var Q = k.sibling;
              if (Q !== null) {
                (Q.return = k.return), (pe = Q);
                break e;
              }
              pe = k.return;
            }
        }
        if (
          ((Ee = f), nr(), vi && typeof vi.onPostCommitFiberRoot == 'function')
        )
          try {
            vi.onPostCommitFiberRoot(Us, e);
          } catch {}
        c = !0;
      }
      return c;
    } finally {
      (Ie = r), (Jt.transition = n);
    }
  }
  return !1;
}
function Au(e, n, r) {
  (n = ln(r, n)),
    (n = B1(e, n, 1)),
    (e = $i(e, n, 1)),
    (n = wt()),
    e !== null && (xa(e, 1, n), Pt(e, n));
}
function Ue(e, n, r) {
  if (e.tag === 3) Au(e, e, r);
  else
    for (; n !== null; ) {
      if (n.tag === 3) {
        Au(n, e, r);
        break;
      } else if (n.tag === 1) {
        var c = n.stateNode;
        if (
          typeof n.type.getDerivedStateFromError == 'function' ||
          (typeof c.componentDidCatch == 'function' &&
            (qi === null || !qi.has(c)))
        ) {
          (e = ln(r, e)),
            (e = Y1(n, e, 1)),
            (n = $i(n, e, 1)),
            (e = wt()),
            n !== null && (xa(n, 1, e), Pt(n, e));
          break;
        }
      }
      n = n.return;
    }
}
function C0(e, n, r) {
  var c = e.pingCache;
  c !== null && c.delete(n),
    (n = wt()),
    (e.pingedLanes |= e.suspendedLanes & r),
    at === e &&
      (ot & r) === r &&
      (it === 4 || (it === 3 && (ot & 130023424) === ot && 500 > qe() - Qc)
        ? xr(e, 0)
        : (Kc |= r)),
    Pt(e, n);
}
function lf(e, n) {
  n === 0 &&
    (e.mode & 1
      ? ((n = Ba), (Ba <<= 1), !(Ba & 130023424) && (Ba = 4194304))
      : (n = 1));
  var r = wt();
  (e = Ti(e, n)), e !== null && (xa(e, n, r), Pt(e, r));
}
function k0(e) {
  var n = e.memoizedState,
    r = 0;
  n !== null && (r = n.retryLane), lf(e, r);
}
function S0(e, n) {
  var r = 0;
  switch (e.tag) {
    case 13:
      var c = e.stateNode,
        f = e.memoizedState;
      f !== null && (r = f.retryLane);
      break;
    case 19:
      c = e.stateNode;
      break;
    default:
      throw Error(oe(314));
  }
  c !== null && c.delete(n), lf(e, r);
}
var cf;
cf = function (e, n, r) {
  if (e !== null)
    if (e.memoizedProps !== n.pendingProps || jt.current) Et = !0;
    else {
      if (!(e.lanes & r) && !(n.flags & 128)) return (Et = !1), u0(e, n, r);
      Et = !!(e.flags & 131072);
    }
  else (Et = !1), Xe && n.flags & 1048576 && u1(n, Ns, n.index);
  switch (((n.lanes = 0), n.tag)) {
    case 2:
      var c = n.type;
      ls(e, n), (e = n.pendingProps);
      var f = nn(n, mt.current);
      Qr(n, r), (f = Wc(null, n, c, e, f, r));
      var g = Gc();
      return (
        (n.flags |= 1),
        typeof f == 'object' &&
        f !== null &&
        typeof f.render == 'function' &&
        f.$$typeof === void 0
          ? ((n.tag = 1),
            (n.memoizedState = null),
            (n.updateQueue = null),
            Mt(c) ? ((g = !0), As(n)) : (g = !1),
            (n.memoizedState =
              f.state !== null && f.state !== void 0 ? f.state : null),
            Bc(n),
            (f.updater = Js),
            (n.stateNode = f),
            (f._reactInternals = n),
            Hl(n, c, e, r),
            (n = Xl(null, n, c, !0, g, r)))
          : ((n.tag = 0), Xe && g && Dc(n), yt(null, n, f, r), (n = n.child)),
        n
      );
    case 16:
      c = n.elementType;
      e: {
        switch (
          (ls(e, n),
          (e = n.pendingProps),
          (f = c._init),
          (c = f(c._payload)),
          (n.type = c),
          (f = n.tag = L0(c)),
          (e = ni(c, e)),
          f)
        ) {
          case 0:
            n = Yl(null, n, c, e, r);
            break e;
          case 1:
            n = gu(null, n, c, e, r);
            break e;
          case 11:
            n = fu(null, n, c, e, r);
            break e;
          case 14:
            n = pu(null, n, c, ni(c.type, e), r);
            break e;
        }
        throw Error(oe(306, c, ''));
      }
      return n;
    case 0:
      return (
        (c = n.type),
        (f = n.pendingProps),
        (f = n.elementType === c ? f : ni(c, f)),
        Yl(e, n, c, f, r)
      );
    case 1:
      return (
        (c = n.type),
        (f = n.pendingProps),
        (f = n.elementType === c ? f : ni(c, f)),
        gu(e, n, c, f, r)
      );
    case 3:
      e: {
        if ((W1(n), e === null)) throw Error(oe(387));
        (c = n.pendingProps),
          (g = n.memoizedState),
          (f = g.element),
          g1(e, n),
          Ms(n, c, null, r);
        var w = n.memoizedState;
        if (((c = w.element), g.isDehydrated))
          if (
            ((g = {
              element: c,
              isDehydrated: !1,
              cache: w.cache,
              pendingSuspenseBoundaries: w.pendingSuspenseBoundaries,
              transitions: w.transitions,
            }),
            (n.updateQueue.baseState = g),
            (n.memoizedState = g),
            n.flags & 256)
          ) {
            (f = ln(Error(oe(423)), n)), (n = mu(e, n, c, r, f));
            break e;
          } else if (c !== f) {
            (f = ln(Error(oe(424)), n)), (n = mu(e, n, c, r, f));
            break e;
          } else
            for (
              Ft = Zi(n.stateNode.containerInfo.firstChild),
                zt = n,
                Xe = !0,
                si = null,
                r = b1(n, null, c, r),
                n.child = r;
              r;

            )
              (r.flags = (r.flags & -3) | 4096), (r = r.sibling);
        else {
          if ((an(), c === f)) {
            n = Di(e, n, r);
            break e;
          }
          yt(e, n, c, r);
        }
        n = n.child;
      }
      return n;
    case 5:
      return (
        y1(n),
        e === null && Ol(n),
        (c = n.type),
        (f = n.pendingProps),
        (g = e !== null ? e.memoizedProps : null),
        (w = f.children),
        Pl(c, f) ? (w = null) : g !== null && Pl(c, g) && (n.flags |= 32),
        V1(e, n),
        yt(e, n, w, r),
        n.child
      );
    case 6:
      return e === null && Ol(n), null;
    case 13:
      return G1(e, n, r);
    case 4:
      return (
        Yc(n, n.stateNode.containerInfo),
        (c = n.pendingProps),
        e === null ? (n.child = sn(n, null, c, r)) : yt(e, n, c, r),
        n.child
      );
    case 11:
      return (
        (c = n.type),
        (f = n.pendingProps),
        (f = n.elementType === c ? f : ni(c, f)),
        fu(e, n, c, f, r)
      );
    case 7:
      return yt(e, n, n.pendingProps, r), n.child;
    case 8:
      return yt(e, n, n.pendingProps.children, r), n.child;
    case 12:
      return yt(e, n, n.pendingProps.children, r), n.child;
    case 10:
      e: {
        if (
          ((c = n.type._context),
          (f = n.pendingProps),
          (g = n.memoizedProps),
          (w = f.value),
          Oe(Es, c._currentValue),
          (c._currentValue = w),
          g !== null)
        )
          if (di(g.value, w)) {
            if (g.children === f.children && !jt.current) {
              n = Di(e, n, r);
              break e;
            }
          } else
            for (g = n.child, g !== null && (g.return = n); g !== null; ) {
              var k = g.dependencies;
              if (k !== null) {
                w = g.child;
                for (var M = k.firstContext; M !== null; ) {
                  if (M.context === c) {
                    if (g.tag === 1) {
                      (M = ji(-1, r & -r)), (M.tag = 2);
                      var D = g.updateQueue;
                      if (D !== null) {
                        D = D.shared;
                        var z = D.pending;
                        z === null
                          ? (M.next = M)
                          : ((M.next = z.next), (z.next = M)),
                          (D.pending = M);
                      }
                    }
                    (g.lanes |= r),
                      (M = g.alternate),
                      M !== null && (M.lanes |= r),
                      Fl(g.return, r, n),
                      (k.lanes |= r);
                    break;
                  }
                  M = M.next;
                }
              } else if (g.tag === 10) w = g.type === n.type ? null : g.child;
              else if (g.tag === 18) {
                if (((w = g.return), w === null)) throw Error(oe(341));
                (w.lanes |= r),
                  (k = w.alternate),
                  k !== null && (k.lanes |= r),
                  Fl(w, r, n),
                  (w = g.sibling);
              } else w = g.child;
              if (w !== null) w.return = g;
              else
                for (w = g; w !== null; ) {
                  if (w === n) {
                    w = null;
                    break;
                  }
                  if (((g = w.sibling), g !== null)) {
                    (g.return = w.return), (w = g);
                    break;
                  }
                  w = w.return;
                }
              g = w;
            }
        yt(e, n, f.children, r), (n = n.child);
      }
      return n;
    case 9:
      return (
        (f = n.type),
        (c = n.pendingProps.children),
        Qr(n, r),
        (f = ei(f)),
        (c = c(f)),
        (n.flags |= 1),
        yt(e, n, c, r),
        n.child
      );
    case 14:
      return (
        (c = n.type),
        (f = ni(c, n.pendingProps)),
        (f = ni(c.type, f)),
        pu(e, n, c, f, r)
      );
    case 15:
      return X1(e, n, n.type, n.pendingProps, r);
    case 17:
      return (
        (c = n.type),
        (f = n.pendingProps),
        (f = n.elementType === c ? f : ni(c, f)),
        ls(e, n),
        (n.tag = 1),
        Mt(c) ? ((e = !0), As(n)) : (e = !1),
        Qr(n, r),
        x1(n, c, f),
        Hl(n, c, f, r),
        Xl(null, n, c, !0, e, r)
      );
    case 19:
      return U1(e, n, r);
    case 22:
      return _1(e, n, r);
  }
  throw Error(oe(156, n.tag));
};
function df(e, n) {
  return Rh(e, n);
}
function A0(e, n, r, c) {
  (this.tag = e),
    (this.key = r),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = n),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = c),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function Qt(e, n, r, c) {
  return new A0(e, n, r, c);
}
function id(e) {
  return (e = e.prototype), !(!e || !e.isReactComponent);
}
function L0(e) {
  if (typeof e == 'function') return id(e) ? 1 : 0;
  if (e != null) {
    if (((e = e.$$typeof), e === wc)) return 11;
    if (e === Cc) return 14;
  }
  return 2;
}
function Qi(e, n) {
  var r = e.alternate;
  return (
    r === null
      ? ((r = Qt(e.tag, n, e.key, e.mode)),
        (r.elementType = e.elementType),
        (r.type = e.type),
        (r.stateNode = e.stateNode),
        (r.alternate = e),
        (e.alternate = r))
      : ((r.pendingProps = n),
        (r.type = e.type),
        (r.flags = 0),
        (r.subtreeFlags = 0),
        (r.deletions = null)),
    (r.flags = e.flags & 14680064),
    (r.childLanes = e.childLanes),
    (r.lanes = e.lanes),
    (r.child = e.child),
    (r.memoizedProps = e.memoizedProps),
    (r.memoizedState = e.memoizedState),
    (r.updateQueue = e.updateQueue),
    (n = e.dependencies),
    (r.dependencies =
      n === null ? null : { lanes: n.lanes, firstContext: n.firstContext }),
    (r.sibling = e.sibling),
    (r.index = e.index),
    (r.ref = e.ref),
    r
  );
}
function us(e, n, r, c, f, g) {
  var w = 2;
  if (((c = e), typeof e == 'function')) id(e) && (w = 1);
  else if (typeof e == 'string') w = 5;
  else
    e: switch (e) {
      case Fr:
        return vr(r.children, f, g, n);
      case yc:
        (w = 8), (f |= 8);
        break;
      case cl:
        return (
          (e = Qt(12, r, n, f | 2)), (e.elementType = cl), (e.lanes = g), e
        );
      case dl:
        return (e = Qt(13, r, n, f)), (e.elementType = dl), (e.lanes = g), e;
      case ul:
        return (e = Qt(19, r, n, f)), (e.elementType = ul), (e.lanes = g), e;
      case vh:
        return ro(r, f, g, n);
      default:
        if (typeof e == 'object' && e !== null)
          switch (e.$$typeof) {
            case mh:
              w = 10;
              break e;
            case xh:
              w = 9;
              break e;
            case wc:
              w = 11;
              break e;
            case Cc:
              w = 14;
              break e;
            case zi:
              (w = 16), (c = null);
              break e;
          }
        throw Error(oe(130, e == null ? e : typeof e, ''));
    }
  return (
    (n = Qt(w, r, n, f)), (n.elementType = e), (n.type = c), (n.lanes = g), n
  );
}
function vr(e, n, r, c) {
  return (e = Qt(7, e, c, n)), (e.lanes = r), e;
}
function ro(e, n, r, c) {
  return (
    (e = Qt(22, e, c, n)),
    (e.elementType = vh),
    (e.lanes = r),
    (e.stateNode = { isHidden: !1 }),
    e
  );
}
function $o(e, n, r) {
  return (e = Qt(6, e, null, n)), (e.lanes = r), e;
}
function qo(e, n, r) {
  return (
    (n = Qt(4, e.children !== null ? e.children : [], e.key, n)),
    (n.lanes = r),
    (n.stateNode = {
      containerInfo: e.containerInfo,
      pendingChildren: null,
      implementation: e.implementation,
    }),
    n
  );
}
function N0(e, n, r, c, f) {
  (this.tag = n),
    (this.containerInfo = e),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = Mo(0)),
    (this.expirationTimes = Mo(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = Mo(0)),
    (this.identifierPrefix = c),
    (this.onRecoverableError = f),
    (this.mutableSourceEagerHydrationData = null);
}
function rd(e, n, r, c, f, g, w, k, M) {
  return (
    (e = new N0(e, n, r, k, M)),
    n === 1 ? ((n = 1), g === !0 && (n |= 8)) : (n = 0),
    (g = Qt(3, null, null, n)),
    (e.current = g),
    (g.stateNode = e),
    (g.memoizedState = {
      element: c,
      isDehydrated: r,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    Bc(g),
    e
  );
}
function E0(e, n, r) {
  var c = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: Or,
    key: c == null ? null : '' + c,
    children: e,
    containerInfo: n,
    implementation: r,
  };
}
function uf(e) {
  if (!e) return tr;
  e = e._reactInternals;
  e: {
    if (Lr(e) !== e || e.tag !== 1) throw Error(oe(170));
    var n = e;
    do {
      switch (n.tag) {
        case 3:
          n = n.stateNode.context;
          break e;
        case 1:
          if (Mt(n.type)) {
            n = n.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      n = n.return;
    } while (n !== null);
    throw Error(oe(171));
  }
  if (e.tag === 1) {
    var r = e.type;
    if (Mt(r)) return c1(e, r, n);
  }
  return n;
}
function hf(e, n, r, c, f, g, w, k, M) {
  return (
    (e = rd(r, c, !0, e, f, g, w, k, M)),
    (e.context = uf(null)),
    (r = e.current),
    (c = wt()),
    (f = Ki(r)),
    (g = ji(c, f)),
    (g.callback = n ?? null),
    $i(r, g, f),
    (e.current.lanes = f),
    xa(e, f, c),
    Pt(e, c),
    e
  );
}
function no(e, n, r, c) {
  var f = n.current,
    g = wt(),
    w = Ki(f);
  return (
    (r = uf(r)),
    n.context === null ? (n.context = r) : (n.pendingContext = r),
    (n = ji(g, w)),
    (n.payload = { element: e }),
    (c = c === void 0 ? null : c),
    c !== null && (n.callback = c),
    (e = $i(f, n, w)),
    e !== null && (li(e, f, w, g), as(e, f, w)),
    w
  );
}
function zs(e) {
  if (((e = e.current), !e.child)) return null;
  switch (e.child.tag) {
    case 5:
      return e.child.stateNode;
    default:
      return e.child.stateNode;
  }
}
function Lu(e, n) {
  if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
    var r = e.retryLane;
    e.retryLane = r !== 0 && r < n ? r : n;
  }
}
function nd(e, n) {
  Lu(e, n), (e = e.alternate) && Lu(e, n);
}
function j0() {
  return null;
}
var ff =
  typeof reportError == 'function'
    ? reportError
    : function (e) {
        console.error(e);
      };
function ad(e) {
  this._internalRoot = e;
}
ao.prototype.render = ad.prototype.render = function (e) {
  var n = this._internalRoot;
  if (n === null) throw Error(oe(409));
  no(e, n, null, null);
};
ao.prototype.unmount = ad.prototype.unmount = function () {
  var e = this._internalRoot;
  if (e !== null) {
    this._internalRoot = null;
    var n = e.containerInfo;
    kr(function () {
      no(null, e, null, null);
    }),
      (n[Pi] = null);
  }
};
function ao(e) {
  this._internalRoot = e;
}
ao.prototype.unstable_scheduleHydration = function (e) {
  if (e) {
    var n = Xh();
    e = { blockedOn: null, target: e, priority: n };
    for (var r = 0; r < Bi.length && n !== 0 && n < Bi[r].priority; r++);
    Bi.splice(r, 0, e), r === 0 && Vh(e);
  }
};
function sd(e) {
  return !(!e || (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11));
}
function so(e) {
  return !(
    !e ||
    (e.nodeType !== 1 &&
      e.nodeType !== 9 &&
      e.nodeType !== 11 &&
      (e.nodeType !== 8 || e.nodeValue !== ' react-mount-point-unstable '))
  );
}
function Nu() {}
function M0(e, n, r, c, f) {
  if (f) {
    if (typeof c == 'function') {
      var g = c;
      c = function () {
        var D = zs(w);
        g.call(D);
      };
    }
    var w = hf(n, c, e, 0, null, !1, !1, '', Nu);
    return (
      (e._reactRootContainer = w),
      (e[Pi] = w.current),
      ra(e.nodeType === 8 ? e.parentNode : e),
      kr(),
      w
    );
  }
  for (; (f = e.lastChild); ) e.removeChild(f);
  if (typeof c == 'function') {
    var k = c;
    c = function () {
      var D = zs(M);
      k.call(D);
    };
  }
  var M = rd(e, 0, !1, null, null, !1, !1, '', Nu);
  return (
    (e._reactRootContainer = M),
    (e[Pi] = M.current),
    ra(e.nodeType === 8 ? e.parentNode : e),
    kr(function () {
      no(n, M, r, c);
    }),
    M
  );
}
function oo(e, n, r, c, f) {
  var g = r._reactRootContainer;
  if (g) {
    var w = g;
    if (typeof f == 'function') {
      var k = f;
      f = function () {
        var M = zs(w);
        k.call(M);
      };
    }
    no(n, w, e, f);
  } else w = M0(r, n, e, f, c);
  return zs(w);
}
Bh = function (e) {
  switch (e.tag) {
    case 3:
      var n = e.stateNode;
      if (n.current.memoizedState.isDehydrated) {
        var r = Fn(n.pendingLanes);
        r !== 0 &&
          (Ac(n, r | 1), Pt(n, qe()), !(Ee & 6) && ((cn = qe() + 500), nr()));
      }
      break;
    case 13:
      kr(function () {
        var c = Ti(e, 1);
        if (c !== null) {
          var f = wt();
          li(c, e, 1, f);
        }
      }),
        nd(e, 1);
  }
};
Lc = function (e) {
  if (e.tag === 13) {
    var n = Ti(e, 134217728);
    if (n !== null) {
      var r = wt();
      li(n, e, 134217728, r);
    }
    nd(e, 134217728);
  }
};
Yh = function (e) {
  if (e.tag === 13) {
    var n = Ki(e),
      r = Ti(e, n);
    if (r !== null) {
      var c = wt();
      li(r, e, n, c);
    }
    nd(e, n);
  }
};
Xh = function () {
  return Ie;
};
_h = function (e, n) {
  var r = Ie;
  try {
    return (Ie = e), n();
  } finally {
    Ie = r;
  }
};
wl = function (e, n, r) {
  switch (n) {
    case 'input':
      if ((pl(e, r), (n = r.name), r.type === 'radio' && n != null)) {
        for (r = e; r.parentNode; ) r = r.parentNode;
        for (
          r = r.querySelectorAll(
            'input[name=' + JSON.stringify('' + n) + '][type="radio"]'
          ),
            n = 0;
          n < r.length;
          n++
        ) {
          var c = r[n];
          if (c !== e && c.form === e.form) {
            var f = Ks(c);
            if (!f) throw Error(oe(90));
            yh(c), pl(c, f);
          }
        }
      }
      break;
    case 'textarea':
      Ch(e, r);
      break;
    case 'select':
      (n = r.value), n != null && Zr(e, !!r.multiple, n, !1);
  }
};
jh = Jc;
Mh = kr;
var P0 = { usingClientEntryPoint: !1, Events: [ba, Yr, Ks, Nh, Eh, Jc] },
  Pn = {
    findFiberByHostInstance: fr,
    bundleType: 0,
    version: '18.2.0',
    rendererPackageName: 'react-dom',
  },
  T0 = {
    bundleType: Pn.bundleType,
    version: Pn.version,
    rendererPackageName: Pn.rendererPackageName,
    rendererConfig: Pn.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: Ii.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (e) {
      return (e = Dh(e)), e === null ? null : e.stateNode;
    },
    findFiberByHostInstance: Pn.findFiberByHostInstance || j0,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: '18.2.0-next-9e3b772b8-20220608',
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < 'u') {
  var Ka = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!Ka.isDisabled && Ka.supportsFiber)
    try {
      (Us = Ka.inject(T0)), (vi = Ka);
    } catch {}
}
Yt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = P0;
Yt.createPortal = function (e, n) {
  var r = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!sd(n)) throw Error(oe(200));
  return E0(e, n, null, r);
};
Yt.createRoot = function (e, n) {
  if (!sd(e)) throw Error(oe(299));
  var r = !1,
    c = '',
    f = ff;
  return (
    n != null &&
      (n.unstable_strictMode === !0 && (r = !0),
      n.identifierPrefix !== void 0 && (c = n.identifierPrefix),
      n.onRecoverableError !== void 0 && (f = n.onRecoverableError)),
    (n = rd(e, 1, !1, null, null, r, !1, c, f)),
    (e[Pi] = n.current),
    ra(e.nodeType === 8 ? e.parentNode : e),
    new ad(n)
  );
};
Yt.findDOMNode = function (e) {
  if (e == null) return null;
  if (e.nodeType === 1) return e;
  var n = e._reactInternals;
  if (n === void 0)
    throw typeof e.render == 'function'
      ? Error(oe(188))
      : ((e = Object.keys(e).join(',')), Error(oe(268, e)));
  return (e = Dh(n)), (e = e === null ? null : e.stateNode), e;
};
Yt.flushSync = function (e) {
  return kr(e);
};
Yt.hydrate = function (e, n, r) {
  if (!so(n)) throw Error(oe(200));
  return oo(null, e, n, !0, r);
};
Yt.hydrateRoot = function (e, n, r) {
  if (!sd(e)) throw Error(oe(405));
  var c = (r != null && r.hydratedSources) || null,
    f = !1,
    g = '',
    w = ff;
  if (
    (r != null &&
      (r.unstable_strictMode === !0 && (f = !0),
      r.identifierPrefix !== void 0 && (g = r.identifierPrefix),
      r.onRecoverableError !== void 0 && (w = r.onRecoverableError)),
    (n = hf(n, null, e, 1, r ?? null, f, !1, g, w)),
    (e[Pi] = n.current),
    ra(e),
    c)
  )
    for (e = 0; e < c.length; e++)
      (r = c[e]),
        (f = r._getVersion),
        (f = f(r._source)),
        n.mutableSourceEagerHydrationData == null
          ? (n.mutableSourceEagerHydrationData = [r, f])
          : n.mutableSourceEagerHydrationData.push(r, f);
  return new ao(n);
};
Yt.render = function (e, n, r) {
  if (!so(n)) throw Error(oe(200));
  return oo(null, e, n, !1, r);
};
Yt.unmountComponentAtNode = function (e) {
  if (!so(e)) throw Error(oe(40));
  return e._reactRootContainer
    ? (kr(function () {
        oo(null, null, e, !1, function () {
          (e._reactRootContainer = null), (e[Pi] = null);
        });
      }),
      !0)
    : !1;
};
Yt.unstable_batchedUpdates = Jc;
Yt.unstable_renderSubtreeIntoContainer = function (e, n, r, c) {
  if (!so(r)) throw Error(oe(200));
  if (e == null || e._reactInternals === void 0) throw Error(oe(38));
  return oo(e, n, r, !1, c);
};
Yt.version = '18.2.0-next-9e3b772b8-20220608';
function pf() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > 'u' ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != 'function'
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(pf);
    } catch (e) {
      console.error(e);
    }
}
pf(), (uh.exports = Yt);
var D0 = uh.exports,
  Eu = D0;
(ol.createRoot = Eu.createRoot), (ol.hydrateRoot = Eu.hydrateRoot);
/**
 * @remix-run/router v1.7.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function ha() {
  return (
    (ha = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var n = 1; n < arguments.length; n++) {
            var r = arguments[n];
            for (var c in r)
              Object.prototype.hasOwnProperty.call(r, c) && (e[c] = r[c]);
          }
          return e;
        }),
    ha.apply(this, arguments)
  );
}
var Vi;
(function (e) {
  (e.Pop = 'POP'), (e.Push = 'PUSH'), (e.Replace = 'REPLACE');
})(Vi || (Vi = {}));
const ju = 'popstate';
function I0(e) {
  e === void 0 && (e = {});
  function n(c, f) {
    let { pathname: g, search: w, hash: k } = c.location;
    return ec(
      '',
      { pathname: g, search: w, hash: k },
      (f.state && f.state.usr) || null,
      (f.state && f.state.key) || 'default'
    );
  }
  function r(c, f) {
    return typeof f == 'string' ? f : Hs(f);
  }
  return O0(n, r, null, e);
}
function Qe(e, n) {
  if (e === !1 || e === null || typeof e > 'u') throw new Error(n);
}
function od(e, n) {
  if (!e) {
    typeof console < 'u' && console.warn(n);
    try {
      throw new Error(n);
    } catch {}
  }
}
function R0() {
  return Math.random().toString(36).substr(2, 8);
}
function Mu(e, n) {
  return { usr: e.state, key: e.key, idx: n };
}
function ec(e, n, r, c) {
  return (
    r === void 0 && (r = null),
    ha(
      { pathname: typeof e == 'string' ? e : e.pathname, search: '', hash: '' },
      typeof n == 'string' ? fn(n) : n,
      { state: r, key: (n && n.key) || c || R0() }
    )
  );
}
function Hs(e) {
  let { pathname: n = '/', search: r = '', hash: c = '' } = e;
  return (
    r && r !== '?' && (n += r.charAt(0) === '?' ? r : '?' + r),
    c && c !== '#' && (n += c.charAt(0) === '#' ? c : '#' + c),
    n
  );
}
function fn(e) {
  let n = {};
  if (e) {
    let r = e.indexOf('#');
    r >= 0 && ((n.hash = e.substr(r)), (e = e.substr(0, r)));
    let c = e.indexOf('?');
    c >= 0 && ((n.search = e.substr(c)), (e = e.substr(0, c))),
      e && (n.pathname = e);
  }
  return n;
}
function O0(e, n, r, c) {
  c === void 0 && (c = {});
  let { window: f = document.defaultView, v5Compat: g = !1 } = c,
    w = f.history,
    k = Vi.Pop,
    M = null,
    D = z();
  D == null && ((D = 0), w.replaceState(ha({}, w.state, { idx: D }), ''));
  function z() {
    return (w.state || { idx: null }).idx;
  }
  function Y() {
    k = Vi.Pop;
    let ee = z(),
      B = ee == null ? null : ee - D;
    (D = ee), M && M({ action: k, location: V.location, delta: B });
  }
  function U(ee, B) {
    k = Vi.Push;
    let E = ec(V.location, ee, B);
    r && r(E, ee), (D = z() + 1);
    let _ = Mu(E, D),
      Q = V.createHref(E);
    try {
      w.pushState(_, '', Q);
    } catch (W) {
      if (W instanceof DOMException && W.name === 'DataCloneError') throw W;
      f.location.assign(Q);
    }
    g && M && M({ action: k, location: V.location, delta: 1 });
  }
  function K(ee, B) {
    k = Vi.Replace;
    let E = ec(V.location, ee, B);
    r && r(E, ee), (D = z());
    let _ = Mu(E, D),
      Q = V.createHref(E);
    w.replaceState(_, '', Q),
      g && M && M({ action: k, location: V.location, delta: 0 });
  }
  function Z(ee) {
    let B = f.location.origin !== 'null' ? f.location.origin : f.location.href,
      E = typeof ee == 'string' ? ee : Hs(ee);
    return (
      Qe(
        B,
        'No window.location.(origin|href) available to create URL for href: ' +
          E
      ),
      new URL(E, B)
    );
  }
  let V = {
    get action() {
      return k;
    },
    get location() {
      return e(f, w);
    },
    listen(ee) {
      if (M) throw new Error('A history only accepts one active listener');
      return (
        f.addEventListener(ju, Y),
        (M = ee),
        () => {
          f.removeEventListener(ju, Y), (M = null);
        }
      );
    },
    createHref(ee) {
      return n(f, ee);
    },
    createURL: Z,
    encodeLocation(ee) {
      let B = Z(ee);
      return { pathname: B.pathname, search: B.search, hash: B.hash };
    },
    push: U,
    replace: K,
    go(ee) {
      return w.go(ee);
    },
  };
  return V;
}
var Pu;
(function (e) {
  (e.data = 'data'),
    (e.deferred = 'deferred'),
    (e.redirect = 'redirect'),
    (e.error = 'error');
})(Pu || (Pu = {}));
function F0(e, n, r) {
  r === void 0 && (r = '/');
  let c = typeof n == 'string' ? fn(n) : n,
    f = ld(c.pathname || '/', r);
  if (f == null) return null;
  let g = gf(e);
  z0(g);
  let w = null;
  for (let k = 0; w == null && k < g.length; ++k) w = U0(g[k], q0(f));
  return w;
}
function gf(e, n, r, c) {
  n === void 0 && (n = []), r === void 0 && (r = []), c === void 0 && (c = '');
  let f = (g, w, k) => {
    let M = {
      relativePath: k === void 0 ? g.path || '' : k,
      caseSensitive: g.caseSensitive === !0,
      childrenIndex: w,
      route: g,
    };
    M.relativePath.startsWith('/') &&
      (Qe(
        M.relativePath.startsWith(c),
        'Absolute route path "' +
          M.relativePath +
          '" nested under path ' +
          ('"' + c + '" is not valid. An absolute child route path ') +
          'must start with the combined path of all its parent routes.'
      ),
      (M.relativePath = M.relativePath.slice(c.length)));
    let D = Ji([c, M.relativePath]),
      z = r.concat(M);
    g.children &&
      g.children.length > 0 &&
      (Qe(
        g.index !== !0,
        'Index routes must not have child routes. Please remove ' +
          ('all child routes from route path "' + D + '".')
      ),
      gf(g.children, n, z, D)),
      !(g.path == null && !g.index) &&
        n.push({ path: D, score: W0(D, g.index), routesMeta: z });
  };
  return (
    e.forEach((g, w) => {
      var k;
      if (g.path === '' || !((k = g.path) != null && k.includes('?'))) f(g, w);
      else for (let M of mf(g.path)) f(g, w, M);
    }),
    n
  );
}
function mf(e) {
  let n = e.split('/');
  if (n.length === 0) return [];
  let [r, ...c] = n,
    f = r.endsWith('?'),
    g = r.replace(/\?$/, '');
  if (c.length === 0) return f ? [g, ''] : [g];
  let w = mf(c.join('/')),
    k = [];
  return (
    k.push(...w.map((M) => (M === '' ? g : [g, M].join('/')))),
    f && k.push(...w),
    k.map((M) => (e.startsWith('/') && M === '' ? '/' : M))
  );
}
function z0(e) {
  e.sort((n, r) =>
    n.score !== r.score
      ? r.score - n.score
      : G0(
          n.routesMeta.map((c) => c.childrenIndex),
          r.routesMeta.map((c) => c.childrenIndex)
        )
  );
}
const H0 = /^:\w+$/,
  B0 = 3,
  Y0 = 2,
  X0 = 1,
  _0 = 10,
  V0 = -2,
  Tu = (e) => e === '*';
function W0(e, n) {
  let r = e.split('/'),
    c = r.length;
  return (
    r.some(Tu) && (c += V0),
    n && (c += Y0),
    r
      .filter((f) => !Tu(f))
      .reduce((f, g) => f + (H0.test(g) ? B0 : g === '' ? X0 : _0), c)
  );
}
function G0(e, n) {
  return e.length === n.length && e.slice(0, -1).every((c, f) => c === n[f])
    ? e[e.length - 1] - n[n.length - 1]
    : 0;
}
function U0(e, n) {
  let { routesMeta: r } = e,
    c = {},
    f = '/',
    g = [];
  for (let w = 0; w < r.length; ++w) {
    let k = r[w],
      M = w === r.length - 1,
      D = f === '/' ? n : n.slice(f.length) || '/',
      z = Z0(
        { path: k.relativePath, caseSensitive: k.caseSensitive, end: M },
        D
      );
    if (!z) return null;
    Object.assign(c, z.params);
    let Y = k.route;
    g.push({
      params: c,
      pathname: Ji([f, z.pathname]),
      pathnameBase: em(Ji([f, z.pathnameBase])),
      route: Y,
    }),
      z.pathnameBase !== '/' && (f = Ji([f, z.pathnameBase]));
  }
  return g;
}
function Z0(e, n) {
  typeof e == 'string' && (e = { path: e, caseSensitive: !1, end: !0 });
  let [r, c] = $0(e.path, e.caseSensitive, e.end),
    f = n.match(r);
  if (!f) return null;
  let g = f[0],
    w = g.replace(/(.)\/+$/, '$1'),
    k = f.slice(1);
  return {
    params: c.reduce((D, z, Y) => {
      if (z === '*') {
        let U = k[Y] || '';
        w = g.slice(0, g.length - U.length).replace(/(.)\/+$/, '$1');
      }
      return (D[z] = K0(k[Y] || '', z)), D;
    }, {}),
    pathname: g,
    pathnameBase: w,
    pattern: e,
  };
}
function $0(e, n, r) {
  n === void 0 && (n = !1),
    r === void 0 && (r = !0),
    od(
      e === '*' || !e.endsWith('*') || e.endsWith('/*'),
      'Route path "' +
        e +
        '" will be treated as if it were ' +
        ('"' + e.replace(/\*$/, '/*') + '" because the `*` character must ') +
        'always follow a `/` in the pattern. To get rid of this warning, ' +
        ('please change the route path to "' + e.replace(/\*$/, '/*') + '".')
    );
  let c = [],
    f =
      '^' +
      e
        .replace(/\/*\*?$/, '')
        .replace(/^\/*/, '/')
        .replace(/[\\.*+^$?{}|()[\]]/g, '\\$&')
        .replace(/\/:(\w+)/g, (w, k) => (c.push(k), '/([^\\/]+)'));
  return (
    e.endsWith('*')
      ? (c.push('*'),
        (f += e === '*' || e === '/*' ? '(.*)$' : '(?:\\/(.+)|\\/*)$'))
      : r
      ? (f += '\\/*$')
      : e !== '' && e !== '/' && (f += '(?:(?=\\/|$))'),
    [new RegExp(f, n ? void 0 : 'i'), c]
  );
}
function q0(e) {
  try {
    return decodeURI(e);
  } catch (n) {
    return (
      od(
        !1,
        'The URL path "' +
          e +
          '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' +
          ('encoding (' + n + ').')
      ),
      e
    );
  }
}
function K0(e, n) {
  try {
    return decodeURIComponent(e);
  } catch (r) {
    return (
      od(
        !1,
        'The value for the URL param "' +
          n +
          '" will not be decoded because' +
          (' the string "' +
            e +
            '" is a malformed URL segment. This is probably') +
          (' due to a bad percent encoding (' + r + ').')
      ),
      e
    );
  }
}
function ld(e, n) {
  if (n === '/') return e;
  if (!e.toLowerCase().startsWith(n.toLowerCase())) return null;
  let r = n.endsWith('/') ? n.length - 1 : n.length,
    c = e.charAt(r);
  return c && c !== '/' ? null : e.slice(r) || '/';
}
function Q0(e, n) {
  n === void 0 && (n = '/');
  let {
    pathname: r,
    search: c = '',
    hash: f = '',
  } = typeof e == 'string' ? fn(e) : e;
  return {
    pathname: r ? (r.startsWith('/') ? r : J0(r, n)) : n,
    search: tm(c),
    hash: im(f),
  };
}
function J0(e, n) {
  let r = n.replace(/\/+$/, '').split('/');
  return (
    e.split('/').forEach((f) => {
      f === '..' ? r.length > 1 && r.pop() : f !== '.' && r.push(f);
    }),
    r.length > 1 ? r.join('/') : '/'
  );
}
function Ko(e, n, r, c) {
  return (
    "Cannot include a '" +
    e +
    "' character in a manually specified " +
    ('`to.' +
      n +
      '` field [' +
      JSON.stringify(c) +
      '].  Please separate it out to the ') +
    ('`to.' + r + '` field. Alternatively you may provide the full path as ') +
    'a string in <Link to="..."> and the router will parse it for you.'
  );
}
function xf(e) {
  return e.filter(
    (n, r) => r === 0 || (n.route.path && n.route.path.length > 0)
  );
}
function vf(e, n, r, c) {
  c === void 0 && (c = !1);
  let f;
  typeof e == 'string'
    ? (f = fn(e))
    : ((f = ha({}, e)),
      Qe(
        !f.pathname || !f.pathname.includes('?'),
        Ko('?', 'pathname', 'search', f)
      ),
      Qe(
        !f.pathname || !f.pathname.includes('#'),
        Ko('#', 'pathname', 'hash', f)
      ),
      Qe(!f.search || !f.search.includes('#'), Ko('#', 'search', 'hash', f)));
  let g = e === '' || f.pathname === '',
    w = g ? '/' : f.pathname,
    k;
  if (c || w == null) k = r;
  else {
    let Y = n.length - 1;
    if (w.startsWith('..')) {
      let U = w.split('/');
      for (; U[0] === '..'; ) U.shift(), (Y -= 1);
      f.pathname = U.join('/');
    }
    k = Y >= 0 ? n[Y] : '/';
  }
  let M = Q0(f, k),
    D = w && w !== '/' && w.endsWith('/'),
    z = (g || w === '.') && r.endsWith('/');
  return !M.pathname.endsWith('/') && (D || z) && (M.pathname += '/'), M;
}
const Ji = (e) => e.join('/').replace(/\/\/+/g, '/'),
  em = (e) => e.replace(/\/+$/, '').replace(/^\/*/, '/'),
  tm = (e) => (!e || e === '?' ? '' : e.startsWith('?') ? e : '?' + e),
  im = (e) => (!e || e === '#' ? '' : e.startsWith('#') ? e : '#' + e);
function rm(e) {
  return (
    e != null &&
    typeof e.status == 'number' &&
    typeof e.statusText == 'string' &&
    typeof e.internal == 'boolean' &&
    'data' in e
  );
}
const bf = ['post', 'put', 'patch', 'delete'];
new Set(bf);
const nm = ['get', ...bf];
new Set(nm);
/**
 * React Router v6.14.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Bs() {
  return (
    (Bs = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var n = 1; n < arguments.length; n++) {
            var r = arguments[n];
            for (var c in r)
              Object.prototype.hasOwnProperty.call(r, c) && (e[c] = r[c]);
          }
          return e;
        }),
    Bs.apply(this, arguments)
  );
}
const cd = ne.createContext(null),
  yf = ne.createContext(null),
  Nr = ne.createContext(null),
  lo = ne.createContext(null),
  Er = ne.createContext({ outlet: null, matches: [], isDataRoute: !1 }),
  wf = ne.createContext(null);
function am(e, n) {
  let { relative: r } = n === void 0 ? {} : n;
  wa() || Qe(!1);
  let { basename: c, navigator: f } = ne.useContext(Nr),
    { hash: g, pathname: w, search: k } = dd(e, { relative: r }),
    M = w;
  return (
    c !== '/' && (M = w === '/' ? c : Ji([c, w])),
    f.createHref({ pathname: M, search: k, hash: g })
  );
}
function wa() {
  return ne.useContext(lo) != null;
}
function ar() {
  return wa() || Qe(!1), ne.useContext(lo).location;
}
function Cf(e) {
  ne.useContext(Nr).static || ne.useLayoutEffect(e);
}
function sm() {
  let { isDataRoute: e } = ne.useContext(Er);
  return e ? bm() : om();
}
function om() {
  wa() || Qe(!1);
  let e = ne.useContext(cd),
    { basename: n, navigator: r } = ne.useContext(Nr),
    { matches: c } = ne.useContext(Er),
    { pathname: f } = ar(),
    g = JSON.stringify(xf(c).map((M) => M.pathnameBase)),
    w = ne.useRef(!1);
  return (
    Cf(() => {
      w.current = !0;
    }),
    ne.useCallback(
      function (M, D) {
        if ((D === void 0 && (D = {}), !w.current)) return;
        if (typeof M == 'number') {
          r.go(M);
          return;
        }
        let z = vf(M, JSON.parse(g), f, D.relative === 'path');
        e == null &&
          n !== '/' &&
          (z.pathname = z.pathname === '/' ? n : Ji([n, z.pathname])),
          (D.replace ? r.replace : r.push)(z, D.state, D);
      },
      [n, r, g, f, e]
    )
  );
}
function dd(e, n) {
  let { relative: r } = n === void 0 ? {} : n,
    { matches: c } = ne.useContext(Er),
    { pathname: f } = ar(),
    g = JSON.stringify(xf(c).map((w) => w.pathnameBase));
  return ne.useMemo(() => vf(e, JSON.parse(g), f, r === 'path'), [e, g, f, r]);
}
function lm(e, n) {
  return cm(e, n);
}
function cm(e, n, r) {
  wa() || Qe(!1);
  let { navigator: c } = ne.useContext(Nr),
    { matches: f } = ne.useContext(Er),
    g = f[f.length - 1],
    w = g ? g.params : {};
  g && g.pathname;
  let k = g ? g.pathnameBase : '/';
  g && g.route;
  let M = ar(),
    D;
  if (n) {
    var z;
    let V = typeof n == 'string' ? fn(n) : n;
    k === '/' || ((z = V.pathname) != null && z.startsWith(k)) || Qe(!1),
      (D = V);
  } else D = M;
  let Y = D.pathname || '/',
    U = k === '/' ? Y : Y.slice(k.length) || '/',
    K = F0(e, { pathname: U }),
    Z = pm(
      K &&
        K.map((V) =>
          Object.assign({}, V, {
            params: Object.assign({}, w, V.params),
            pathname: Ji([
              k,
              c.encodeLocation
                ? c.encodeLocation(V.pathname).pathname
                : V.pathname,
            ]),
            pathnameBase:
              V.pathnameBase === '/'
                ? k
                : Ji([
                    k,
                    c.encodeLocation
                      ? c.encodeLocation(V.pathnameBase).pathname
                      : V.pathnameBase,
                  ]),
          })
        ),
      f,
      r
    );
  return n && Z
    ? ne.createElement(
        lo.Provider,
        {
          value: {
            location: Bs(
              {
                pathname: '/',
                search: '',
                hash: '',
                state: null,
                key: 'default',
              },
              D
            ),
            navigationType: Vi.Pop,
          },
        },
        Z
      )
    : Z;
}
function dm() {
  let e = vm(),
    n = rm(e)
      ? e.status + ' ' + e.statusText
      : e instanceof Error
      ? e.message
      : JSON.stringify(e),
    r = e instanceof Error ? e.stack : null,
    f = { padding: '0.5rem', backgroundColor: 'rgba(200,200,200, 0.5)' },
    g = null;
  return ne.createElement(
    ne.Fragment,
    null,
    ne.createElement('h2', null, 'Unexpected Application Error!'),
    ne.createElement('h3', { style: { fontStyle: 'italic' } }, n),
    r ? ne.createElement('pre', { style: f }, r) : null,
    g
  );
}
const um = ne.createElement(dm, null);
class hm extends ne.Component {
  constructor(n) {
    super(n),
      (this.state = {
        location: n.location,
        revalidation: n.revalidation,
        error: n.error,
      });
  }
  static getDerivedStateFromError(n) {
    return { error: n };
  }
  static getDerivedStateFromProps(n, r) {
    return r.location !== n.location ||
      (r.revalidation !== 'idle' && n.revalidation === 'idle')
      ? { error: n.error, location: n.location, revalidation: n.revalidation }
      : {
          error: n.error || r.error,
          location: r.location,
          revalidation: n.revalidation || r.revalidation,
        };
  }
  componentDidCatch(n, r) {
    console.error(
      'React Router caught the following error during render',
      n,
      r
    );
  }
  render() {
    return this.state.error
      ? ne.createElement(
          Er.Provider,
          { value: this.props.routeContext },
          ne.createElement(wf.Provider, {
            value: this.state.error,
            children: this.props.component,
          })
        )
      : this.props.children;
  }
}
function fm(e) {
  let { routeContext: n, match: r, children: c } = e,
    f = ne.useContext(cd);
  return (
    f &&
      f.static &&
      f.staticContext &&
      (r.route.errorElement || r.route.ErrorBoundary) &&
      (f.staticContext._deepestRenderedBoundaryId = r.route.id),
    ne.createElement(Er.Provider, { value: n }, c)
  );
}
function pm(e, n, r) {
  var c;
  if ((n === void 0 && (n = []), r === void 0 && (r = null), e == null)) {
    var f;
    if ((f = r) != null && f.errors) e = r.matches;
    else return null;
  }
  let g = e,
    w = (c = r) == null ? void 0 : c.errors;
  if (w != null) {
    let k = g.findIndex(
      (M) => M.route.id && (w == null ? void 0 : w[M.route.id])
    );
    k >= 0 || Qe(!1), (g = g.slice(0, Math.min(g.length, k + 1)));
  }
  return g.reduceRight((k, M, D) => {
    let z = M.route.id ? (w == null ? void 0 : w[M.route.id]) : null,
      Y = null;
    r && (Y = M.route.errorElement || um);
    let U = n.concat(g.slice(0, D + 1)),
      K = () => {
        let Z;
        return (
          z
            ? (Z = Y)
            : M.route.Component
            ? (Z = ne.createElement(M.route.Component, null))
            : M.route.element
            ? (Z = M.route.element)
            : (Z = k),
          ne.createElement(fm, {
            match: M,
            routeContext: { outlet: k, matches: U, isDataRoute: r != null },
            children: Z,
          })
        );
      };
    return r && (M.route.ErrorBoundary || M.route.errorElement || D === 0)
      ? ne.createElement(hm, {
          location: r.location,
          revalidation: r.revalidation,
          component: Y,
          error: z,
          children: K(),
          routeContext: { outlet: null, matches: U, isDataRoute: !0 },
        })
      : K();
  }, null);
}
var tc;
(function (e) {
  (e.UseBlocker = 'useBlocker'),
    (e.UseRevalidator = 'useRevalidator'),
    (e.UseNavigateStable = 'useNavigate');
})(tc || (tc = {}));
var fa;
(function (e) {
  (e.UseBlocker = 'useBlocker'),
    (e.UseLoaderData = 'useLoaderData'),
    (e.UseActionData = 'useActionData'),
    (e.UseRouteError = 'useRouteError'),
    (e.UseNavigation = 'useNavigation'),
    (e.UseRouteLoaderData = 'useRouteLoaderData'),
    (e.UseMatches = 'useMatches'),
    (e.UseRevalidator = 'useRevalidator'),
    (e.UseNavigateStable = 'useNavigate'),
    (e.UseRouteId = 'useRouteId');
})(fa || (fa = {}));
function gm(e) {
  let n = ne.useContext(cd);
  return n || Qe(!1), n;
}
function mm(e) {
  let n = ne.useContext(yf);
  return n || Qe(!1), n;
}
function xm(e) {
  let n = ne.useContext(Er);
  return n || Qe(!1), n;
}
function kf(e) {
  let n = xm(),
    r = n.matches[n.matches.length - 1];
  return r.route.id || Qe(!1), r.route.id;
}
function vm() {
  var e;
  let n = ne.useContext(wf),
    r = mm(fa.UseRouteError),
    c = kf(fa.UseRouteError);
  return n || ((e = r.errors) == null ? void 0 : e[c]);
}
function bm() {
  let { router: e } = gm(tc.UseNavigateStable),
    n = kf(fa.UseNavigateStable),
    r = ne.useRef(!1);
  return (
    Cf(() => {
      r.current = !0;
    }),
    ne.useCallback(
      function (f, g) {
        g === void 0 && (g = {}),
          r.current &&
            (typeof f == 'number'
              ? e.navigate(f)
              : e.navigate(f, Bs({ fromRouteId: n }, g)));
      },
      [e, n]
    )
  );
}
function It(e) {
  Qe(!1);
}
function ym(e) {
  let {
    basename: n = '/',
    children: r = null,
    location: c,
    navigationType: f = Vi.Pop,
    navigator: g,
    static: w = !1,
  } = e;
  wa() && Qe(!1);
  let k = n.replace(/^\/*/, '/'),
    M = ne.useMemo(() => ({ basename: k, navigator: g, static: w }), [k, g, w]);
  typeof c == 'string' && (c = fn(c));
  let {
      pathname: D = '/',
      search: z = '',
      hash: Y = '',
      state: U = null,
      key: K = 'default',
    } = c,
    Z = ne.useMemo(() => {
      let V = ld(D, k);
      return V == null
        ? null
        : {
            location: { pathname: V, search: z, hash: Y, state: U, key: K },
            navigationType: f,
          };
    }, [k, D, z, Y, U, K, f]);
  return Z == null
    ? null
    : ne.createElement(
        Nr.Provider,
        { value: M },
        ne.createElement(lo.Provider, { children: r, value: Z })
      );
}
function wm(e) {
  let { children: n, location: r } = e;
  return lm(ic(n), r);
}
var Du;
(function (e) {
  (e[(e.pending = 0)] = 'pending'),
    (e[(e.success = 1)] = 'success'),
    (e[(e.error = 2)] = 'error');
})(Du || (Du = {}));
new Promise(() => {});
function ic(e, n) {
  n === void 0 && (n = []);
  let r = [];
  return (
    ne.Children.forEach(e, (c, f) => {
      if (!ne.isValidElement(c)) return;
      let g = [...n, f];
      if (c.type === ne.Fragment) {
        r.push.apply(r, ic(c.props.children, g));
        return;
      }
      c.type !== It && Qe(!1), !c.props.index || !c.props.children || Qe(!1);
      let w = {
        id: c.props.id || g.join('-'),
        caseSensitive: c.props.caseSensitive,
        element: c.props.element,
        Component: c.props.Component,
        index: c.props.index,
        path: c.props.path,
        loader: c.props.loader,
        action: c.props.action,
        errorElement: c.props.errorElement,
        ErrorBoundary: c.props.ErrorBoundary,
        hasErrorBoundary:
          c.props.ErrorBoundary != null || c.props.errorElement != null,
        shouldRevalidate: c.props.shouldRevalidate,
        handle: c.props.handle,
        lazy: c.props.lazy,
      };
      c.props.children && (w.children = ic(c.props.children, g)), r.push(w);
    }),
    r
  );
}
/**
 * React Router DOM v6.14.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Ys() {
  return (
    (Ys = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var n = 1; n < arguments.length; n++) {
            var r = arguments[n];
            for (var c in r)
              Object.prototype.hasOwnProperty.call(r, c) && (e[c] = r[c]);
          }
          return e;
        }),
    Ys.apply(this, arguments)
  );
}
function Sf(e, n) {
  if (e == null) return {};
  var r = {},
    c = Object.keys(e),
    f,
    g;
  for (g = 0; g < c.length; g++)
    (f = c[g]), !(n.indexOf(f) >= 0) && (r[f] = e[f]);
  return r;
}
function Cm(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function km(e, n) {
  return e.button === 0 && (!n || n === '_self') && !Cm(e);
}
const Sm = [
    'onClick',
    'relative',
    'reloadDocument',
    'replace',
    'state',
    'target',
    'to',
    'preventScrollReset',
  ],
  Am = [
    'aria-current',
    'caseSensitive',
    'className',
    'end',
    'style',
    'to',
    'children',
  ],
  Lm = 'startTransition',
  Iu = kp[Lm];
function Nm(e) {
  let { basename: n, children: r, future: c, window: f } = e,
    g = ne.useRef();
  g.current == null && (g.current = I0({ window: f, v5Compat: !0 }));
  let w = g.current,
    [k, M] = ne.useState({ action: w.action, location: w.location }),
    { v7_startTransition: D } = c || {},
    z = ne.useCallback(
      (Y) => {
        D && Iu ? Iu(() => M(Y)) : M(Y);
      },
      [M, D]
    );
  return (
    ne.useLayoutEffect(() => w.listen(z), [w, z]),
    ne.createElement(ym, {
      basename: n,
      children: r,
      location: k.location,
      navigationType: k.action,
      navigator: w,
    })
  );
}
const Em =
    typeof window < 'u' &&
    typeof window.document < 'u' &&
    typeof window.document.createElement < 'u',
  jm = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
  Pe = ne.forwardRef(function (n, r) {
    let {
        onClick: c,
        relative: f,
        reloadDocument: g,
        replace: w,
        state: k,
        target: M,
        to: D,
        preventScrollReset: z,
      } = n,
      Y = Sf(n, Sm),
      { basename: U } = ne.useContext(Nr),
      K,
      Z = !1;
    if (typeof D == 'string' && jm.test(D) && ((K = D), Em))
      try {
        let E = new URL(window.location.href),
          _ = D.startsWith('//') ? new URL(E.protocol + D) : new URL(D),
          Q = ld(_.pathname, U);
        _.origin === E.origin && Q != null
          ? (D = Q + _.search + _.hash)
          : (Z = !0);
      } catch {}
    let V = am(D, { relative: f }),
      ee = Mm(D, {
        replace: w,
        state: k,
        target: M,
        preventScrollReset: z,
        relative: f,
      });
    function B(E) {
      c && c(E), E.defaultPrevented || ee(E);
    }
    return ne.createElement(
      'a',
      Ys({}, Y, { href: K || V, onClick: Z || g ? c : B, ref: r, target: M })
    );
  }),
  Tn = ne.forwardRef(function (n, r) {
    let {
        'aria-current': c = 'page',
        caseSensitive: f = !1,
        className: g = '',
        end: w = !1,
        style: k,
        to: M,
        children: D,
      } = n,
      z = Sf(n, Am),
      Y = dd(M, { relative: z.relative }),
      U = ar(),
      K = ne.useContext(yf),
      { navigator: Z } = ne.useContext(Nr),
      V = Z.encodeLocation ? Z.encodeLocation(Y).pathname : Y.pathname,
      ee = U.pathname,
      B =
        K && K.navigation && K.navigation.location
          ? K.navigation.location.pathname
          : null;
    f ||
      ((ee = ee.toLowerCase()),
      (B = B ? B.toLowerCase() : null),
      (V = V.toLowerCase()));
    let E = ee === V || (!w && ee.startsWith(V) && ee.charAt(V.length) === '/'),
      _ =
        B != null &&
        (B === V || (!w && B.startsWith(V) && B.charAt(V.length) === '/')),
      Q = E ? c : void 0,
      W;
    typeof g == 'function'
      ? (W = g({ isActive: E, isPending: _ }))
      : (W = [g, E ? 'active' : null, _ ? 'pending' : null]
          .filter(Boolean)
          .join(' '));
    let ae = typeof k == 'function' ? k({ isActive: E, isPending: _ }) : k;
    return ne.createElement(
      Pe,
      Ys({}, z, { 'aria-current': Q, className: W, ref: r, style: ae, to: M }),
      typeof D == 'function' ? D({ isActive: E, isPending: _ }) : D
    );
  });
var Ru;
(function (e) {
  (e.UseScrollRestoration = 'useScrollRestoration'),
    (e.UseSubmit = 'useSubmit'),
    (e.UseSubmitFetcher = 'useSubmitFetcher'),
    (e.UseFetcher = 'useFetcher');
})(Ru || (Ru = {}));
var Ou;
(function (e) {
  (e.UseFetchers = 'useFetchers'),
    (e.UseScrollRestoration = 'useScrollRestoration');
})(Ou || (Ou = {}));
function Mm(e, n) {
  let {
      target: r,
      replace: c,
      state: f,
      preventScrollReset: g,
      relative: w,
    } = n === void 0 ? {} : n,
    k = sm(),
    M = ar(),
    D = dd(e, { relative: w });
  return ne.useCallback(
    (z) => {
      if (km(z, r)) {
        z.preventDefault();
        let Y = c !== void 0 ? c : Hs(M) === Hs(D);
        k(e, { replace: Y, state: f, preventScrollReset: g, relative: w });
      }
    },
    [M, k, D, c, f, r, e, g, w]
  );
}
const Pm = () =>
    m.jsx('div', {
      className: 'flex h-screen items-center justify-center bg-white',
      children: m.jsx('div', {
        className:
          'h-16 w-16 animate-spin rounded-full border-4 border-solid border-primary border-t-transparent',
      }),
    }),
  Zt = ({ title: e }) => {
    const n = ar();
    return (
      ne.useEffect(() => {
        document.title = e;
      }, [n, e]),
      null
    );
  },
  ui = ({ pageName: e }) =>
    m.jsxs('div', {
      className:
        'mb-6 flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between',
      children: [
        m.jsx('h2', {
          className: 'text-title-md2 font-semibold text-black dark:text-white',
          children: e,
        }),
        m.jsx('nav', {
          children: m.jsxs('ol', {
            className: 'flex items-center gap-2',
            children: [
              m.jsx('li', {
                children: m.jsx(Pe, {
                  className: 'font-medium',
                  to: '/',
                  children: 'Dashboard /',
                }),
              }),
              m.jsx('li', {
                className: 'font-medium text-primary',
                children: e,
              }),
            ],
          }),
        }),
      ],
    }),
  Af = '/gas-sensor-dashboard-react/react/dist/assets/logo-dark-893f6bd0.svg',
  Lf = '/gas-sensor-dashboard-react/react/dist/assets/logo-162ee3ec.svg',
  Tm = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Sign In' }),
        m.jsx('div', {
          className:
            'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
          children: m.jsxs('div', {
            className: 'flex flex-wrap items-center',
            children: [
              m.jsx('div', {
                className: 'hidden w-full xl:block xl:w-1/2',
                children: m.jsxs('div', {
                  className: 'py-17.5 px-26 text-center',
                  children: [
                    m.jsxs(Pe, {
                      className: 'mb-5.5 inline-block',
                      to: '/',
                      children: [
                        m.jsx('img', {
                          className: 'hidden dark:block',
                          src: Lf,
                          alt: 'Logo',
                        }),
                        m.jsx('img', {
                          className: 'dark:hidden',
                          src: Af,
                          alt: 'Logo',
                        }),
                      ],
                    }),
                    m.jsx('p', {
                      className: '2xl:px-20',
                      children:
                        'Lorem ipsum dolor sit amet, consectetur adipiscing elit suspendisse.',
                    }),
                    m.jsx('span', {
                      className: 'mt-15 inline-block',
                      children: m.jsxs('svg', {
                        width: '350',
                        height: '350',
                        viewBox: '0 0 350 350',
                        fill: 'none',
                        xmlns: 'http://www.w3.org/2000/svg',
                        children: [
                          m.jsx('path', {
                            d: 'M33.5825 294.844L30.5069 282.723C25.0538 280.414 19.4747 278.414 13.7961 276.732L13.4079 282.365L11.8335 276.159C4.79107 274.148 0 273.263 0 273.263C0 273.263 6.46998 297.853 20.0448 316.653L35.8606 319.429L23.5737 321.2C25.2813 323.253 27.1164 325.196 29.0681 327.019C48.8132 345.333 70.8061 353.736 78.1898 345.787C85.5736 337.838 75.5526 316.547 55.8074 298.235C49.6862 292.557 41.9968 288.001 34.2994 284.415L33.5825 294.844Z',
                            fill: '#F2F2F2',
                          }),
                          m.jsx('path', {
                            d: 'M62.8332 281.679L66.4705 269.714C62.9973 264.921 59.2562 260.327 55.2652 255.954L52.019 260.576L53.8812 254.45C48.8923 249.092 45.2489 245.86 45.2489 245.86C45.2489 245.86 38.0686 270.253 39.9627 293.358L52.0658 303.903L40.6299 299.072C41.0301 301.712 41.596 304.324 42.3243 306.893C49.7535 332.77 64.2336 351.323 74.6663 348.332C85.0989 345.341 87.534 321.939 80.1048 296.063C77.8019 288.041 73.5758 280.169 68.8419 273.123L62.8332 281.679Z',
                            fill: '#F2F2F2',
                          }),
                          m.jsx('path', {
                            d: 'M243.681 82.9153H241.762V30.3972C241.762 26.4054 240.975 22.4527 239.447 18.7647C237.918 15.0768 235.677 11.7258 232.853 8.90314C230.028 6.0805 226.674 3.84145 222.984 2.31385C219.293 0.786245 215.337 0 211.343 0H99.99C91.9222 0 84.1848 3.20256 78.48 8.90314C72.7752 14.6037 69.5703 22.3354 69.5703 30.3972V318.52C69.5703 322.512 70.3571 326.465 71.8859 330.153C73.4146 333.841 75.6553 337.192 78.48 340.015C81.3048 342.837 84.6582 345.076 88.3489 346.604C92.0396 348.131 95.9952 348.918 99.99 348.918H211.343C219.41 348.918 227.148 345.715 232.852 340.014C238.557 334.314 241.762 326.582 241.762 318.52V120.299H243.68L243.681 82.9153Z',
                            fill: '#E6E6E6',
                          }),
                          m.jsx('path', {
                            d: 'M212.567 7.9054H198.033C198.701 9.54305 198.957 11.3199 198.776 13.0793C198.595 14.8387 197.984 16.5267 196.997 17.9946C196.01 19.4625 194.676 20.6652 193.114 21.4967C191.552 22.3283 189.809 22.7632 188.039 22.7632H124.247C122.477 22.7631 120.734 22.3281 119.172 21.4964C117.61 20.6648 116.277 19.462 115.289 17.9942C114.302 16.5263 113.691 14.8384 113.511 13.079C113.33 11.3197 113.585 9.54298 114.254 7.9054H100.678C94.6531 7.9054 88.8749 10.297 84.6146 14.5542C80.3543 18.8113 77.9609 24.5852 77.9609 30.6057V318.31C77.9609 324.331 80.3543 330.105 84.6146 334.362C88.8749 338.619 94.6531 341.011 100.678 341.011H212.567C218.592 341.011 224.37 338.619 228.63 334.362C232.891 330.105 235.284 324.331 235.284 318.31V30.6053C235.284 24.5848 232.891 18.811 228.63 14.554C224.37 10.297 218.592 7.9054 212.567 7.9054Z',
                            fill: 'white',
                          }),
                          m.jsx('path', {
                            d: 'M142.368 122.512C142.368 120.501 142.898 118.526 143.904 116.784C144.911 115.043 146.359 113.597 148.102 112.592C146.36 111.587 144.383 111.057 142.371 111.057C140.358 111.057 138.381 111.586 136.639 112.591C134.896 113.596 133.448 115.042 132.442 116.784C131.436 118.525 130.906 120.501 130.906 122.512C130.906 124.522 131.436 126.498 132.442 128.239C133.448 129.981 134.896 131.427 136.639 132.432C138.381 133.437 140.358 133.966 142.371 133.966C144.383 133.966 146.36 133.436 148.102 132.431C146.359 131.426 144.911 129.981 143.905 128.24C142.898 126.499 142.368 124.523 142.368 122.512Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M156.779 122.512C156.778 120.501 157.308 118.526 158.315 116.784C159.321 115.043 160.769 113.597 162.513 112.592C160.77 111.587 158.793 111.057 156.781 111.057C154.769 111.057 152.792 111.586 151.049 112.591C149.306 113.596 147.859 115.042 146.852 116.784C145.846 118.525 145.316 120.501 145.316 122.512C145.316 124.522 145.846 126.498 146.852 128.239C147.859 129.981 149.306 131.427 151.049 132.432C152.792 133.437 154.769 133.966 156.781 133.966C158.793 133.966 160.77 133.436 162.513 132.431C160.769 131.426 159.322 129.981 158.315 128.24C157.308 126.499 156.779 124.523 156.779 122.512Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M170.862 133.966C177.192 133.966 182.325 128.838 182.325 122.512C182.325 116.186 177.192 111.057 170.862 111.057C164.531 111.057 159.398 116.186 159.398 122.512C159.398 128.838 164.531 133.966 170.862 133.966Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M190.017 158.289H123.208C122.572 158.288 121.962 158.035 121.512 157.586C121.062 157.137 120.809 156.527 120.809 155.892V89.1315C120.809 88.496 121.062 87.8866 121.512 87.4372C121.962 86.9878 122.572 86.735 123.208 86.7343H190.017C190.653 86.735 191.263 86.9878 191.713 87.4372C192.163 87.8866 192.416 88.496 192.416 89.1315V155.892C192.416 156.527 192.163 157.137 191.713 157.586C191.263 158.035 190.653 158.288 190.017 158.289ZM123.208 87.6937C122.826 87.6941 122.46 87.8457 122.19 88.1154C121.92 88.385 121.769 88.7507 121.768 89.132V155.892C121.769 156.274 121.92 156.639 122.19 156.909C122.46 157.178 122.826 157.33 123.208 157.33H190.017C190.399 157.33 190.765 157.178 191.035 156.909C191.304 156.639 191.456 156.274 191.457 155.892V89.132C191.456 88.7507 191.304 88.385 191.035 88.1154C190.765 87.8457 190.399 87.6941 190.017 87.6937H123.208Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M204.934 209.464H102.469V210.423H204.934V209.464Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M105.705 203.477C107.492 203.477 108.941 202.029 108.941 200.243C108.941 198.457 107.492 197.01 105.705 197.01C103.918 197.01 102.469 198.457 102.469 200.243C102.469 202.029 103.918 203.477 105.705 203.477Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M204.934 241.797H102.469V242.757H204.934V241.797Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M105.705 235.811C107.492 235.811 108.941 234.363 108.941 232.577C108.941 230.791 107.492 229.344 105.705 229.344C103.918 229.344 102.469 230.791 102.469 232.577C102.469 234.363 103.918 235.811 105.705 235.811Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M203.062 278.617H170.68C170.121 278.617 169.584 278.394 169.189 277.999C168.793 277.604 168.571 277.068 168.57 276.509V265.168C168.571 264.609 168.793 264.073 169.189 263.678C169.584 263.283 170.121 263.06 170.68 263.06H203.062C203.621 263.06 204.158 263.283 204.553 263.678C204.949 264.073 205.171 264.609 205.172 265.168V276.509C205.171 277.068 204.949 277.604 204.553 277.999C204.158 278.394 203.621 278.617 203.062 278.617Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M116.263 203.477C118.05 203.477 119.499 202.029 119.499 200.243C119.499 198.457 118.05 197.01 116.263 197.01C114.476 197.01 113.027 198.457 113.027 200.243C113.027 202.029 114.476 203.477 116.263 203.477Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M126.818 203.477C128.605 203.477 130.054 202.029 130.054 200.243C130.054 198.457 128.605 197.01 126.818 197.01C125.031 197.01 123.582 198.457 123.582 200.243C123.582 202.029 125.031 203.477 126.818 203.477Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M116.263 235.811C118.05 235.811 119.499 234.363 119.499 232.577C119.499 230.791 118.05 229.344 116.263 229.344C114.476 229.344 113.027 230.791 113.027 232.577C113.027 234.363 114.476 235.811 116.263 235.811Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M126.818 235.811C128.605 235.811 130.054 234.363 130.054 232.577C130.054 230.791 128.605 229.344 126.818 229.344C125.031 229.344 123.582 230.791 123.582 232.577C123.582 234.363 125.031 235.811 126.818 235.811Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M264.742 229.309C264.972 229.414 265.193 229.537 265.404 229.678L286.432 220.709L287.183 215.174L295.585 215.123L295.089 227.818L267.334 235.153C267.275 235.345 267.205 235.535 267.124 235.719C266.722 236.574 266.077 237.292 265.269 237.783C264.46 238.273 263.525 238.514 262.58 238.475C261.636 238.436 260.723 238.119 259.958 237.563C259.193 237.008 258.61 236.239 258.28 235.353C257.951 234.467 257.892 233.504 258.108 232.584C258.325 231.664 258.809 230.829 259.5 230.183C260.19 229.538 261.056 229.11 261.989 228.955C262.922 228.799 263.879 228.922 264.742 229.309Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M298.642 344.352H292.894L290.16 322.198L298.643 322.198L298.642 344.352Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M288.788 342.711H299.873V349.685H281.809C281.809 347.835 282.544 346.062 283.853 344.754C285.162 343.446 286.937 342.711 288.788 342.711Z',
                            fill: '#1C2434',
                          }),
                          m.jsx('path', {
                            d: 'M320.995 342.729L315.274 343.292L310.379 321.513L318.822 320.682L320.995 342.729Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M311.028 342.061L322.059 340.975L322.744 347.916L304.766 349.685C304.676 348.774 304.767 347.854 305.033 346.977C305.299 346.101 305.735 345.285 306.317 344.577C306.898 343.869 307.614 343.283 308.422 342.851C309.23 342.419 310.116 342.151 311.028 342.061Z',
                            fill: '#1C2434',
                          }),
                          m.jsx('path', {
                            d: 'M300.242 191.677C306.601 191.677 311.757 186.525 311.757 180.17C311.757 173.815 306.601 168.663 300.242 168.663C293.882 168.663 288.727 173.815 288.727 180.17C288.727 186.525 293.882 191.677 300.242 191.677Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M291.607 339.872C291.113 339.873 290.635 339.7 290.256 339.383C289.877 339.066 289.623 338.626 289.537 338.139C286.562 321.636 276.838 267.676 276.605 266.181C276.6 266.147 276.597 266.112 276.598 266.077V262.054C276.597 261.907 276.643 261.764 276.729 261.645L278.013 259.847C278.074 259.761 278.154 259.689 278.247 259.639C278.34 259.588 278.444 259.559 278.549 259.554C285.874 259.211 309.86 258.206 311.019 259.652C312.183 261.106 311.772 265.512 311.678 266.38L311.682 266.471L322.459 335.337C322.543 335.886 322.408 336.446 322.082 336.896C321.756 337.347 321.265 337.65 320.717 337.742L313.986 338.85C313.485 338.931 312.971 338.829 312.539 338.563C312.107 338.297 311.784 337.885 311.63 337.401C309.548 330.754 302.568 308.393 300.149 299.741C300.133 299.686 300.099 299.639 300.051 299.607C300.004 299.576 299.946 299.563 299.89 299.571C299.834 299.579 299.782 299.608 299.745 299.651C299.708 299.694 299.688 299.749 299.689 299.806C299.81 308.054 300.102 329.098 300.203 336.366L300.214 337.148C300.218 337.678 300.023 338.191 299.668 338.584C299.313 338.978 298.823 339.224 298.295 339.274L291.804 339.863C291.738 339.869 291.672 339.872 291.607 339.872Z',
                            fill: '#1C2434',
                          }),
                          m.jsx('path', {
                            d: 'M292.933 196.201C290.924 197.395 289.721 199.588 289.031 201.821C287.754 205.953 286.985 210.226 286.741 214.545L286.012 227.475L276.984 261.755C284.809 268.37 289.322 266.867 299.855 261.455C310.387 256.044 311.591 263.26 311.591 263.26L313.697 234.092L316.706 202.219C316.031 201.407 315.266 200.672 314.427 200.03C311.645 197.868 308.409 196.366 304.962 195.636C301.516 194.906 297.948 194.967 294.528 195.815L292.933 196.201Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M290.001 236.232C290.244 236.324 290.479 236.434 290.704 236.562L311.497 226.163L311.842 220.529L320.419 219.938L320.878 232.781L293.092 241.963C292.865 242.935 292.347 243.816 291.608 244.487C290.868 245.158 289.941 245.588 288.951 245.72C287.96 245.852 286.953 245.68 286.063 245.226C285.173 244.772 284.442 244.058 283.968 243.179C283.494 242.301 283.299 241.298 283.409 240.306C283.519 239.313 283.928 238.378 284.583 237.624C285.238 236.869 286.107 236.332 287.075 236.084C288.043 235.835 289.063 235.887 290.001 236.232Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M316.556 202.365C321.672 204.17 322.573 223.716 322.573 223.716C316.554 220.409 309.332 225.821 309.332 225.821C309.332 225.821 307.827 220.709 306.022 214.094C305.477 212.233 305.412 210.265 305.832 208.372C306.253 206.479 307.147 204.724 308.429 203.269C308.429 203.269 311.44 200.56 316.556 202.365Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M310.566 183.213C309.132 182.066 307.174 184.151 307.174 184.151L306.026 173.828C306.026 173.828 298.853 174.687 294.261 173.542C289.67 172.396 288.953 177.7 288.953 177.7C288.716 175.557 288.668 173.399 288.81 171.248C289.096 168.667 292.827 166.087 299.427 164.366C306.026 162.646 309.47 170.101 309.47 170.101C314.061 172.395 312.001 184.36 310.566 183.213Z',
                            fill: '#1C2434',
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
              }),
              m.jsx('div', {
                className:
                  'w-full border-stroke dark:border-strokedark xl:w-1/2 xl:border-l-2',
                children: m.jsxs('div', {
                  className: 'w-full p-4 sm:p-12.5 xl:p-17.5',
                  children: [
                    m.jsx('span', {
                      className: 'mb-1.5 block font-medium',
                      children: 'Start for free',
                    }),
                    m.jsx('h2', {
                      className:
                        'mb-9 text-2xl font-bold text-black dark:text-white sm:text-title-xl2',
                      children: 'Sign In to TailAdmin',
                    }),
                    m.jsxs('form', {
                      children: [
                        m.jsxs('div', {
                          className: 'mb-4',
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-2.5 block font-medium text-black dark:text-white',
                              children: 'Email',
                            }),
                            m.jsxs('div', {
                              className: 'relative',
                              children: [
                                m.jsx('input', {
                                  type: 'email',
                                  placeholder: 'Enter your email',
                                  className:
                                    'w-full rounded-lg border border-stroke bg-transparent py-4 pl-6 pr-10 text-black outline-none focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                                }),
                                m.jsx('span', {
                                  className: 'absolute right-4 top-4',
                                  children: m.jsx('svg', {
                                    className: 'fill-current',
                                    width: '22',
                                    height: '22',
                                    viewBox: '0 0 22 22',
                                    fill: 'none',
                                    xmlns: 'http://www.w3.org/2000/svg',
                                    children: m.jsx('g', {
                                      opacity: '0.5',
                                      children: m.jsx('path', {
                                        d: 'M19.2516 3.30005H2.75156C1.58281 3.30005 0.585938 4.26255 0.585938 5.46567V16.6032C0.585938 17.7719 1.54844 18.7688 2.75156 18.7688H19.2516C20.4203 18.7688 21.4172 17.8063 21.4172 16.6032V5.4313C21.4172 4.26255 20.4203 3.30005 19.2516 3.30005ZM19.2516 4.84692C19.2859 4.84692 19.3203 4.84692 19.3547 4.84692L11.0016 10.2094L2.64844 4.84692C2.68281 4.84692 2.71719 4.84692 2.75156 4.84692H19.2516ZM19.2516 17.1532H2.75156C2.40781 17.1532 2.13281 16.8782 2.13281 16.5344V6.35942L10.1766 11.5157C10.4172 11.6875 10.6922 11.7563 10.9672 11.7563C11.2422 11.7563 11.5172 11.6875 11.7578 11.5157L19.8016 6.35942V16.5688C19.8703 16.9125 19.5953 17.1532 19.2516 17.1532Z',
                                        fill: '',
                                      }),
                                    }),
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          className: 'mb-6',
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-2.5 block font-medium text-black dark:text-white',
                              children: 'Re-type Password',
                            }),
                            m.jsxs('div', {
                              className: 'relative',
                              children: [
                                m.jsx('input', {
                                  type: 'password',
                                  placeholder:
                                    '6+ Characters, 1 Capital letter',
                                  className:
                                    'w-full rounded-lg border border-stroke bg-transparent py-4 pl-6 pr-10 text-black outline-none focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                                }),
                                m.jsx('span', {
                                  className: 'absolute right-4 top-4',
                                  children: m.jsx('svg', {
                                    className: 'fill-current',
                                    width: '22',
                                    height: '22',
                                    viewBox: '0 0 22 22',
                                    fill: 'none',
                                    xmlns: 'http://www.w3.org/2000/svg',
                                    children: m.jsxs('g', {
                                      opacity: '0.5',
                                      children: [
                                        m.jsx('path', {
                                          d: 'M16.1547 6.80626V5.91251C16.1547 3.16251 14.0922 0.825009 11.4797 0.618759C10.0359 0.481259 8.59219 0.996884 7.52656 1.95938C6.46094 2.92188 5.84219 4.29688 5.84219 5.70626V6.80626C3.84844 7.18438 2.33594 8.93751 2.33594 11.0688V17.2906C2.33594 19.5594 4.19219 21.3813 6.42656 21.3813H15.5016C17.7703 21.3813 19.6266 19.525 19.6266 17.2563V11C19.6609 8.93751 18.1484 7.21876 16.1547 6.80626ZM8.55781 3.09376C9.31406 2.40626 10.3109 2.06251 11.3422 2.16563C13.1641 2.33751 14.6078 3.98751 14.6078 5.91251V6.70313H7.38906V5.67188C7.38906 4.70938 7.80156 3.78126 8.55781 3.09376ZM18.1141 17.2906C18.1141 18.7 16.9453 19.8688 15.5359 19.8688H6.46094C5.05156 19.8688 3.91719 18.7344 3.91719 17.325V11.0688C3.91719 9.52189 5.15469 8.28438 6.70156 8.28438H15.2953C16.8422 8.28438 18.1141 9.52188 18.1141 11V17.2906Z',
                                          fill: '',
                                        }),
                                        m.jsx('path', {
                                          d: 'M10.9977 11.8594C10.5852 11.8594 10.207 12.2031 10.207 12.65V16.2594C10.207 16.6719 10.5508 17.05 10.9977 17.05C11.4102 17.05 11.7883 16.7063 11.7883 16.2594V12.6156C11.7883 12.2031 11.4102 11.8594 10.9977 11.8594Z',
                                          fill: '',
                                        }),
                                      ],
                                    }),
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                        m.jsx('div', {
                          className: 'mb-5',
                          children: m.jsx('input', {
                            type: 'submit',
                            value: 'Sign In',
                            className:
                              'w-full cursor-pointer rounded-lg border border-primary bg-primary p-4 text-white transition hover:bg-opacity-90',
                          }),
                        }),
                        m.jsxs('button', {
                          className:
                            'flex w-full items-center justify-center gap-3.5 rounded-lg border border-stroke bg-gray p-4 hover:bg-opacity-50 dark:border-strokedark dark:bg-meta-4 dark:hover:bg-opacity-50',
                          children: [
                            m.jsx('span', {
                              children: m.jsxs('svg', {
                                width: '20',
                                height: '20',
                                viewBox: '0 0 20 20',
                                fill: 'none',
                                xmlns: 'http://www.w3.org/2000/svg',
                                children: [
                                  m.jsxs('g', {
                                    clipPath: 'url(#clip0_191_13499)',
                                    children: [
                                      m.jsx('path', {
                                        d: 'M19.999 10.2217C20.0111 9.53428 19.9387 8.84788 19.7834 8.17737H10.2031V11.8884H15.8266C15.7201 12.5391 15.4804 13.162 15.1219 13.7195C14.7634 14.2771 14.2935 14.7578 13.7405 15.1328L13.7209 15.2571L16.7502 17.5568L16.96 17.5774C18.8873 15.8329 19.9986 13.2661 19.9986 10.2217',
                                        fill: '#4285F4',
                                      }),
                                      m.jsx('path', {
                                        d: 'M10.2055 19.9999C12.9605 19.9999 15.2734 19.111 16.9629 17.5777L13.7429 15.1331C12.8813 15.7221 11.7248 16.1333 10.2055 16.1333C8.91513 16.1259 7.65991 15.7205 6.61791 14.9745C5.57592 14.2286 4.80007 13.1801 4.40044 11.9777L4.28085 11.9877L1.13101 14.3765L1.08984 14.4887C1.93817 16.1456 3.24007 17.5386 4.84997 18.5118C6.45987 19.4851 8.31429 20.0004 10.2059 19.9999',
                                        fill: '#34A853',
                                      }),
                                      m.jsx('path', {
                                        d: 'M4.39899 11.9777C4.1758 11.3411 4.06063 10.673 4.05807 9.99996C4.06218 9.32799 4.1731 8.66075 4.38684 8.02225L4.38115 7.88968L1.19269 5.4624L1.0884 5.51101C0.372763 6.90343 0 8.4408 0 9.99987C0 11.5589 0.372763 13.0963 1.0884 14.4887L4.39899 11.9777Z',
                                        fill: '#FBBC05',
                                      }),
                                      m.jsx('path', {
                                        d: 'M10.2059 3.86663C11.668 3.84438 13.0822 4.37803 14.1515 5.35558L17.0313 2.59996C15.1843 0.901848 12.7383 -0.0298855 10.2059 -3.6784e-05C8.31431 -0.000477834 6.4599 0.514732 4.85001 1.48798C3.24011 2.46124 1.9382 3.85416 1.08984 5.51101L4.38946 8.02225C4.79303 6.82005 5.57145 5.77231 6.61498 5.02675C7.65851 4.28118 8.9145 3.87541 10.2059 3.86663Z',
                                        fill: '#EB4335',
                                      }),
                                    ],
                                  }),
                                  m.jsx('defs', {
                                    children: m.jsx('clipPath', {
                                      id: 'clip0_191_13499',
                                      children: m.jsx('rect', {
                                        width: '20',
                                        height: '20',
                                        fill: 'white',
                                      }),
                                    }),
                                  }),
                                ],
                              }),
                            }),
                            'Sign in with Google',
                          ],
                        }),
                        m.jsx('div', {
                          className: 'mt-6 text-center',
                          children: m.jsxs('p', {
                            children: [
                              'Don’t have any account?',
                              ' ',
                              m.jsx(Pe, {
                                to: '/auth/signup',
                                className: 'text-primary',
                                children: 'Sign Up',
                              }),
                            ],
                          }),
                        }),
                      ],
                    }),
                  ],
                }),
              }),
            ],
          }),
        }),
      ],
    }),
  Dm = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Sign Up' }),
        m.jsx('div', {
          className:
            'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
          children: m.jsxs('div', {
            className: 'flex flex-wrap items-center',
            children: [
              m.jsx('div', {
                className: 'hidden w-full xl:block xl:w-1/2',
                children: m.jsxs('div', {
                  className: 'py-17.5 px-26 text-center',
                  children: [
                    m.jsxs(Pe, {
                      className: 'mb-5.5 inline-block',
                      to: '/',
                      children: [
                        m.jsx('img', {
                          className: 'hidden dark:block',
                          src: Lf,
                          alt: 'Logo',
                        }),
                        m.jsx('img', {
                          className: 'dark:hidden',
                          src: Af,
                          alt: 'Logo',
                        }),
                      ],
                    }),
                    m.jsx('p', {
                      className: '2xl:px-20',
                      children:
                        'Lorem ipsum dolor sit amet, consectetur adipiscing elit suspendisse.',
                    }),
                    m.jsx('span', {
                      className: 'mt-15 inline-block',
                      children: m.jsxs('svg', {
                        width: '350',
                        height: '350',
                        viewBox: '0 0 350 350',
                        fill: 'none',
                        xmlns: 'http://www.w3.org/2000/svg',
                        children: [
                          m.jsx('path', {
                            d: 'M33.5825 294.844L30.5069 282.723C25.0538 280.414 19.4747 278.414 13.7961 276.732L13.4079 282.365L11.8335 276.159C4.79107 274.148 0 273.263 0 273.263C0 273.263 6.46998 297.853 20.0448 316.653L35.8606 319.429L23.5737 321.2C25.2813 323.253 27.1164 325.196 29.0681 327.019C48.8132 345.333 70.8061 353.736 78.1898 345.787C85.5736 337.838 75.5526 316.547 55.8074 298.235C49.6862 292.557 41.9968 288.001 34.2994 284.415L33.5825 294.844Z',
                            fill: '#F2F2F2',
                          }),
                          m.jsx('path', {
                            d: 'M62.8332 281.679L66.4705 269.714C62.9973 264.921 59.2562 260.327 55.2652 255.954L52.019 260.576L53.8812 254.45C48.8923 249.092 45.2489 245.86 45.2489 245.86C45.2489 245.86 38.0686 270.253 39.9627 293.358L52.0658 303.903L40.6299 299.072C41.0301 301.712 41.596 304.324 42.3243 306.893C49.7535 332.77 64.2336 351.323 74.6663 348.332C85.0989 345.341 87.534 321.939 80.1048 296.063C77.8019 288.041 73.5758 280.169 68.8419 273.123L62.8332 281.679Z',
                            fill: '#F2F2F2',
                          }),
                          m.jsx('path', {
                            d: 'M243.681 82.9153H241.762V30.3972C241.762 26.4054 240.975 22.4527 239.447 18.7647C237.918 15.0768 235.677 11.7258 232.853 8.90314C230.028 6.0805 226.674 3.84145 222.984 2.31385C219.293 0.786245 215.337 0 211.343 0H99.99C91.9222 0 84.1848 3.20256 78.48 8.90314C72.7752 14.6037 69.5703 22.3354 69.5703 30.3972V318.52C69.5703 322.512 70.3571 326.465 71.8859 330.153C73.4146 333.841 75.6553 337.192 78.48 340.015C81.3048 342.837 84.6582 345.076 88.3489 346.604C92.0396 348.131 95.9952 348.918 99.99 348.918H211.343C219.41 348.918 227.148 345.715 232.852 340.014C238.557 334.314 241.762 326.582 241.762 318.52V120.299H243.68L243.681 82.9153Z',
                            fill: '#E6E6E6',
                          }),
                          m.jsx('path', {
                            d: 'M212.567 7.9054H198.033C198.701 9.54305 198.957 11.3199 198.776 13.0793C198.595 14.8387 197.984 16.5267 196.997 17.9946C196.01 19.4625 194.676 20.6652 193.114 21.4967C191.552 22.3283 189.809 22.7632 188.039 22.7632H124.247C122.477 22.7631 120.734 22.3281 119.172 21.4964C117.61 20.6648 116.277 19.462 115.289 17.9942C114.302 16.5263 113.691 14.8384 113.511 13.079C113.33 11.3197 113.585 9.54298 114.254 7.9054H100.678C94.6531 7.9054 88.8749 10.297 84.6146 14.5542C80.3543 18.8113 77.9609 24.5852 77.9609 30.6057V318.31C77.9609 324.331 80.3543 330.105 84.6146 334.362C88.8749 338.619 94.6531 341.011 100.678 341.011H212.567C218.592 341.011 224.37 338.619 228.63 334.362C232.891 330.105 235.284 324.331 235.284 318.31V30.6053C235.284 24.5848 232.891 18.811 228.63 14.554C224.37 10.297 218.592 7.9054 212.567 7.9054Z',
                            fill: 'white',
                          }),
                          m.jsx('path', {
                            d: 'M142.368 122.512C142.368 120.501 142.898 118.526 143.904 116.784C144.911 115.043 146.359 113.597 148.102 112.592C146.36 111.587 144.383 111.057 142.371 111.057C140.358 111.057 138.381 111.586 136.639 112.591C134.896 113.596 133.448 115.042 132.442 116.784C131.436 118.525 130.906 120.501 130.906 122.512C130.906 124.522 131.436 126.498 132.442 128.239C133.448 129.981 134.896 131.427 136.639 132.432C138.381 133.437 140.358 133.966 142.371 133.966C144.383 133.966 146.36 133.436 148.102 132.431C146.359 131.426 144.911 129.981 143.905 128.24C142.898 126.499 142.368 124.523 142.368 122.512Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M156.779 122.512C156.778 120.501 157.308 118.526 158.315 116.784C159.321 115.043 160.769 113.597 162.513 112.592C160.77 111.587 158.793 111.057 156.781 111.057C154.769 111.057 152.792 111.586 151.049 112.591C149.306 113.596 147.859 115.042 146.852 116.784C145.846 118.525 145.316 120.501 145.316 122.512C145.316 124.522 145.846 126.498 146.852 128.239C147.859 129.981 149.306 131.427 151.049 132.432C152.792 133.437 154.769 133.966 156.781 133.966C158.793 133.966 160.77 133.436 162.513 132.431C160.769 131.426 159.322 129.981 158.315 128.24C157.308 126.499 156.779 124.523 156.779 122.512Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M170.862 133.966C177.192 133.966 182.325 128.838 182.325 122.512C182.325 116.186 177.192 111.057 170.862 111.057C164.531 111.057 159.398 116.186 159.398 122.512C159.398 128.838 164.531 133.966 170.862 133.966Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M190.017 158.289H123.208C122.572 158.288 121.962 158.035 121.512 157.586C121.062 157.137 120.809 156.527 120.809 155.892V89.1315C120.809 88.496 121.062 87.8866 121.512 87.4372C121.962 86.9878 122.572 86.735 123.208 86.7343H190.017C190.653 86.735 191.263 86.9878 191.713 87.4372C192.163 87.8866 192.416 88.496 192.416 89.1315V155.892C192.416 156.527 192.163 157.137 191.713 157.586C191.263 158.035 190.653 158.288 190.017 158.289ZM123.208 87.6937C122.826 87.6941 122.46 87.8457 122.19 88.1154C121.92 88.385 121.769 88.7507 121.768 89.132V155.892C121.769 156.274 121.92 156.639 122.19 156.909C122.46 157.178 122.826 157.33 123.208 157.33H190.017C190.399 157.33 190.765 157.178 191.035 156.909C191.304 156.639 191.456 156.274 191.457 155.892V89.132C191.456 88.7507 191.304 88.385 191.035 88.1154C190.765 87.8457 190.399 87.6941 190.017 87.6937H123.208Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M204.934 209.464H102.469V210.423H204.934V209.464Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M105.705 203.477C107.492 203.477 108.941 202.029 108.941 200.243C108.941 198.457 107.492 197.01 105.705 197.01C103.918 197.01 102.469 198.457 102.469 200.243C102.469 202.029 103.918 203.477 105.705 203.477Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M204.934 241.797H102.469V242.757H204.934V241.797Z',
                            fill: '#CCCCCC',
                          }),
                          m.jsx('path', {
                            d: 'M105.705 235.811C107.492 235.811 108.941 234.363 108.941 232.577C108.941 230.791 107.492 229.344 105.705 229.344C103.918 229.344 102.469 230.791 102.469 232.577C102.469 234.363 103.918 235.811 105.705 235.811Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M203.062 278.617H170.68C170.121 278.617 169.584 278.394 169.189 277.999C168.793 277.604 168.571 277.068 168.57 276.509V265.168C168.571 264.609 168.793 264.073 169.189 263.678C169.584 263.283 170.121 263.06 170.68 263.06H203.062C203.621 263.06 204.158 263.283 204.553 263.678C204.949 264.073 205.171 264.609 205.172 265.168V276.509C205.171 277.068 204.949 277.604 204.553 277.999C204.158 278.394 203.621 278.617 203.062 278.617Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M116.263 203.477C118.05 203.477 119.499 202.029 119.499 200.243C119.499 198.457 118.05 197.01 116.263 197.01C114.476 197.01 113.027 198.457 113.027 200.243C113.027 202.029 114.476 203.477 116.263 203.477Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M126.818 203.477C128.605 203.477 130.054 202.029 130.054 200.243C130.054 198.457 128.605 197.01 126.818 197.01C125.031 197.01 123.582 198.457 123.582 200.243C123.582 202.029 125.031 203.477 126.818 203.477Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M116.263 235.811C118.05 235.811 119.499 234.363 119.499 232.577C119.499 230.791 118.05 229.344 116.263 229.344C114.476 229.344 113.027 230.791 113.027 232.577C113.027 234.363 114.476 235.811 116.263 235.811Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M126.818 235.811C128.605 235.811 130.054 234.363 130.054 232.577C130.054 230.791 128.605 229.344 126.818 229.344C125.031 229.344 123.582 230.791 123.582 232.577C123.582 234.363 125.031 235.811 126.818 235.811Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M264.742 229.309C264.972 229.414 265.193 229.537 265.404 229.678L286.432 220.709L287.183 215.174L295.585 215.123L295.089 227.818L267.334 235.153C267.275 235.345 267.205 235.535 267.124 235.719C266.722 236.574 266.077 237.292 265.269 237.783C264.46 238.273 263.525 238.514 262.58 238.475C261.636 238.436 260.723 238.119 259.958 237.563C259.193 237.008 258.61 236.239 258.28 235.353C257.951 234.467 257.892 233.504 258.108 232.584C258.325 231.664 258.809 230.829 259.5 230.183C260.19 229.538 261.056 229.11 261.989 228.955C262.922 228.799 263.879 228.922 264.742 229.309Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M298.642 344.352H292.894L290.16 322.198L298.643 322.198L298.642 344.352Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M288.788 342.711H299.873V349.685H281.809C281.809 347.835 282.544 346.062 283.853 344.754C285.162 343.446 286.937 342.711 288.788 342.711Z',
                            fill: '#1C2434',
                          }),
                          m.jsx('path', {
                            d: 'M320.995 342.729L315.274 343.292L310.379 321.513L318.822 320.682L320.995 342.729Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M311.028 342.061L322.059 340.975L322.744 347.916L304.766 349.685C304.676 348.774 304.767 347.854 305.033 346.977C305.299 346.101 305.735 345.285 306.317 344.577C306.898 343.869 307.614 343.283 308.422 342.851C309.23 342.419 310.116 342.151 311.028 342.061Z',
                            fill: '#1C2434',
                          }),
                          m.jsx('path', {
                            d: 'M300.242 191.677C306.601 191.677 311.757 186.525 311.757 180.17C311.757 173.815 306.601 168.663 300.242 168.663C293.882 168.663 288.727 173.815 288.727 180.17C288.727 186.525 293.882 191.677 300.242 191.677Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M291.607 339.872C291.113 339.873 290.635 339.7 290.256 339.383C289.877 339.066 289.623 338.626 289.537 338.139C286.562 321.636 276.838 267.676 276.605 266.181C276.6 266.147 276.597 266.112 276.598 266.077V262.054C276.597 261.907 276.643 261.764 276.729 261.645L278.013 259.847C278.074 259.761 278.154 259.689 278.247 259.639C278.34 259.588 278.444 259.559 278.549 259.554C285.874 259.211 309.86 258.206 311.019 259.652C312.183 261.106 311.772 265.512 311.678 266.38L311.682 266.471L322.459 335.337C322.543 335.886 322.408 336.446 322.082 336.896C321.756 337.347 321.265 337.65 320.717 337.742L313.986 338.85C313.485 338.931 312.971 338.829 312.539 338.563C312.107 338.297 311.784 337.885 311.63 337.401C309.548 330.754 302.568 308.393 300.149 299.741C300.133 299.686 300.099 299.639 300.051 299.607C300.004 299.576 299.946 299.563 299.89 299.571C299.834 299.579 299.782 299.608 299.745 299.651C299.708 299.694 299.688 299.749 299.689 299.806C299.81 308.054 300.102 329.098 300.203 336.366L300.214 337.148C300.218 337.678 300.023 338.191 299.668 338.584C299.313 338.978 298.823 339.224 298.295 339.274L291.804 339.863C291.738 339.869 291.672 339.872 291.607 339.872Z',
                            fill: '#1C2434',
                          }),
                          m.jsx('path', {
                            d: 'M292.933 196.201C290.924 197.395 289.721 199.588 289.031 201.821C287.754 205.953 286.985 210.226 286.741 214.545L286.012 227.475L276.984 261.755C284.809 268.37 289.322 266.867 299.855 261.455C310.387 256.044 311.591 263.26 311.591 263.26L313.697 234.092L316.706 202.219C316.031 201.407 315.266 200.672 314.427 200.03C311.645 197.868 308.409 196.366 304.962 195.636C301.516 194.906 297.948 194.967 294.528 195.815L292.933 196.201Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M290.001 236.232C290.244 236.324 290.479 236.434 290.704 236.562L311.497 226.163L311.842 220.529L320.419 219.938L320.878 232.781L293.092 241.963C292.865 242.935 292.347 243.816 291.608 244.487C290.868 245.158 289.941 245.588 288.951 245.72C287.96 245.852 286.953 245.68 286.063 245.226C285.173 244.772 284.442 244.058 283.968 243.179C283.494 242.301 283.299 241.298 283.409 240.306C283.519 239.313 283.928 238.378 284.583 237.624C285.238 236.869 286.107 236.332 287.075 236.084C288.043 235.835 289.063 235.887 290.001 236.232Z',
                            fill: '#FFB8B8',
                          }),
                          m.jsx('path', {
                            d: 'M316.556 202.365C321.672 204.17 322.573 223.716 322.573 223.716C316.554 220.409 309.332 225.821 309.332 225.821C309.332 225.821 307.827 220.709 306.022 214.094C305.477 212.233 305.412 210.265 305.832 208.372C306.253 206.479 307.147 204.724 308.429 203.269C308.429 203.269 311.44 200.56 316.556 202.365Z',
                            fill: '#3056D3',
                          }),
                          m.jsx('path', {
                            d: 'M310.566 183.213C309.132 182.066 307.174 184.151 307.174 184.151L306.026 173.828C306.026 173.828 298.853 174.687 294.261 173.542C289.67 172.396 288.953 177.7 288.953 177.7C288.716 175.557 288.668 173.399 288.81 171.248C289.096 168.667 292.827 166.087 299.427 164.366C306.026 162.646 309.47 170.101 309.47 170.101C314.061 172.395 312.001 184.36 310.566 183.213Z',
                            fill: '#1C2434',
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
              }),
              m.jsx('div', {
                className:
                  'w-full border-stroke dark:border-strokedark xl:w-1/2 xl:border-l-2',
                children: m.jsxs('div', {
                  className: 'w-full p-4 sm:p-12.5 xl:p-17.5',
                  children: [
                    m.jsx('span', {
                      className: 'mb-1.5 block font-medium',
                      children: 'Start for free',
                    }),
                    m.jsx('h2', {
                      className:
                        'mb-9 text-2xl font-bold text-black dark:text-white sm:text-title-xl2',
                      children: 'Sign Up to TailAdmin',
                    }),
                    m.jsxs('form', {
                      children: [
                        m.jsxs('div', {
                          className: 'mb-4',
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-2.5 block font-medium text-black dark:text-white',
                              children: 'Name',
                            }),
                            m.jsxs('div', {
                              className: 'relative',
                              children: [
                                m.jsx('input', {
                                  type: 'text',
                                  placeholder: 'Enter your full name',
                                  className:
                                    'w-full rounded-lg border border-stroke bg-transparent py-4 pl-6 pr-10 text-black outline-none focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                                }),
                                m.jsx('span', {
                                  className: 'absolute right-4 top-4',
                                  children: m.jsx('svg', {
                                    className: 'fill-current',
                                    width: '22',
                                    height: '22',
                                    viewBox: '0 0 22 22',
                                    fill: 'none',
                                    xmlns: 'http://www.w3.org/2000/svg',
                                    children: m.jsxs('g', {
                                      opacity: '0.5',
                                      children: [
                                        m.jsx('path', {
                                          d: 'M11.0008 9.52185C13.5445 9.52185 15.607 7.5281 15.607 5.0531C15.607 2.5781 13.5445 0.584351 11.0008 0.584351C8.45703 0.584351 6.39453 2.5781 6.39453 5.0531C6.39453 7.5281 8.45703 9.52185 11.0008 9.52185ZM11.0008 2.1656C12.6852 2.1656 14.0602 3.47185 14.0602 5.08748C14.0602 6.7031 12.6852 8.00935 11.0008 8.00935C9.31641 8.00935 7.94141 6.7031 7.94141 5.08748C7.94141 3.47185 9.31641 2.1656 11.0008 2.1656Z',
                                          fill: '',
                                        }),
                                        m.jsx('path', {
                                          d: 'M13.2352 11.0687H8.76641C5.08828 11.0687 2.09766 14.0937 2.09766 17.7719V20.625C2.09766 21.0375 2.44141 21.4156 2.88828 21.4156C3.33516 21.4156 3.67891 21.0719 3.67891 20.625V17.7719C3.67891 14.9531 5.98203 12.6156 8.83516 12.6156H13.2695C16.0883 12.6156 18.4258 14.9187 18.4258 17.7719V20.625C18.4258 21.0375 18.7695 21.4156 19.2164 21.4156C19.6633 21.4156 20.007 21.0719 20.007 20.625V17.7719C19.9039 14.0937 16.9133 11.0687 13.2352 11.0687Z',
                                          fill: '',
                                        }),
                                      ],
                                    }),
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          className: 'mb-4',
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-2.5 block font-medium text-black dark:text-white',
                              children: 'Email',
                            }),
                            m.jsxs('div', {
                              className: 'relative',
                              children: [
                                m.jsx('input', {
                                  type: 'email',
                                  placeholder: 'Enter your email',
                                  className:
                                    'w-full rounded-lg border border-stroke bg-transparent py-4 pl-6 pr-10 text-black outline-none focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                                }),
                                m.jsx('span', {
                                  className: 'absolute right-4 top-4',
                                  children: m.jsx('svg', {
                                    className: 'fill-current',
                                    width: '22',
                                    height: '22',
                                    viewBox: '0 0 22 22',
                                    fill: 'none',
                                    xmlns: 'http://www.w3.org/2000/svg',
                                    children: m.jsx('g', {
                                      opacity: '0.5',
                                      children: m.jsx('path', {
                                        d: 'M19.2516 3.30005H2.75156C1.58281 3.30005 0.585938 4.26255 0.585938 5.46567V16.6032C0.585938 17.7719 1.54844 18.7688 2.75156 18.7688H19.2516C20.4203 18.7688 21.4172 17.8063 21.4172 16.6032V5.4313C21.4172 4.26255 20.4203 3.30005 19.2516 3.30005ZM19.2516 4.84692C19.2859 4.84692 19.3203 4.84692 19.3547 4.84692L11.0016 10.2094L2.64844 4.84692C2.68281 4.84692 2.71719 4.84692 2.75156 4.84692H19.2516ZM19.2516 17.1532H2.75156C2.40781 17.1532 2.13281 16.8782 2.13281 16.5344V6.35942L10.1766 11.5157C10.4172 11.6875 10.6922 11.7563 10.9672 11.7563C11.2422 11.7563 11.5172 11.6875 11.7578 11.5157L19.8016 6.35942V16.5688C19.8703 16.9125 19.5953 17.1532 19.2516 17.1532Z',
                                        fill: '',
                                      }),
                                    }),
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          className: 'mb-4',
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-2.5 block font-medium text-black dark:text-white',
                              children: 'Password',
                            }),
                            m.jsxs('div', {
                              className: 'relative',
                              children: [
                                m.jsx('input', {
                                  type: 'password',
                                  placeholder: 'Enter your password',
                                  className:
                                    'w-full rounded-lg border border-stroke bg-transparent py-4 pl-6 pr-10 text-black outline-none focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                                }),
                                m.jsx('span', {
                                  className: 'absolute right-4 top-4',
                                  children: m.jsx('svg', {
                                    className: 'fill-current',
                                    width: '22',
                                    height: '22',
                                    viewBox: '0 0 22 22',
                                    fill: 'none',
                                    xmlns: 'http://www.w3.org/2000/svg',
                                    children: m.jsxs('g', {
                                      opacity: '0.5',
                                      children: [
                                        m.jsx('path', {
                                          d: 'M16.1547 6.80626V5.91251C16.1547 3.16251 14.0922 0.825009 11.4797 0.618759C10.0359 0.481259 8.59219 0.996884 7.52656 1.95938C6.46094 2.92188 5.84219 4.29688 5.84219 5.70626V6.80626C3.84844 7.18438 2.33594 8.93751 2.33594 11.0688V17.2906C2.33594 19.5594 4.19219 21.3813 6.42656 21.3813H15.5016C17.7703 21.3813 19.6266 19.525 19.6266 17.2563V11C19.6609 8.93751 18.1484 7.21876 16.1547 6.80626ZM8.55781 3.09376C9.31406 2.40626 10.3109 2.06251 11.3422 2.16563C13.1641 2.33751 14.6078 3.98751 14.6078 5.91251V6.70313H7.38906V5.67188C7.38906 4.70938 7.80156 3.78126 8.55781 3.09376ZM18.1141 17.2906C18.1141 18.7 16.9453 19.8688 15.5359 19.8688H6.46094C5.05156 19.8688 3.91719 18.7344 3.91719 17.325V11.0688C3.91719 9.52189 5.15469 8.28438 6.70156 8.28438H15.2953C16.8422 8.28438 18.1141 9.52188 18.1141 11V17.2906Z',
                                          fill: '',
                                        }),
                                        m.jsx('path', {
                                          d: 'M10.9977 11.8594C10.5852 11.8594 10.207 12.2031 10.207 12.65V16.2594C10.207 16.6719 10.5508 17.05 10.9977 17.05C11.4102 17.05 11.7883 16.7063 11.7883 16.2594V12.6156C11.7883 12.2031 11.4102 11.8594 10.9977 11.8594Z',
                                          fill: '',
                                        }),
                                      ],
                                    }),
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          className: 'mb-6',
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-2.5 block font-medium text-black dark:text-white',
                              children: 'Re-type Password',
                            }),
                            m.jsxs('div', {
                              className: 'relative',
                              children: [
                                m.jsx('input', {
                                  type: 'password',
                                  placeholder: 'Re-enter your password',
                                  className:
                                    'w-full rounded-lg border border-stroke bg-transparent py-4 pl-6 pr-10 text-black outline-none focus:border-primary focus-visible:shadow-none dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                                }),
                                m.jsx('span', {
                                  className: 'absolute right-4 top-4',
                                  children: m.jsx('svg', {
                                    className: 'fill-current',
                                    width: '22',
                                    height: '22',
                                    viewBox: '0 0 22 22',
                                    fill: 'none',
                                    xmlns: 'http://www.w3.org/2000/svg',
                                    children: m.jsxs('g', {
                                      opacity: '0.5',
                                      children: [
                                        m.jsx('path', {
                                          d: 'M16.1547 6.80626V5.91251C16.1547 3.16251 14.0922 0.825009 11.4797 0.618759C10.0359 0.481259 8.59219 0.996884 7.52656 1.95938C6.46094 2.92188 5.84219 4.29688 5.84219 5.70626V6.80626C3.84844 7.18438 2.33594 8.93751 2.33594 11.0688V17.2906C2.33594 19.5594 4.19219 21.3813 6.42656 21.3813H15.5016C17.7703 21.3813 19.6266 19.525 19.6266 17.2563V11C19.6609 8.93751 18.1484 7.21876 16.1547 6.80626ZM8.55781 3.09376C9.31406 2.40626 10.3109 2.06251 11.3422 2.16563C13.1641 2.33751 14.6078 3.98751 14.6078 5.91251V6.70313H7.38906V5.67188C7.38906 4.70938 7.80156 3.78126 8.55781 3.09376ZM18.1141 17.2906C18.1141 18.7 16.9453 19.8688 15.5359 19.8688H6.46094C5.05156 19.8688 3.91719 18.7344 3.91719 17.325V11.0688C3.91719 9.52189 5.15469 8.28438 6.70156 8.28438H15.2953C16.8422 8.28438 18.1141 9.52188 18.1141 11V17.2906Z',
                                          fill: '',
                                        }),
                                        m.jsx('path', {
                                          d: 'M10.9977 11.8594C10.5852 11.8594 10.207 12.2031 10.207 12.65V16.2594C10.207 16.6719 10.5508 17.05 10.9977 17.05C11.4102 17.05 11.7883 16.7063 11.7883 16.2594V12.6156C11.7883 12.2031 11.4102 11.8594 10.9977 11.8594Z',
                                          fill: '',
                                        }),
                                      ],
                                    }),
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                        m.jsx('div', {
                          className: 'mb-5',
                          children: m.jsx('input', {
                            type: 'submit',
                            value: 'Create account',
                            className:
                              'w-full cursor-pointer rounded-lg border border-primary bg-primary p-4 text-white transition hover:bg-opacity-90',
                          }),
                        }),
                        m.jsxs('button', {
                          className:
                            'flex w-full items-center justify-center gap-3.5 rounded-lg border border-stroke bg-gray p-4 hover:bg-opacity-50 dark:border-strokedark dark:bg-meta-4 dark:hover:bg-opacity-50',
                          children: [
                            m.jsx('span', {
                              children: m.jsxs('svg', {
                                width: '20',
                                height: '20',
                                viewBox: '0 0 20 20',
                                fill: 'none',
                                xmlns: 'http://www.w3.org/2000/svg',
                                children: [
                                  m.jsxs('g', {
                                    clipPath: 'url(#clip0_191_13499)',
                                    children: [
                                      m.jsx('path', {
                                        d: 'M19.999 10.2217C20.0111 9.53428 19.9387 8.84788 19.7834 8.17737H10.2031V11.8884H15.8266C15.7201 12.5391 15.4804 13.162 15.1219 13.7195C14.7634 14.2771 14.2935 14.7578 13.7405 15.1328L13.7209 15.2571L16.7502 17.5568L16.96 17.5774C18.8873 15.8329 19.9986 13.2661 19.9986 10.2217',
                                        fill: '#4285F4',
                                      }),
                                      m.jsx('path', {
                                        d: 'M10.2055 19.9999C12.9605 19.9999 15.2734 19.111 16.9629 17.5777L13.7429 15.1331C12.8813 15.7221 11.7248 16.1333 10.2055 16.1333C8.91513 16.1259 7.65991 15.7205 6.61791 14.9745C5.57592 14.2286 4.80007 13.1801 4.40044 11.9777L4.28085 11.9877L1.13101 14.3765L1.08984 14.4887C1.93817 16.1456 3.24007 17.5386 4.84997 18.5118C6.45987 19.4851 8.31429 20.0004 10.2059 19.9999',
                                        fill: '#34A853',
                                      }),
                                      m.jsx('path', {
                                        d: 'M4.39899 11.9777C4.1758 11.3411 4.06063 10.673 4.05807 9.99996C4.06218 9.32799 4.1731 8.66075 4.38684 8.02225L4.38115 7.88968L1.19269 5.4624L1.0884 5.51101C0.372763 6.90343 0 8.4408 0 9.99987C0 11.5589 0.372763 13.0963 1.0884 14.4887L4.39899 11.9777Z',
                                        fill: '#FBBC05',
                                      }),
                                      m.jsx('path', {
                                        d: 'M10.2059 3.86663C11.668 3.84438 13.0822 4.37803 14.1515 5.35558L17.0313 2.59996C15.1843 0.901848 12.7383 -0.0298855 10.2059 -3.6784e-05C8.31431 -0.000477834 6.4599 0.514732 4.85001 1.48798C3.24011 2.46124 1.9382 3.85416 1.08984 5.51101L4.38946 8.02225C4.79303 6.82005 5.57145 5.77231 6.61498 5.02675C7.65851 4.28118 8.9145 3.87541 10.2059 3.86663Z',
                                        fill: '#EB4335',
                                      }),
                                    ],
                                  }),
                                  m.jsx('defs', {
                                    children: m.jsx('clipPath', {
                                      id: 'clip0_191_13499',
                                      children: m.jsx('rect', {
                                        width: '20',
                                        height: '20',
                                        fill: 'white',
                                      }),
                                    }),
                                  }),
                                ],
                              }),
                            }),
                            'Sign up with Google',
                          ],
                        }),
                        m.jsx('div', {
                          className: 'mt-6 text-center',
                          children: m.jsxs('p', {
                            children: [
                              'Already have an account?',
                              ' ',
                              m.jsx(Pe, {
                                to: '/auth/signin',
                                className: 'text-primary',
                                children: 'Sign in',
                              }),
                            ],
                          }),
                        }),
                      ],
                    }),
                  ],
                }),
              }),
            ],
          }),
        }),
      ],
    }),
  Im = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Calendar' }),
        m.jsx('div', {
          className:
            'w-full max-w-full rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
          children: m.jsxs('table', {
            className: 'w-full',
            children: [
              m.jsx('thead', {
                children: m.jsxs('tr', {
                  className:
                    'grid grid-cols-7 rounded-t-sm bg-primary text-white',
                  children: [
                    m.jsxs('th', {
                      className:
                        'flex h-15 items-center justify-center rounded-tl-sm p-1 text-xs font-semibold sm:text-base xl:p-5',
                      children: [
                        m.jsx('span', {
                          className: 'hidden lg:block',
                          children: ' Sunday ',
                        }),
                        m.jsx('span', {
                          className: 'block lg:hidden',
                          children: ' Sun ',
                        }),
                      ],
                    }),
                    m.jsxs('th', {
                      className:
                        'flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5',
                      children: [
                        m.jsx('span', {
                          className: 'hidden lg:block',
                          children: ' Monday ',
                        }),
                        m.jsx('span', {
                          className: 'block lg:hidden',
                          children: ' Mon ',
                        }),
                      ],
                    }),
                    m.jsxs('th', {
                      className:
                        'flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5',
                      children: [
                        m.jsx('span', {
                          className: 'hidden lg:block',
                          children: ' Tuesday ',
                        }),
                        m.jsx('span', {
                          className: 'block lg:hidden',
                          children: ' Tue ',
                        }),
                      ],
                    }),
                    m.jsxs('th', {
                      className:
                        'flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5',
                      children: [
                        m.jsx('span', {
                          className: 'hidden lg:block',
                          children: ' Wednesday ',
                        }),
                        m.jsx('span', {
                          className: 'block lg:hidden',
                          children: ' Wed ',
                        }),
                      ],
                    }),
                    m.jsxs('th', {
                      className:
                        'flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5',
                      children: [
                        m.jsx('span', {
                          className: 'hidden lg:block',
                          children: ' Thursday ',
                        }),
                        m.jsx('span', {
                          className: 'block lg:hidden',
                          children: ' Thur ',
                        }),
                      ],
                    }),
                    m.jsxs('th', {
                      className:
                        'flex h-15 items-center justify-center p-1 text-xs font-semibold sm:text-base xl:p-5',
                      children: [
                        m.jsx('span', {
                          className: 'hidden lg:block',
                          children: ' Friday ',
                        }),
                        m.jsx('span', {
                          className: 'block lg:hidden',
                          children: ' Fri ',
                        }),
                      ],
                    }),
                    m.jsxs('th', {
                      className:
                        'flex h-15 items-center justify-center rounded-tr-sm p-1 text-xs font-semibold sm:text-base xl:p-5',
                      children: [
                        m.jsx('span', {
                          className: 'hidden lg:block',
                          children: ' Saturday ',
                        }),
                        m.jsx('span', {
                          className: 'block lg:hidden',
                          children: ' Sat ',
                        }),
                      ],
                    }),
                  ],
                }),
              }),
              m.jsxs('tbody', {
                children: [
                  m.jsxs('tr', {
                    className: 'grid grid-cols-7',
                    children: [
                      m.jsxs('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: [
                          m.jsx('span', {
                            className: 'font-medium text-black dark:text-white',
                            children: '1',
                          }),
                          m.jsxs('div', {
                            className:
                              'group h-16 w-full flex-grow cursor-pointer py-1 md:h-30',
                            children: [
                              m.jsx('span', {
                                className: 'group-hover:text-primary md:hidden',
                                children: 'More',
                              }),
                              m.jsxs('div', {
                                className:
                                  'event invisible absolute left-2 z-99 mb-1 flex w-[200%] flex-col rounded-sm border-l-[3px] border-primary bg-gray px-3 py-1 text-left opacity-0 group-hover:visible group-hover:opacity-100 dark:bg-meta-4 md:visible md:w-[190%] md:opacity-100',
                                children: [
                                  m.jsx('span', {
                                    className:
                                      'event-name text-sm font-semibold text-black dark:text-white',
                                    children: 'Redesign Website',
                                  }),
                                  m.jsx('span', {
                                    className:
                                      'time text-sm font-medium text-black dark:text-white',
                                    children: '1 Dec - 2 Dec',
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '2',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '3',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '4',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '5',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '6',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '7',
                        }),
                      }),
                    ],
                  }),
                  m.jsxs('tr', {
                    className: 'grid grid-cols-7',
                    children: [
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '8',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '9',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '10',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '11',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '12',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '13',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '14',
                        }),
                      }),
                    ],
                  }),
                  m.jsxs('tr', {
                    className: 'grid grid-cols-7',
                    children: [
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '15',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '16',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '17',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '18',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '19',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '20',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '21',
                        }),
                      }),
                    ],
                  }),
                  m.jsxs('tr', {
                    className: 'grid grid-cols-7',
                    children: [
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '22',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '23',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '24',
                        }),
                      }),
                      m.jsxs('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: [
                          m.jsx('span', {
                            className: 'font-medium text-black dark:text-white',
                            children: '25',
                          }),
                          m.jsxs('div', {
                            className:
                              'group h-16 w-full flex-grow cursor-pointer py-1 md:h-30',
                            children: [
                              m.jsx('span', {
                                className: 'group-hover:text-primary md:hidden',
                                children: 'More',
                              }),
                              m.jsxs('div', {
                                className:
                                  'event invisible absolute left-2 z-99 mb-1 flex w-[300%] flex-col rounded-sm border-l-[3px] border-primary bg-gray px-3 py-1 text-left opacity-0 group-hover:visible group-hover:opacity-100 dark:bg-meta-4 md:visible md:w-[290%] md:opacity-100',
                                children: [
                                  m.jsx('span', {
                                    className:
                                      'event-name text-sm font-semibold text-black dark:text-white',
                                    children: 'App Design',
                                  }),
                                  m.jsx('span', {
                                    className:
                                      'time text-sm font-medium text-black dark:text-white',
                                    children: '25 Dec - 27 Dec',
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '26',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '27',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '28',
                        }),
                      }),
                    ],
                  }),
                  m.jsxs('tr', {
                    className: 'grid grid-cols-7',
                    children: [
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '29',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '30',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '31',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '1',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '2',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '3',
                        }),
                      }),
                      m.jsx('td', {
                        className:
                          'ease relative h-20 cursor-pointer border border-stroke p-2 transition duration-500 hover:bg-gray dark:border-strokedark dark:hover:bg-meta-4 md:h-25 md:p-6 xl:h-31',
                        children: m.jsx('span', {
                          className: 'font-medium text-black dark:text-white',
                          children: '4',
                        }),
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
        }),
      ],
    });
function Nf(e, n) {
  return function () {
    return e.apply(n, arguments);
  };
}
const { toString: Rm } = Object.prototype,
  { getPrototypeOf: ud } = Object,
  co = ((e) => (n) => {
    const r = Rm.call(n);
    return e[r] || (e[r] = r.slice(8, -1).toLowerCase());
  })(Object.create(null)),
  hi = (e) => ((e = e.toLowerCase()), (n) => co(n) === e),
  uo = (e) => (n) => typeof n === e,
  { isArray: pn } = Array,
  pa = uo('undefined');
function Om(e) {
  return (
    e !== null &&
    !pa(e) &&
    e.constructor !== null &&
    !pa(e.constructor) &&
    Ht(e.constructor.isBuffer) &&
    e.constructor.isBuffer(e)
  );
}
const Ef = hi('ArrayBuffer');
function Fm(e) {
  let n;
  return (
    typeof ArrayBuffer < 'u' && ArrayBuffer.isView
      ? (n = ArrayBuffer.isView(e))
      : (n = e && e.buffer && Ef(e.buffer)),
    n
  );
}
const zm = uo('string'),
  Ht = uo('function'),
  jf = uo('number'),
  ho = (e) => e !== null && typeof e == 'object',
  Hm = (e) => e === !0 || e === !1,
  hs = (e) => {
    if (co(e) !== 'object') return !1;
    const n = ud(e);
    return (
      (n === null ||
        n === Object.prototype ||
        Object.getPrototypeOf(n) === null) &&
      !(Symbol.toStringTag in e) &&
      !(Symbol.iterator in e)
    );
  },
  Bm = hi('Date'),
  Ym = hi('File'),
  Xm = hi('Blob'),
  _m = hi('FileList'),
  Vm = (e) => ho(e) && Ht(e.pipe),
  Wm = (e) => {
    let n;
    return (
      e &&
      ((typeof FormData == 'function' && e instanceof FormData) ||
        (Ht(e.append) &&
          ((n = co(e)) === 'formdata' ||
            (n === 'object' &&
              Ht(e.toString) &&
              e.toString() === '[object FormData]'))))
    );
  },
  Gm = hi('URLSearchParams'),
  [Um, Zm, $m, qm] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(
    hi
  ),
  Km = (e) =>
    e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
function Ca(e, n, { allOwnKeys: r = !1 } = {}) {
  if (e === null || typeof e > 'u') return;
  let c, f;
  if ((typeof e != 'object' && (e = [e]), pn(e)))
    for (c = 0, f = e.length; c < f; c++) n.call(null, e[c], c, e);
  else {
    const g = r ? Object.getOwnPropertyNames(e) : Object.keys(e),
      w = g.length;
    let k;
    for (c = 0; c < w; c++) (k = g[c]), n.call(null, e[k], k, e);
  }
}
function Mf(e, n) {
  n = n.toLowerCase();
  const r = Object.keys(e);
  let c = r.length,
    f;
  for (; c-- > 0; ) if (((f = r[c]), n === f.toLowerCase())) return f;
  return null;
}
const mr = (() =>
    typeof globalThis < 'u'
      ? globalThis
      : typeof self < 'u'
      ? self
      : typeof window < 'u'
      ? window
      : global)(),
  Pf = (e) => !pa(e) && e !== mr;
function rc() {
  const { caseless: e } = (Pf(this) && this) || {},
    n = {},
    r = (c, f) => {
      const g = (e && Mf(n, f)) || f;
      hs(n[g]) && hs(c)
        ? (n[g] = rc(n[g], c))
        : hs(c)
        ? (n[g] = rc({}, c))
        : pn(c)
        ? (n[g] = c.slice())
        : (n[g] = c);
    };
  for (let c = 0, f = arguments.length; c < f; c++)
    arguments[c] && Ca(arguments[c], r);
  return n;
}
const Qm = (e, n, r, { allOwnKeys: c } = {}) => (
    Ca(
      n,
      (f, g) => {
        r && Ht(f) ? (e[g] = Nf(f, r)) : (e[g] = f);
      },
      { allOwnKeys: c }
    ),
    e
  ),
  Jm = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e),
  ex = (e, n, r, c) => {
    (e.prototype = Object.create(n.prototype, c)),
      (e.prototype.constructor = e),
      Object.defineProperty(e, 'super', { value: n.prototype }),
      r && Object.assign(e.prototype, r);
  },
  tx = (e, n, r, c) => {
    let f, g, w;
    const k = {};
    if (((n = n || {}), e == null)) return n;
    do {
      for (f = Object.getOwnPropertyNames(e), g = f.length; g-- > 0; )
        (w = f[g]), (!c || c(w, e, n)) && !k[w] && ((n[w] = e[w]), (k[w] = !0));
      e = r !== !1 && ud(e);
    } while (e && (!r || r(e, n)) && e !== Object.prototype);
    return n;
  },
  ix = (e, n, r) => {
    (e = String(e)),
      (r === void 0 || r > e.length) && (r = e.length),
      (r -= n.length);
    const c = e.indexOf(n, r);
    return c !== -1 && c === r;
  },
  rx = (e) => {
    if (!e) return null;
    if (pn(e)) return e;
    let n = e.length;
    if (!jf(n)) return null;
    const r = new Array(n);
    for (; n-- > 0; ) r[n] = e[n];
    return r;
  },
  nx = (
    (e) => (n) =>
      e && n instanceof e
  )(typeof Uint8Array < 'u' && ud(Uint8Array)),
  ax = (e, n) => {
    const c = (e && e[Symbol.iterator]).call(e);
    let f;
    for (; (f = c.next()) && !f.done; ) {
      const g = f.value;
      n.call(e, g[0], g[1]);
    }
  },
  sx = (e, n) => {
    let r;
    const c = [];
    for (; (r = e.exec(n)) !== null; ) c.push(r);
    return c;
  },
  ox = hi('HTMLFormElement'),
  lx = (e) =>
    e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function (r, c, f) {
      return c.toUpperCase() + f;
    }),
  Fu = (
    ({ hasOwnProperty: e }) =>
    (n, r) =>
      e.call(n, r)
  )(Object.prototype),
  cx = hi('RegExp'),
  Tf = (e, n) => {
    const r = Object.getOwnPropertyDescriptors(e),
      c = {};
    Ca(r, (f, g) => {
      let w;
      (w = n(f, g, e)) !== !1 && (c[g] = w || f);
    }),
      Object.defineProperties(e, c);
  },
  dx = (e) => {
    Tf(e, (n, r) => {
      if (Ht(e) && ['arguments', 'caller', 'callee'].indexOf(r) !== -1)
        return !1;
      const c = e[r];
      if (Ht(c)) {
        if (((n.enumerable = !1), 'writable' in n)) {
          n.writable = !1;
          return;
        }
        n.set ||
          (n.set = () => {
            throw Error("Can not rewrite read-only method '" + r + "'");
          });
      }
    });
  },
  ux = (e, n) => {
    const r = {},
      c = (f) => {
        f.forEach((g) => {
          r[g] = !0;
        });
      };
    return pn(e) ? c(e) : c(String(e).split(n)), r;
  },
  hx = () => {},
  fx = (e, n) => (e != null && Number.isFinite((e = +e)) ? e : n),
  Qo = 'abcdefghijklmnopqrstuvwxyz',
  zu = '0123456789',
  Df = { DIGIT: zu, ALPHA: Qo, ALPHA_DIGIT: Qo + Qo.toUpperCase() + zu },
  px = (e = 16, n = Df.ALPHA_DIGIT) => {
    let r = '';
    const { length: c } = n;
    for (; e--; ) r += n[(Math.random() * c) | 0];
    return r;
  };
function gx(e) {
  return !!(
    e &&
    Ht(e.append) &&
    e[Symbol.toStringTag] === 'FormData' &&
    e[Symbol.iterator]
  );
}
const mx = (e) => {
    const n = new Array(10),
      r = (c, f) => {
        if (ho(c)) {
          if (n.indexOf(c) >= 0) return;
          if (!('toJSON' in c)) {
            n[f] = c;
            const g = pn(c) ? [] : {};
            return (
              Ca(c, (w, k) => {
                const M = r(w, f + 1);
                !pa(M) && (g[k] = M);
              }),
              (n[f] = void 0),
              g
            );
          }
        }
        return c;
      };
    return r(e, 0);
  },
  xx = hi('AsyncFunction'),
  vx = (e) => e && (ho(e) || Ht(e)) && Ht(e.then) && Ht(e.catch),
  If = ((e, n) =>
    e
      ? setImmediate
      : n
      ? ((r, c) => (
          mr.addEventListener(
            'message',
            ({ source: f, data: g }) => {
              f === mr && g === r && c.length && c.shift()();
            },
            !1
          ),
          (f) => {
            c.push(f), mr.postMessage(r, '*');
          }
        ))(`axios@${Math.random()}`, [])
      : (r) => setTimeout(r))(
    typeof setImmediate == 'function',
    Ht(mr.postMessage)
  ),
  bx =
    typeof queueMicrotask < 'u'
      ? queueMicrotask.bind(mr)
      : (typeof process < 'u' && process.nextTick) || If,
  J = {
    isArray: pn,
    isArrayBuffer: Ef,
    isBuffer: Om,
    isFormData: Wm,
    isArrayBufferView: Fm,
    isString: zm,
    isNumber: jf,
    isBoolean: Hm,
    isObject: ho,
    isPlainObject: hs,
    isReadableStream: Um,
    isRequest: Zm,
    isResponse: $m,
    isHeaders: qm,
    isUndefined: pa,
    isDate: Bm,
    isFile: Ym,
    isBlob: Xm,
    isRegExp: cx,
    isFunction: Ht,
    isStream: Vm,
    isURLSearchParams: Gm,
    isTypedArray: nx,
    isFileList: _m,
    forEach: Ca,
    merge: rc,
    extend: Qm,
    trim: Km,
    stripBOM: Jm,
    inherits: ex,
    toFlatObject: tx,
    kindOf: co,
    kindOfTest: hi,
    endsWith: ix,
    toArray: rx,
    forEachEntry: ax,
    matchAll: sx,
    isHTMLForm: ox,
    hasOwnProperty: Fu,
    hasOwnProp: Fu,
    reduceDescriptors: Tf,
    freezeMethods: dx,
    toObjectSet: ux,
    toCamelCase: lx,
    noop: hx,
    toFiniteNumber: fx,
    findKey: Mf,
    global: mr,
    isContextDefined: Pf,
    ALPHABET: Df,
    generateString: px,
    isSpecCompliantForm: gx,
    toJSONObject: mx,
    isAsyncFn: xx,
    isThenable: vx,
    setImmediate: If,
    asap: bx,
  };
function ke(e, n, r, c, f) {
  Error.call(this),
    Error.captureStackTrace
      ? Error.captureStackTrace(this, this.constructor)
      : (this.stack = new Error().stack),
    (this.message = e),
    (this.name = 'AxiosError'),
    n && (this.code = n),
    r && (this.config = r),
    c && (this.request = c),
    f && ((this.response = f), (this.status = f.status ? f.status : null));
}
J.inherits(ke, Error, {
  toJSON: function () {
    return {
      message: this.message,
      name: this.name,
      description: this.description,
      number: this.number,
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      config: J.toJSONObject(this.config),
      code: this.code,
      status: this.status,
    };
  },
});
const Rf = ke.prototype,
  Of = {};
[
  'ERR_BAD_OPTION_VALUE',
  'ERR_BAD_OPTION',
  'ECONNABORTED',
  'ETIMEDOUT',
  'ERR_NETWORK',
  'ERR_FR_TOO_MANY_REDIRECTS',
  'ERR_DEPRECATED',
  'ERR_BAD_RESPONSE',
  'ERR_BAD_REQUEST',
  'ERR_CANCELED',
  'ERR_NOT_SUPPORT',
  'ERR_INVALID_URL',
].forEach((e) => {
  Of[e] = { value: e };
});
Object.defineProperties(ke, Of);
Object.defineProperty(Rf, 'isAxiosError', { value: !0 });
ke.from = (e, n, r, c, f, g) => {
  const w = Object.create(Rf);
  return (
    J.toFlatObject(
      e,
      w,
      function (M) {
        return M !== Error.prototype;
      },
      (k) => k !== 'isAxiosError'
    ),
    ke.call(w, e.message, n, r, c, f),
    (w.cause = e),
    (w.name = e.name),
    g && Object.assign(w, g),
    w
  );
};
const yx = null;
function nc(e) {
  return J.isPlainObject(e) || J.isArray(e);
}
function Ff(e) {
  return J.endsWith(e, '[]') ? e.slice(0, -2) : e;
}
function Hu(e, n, r) {
  return e
    ? e
        .concat(n)
        .map(function (f, g) {
          return (f = Ff(f)), !r && g ? '[' + f + ']' : f;
        })
        .join(r ? '.' : '')
    : n;
}
function wx(e) {
  return J.isArray(e) && !e.some(nc);
}
const Cx = J.toFlatObject(J, {}, null, function (n) {
  return /^is[A-Z]/.test(n);
});
function fo(e, n, r) {
  if (!J.isObject(e)) throw new TypeError('target must be an object');
  (n = n || new FormData()),
    (r = J.toFlatObject(
      r,
      { metaTokens: !0, dots: !1, indexes: !1 },
      !1,
      function (V, ee) {
        return !J.isUndefined(ee[V]);
      }
    ));
  const c = r.metaTokens,
    f = r.visitor || z,
    g = r.dots,
    w = r.indexes,
    M = (r.Blob || (typeof Blob < 'u' && Blob)) && J.isSpecCompliantForm(n);
  if (!J.isFunction(f)) throw new TypeError('visitor must be a function');
  function D(Z) {
    if (Z === null) return '';
    if (J.isDate(Z)) return Z.toISOString();
    if (!M && J.isBlob(Z))
      throw new ke('Blob is not supported. Use a Buffer instead.');
    return J.isArrayBuffer(Z) || J.isTypedArray(Z)
      ? M && typeof Blob == 'function'
        ? new Blob([Z])
        : Buffer.from(Z)
      : Z;
  }
  function z(Z, V, ee) {
    let B = Z;
    if (Z && !ee && typeof Z == 'object') {
      if (J.endsWith(V, '{}'))
        (V = c ? V : V.slice(0, -2)), (Z = JSON.stringify(Z));
      else if (
        (J.isArray(Z) && wx(Z)) ||
        ((J.isFileList(Z) || J.endsWith(V, '[]')) && (B = J.toArray(Z)))
      )
        return (
          (V = Ff(V)),
          B.forEach(function (_, Q) {
            !(J.isUndefined(_) || _ === null) &&
              n.append(
                w === !0 ? Hu([V], Q, g) : w === null ? V : V + '[]',
                D(_)
              );
          }),
          !1
        );
    }
    return nc(Z) ? !0 : (n.append(Hu(ee, V, g), D(Z)), !1);
  }
  const Y = [],
    U = Object.assign(Cx, {
      defaultVisitor: z,
      convertValue: D,
      isVisitable: nc,
    });
  function K(Z, V) {
    if (!J.isUndefined(Z)) {
      if (Y.indexOf(Z) !== -1)
        throw Error('Circular reference detected in ' + V.join('.'));
      Y.push(Z),
        J.forEach(Z, function (B, E) {
          (!(J.isUndefined(B) || B === null) &&
            f.call(n, B, J.isString(E) ? E.trim() : E, V, U)) === !0 &&
            K(B, V ? V.concat(E) : [E]);
        }),
        Y.pop();
    }
  }
  if (!J.isObject(e)) throw new TypeError('data must be an object');
  return K(e), n;
}
function Bu(e) {
  const n = {
    '!': '%21',
    "'": '%27',
    '(': '%28',
    ')': '%29',
    '~': '%7E',
    '%20': '+',
    '%00': '\0',
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (c) {
    return n[c];
  });
}
function hd(e, n) {
  (this._pairs = []), e && fo(e, this, n);
}
const zf = hd.prototype;
zf.append = function (n, r) {
  this._pairs.push([n, r]);
};
zf.toString = function (n) {
  const r = n
    ? function (c) {
        return n.call(this, c, Bu);
      }
    : Bu;
  return this._pairs
    .map(function (f) {
      return r(f[0]) + '=' + r(f[1]);
    }, '')
    .join('&');
};
function kx(e) {
  return encodeURIComponent(e)
    .replace(/%3A/gi, ':')
    .replace(/%24/g, '$')
    .replace(/%2C/gi, ',')
    .replace(/%20/g, '+')
    .replace(/%5B/gi, '[')
    .replace(/%5D/gi, ']');
}
function Hf(e, n, r) {
  if (!n) return e;
  const c = (r && r.encode) || kx,
    f = r && r.serialize;
  let g;
  if (
    (f
      ? (g = f(n, r))
      : (g = J.isURLSearchParams(n) ? n.toString() : new hd(n, r).toString(c)),
    g)
  ) {
    const w = e.indexOf('#');
    w !== -1 && (e = e.slice(0, w)),
      (e += (e.indexOf('?') === -1 ? '?' : '&') + g);
  }
  return e;
}
class Sx {
  constructor() {
    this.handlers = [];
  }
  use(n, r, c) {
    return (
      this.handlers.push({
        fulfilled: n,
        rejected: r,
        synchronous: c ? c.synchronous : !1,
        runWhen: c ? c.runWhen : null,
      }),
      this.handlers.length - 1
    );
  }
  eject(n) {
    this.handlers[n] && (this.handlers[n] = null);
  }
  clear() {
    this.handlers && (this.handlers = []);
  }
  forEach(n) {
    J.forEach(this.handlers, function (c) {
      c !== null && n(c);
    });
  }
}
const Yu = Sx,
  Bf = {
    silentJSONParsing: !0,
    forcedJSONParsing: !0,
    clarifyTimeoutError: !1,
  },
  Ax = typeof URLSearchParams < 'u' ? URLSearchParams : hd,
  Lx = typeof FormData < 'u' ? FormData : null,
  Nx = typeof Blob < 'u' ? Blob : null,
  Ex = {
    isBrowser: !0,
    classes: { URLSearchParams: Ax, FormData: Lx, Blob: Nx },
    protocols: ['http', 'https', 'file', 'blob', 'url', 'data'],
  },
  fd = typeof window < 'u' && typeof document < 'u',
  ac = (typeof navigator == 'object' && navigator) || void 0,
  jx =
    fd &&
    (!ac || ['ReactNative', 'NativeScript', 'NS'].indexOf(ac.product) < 0),
  Mx = (() =>
    typeof WorkerGlobalScope < 'u' &&
    self instanceof WorkerGlobalScope &&
    typeof self.importScripts == 'function')(),
  Px = (fd && window.location.href) || 'http://localhost',
  Tx = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        hasBrowserEnv: fd,
        hasStandardBrowserEnv: jx,
        hasStandardBrowserWebWorkerEnv: Mx,
        navigator: ac,
        origin: Px,
      },
      Symbol.toStringTag,
      { value: 'Module' }
    )
  ),
  Tt = { ...Tx, ...Ex };
function Dx(e, n) {
  return fo(
    e,
    new Tt.classes.URLSearchParams(),
    Object.assign(
      {
        visitor: function (r, c, f, g) {
          return Tt.isNode && J.isBuffer(r)
            ? (this.append(c, r.toString('base64')), !1)
            : g.defaultVisitor.apply(this, arguments);
        },
      },
      n
    )
  );
}
function Ix(e) {
  return J.matchAll(/\w+|\[(\w*)]/g, e).map((n) =>
    n[0] === '[]' ? '' : n[1] || n[0]
  );
}
function Rx(e) {
  const n = {},
    r = Object.keys(e);
  let c;
  const f = r.length;
  let g;
  for (c = 0; c < f; c++) (g = r[c]), (n[g] = e[g]);
  return n;
}
function Yf(e) {
  function n(r, c, f, g) {
    let w = r[g++];
    if (w === '__proto__') return !0;
    const k = Number.isFinite(+w),
      M = g >= r.length;
    return (
      (w = !w && J.isArray(f) ? f.length : w),
      M
        ? (J.hasOwnProp(f, w) ? (f[w] = [f[w], c]) : (f[w] = c), !k)
        : ((!f[w] || !J.isObject(f[w])) && (f[w] = []),
          n(r, c, f[w], g) && J.isArray(f[w]) && (f[w] = Rx(f[w])),
          !k)
    );
  }
  if (J.isFormData(e) && J.isFunction(e.entries)) {
    const r = {};
    return (
      J.forEachEntry(e, (c, f) => {
        n(Ix(c), f, r, 0);
      }),
      r
    );
  }
  return null;
}
function Ox(e, n, r) {
  if (J.isString(e))
    try {
      return (n || JSON.parse)(e), J.trim(e);
    } catch (c) {
      if (c.name !== 'SyntaxError') throw c;
    }
  return (r || JSON.stringify)(e);
}
const pd = {
  transitional: Bf,
  adapter: ['xhr', 'http', 'fetch'],
  transformRequest: [
    function (n, r) {
      const c = r.getContentType() || '',
        f = c.indexOf('application/json') > -1,
        g = J.isObject(n);
      if ((g && J.isHTMLForm(n) && (n = new FormData(n)), J.isFormData(n)))
        return f ? JSON.stringify(Yf(n)) : n;
      if (
        J.isArrayBuffer(n) ||
        J.isBuffer(n) ||
        J.isStream(n) ||
        J.isFile(n) ||
        J.isBlob(n) ||
        J.isReadableStream(n)
      )
        return n;
      if (J.isArrayBufferView(n)) return n.buffer;
      if (J.isURLSearchParams(n))
        return (
          r.setContentType(
            'application/x-www-form-urlencoded;charset=utf-8',
            !1
          ),
          n.toString()
        );
      let k;
      if (g) {
        if (c.indexOf('application/x-www-form-urlencoded') > -1)
          return Dx(n, this.formSerializer).toString();
        if ((k = J.isFileList(n)) || c.indexOf('multipart/form-data') > -1) {
          const M = this.env && this.env.FormData;
          return fo(
            k ? { 'files[]': n } : n,
            M && new M(),
            this.formSerializer
          );
        }
      }
      return g || f ? (r.setContentType('application/json', !1), Ox(n)) : n;
    },
  ],
  transformResponse: [
    function (n) {
      const r = this.transitional || pd.transitional,
        c = r && r.forcedJSONParsing,
        f = this.responseType === 'json';
      if (J.isResponse(n) || J.isReadableStream(n)) return n;
      if (n && J.isString(n) && ((c && !this.responseType) || f)) {
        const w = !(r && r.silentJSONParsing) && f;
        try {
          return JSON.parse(n);
        } catch (k) {
          if (w)
            throw k.name === 'SyntaxError'
              ? ke.from(k, ke.ERR_BAD_RESPONSE, this, null, this.response)
              : k;
        }
      }
      return n;
    },
  ],
  timeout: 0,
  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',
  maxContentLength: -1,
  maxBodyLength: -1,
  env: { FormData: Tt.classes.FormData, Blob: Tt.classes.Blob },
  validateStatus: function (n) {
    return n >= 200 && n < 300;
  },
  headers: {
    common: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': void 0,
    },
  },
};
J.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (e) => {
  pd.headers[e] = {};
});
const gd = pd,
  Fx = J.toObjectSet([
    'age',
    'authorization',
    'content-length',
    'content-type',
    'etag',
    'expires',
    'from',
    'host',
    'if-modified-since',
    'if-unmodified-since',
    'last-modified',
    'location',
    'max-forwards',
    'proxy-authorization',
    'referer',
    'retry-after',
    'user-agent',
  ]),
  zx = (e) => {
    const n = {};
    let r, c, f;
    return (
      e &&
        e
          .split(
            `
`
          )
          .forEach(function (w) {
            (f = w.indexOf(':')),
              (r = w.substring(0, f).trim().toLowerCase()),
              (c = w.substring(f + 1).trim()),
              !(!r || (n[r] && Fx[r])) &&
                (r === 'set-cookie'
                  ? n[r]
                    ? n[r].push(c)
                    : (n[r] = [c])
                  : (n[r] = n[r] ? n[r] + ', ' + c : c));
          }),
      n
    );
  },
  Xu = Symbol('internals');
function Dn(e) {
  return e && String(e).trim().toLowerCase();
}
function fs(e) {
  return e === !1 || e == null ? e : J.isArray(e) ? e.map(fs) : String(e);
}
function Hx(e) {
  const n = Object.create(null),
    r = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let c;
  for (; (c = r.exec(e)); ) n[c[1]] = c[2];
  return n;
}
const Bx = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function Jo(e, n, r, c, f) {
  if (J.isFunction(c)) return c.call(this, n, r);
  if ((f && (n = r), !!J.isString(n))) {
    if (J.isString(c)) return n.indexOf(c) !== -1;
    if (J.isRegExp(c)) return c.test(n);
  }
}
function Yx(e) {
  return e
    .trim()
    .toLowerCase()
    .replace(/([a-z\d])(\w*)/g, (n, r, c) => r.toUpperCase() + c);
}
function Xx(e, n) {
  const r = J.toCamelCase(' ' + n);
  ['get', 'set', 'has'].forEach((c) => {
    Object.defineProperty(e, c + r, {
      value: function (f, g, w) {
        return this[c].call(this, n, f, g, w);
      },
      configurable: !0,
    });
  });
}
class po {
  constructor(n) {
    n && this.set(n);
  }
  set(n, r, c) {
    const f = this;
    function g(k, M, D) {
      const z = Dn(M);
      if (!z) throw new Error('header name must be a non-empty string');
      const Y = J.findKey(f, z);
      (!Y || f[Y] === void 0 || D === !0 || (D === void 0 && f[Y] !== !1)) &&
        (f[Y || M] = fs(k));
    }
    const w = (k, M) => J.forEach(k, (D, z) => g(D, z, M));
    if (J.isPlainObject(n) || n instanceof this.constructor) w(n, r);
    else if (J.isString(n) && (n = n.trim()) && !Bx(n)) w(zx(n), r);
    else if (J.isHeaders(n)) for (const [k, M] of n.entries()) g(M, k, c);
    else n != null && g(r, n, c);
    return this;
  }
  get(n, r) {
    if (((n = Dn(n)), n)) {
      const c = J.findKey(this, n);
      if (c) {
        const f = this[c];
        if (!r) return f;
        if (r === !0) return Hx(f);
        if (J.isFunction(r)) return r.call(this, f, c);
        if (J.isRegExp(r)) return r.exec(f);
        throw new TypeError('parser must be boolean|regexp|function');
      }
    }
  }
  has(n, r) {
    if (((n = Dn(n)), n)) {
      const c = J.findKey(this, n);
      return !!(c && this[c] !== void 0 && (!r || Jo(this, this[c], c, r)));
    }
    return !1;
  }
  delete(n, r) {
    const c = this;
    let f = !1;
    function g(w) {
      if (((w = Dn(w)), w)) {
        const k = J.findKey(c, w);
        k && (!r || Jo(c, c[k], k, r)) && (delete c[k], (f = !0));
      }
    }
    return J.isArray(n) ? n.forEach(g) : g(n), f;
  }
  clear(n) {
    const r = Object.keys(this);
    let c = r.length,
      f = !1;
    for (; c--; ) {
      const g = r[c];
      (!n || Jo(this, this[g], g, n, !0)) && (delete this[g], (f = !0));
    }
    return f;
  }
  normalize(n) {
    const r = this,
      c = {};
    return (
      J.forEach(this, (f, g) => {
        const w = J.findKey(c, g);
        if (w) {
          (r[w] = fs(f)), delete r[g];
          return;
        }
        const k = n ? Yx(g) : String(g).trim();
        k !== g && delete r[g], (r[k] = fs(f)), (c[k] = !0);
      }),
      this
    );
  }
  concat(...n) {
    return this.constructor.concat(this, ...n);
  }
  toJSON(n) {
    const r = Object.create(null);
    return (
      J.forEach(this, (c, f) => {
        c != null && c !== !1 && (r[f] = n && J.isArray(c) ? c.join(', ') : c);
      }),
      r
    );
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([n, r]) => n + ': ' + r).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return 'AxiosHeaders';
  }
  static from(n) {
    return n instanceof this ? n : new this(n);
  }
  static concat(n, ...r) {
    const c = new this(n);
    return r.forEach((f) => c.set(f)), c;
  }
  static accessor(n) {
    const c = (this[Xu] = this[Xu] = { accessors: {} }).accessors,
      f = this.prototype;
    function g(w) {
      const k = Dn(w);
      c[k] || (Xx(f, w), (c[k] = !0));
    }
    return J.isArray(n) ? n.forEach(g) : g(n), this;
  }
}
po.accessor([
  'Content-Type',
  'Content-Length',
  'Accept',
  'Accept-Encoding',
  'User-Agent',
  'Authorization',
]);
J.reduceDescriptors(po.prototype, ({ value: e }, n) => {
  let r = n[0].toUpperCase() + n.slice(1);
  return {
    get: () => e,
    set(c) {
      this[r] = c;
    },
  };
});
J.freezeMethods(po);
const ci = po;
function el(e, n) {
  const r = this || gd,
    c = n || r,
    f = ci.from(c.headers);
  let g = c.data;
  return (
    J.forEach(e, function (k) {
      g = k.call(r, g, f.normalize(), n ? n.status : void 0);
    }),
    f.normalize(),
    g
  );
}
function Xf(e) {
  return !!(e && e.__CANCEL__);
}
function gn(e, n, r) {
  ke.call(this, e ?? 'canceled', ke.ERR_CANCELED, n, r),
    (this.name = 'CanceledError');
}
J.inherits(gn, ke, { __CANCEL__: !0 });
function _f(e, n, r) {
  const c = r.config.validateStatus;
  !r.status || !c || c(r.status)
    ? e(r)
    : n(
        new ke(
          'Request failed with status code ' + r.status,
          [ke.ERR_BAD_REQUEST, ke.ERR_BAD_RESPONSE][
            Math.floor(r.status / 100) - 4
          ],
          r.config,
          r.request,
          r
        )
      );
}
function _x(e) {
  const n = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return (n && n[1]) || '';
}
function Vx(e, n) {
  e = e || 10;
  const r = new Array(e),
    c = new Array(e);
  let f = 0,
    g = 0,
    w;
  return (
    (n = n !== void 0 ? n : 1e3),
    function (M) {
      const D = Date.now(),
        z = c[g];
      w || (w = D), (r[f] = M), (c[f] = D);
      let Y = g,
        U = 0;
      for (; Y !== f; ) (U += r[Y++]), (Y = Y % e);
      if (((f = (f + 1) % e), f === g && (g = (g + 1) % e), D - w < n)) return;
      const K = z && D - z;
      return K ? Math.round((U * 1e3) / K) : void 0;
    }
  );
}
function Wx(e, n) {
  let r = 0,
    c = 1e3 / n,
    f,
    g;
  const w = (D, z = Date.now()) => {
    (r = z), (f = null), g && (clearTimeout(g), (g = null)), e.apply(null, D);
  };
  return [
    (...D) => {
      const z = Date.now(),
        Y = z - r;
      Y >= c
        ? w(D, z)
        : ((f = D),
          g ||
            (g = setTimeout(() => {
              (g = null), w(f);
            }, c - Y)));
    },
    () => f && w(f),
  ];
}
const Xs = (e, n, r = 3) => {
    let c = 0;
    const f = Vx(50, 250);
    return Wx((g) => {
      const w = g.loaded,
        k = g.lengthComputable ? g.total : void 0,
        M = w - c,
        D = f(M),
        z = w <= k;
      c = w;
      const Y = {
        loaded: w,
        total: k,
        progress: k ? w / k : void 0,
        bytes: M,
        rate: D || void 0,
        estimated: D && k && z ? (k - w) / D : void 0,
        event: g,
        lengthComputable: k != null,
        [n ? 'download' : 'upload']: !0,
      };
      e(Y);
    }, r);
  },
  _u = (e, n) => {
    const r = e != null;
    return [(c) => n[0]({ lengthComputable: r, total: e, loaded: c }), n[1]];
  },
  Vu =
    (e) =>
    (...n) =>
      J.asap(() => e(...n)),
  Gx = Tt.hasStandardBrowserEnv
    ? (function () {
        const n =
            Tt.navigator && /(msie|trident)/i.test(Tt.navigator.userAgent),
          r = document.createElement('a');
        let c;
        function f(g) {
          let w = g;
          return (
            n && (r.setAttribute('href', w), (w = r.href)),
            r.setAttribute('href', w),
            {
              href: r.href,
              protocol: r.protocol ? r.protocol.replace(/:$/, '') : '',
              host: r.host,
              search: r.search ? r.search.replace(/^\?/, '') : '',
              hash: r.hash ? r.hash.replace(/^#/, '') : '',
              hostname: r.hostname,
              port: r.port,
              pathname:
                r.pathname.charAt(0) === '/' ? r.pathname : '/' + r.pathname,
            }
          );
        }
        return (
          (c = f(window.location.href)),
          function (w) {
            const k = J.isString(w) ? f(w) : w;
            return k.protocol === c.protocol && k.host === c.host;
          }
        );
      })()
    : (function () {
        return function () {
          return !0;
        };
      })(),
  Ux = Tt.hasStandardBrowserEnv
    ? {
        write(e, n, r, c, f, g) {
          const w = [e + '=' + encodeURIComponent(n)];
          J.isNumber(r) && w.push('expires=' + new Date(r).toGMTString()),
            J.isString(c) && w.push('path=' + c),
            J.isString(f) && w.push('domain=' + f),
            g === !0 && w.push('secure'),
            (document.cookie = w.join('; '));
        },
        read(e) {
          const n = document.cookie.match(
            new RegExp('(^|;\\s*)(' + e + ')=([^;]*)')
          );
          return n ? decodeURIComponent(n[3]) : null;
        },
        remove(e) {
          this.write(e, '', Date.now() - 864e5);
        },
      }
    : {
        write() {},
        read() {
          return null;
        },
        remove() {},
      };
function Zx(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function $x(e, n) {
  return n ? e.replace(/\/?\/$/, '') + '/' + n.replace(/^\/+/, '') : e;
}
function Vf(e, n) {
  return e && !Zx(n) ? $x(e, n) : n;
}
const Wu = (e) => (e instanceof ci ? { ...e } : e);
function Sr(e, n) {
  n = n || {};
  const r = {};
  function c(D, z, Y) {
    return J.isPlainObject(D) && J.isPlainObject(z)
      ? J.merge.call({ caseless: Y }, D, z)
      : J.isPlainObject(z)
      ? J.merge({}, z)
      : J.isArray(z)
      ? z.slice()
      : z;
  }
  function f(D, z, Y) {
    if (J.isUndefined(z)) {
      if (!J.isUndefined(D)) return c(void 0, D, Y);
    } else return c(D, z, Y);
  }
  function g(D, z) {
    if (!J.isUndefined(z)) return c(void 0, z);
  }
  function w(D, z) {
    if (J.isUndefined(z)) {
      if (!J.isUndefined(D)) return c(void 0, D);
    } else return c(void 0, z);
  }
  function k(D, z, Y) {
    if (Y in n) return c(D, z);
    if (Y in e) return c(void 0, D);
  }
  const M = {
    url: g,
    method: g,
    data: g,
    baseURL: w,
    transformRequest: w,
    transformResponse: w,
    paramsSerializer: w,
    timeout: w,
    timeoutMessage: w,
    withCredentials: w,
    withXSRFToken: w,
    adapter: w,
    responseType: w,
    xsrfCookieName: w,
    xsrfHeaderName: w,
    onUploadProgress: w,
    onDownloadProgress: w,
    decompress: w,
    maxContentLength: w,
    maxBodyLength: w,
    beforeRedirect: w,
    transport: w,
    httpAgent: w,
    httpsAgent: w,
    cancelToken: w,
    socketPath: w,
    responseEncoding: w,
    validateStatus: k,
    headers: (D, z) => f(Wu(D), Wu(z), !0),
  };
  return (
    J.forEach(Object.keys(Object.assign({}, e, n)), function (z) {
      const Y = M[z] || f,
        U = Y(e[z], n[z], z);
      (J.isUndefined(U) && Y !== k) || (r[z] = U);
    }),
    r
  );
}
const Wf = (e) => {
    const n = Sr({}, e);
    let {
      data: r,
      withXSRFToken: c,
      xsrfHeaderName: f,
      xsrfCookieName: g,
      headers: w,
      auth: k,
    } = n;
    (n.headers = w = ci.from(w)),
      (n.url = Hf(Vf(n.baseURL, n.url), e.params, e.paramsSerializer)),
      k &&
        w.set(
          'Authorization',
          'Basic ' +
            btoa(
              (k.username || '') +
                ':' +
                (k.password ? unescape(encodeURIComponent(k.password)) : '')
            )
        );
    let M;
    if (J.isFormData(r)) {
      if (Tt.hasStandardBrowserEnv || Tt.hasStandardBrowserWebWorkerEnv)
        w.setContentType(void 0);
      else if ((M = w.getContentType()) !== !1) {
        const [D, ...z] = M
          ? M.split(';')
              .map((Y) => Y.trim())
              .filter(Boolean)
          : [];
        w.setContentType([D || 'multipart/form-data', ...z].join('; '));
      }
    }
    if (
      Tt.hasStandardBrowserEnv &&
      (c && J.isFunction(c) && (c = c(n)), c || (c !== !1 && Gx(n.url)))
    ) {
      const D = f && g && Ux.read(g);
      D && w.set(f, D);
    }
    return n;
  },
  qx = typeof XMLHttpRequest < 'u',
  Kx =
    qx &&
    function (e) {
      return new Promise(function (r, c) {
        const f = Wf(e);
        let g = f.data;
        const w = ci.from(f.headers).normalize();
        let { responseType: k, onUploadProgress: M, onDownloadProgress: D } = f,
          z,
          Y,
          U,
          K,
          Z;
        function V() {
          K && K(),
            Z && Z(),
            f.cancelToken && f.cancelToken.unsubscribe(z),
            f.signal && f.signal.removeEventListener('abort', z);
        }
        let ee = new XMLHttpRequest();
        ee.open(f.method.toUpperCase(), f.url, !0), (ee.timeout = f.timeout);
        function B() {
          if (!ee) return;
          const _ = ci.from(
              'getAllResponseHeaders' in ee && ee.getAllResponseHeaders()
            ),
            W = {
              data:
                !k || k === 'text' || k === 'json'
                  ? ee.responseText
                  : ee.response,
              status: ee.status,
              statusText: ee.statusText,
              headers: _,
              config: e,
              request: ee,
            };
          _f(
            function (ce) {
              r(ce), V();
            },
            function (ce) {
              c(ce), V();
            },
            W
          ),
            (ee = null);
        }
        'onloadend' in ee
          ? (ee.onloadend = B)
          : (ee.onreadystatechange = function () {
              !ee ||
                ee.readyState !== 4 ||
                (ee.status === 0 &&
                  !(ee.responseURL && ee.responseURL.indexOf('file:') === 0)) ||
                setTimeout(B);
            }),
          (ee.onabort = function () {
            ee &&
              (c(new ke('Request aborted', ke.ECONNABORTED, e, ee)),
              (ee = null));
          }),
          (ee.onerror = function () {
            c(new ke('Network Error', ke.ERR_NETWORK, e, ee)), (ee = null);
          }),
          (ee.ontimeout = function () {
            let Q = f.timeout
              ? 'timeout of ' + f.timeout + 'ms exceeded'
              : 'timeout exceeded';
            const W = f.transitional || Bf;
            f.timeoutErrorMessage && (Q = f.timeoutErrorMessage),
              c(
                new ke(
                  Q,
                  W.clarifyTimeoutError ? ke.ETIMEDOUT : ke.ECONNABORTED,
                  e,
                  ee
                )
              ),
              (ee = null);
          }),
          g === void 0 && w.setContentType(null),
          'setRequestHeader' in ee &&
            J.forEach(w.toJSON(), function (Q, W) {
              ee.setRequestHeader(W, Q);
            }),
          J.isUndefined(f.withCredentials) ||
            (ee.withCredentials = !!f.withCredentials),
          k && k !== 'json' && (ee.responseType = f.responseType),
          D && (([U, Z] = Xs(D, !0)), ee.addEventListener('progress', U)),
          M &&
            ee.upload &&
            (([Y, K] = Xs(M)),
            ee.upload.addEventListener('progress', Y),
            ee.upload.addEventListener('loadend', K)),
          (f.cancelToken || f.signal) &&
            ((z = (_) => {
              ee &&
                (c(!_ || _.type ? new gn(null, e, ee) : _),
                ee.abort(),
                (ee = null));
            }),
            f.cancelToken && f.cancelToken.subscribe(z),
            f.signal &&
              (f.signal.aborted ? z() : f.signal.addEventListener('abort', z)));
        const E = _x(f.url);
        if (E && Tt.protocols.indexOf(E) === -1) {
          c(new ke('Unsupported protocol ' + E + ':', ke.ERR_BAD_REQUEST, e));
          return;
        }
        ee.send(g || null);
      });
    },
  Qx = (e, n) => {
    const { length: r } = (e = e ? e.filter(Boolean) : []);
    if (n || r) {
      let c = new AbortController(),
        f;
      const g = function (D) {
        if (!f) {
          (f = !0), k();
          const z = D instanceof Error ? D : this.reason;
          c.abort(
            z instanceof ke ? z : new gn(z instanceof Error ? z.message : z)
          );
        }
      };
      let w =
        n &&
        setTimeout(() => {
          (w = null), g(new ke(`timeout ${n} of ms exceeded`, ke.ETIMEDOUT));
        }, n);
      const k = () => {
        e &&
          (w && clearTimeout(w),
          (w = null),
          e.forEach((D) => {
            D.unsubscribe
              ? D.unsubscribe(g)
              : D.removeEventListener('abort', g);
          }),
          (e = null));
      };
      e.forEach((D) => D.addEventListener('abort', g));
      const { signal: M } = c;
      return (M.unsubscribe = () => J.asap(k)), M;
    }
  },
  Jx = Qx,
  e2 = function* (e, n) {
    let r = e.byteLength;
    if (!n || r < n) {
      yield e;
      return;
    }
    let c = 0,
      f;
    for (; c < r; ) (f = c + n), yield e.slice(c, f), (c = f);
  },
  t2 = async function* (e, n) {
    for await (const r of i2(e)) yield* e2(r, n);
  },
  i2 = async function* (e) {
    if (e[Symbol.asyncIterator]) {
      yield* e;
      return;
    }
    const n = e.getReader();
    try {
      for (;;) {
        const { done: r, value: c } = await n.read();
        if (r) break;
        yield c;
      }
    } finally {
      await n.cancel();
    }
  },
  Gu = (e, n, r, c) => {
    const f = t2(e, n);
    let g = 0,
      w,
      k = (M) => {
        w || ((w = !0), c && c(M));
      };
    return new ReadableStream(
      {
        async pull(M) {
          try {
            const { done: D, value: z } = await f.next();
            if (D) {
              k(), M.close();
              return;
            }
            let Y = z.byteLength;
            if (r) {
              let U = (g += Y);
              r(U);
            }
            M.enqueue(new Uint8Array(z));
          } catch (D) {
            throw (k(D), D);
          }
        },
        cancel(M) {
          return k(M), f.return();
        },
      },
      { highWaterMark: 2 }
    );
  },
  go =
    typeof fetch == 'function' &&
    typeof Request == 'function' &&
    typeof Response == 'function',
  Gf = go && typeof ReadableStream == 'function',
  r2 =
    go &&
    (typeof TextEncoder == 'function'
      ? (
          (e) => (n) =>
            e.encode(n)
        )(new TextEncoder())
      : async (e) => new Uint8Array(await new Response(e).arrayBuffer())),
  Uf = (e, ...n) => {
    try {
      return !!e(...n);
    } catch {
      return !1;
    }
  },
  n2 =
    Gf &&
    Uf(() => {
      let e = !1;
      const n = new Request(Tt.origin, {
        body: new ReadableStream(),
        method: 'POST',
        get duplex() {
          return (e = !0), 'half';
        },
      }).headers.has('Content-Type');
      return e && !n;
    }),
  Uu = 64 * 1024,
  sc = Gf && Uf(() => J.isReadableStream(new Response('').body)),
  _s = { stream: sc && ((e) => e.body) };
go &&
  ((e) => {
    ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach((n) => {
      !_s[n] &&
        (_s[n] = J.isFunction(e[n])
          ? (r) => r[n]()
          : (r, c) => {
              throw new ke(
                `Response type '${n}' is not supported`,
                ke.ERR_NOT_SUPPORT,
                c
              );
            });
    });
  })(new Response());
const a2 = async (e) => {
    if (e == null) return 0;
    if (J.isBlob(e)) return e.size;
    if (J.isSpecCompliantForm(e))
      return (
        await new Request(Tt.origin, { method: 'POST', body: e }).arrayBuffer()
      ).byteLength;
    if (J.isArrayBufferView(e) || J.isArrayBuffer(e)) return e.byteLength;
    if ((J.isURLSearchParams(e) && (e = e + ''), J.isString(e)))
      return (await r2(e)).byteLength;
  },
  s2 = async (e, n) => {
    const r = J.toFiniteNumber(e.getContentLength());
    return r ?? a2(n);
  },
  o2 =
    go &&
    (async (e) => {
      let {
        url: n,
        method: r,
        data: c,
        signal: f,
        cancelToken: g,
        timeout: w,
        onDownloadProgress: k,
        onUploadProgress: M,
        responseType: D,
        headers: z,
        withCredentials: Y = 'same-origin',
        fetchOptions: U,
      } = Wf(e);
      D = D ? (D + '').toLowerCase() : 'text';
      let K = Jx([f, g && g.toAbortSignal()], w),
        Z;
      const V =
        K &&
        K.unsubscribe &&
        (() => {
          K.unsubscribe();
        });
      let ee;
      try {
        if (
          M &&
          n2 &&
          r !== 'get' &&
          r !== 'head' &&
          (ee = await s2(z, c)) !== 0
        ) {
          let W = new Request(n, { method: 'POST', body: c, duplex: 'half' }),
            ae;
          if (
            (J.isFormData(c) &&
              (ae = W.headers.get('content-type')) &&
              z.setContentType(ae),
            W.body)
          ) {
            const [ce, he] = _u(ee, Xs(Vu(M)));
            c = Gu(W.body, Uu, ce, he);
          }
        }
        J.isString(Y) || (Y = Y ? 'include' : 'omit');
        const B = 'credentials' in Request.prototype;
        Z = new Request(n, {
          ...U,
          signal: K,
          method: r.toUpperCase(),
          headers: z.normalize().toJSON(),
          body: c,
          duplex: 'half',
          credentials: B ? Y : void 0,
        });
        let E = await fetch(Z);
        const _ = sc && (D === 'stream' || D === 'response');
        if (sc && (k || (_ && V))) {
          const W = {};
          ['status', 'statusText', 'headers'].forEach((Te) => {
            W[Te] = E[Te];
          });
          const ae = J.toFiniteNumber(E.headers.get('content-length')),
            [ce, he] = (k && _u(ae, Xs(Vu(k), !0))) || [];
          E = new Response(
            Gu(E.body, Uu, ce, () => {
              he && he(), V && V();
            }),
            W
          );
        }
        D = D || 'text';
        let Q = await _s[J.findKey(_s, D) || 'text'](E, e);
        return (
          !_ && V && V(),
          await new Promise((W, ae) => {
            _f(W, ae, {
              data: Q,
              headers: ci.from(E.headers),
              status: E.status,
              statusText: E.statusText,
              config: e,
              request: Z,
            });
          })
        );
      } catch (B) {
        throw (
          (V && V(),
          B && B.name === 'TypeError' && /fetch/i.test(B.message)
            ? Object.assign(new ke('Network Error', ke.ERR_NETWORK, e, Z), {
                cause: B.cause || B,
              })
            : ke.from(B, B && B.code, e, Z))
        );
      }
    }),
  oc = { http: yx, xhr: Kx, fetch: o2 };
J.forEach(oc, (e, n) => {
  if (e) {
    try {
      Object.defineProperty(e, 'name', { value: n });
    } catch {}
    Object.defineProperty(e, 'adapterName', { value: n });
  }
});
const Zu = (e) => `- ${e}`,
  l2 = (e) => J.isFunction(e) || e === null || e === !1,
  Zf = {
    getAdapter: (e) => {
      e = J.isArray(e) ? e : [e];
      const { length: n } = e;
      let r, c;
      const f = {};
      for (let g = 0; g < n; g++) {
        r = e[g];
        let w;
        if (
          ((c = r),
          !l2(r) && ((c = oc[(w = String(r)).toLowerCase()]), c === void 0))
        )
          throw new ke(`Unknown adapter '${w}'`);
        if (c) break;
        f[w || '#' + g] = c;
      }
      if (!c) {
        const g = Object.entries(f).map(
          ([k, M]) =>
            `adapter ${k} ` +
            (M === !1
              ? 'is not supported by the environment'
              : 'is not available in the build')
        );
        let w = n
          ? g.length > 1
            ? `since :
` +
              g.map(Zu).join(`
`)
            : ' ' + Zu(g[0])
          : 'as no adapter specified';
        throw new ke(
          'There is no suitable adapter to dispatch the request ' + w,
          'ERR_NOT_SUPPORT'
        );
      }
      return c;
    },
    adapters: oc,
  };
function tl(e) {
  if (
    (e.cancelToken && e.cancelToken.throwIfRequested(),
    e.signal && e.signal.aborted)
  )
    throw new gn(null, e);
}
function $u(e) {
  return (
    tl(e),
    (e.headers = ci.from(e.headers)),
    (e.data = el.call(e, e.transformRequest)),
    ['post', 'put', 'patch'].indexOf(e.method) !== -1 &&
      e.headers.setContentType('application/x-www-form-urlencoded', !1),
    Zf.getAdapter(e.adapter || gd.adapter)(e).then(
      function (c) {
        return (
          tl(e),
          (c.data = el.call(e, e.transformResponse, c)),
          (c.headers = ci.from(c.headers)),
          c
        );
      },
      function (c) {
        return (
          Xf(c) ||
            (tl(e),
            c &&
              c.response &&
              ((c.response.data = el.call(e, e.transformResponse, c.response)),
              (c.response.headers = ci.from(c.response.headers)))),
          Promise.reject(c)
        );
      }
    )
  );
}
const $f = '1.7.7',
  md = {};
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(
  (e, n) => {
    md[e] = function (c) {
      return typeof c === e || 'a' + (n < 1 ? 'n ' : ' ') + e;
    };
  }
);
const qu = {};
md.transitional = function (n, r, c) {
  function f(g, w) {
    return (
      '[Axios v' +
      $f +
      "] Transitional option '" +
      g +
      "'" +
      w +
      (c ? '. ' + c : '')
    );
  }
  return (g, w, k) => {
    if (n === !1)
      throw new ke(
        f(w, ' has been removed' + (r ? ' in ' + r : '')),
        ke.ERR_DEPRECATED
      );
    return (
      r &&
        !qu[w] &&
        ((qu[w] = !0),
        console.warn(
          f(
            w,
            ' has been deprecated since v' +
              r +
              ' and will be removed in the near future'
          )
        )),
      n ? n(g, w, k) : !0
    );
  };
};
function c2(e, n, r) {
  if (typeof e != 'object')
    throw new ke('options must be an object', ke.ERR_BAD_OPTION_VALUE);
  const c = Object.keys(e);
  let f = c.length;
  for (; f-- > 0; ) {
    const g = c[f],
      w = n[g];
    if (w) {
      const k = e[g],
        M = k === void 0 || w(k, g, e);
      if (M !== !0)
        throw new ke('option ' + g + ' must be ' + M, ke.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (r !== !0) throw new ke('Unknown option ' + g, ke.ERR_BAD_OPTION);
  }
}
const lc = { assertOptions: c2, validators: md },
  Fi = lc.validators;
class Vs {
  constructor(n) {
    (this.defaults = n),
      (this.interceptors = { request: new Yu(), response: new Yu() });
  }
  async request(n, r) {
    try {
      return await this._request(n, r);
    } catch (c) {
      if (c instanceof Error) {
        let f;
        Error.captureStackTrace
          ? Error.captureStackTrace((f = {}))
          : (f = new Error());
        const g = f.stack ? f.stack.replace(/^.+\n/, '') : '';
        try {
          c.stack
            ? g &&
              !String(c.stack).endsWith(g.replace(/^.+\n.+\n/, '')) &&
              (c.stack +=
                `
` + g)
            : (c.stack = g);
        } catch {}
      }
      throw c;
    }
  }
  _request(n, r) {
    typeof n == 'string' ? ((r = r || {}), (r.url = n)) : (r = n || {}),
      (r = Sr(this.defaults, r));
    const { transitional: c, paramsSerializer: f, headers: g } = r;
    c !== void 0 &&
      lc.assertOptions(
        c,
        {
          silentJSONParsing: Fi.transitional(Fi.boolean),
          forcedJSONParsing: Fi.transitional(Fi.boolean),
          clarifyTimeoutError: Fi.transitional(Fi.boolean),
        },
        !1
      ),
      f != null &&
        (J.isFunction(f)
          ? (r.paramsSerializer = { serialize: f })
          : lc.assertOptions(
              f,
              { encode: Fi.function, serialize: Fi.function },
              !0
            )),
      (r.method = (r.method || this.defaults.method || 'get').toLowerCase());
    let w = g && J.merge(g.common, g[r.method]);
    g &&
      J.forEach(
        ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
        (Z) => {
          delete g[Z];
        }
      ),
      (r.headers = ci.concat(w, g));
    const k = [];
    let M = !0;
    this.interceptors.request.forEach(function (V) {
      (typeof V.runWhen == 'function' && V.runWhen(r) === !1) ||
        ((M = M && V.synchronous), k.unshift(V.fulfilled, V.rejected));
    });
    const D = [];
    this.interceptors.response.forEach(function (V) {
      D.push(V.fulfilled, V.rejected);
    });
    let z,
      Y = 0,
      U;
    if (!M) {
      const Z = [$u.bind(this), void 0];
      for (
        Z.unshift.apply(Z, k),
          Z.push.apply(Z, D),
          U = Z.length,
          z = Promise.resolve(r);
        Y < U;

      )
        z = z.then(Z[Y++], Z[Y++]);
      return z;
    }
    U = k.length;
    let K = r;
    for (Y = 0; Y < U; ) {
      const Z = k[Y++],
        V = k[Y++];
      try {
        K = Z(K);
      } catch (ee) {
        V.call(this, ee);
        break;
      }
    }
    try {
      z = $u.call(this, K);
    } catch (Z) {
      return Promise.reject(Z);
    }
    for (Y = 0, U = D.length; Y < U; ) z = z.then(D[Y++], D[Y++]);
    return z;
  }
  getUri(n) {
    n = Sr(this.defaults, n);
    const r = Vf(n.baseURL, n.url);
    return Hf(r, n.params, n.paramsSerializer);
  }
}
J.forEach(['delete', 'get', 'head', 'options'], function (n) {
  Vs.prototype[n] = function (r, c) {
    return this.request(
      Sr(c || {}, { method: n, url: r, data: (c || {}).data })
    );
  };
});
J.forEach(['post', 'put', 'patch'], function (n) {
  function r(c) {
    return function (g, w, k) {
      return this.request(
        Sr(k || {}, {
          method: n,
          headers: c ? { 'Content-Type': 'multipart/form-data' } : {},
          url: g,
          data: w,
        })
      );
    };
  }
  (Vs.prototype[n] = r()), (Vs.prototype[n + 'Form'] = r(!0));
});
const ps = Vs;
class xd {
  constructor(n) {
    if (typeof n != 'function')
      throw new TypeError('executor must be a function.');
    let r;
    this.promise = new Promise(function (g) {
      r = g;
    });
    const c = this;
    this.promise.then((f) => {
      if (!c._listeners) return;
      let g = c._listeners.length;
      for (; g-- > 0; ) c._listeners[g](f);
      c._listeners = null;
    }),
      (this.promise.then = (f) => {
        let g;
        const w = new Promise((k) => {
          c.subscribe(k), (g = k);
        }).then(f);
        return (
          (w.cancel = function () {
            c.unsubscribe(g);
          }),
          w
        );
      }),
      n(function (g, w, k) {
        c.reason || ((c.reason = new gn(g, w, k)), r(c.reason));
      });
  }
  throwIfRequested() {
    if (this.reason) throw this.reason;
  }
  subscribe(n) {
    if (this.reason) {
      n(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(n) : (this._listeners = [n]);
  }
  unsubscribe(n) {
    if (!this._listeners) return;
    const r = this._listeners.indexOf(n);
    r !== -1 && this._listeners.splice(r, 1);
  }
  toAbortSignal() {
    const n = new AbortController(),
      r = (c) => {
        n.abort(c);
      };
    return (
      this.subscribe(r),
      (n.signal.unsubscribe = () => this.unsubscribe(r)),
      n.signal
    );
  }
  static source() {
    let n;
    return {
      token: new xd(function (f) {
        n = f;
      }),
      cancel: n,
    };
  }
}
const d2 = xd;
function u2(e) {
  return function (r) {
    return e.apply(null, r);
  };
}
function h2(e) {
  return J.isObject(e) && e.isAxiosError === !0;
}
const cc = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511,
};
Object.entries(cc).forEach(([e, n]) => {
  cc[n] = e;
});
const f2 = cc;
function qf(e) {
  const n = new ps(e),
    r = Nf(ps.prototype.request, n);
  return (
    J.extend(r, ps.prototype, n, { allOwnKeys: !0 }),
    J.extend(r, n, null, { allOwnKeys: !0 }),
    (r.create = function (f) {
      return qf(Sr(e, f));
    }),
    r
  );
}
const Je = qf(gd);
Je.Axios = ps;
Je.CanceledError = gn;
Je.CancelToken = d2;
Je.isCancel = Xf;
Je.VERSION = $f;
Je.toFormData = fo;
Je.AxiosError = ke;
Je.Cancel = Je.CanceledError;
Je.all = function (n) {
  return Promise.all(n);
};
Je.spread = u2;
Je.isAxiosError = h2;
Je.mergeConfig = Sr;
Je.AxiosHeaders = ci;
Je.formToJSON = (e) => Yf(J.isHTMLForm(e) ? new FormData(e) : e);
Je.getAdapter = Zf.getAdapter;
Je.HttpStatusCode = f2;
Je.default = Je;
const ka = Je;
var Kf = {},
  dc = { exports: {} };
/*!
 * ApexCharts v3.41.0
 * (c) 2018-2023 ApexCharts
 * Released under the MIT License.
 */ (function (e, n) {
  function r(j, t) {
    var i = Object.keys(j);
    if (Object.getOwnPropertySymbols) {
      var a = Object.getOwnPropertySymbols(j);
      t &&
        (a = a.filter(function (s) {
          return Object.getOwnPropertyDescriptor(j, s).enumerable;
        })),
        i.push.apply(i, a);
    }
    return i;
  }
  function c(j) {
    for (var t = 1; t < arguments.length; t++) {
      var i = arguments[t] != null ? arguments[t] : {};
      t % 2
        ? r(Object(i), !0).forEach(function (a) {
            M(j, a, i[a]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(j, Object.getOwnPropertyDescriptors(i))
        : r(Object(i)).forEach(function (a) {
            Object.defineProperty(j, a, Object.getOwnPropertyDescriptor(i, a));
          });
    }
    return j;
  }
  function f(j) {
    return (
      (f =
        typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
          ? function (t) {
              return typeof t;
            }
          : function (t) {
              return t &&
                typeof Symbol == 'function' &&
                t.constructor === Symbol &&
                t !== Symbol.prototype
                ? 'symbol'
                : typeof t;
            }),
      f(j)
    );
  }
  function g(j, t) {
    if (!(j instanceof t))
      throw new TypeError('Cannot call a class as a function');
  }
  function w(j, t) {
    for (var i = 0; i < t.length; i++) {
      var a = t[i];
      (a.enumerable = a.enumerable || !1),
        (a.configurable = !0),
        'value' in a && (a.writable = !0),
        Object.defineProperty(j, a.key, a);
    }
  }
  function k(j, t, i) {
    return t && w(j.prototype, t), i && w(j, i), j;
  }
  function M(j, t, i) {
    return (
      t in j
        ? Object.defineProperty(j, t, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (j[t] = i),
      j
    );
  }
  function D(j, t) {
    if (typeof t != 'function' && t !== null)
      throw new TypeError('Super expression must either be null or a function');
    (j.prototype = Object.create(t && t.prototype, {
      constructor: { value: j, writable: !0, configurable: !0 },
    })),
      t && Y(j, t);
  }
  function z(j) {
    return (
      (z = Object.setPrototypeOf
        ? Object.getPrototypeOf
        : function (t) {
            return t.__proto__ || Object.getPrototypeOf(t);
          }),
      z(j)
    );
  }
  function Y(j, t) {
    return (
      (Y =
        Object.setPrototypeOf ||
        function (i, a) {
          return (i.__proto__ = a), i;
        }),
      Y(j, t)
    );
  }
  function U(j, t) {
    if (t && (typeof t == 'object' || typeof t == 'function')) return t;
    if (t !== void 0)
      throw new TypeError(
        'Derived constructors may only return object or undefined'
      );
    return (function (i) {
      if (i === void 0)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called"
        );
      return i;
    })(j);
  }
  function K(j) {
    var t = (function () {
      if (typeof Reflect > 'u' || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == 'function') return !0;
      try {
        return (
          Boolean.prototype.valueOf.call(
            Reflect.construct(Boolean, [], function () {})
          ),
          !0
        );
      } catch {
        return !1;
      }
    })();
    return function () {
      var i,
        a = z(j);
      if (t) {
        var s = z(this).constructor;
        i = Reflect.construct(a, arguments, s);
      } else i = a.apply(this, arguments);
      return U(this, i);
    };
  }
  function Z(j, t) {
    return (
      (function (i) {
        if (Array.isArray(i)) return i;
      })(j) ||
      (function (i, a) {
        var s =
          i == null
            ? null
            : (typeof Symbol < 'u' && i[Symbol.iterator]) || i['@@iterator'];
        if (s != null) {
          var o,
            l,
            d = [],
            u = !0,
            p = !1;
          try {
            for (
              s = s.call(i);
              !(u = (o = s.next()).done) &&
              (d.push(o.value), !a || d.length !== a);
              u = !0
            );
          } catch (x) {
            (p = !0), (l = x);
          } finally {
            try {
              u || s.return == null || s.return();
            } finally {
              if (p) throw l;
            }
          }
          return d;
        }
      })(j, t) ||
      ee(j, t) ||
      (function () {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function V(j) {
    return (
      (function (t) {
        if (Array.isArray(t)) return B(t);
      })(j) ||
      (function (t) {
        if (
          (typeof Symbol < 'u' && t[Symbol.iterator] != null) ||
          t['@@iterator'] != null
        )
          return Array.from(t);
      })(j) ||
      ee(j) ||
      (function () {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function ee(j, t) {
    if (j) {
      if (typeof j == 'string') return B(j, t);
      var i = Object.prototype.toString.call(j).slice(8, -1);
      return (
        i === 'Object' && j.constructor && (i = j.constructor.name),
        i === 'Map' || i === 'Set'
          ? Array.from(j)
          : i === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)
          ? B(j, t)
          : void 0
      );
    }
  }
  function B(j, t) {
    (t == null || t > j.length) && (t = j.length);
    for (var i = 0, a = new Array(t); i < t; i++) a[i] = j[i];
    return a;
  }
  var E = (function () {
      function j() {
        g(this, j);
      }
      return (
        k(
          j,
          [
            {
              key: 'shadeRGBColor',
              value: function (t, i) {
                var a = i.split(','),
                  s = t < 0 ? 0 : 255,
                  o = t < 0 ? -1 * t : t,
                  l = parseInt(a[0].slice(4), 10),
                  d = parseInt(a[1], 10),
                  u = parseInt(a[2], 10);
                return (
                  'rgb(' +
                  (Math.round((s - l) * o) + l) +
                  ',' +
                  (Math.round((s - d) * o) + d) +
                  ',' +
                  (Math.round((s - u) * o) + u) +
                  ')'
                );
              },
            },
            {
              key: 'shadeHexColor',
              value: function (t, i) {
                var a = parseInt(i.slice(1), 16),
                  s = t < 0 ? 0 : 255,
                  o = t < 0 ? -1 * t : t,
                  l = a >> 16,
                  d = (a >> 8) & 255,
                  u = 255 & a;
                return (
                  '#' +
                  (
                    16777216 +
                    65536 * (Math.round((s - l) * o) + l) +
                    256 * (Math.round((s - d) * o) + d) +
                    (Math.round((s - u) * o) + u)
                  )
                    .toString(16)
                    .slice(1)
                );
              },
            },
            {
              key: 'shadeColor',
              value: function (t, i) {
                return j.isColorHex(i)
                  ? this.shadeHexColor(t, i)
                  : this.shadeRGBColor(t, i);
              },
            },
          ],
          [
            {
              key: 'bind',
              value: function (t, i) {
                return function () {
                  return t.apply(i, arguments);
                };
              },
            },
            {
              key: 'isObject',
              value: function (t) {
                return t && f(t) === 'object' && !Array.isArray(t) && t != null;
              },
            },
            {
              key: 'is',
              value: function (t, i) {
                return (
                  Object.prototype.toString.call(i) === '[object ' + t + ']'
                );
              },
            },
            {
              key: 'listToArray',
              value: function (t) {
                var i,
                  a = [];
                for (i = 0; i < t.length; i++) a[i] = t[i];
                return a;
              },
            },
            {
              key: 'extend',
              value: function (t, i) {
                var a = this;
                typeof Object.assign != 'function' &&
                  (Object.assign = function (o) {
                    if (o == null)
                      throw new TypeError(
                        'Cannot convert undefined or null to object'
                      );
                    for (var l = Object(o), d = 1; d < arguments.length; d++) {
                      var u = arguments[d];
                      if (u != null)
                        for (var p in u) u.hasOwnProperty(p) && (l[p] = u[p]);
                    }
                    return l;
                  });
                var s = Object.assign({}, t);
                return (
                  this.isObject(t) &&
                    this.isObject(i) &&
                    Object.keys(i).forEach(function (o) {
                      a.isObject(i[o]) && o in t
                        ? (s[o] = a.extend(t[o], i[o]))
                        : Object.assign(s, M({}, o, i[o]));
                    }),
                  s
                );
              },
            },
            {
              key: 'extendArray',
              value: function (t, i) {
                var a = [];
                return (
                  t.map(function (s) {
                    a.push(j.extend(i, s));
                  }),
                  (t = a)
                );
              },
            },
            {
              key: 'monthMod',
              value: function (t) {
                return t % 12;
              },
            },
            {
              key: 'clone',
              value: function (t) {
                if (j.is('Array', t)) {
                  for (var i = [], a = 0; a < t.length; a++)
                    i[a] = this.clone(t[a]);
                  return i;
                }
                if (j.is('Null', t)) return null;
                if (j.is('Date', t)) return t;
                if (f(t) === 'object') {
                  var s = {};
                  for (var o in t)
                    t.hasOwnProperty(o) && (s[o] = this.clone(t[o]));
                  return s;
                }
                return t;
              },
            },
            {
              key: 'log10',
              value: function (t) {
                return Math.log(t) / Math.LN10;
              },
            },
            {
              key: 'roundToBase10',
              value: function (t) {
                return Math.pow(10, Math.floor(Math.log10(t)));
              },
            },
            {
              key: 'roundToBase',
              value: function (t, i) {
                return Math.pow(i, Math.floor(Math.log(t) / Math.log(i)));
              },
            },
            {
              key: 'parseNumber',
              value: function (t) {
                return t === null ? t : parseFloat(t);
              },
            },
            {
              key: 'randomId',
              value: function () {
                return (Math.random() + 1).toString(36).substring(4);
              },
            },
            {
              key: 'noExponents',
              value: function (t) {
                var i = String(t).split(/[eE]/);
                if (i.length === 1) return i[0];
                var a = '',
                  s = t < 0 ? '-' : '',
                  o = i[0].replace('.', ''),
                  l = Number(i[1]) + 1;
                if (l < 0) {
                  for (a = s + '0.'; l++; ) a += '0';
                  return a + o.replace(/^-/, '');
                }
                for (l -= o.length; l--; ) a += '0';
                return o + a;
              },
            },
            {
              key: 'getDimensions',
              value: function (t) {
                var i = getComputedStyle(t, null),
                  a = t.clientHeight,
                  s = t.clientWidth;
                return (
                  (a -= parseFloat(i.paddingTop) + parseFloat(i.paddingBottom)),
                  [
                    (s -=
                      parseFloat(i.paddingLeft) + parseFloat(i.paddingRight)),
                    a,
                  ]
                );
              },
            },
            {
              key: 'getBoundingClientRect',
              value: function (t) {
                var i = t.getBoundingClientRect();
                return {
                  top: i.top,
                  right: i.right,
                  bottom: i.bottom,
                  left: i.left,
                  width: t.clientWidth,
                  height: t.clientHeight,
                  x: i.left,
                  y: i.top,
                };
              },
            },
            {
              key: 'getLargestStringFromArr',
              value: function (t) {
                return t.reduce(function (i, a) {
                  return (
                    Array.isArray(a) &&
                      (a = a.reduce(function (s, o) {
                        return s.length > o.length ? s : o;
                      })),
                    i.length > a.length ? i : a
                  );
                }, 0);
              },
            },
            {
              key: 'hexToRgba',
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : '#999999',
                  i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0.6;
                t.substring(0, 1) !== '#' && (t = '#999999');
                var a = t.replace('#', '');
                a = a.match(new RegExp('(.{' + a.length / 3 + '})', 'g'));
                for (var s = 0; s < a.length; s++)
                  a[s] = parseInt(a[s].length === 1 ? a[s] + a[s] : a[s], 16);
                return i !== void 0 && a.push(i), 'rgba(' + a.join(',') + ')';
              },
            },
            {
              key: 'getOpacityFromRGBA',
              value: function (t) {
                return parseFloat(t.replace(/^.*,(.+)\)/, '$1'));
              },
            },
            {
              key: 'rgb2hex',
              value: function (t) {
                return (t = t.match(
                  /^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i
                )) && t.length === 4
                  ? '#' +
                      ('0' + parseInt(t[1], 10).toString(16)).slice(-2) +
                      ('0' + parseInt(t[2], 10).toString(16)).slice(-2) +
                      ('0' + parseInt(t[3], 10).toString(16)).slice(-2)
                  : '';
              },
            },
            {
              key: 'isColorHex',
              value: function (t) {
                return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(
                  t
                );
              },
            },
            {
              key: 'getPolygonPos',
              value: function (t, i) {
                for (var a = [], s = (2 * Math.PI) / i, o = 0; o < i; o++) {
                  var l = {};
                  (l.x = t * Math.sin(o * s)),
                    (l.y = -t * Math.cos(o * s)),
                    a.push(l);
                }
                return a;
              },
            },
            {
              key: 'polarToCartesian',
              value: function (t, i, a, s) {
                var o = ((s - 90) * Math.PI) / 180;
                return { x: t + a * Math.cos(o), y: i + a * Math.sin(o) };
              },
            },
            {
              key: 'escapeString',
              value: function (t) {
                var i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 'x',
                  a = t.toString().slice();
                return (a = a.replace(
                  /[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi,
                  i
                ));
              },
            },
            {
              key: 'negToZero',
              value: function (t) {
                return t < 0 ? 0 : t;
              },
            },
            {
              key: 'moveIndexInArray',
              value: function (t, i, a) {
                if (a >= t.length)
                  for (var s = a - t.length + 1; s--; ) t.push(void 0);
                return t.splice(a, 0, t.splice(i, 1)[0]), t;
              },
            },
            {
              key: 'extractNumber',
              value: function (t) {
                return parseFloat(t.replace(/[^\d.]*/g, ''));
              },
            },
            {
              key: 'findAncestor',
              value: function (t, i) {
                for (; (t = t.parentElement) && !t.classList.contains(i); );
                return t;
              },
            },
            {
              key: 'setELstyles',
              value: function (t, i) {
                for (var a in i) i.hasOwnProperty(a) && (t.style.key = i[a]);
              },
            },
            {
              key: 'isNumber',
              value: function (t) {
                return (
                  !isNaN(t) &&
                  parseFloat(Number(t)) === t &&
                  !isNaN(parseInt(t, 10))
                );
              },
            },
            {
              key: 'isFloat',
              value: function (t) {
                return Number(t) === t && t % 1 != 0;
              },
            },
            {
              key: 'isSafari',
              value: function () {
                return /^((?!chrome|android).)*safari/i.test(
                  navigator.userAgent
                );
              },
            },
            {
              key: 'isFirefox',
              value: function () {
                return (
                  navigator.userAgent.toLowerCase().indexOf('firefox') > -1
                );
              },
            },
            {
              key: 'isIE11',
              value: function () {
                if (
                  window.navigator.userAgent.indexOf('MSIE') !== -1 ||
                  window.navigator.appVersion.indexOf('Trident/') > -1
                )
                  return !0;
              },
            },
            {
              key: 'isIE',
              value: function () {
                var t = window.navigator.userAgent,
                  i = t.indexOf('MSIE ');
                if (i > 0)
                  return parseInt(t.substring(i + 5, t.indexOf('.', i)), 10);
                if (t.indexOf('Trident/') > 0) {
                  var a = t.indexOf('rv:');
                  return parseInt(t.substring(a + 3, t.indexOf('.', a)), 10);
                }
                var s = t.indexOf('Edge/');
                return (
                  s > 0 && parseInt(t.substring(s + 5, t.indexOf('.', s)), 10)
                );
              },
            },
          ]
        ),
        j
      );
    })(),
    _ = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w), this.setEasingFunctions();
      }
      return (
        k(j, [
          {
            key: 'setEasingFunctions',
            value: function () {
              var t;
              if (!this.w.globals.easing) {
                switch (this.w.config.chart.animations.easing) {
                  case 'linear':
                    t = '-';
                    break;
                  case 'easein':
                    t = '<';
                    break;
                  case 'easeout':
                    t = '>';
                    break;
                  case 'easeinout':
                  default:
                    t = '<>';
                    break;
                  case 'swing':
                    t = function (i) {
                      var a = 1.70158;
                      return (i -= 1) * i * ((a + 1) * i + a) + 1;
                    };
                    break;
                  case 'bounce':
                    t = function (i) {
                      return i < 1 / 2.75
                        ? 7.5625 * i * i
                        : i < 2 / 2.75
                        ? 7.5625 * (i -= 1.5 / 2.75) * i + 0.75
                        : i < 2.5 / 2.75
                        ? 7.5625 * (i -= 2.25 / 2.75) * i + 0.9375
                        : 7.5625 * (i -= 2.625 / 2.75) * i + 0.984375;
                    };
                    break;
                  case 'elastic':
                    t = function (i) {
                      return i === !!i
                        ? i
                        : Math.pow(2, -10 * i) *
                            Math.sin(((i - 0.075) * (2 * Math.PI)) / 0.3) +
                            1;
                    };
                }
                this.w.globals.easing = t;
              }
            },
          },
          {
            key: 'animateLine',
            value: function (t, i, a, s) {
              t.attr(i).animate(s).attr(a);
            },
          },
          {
            key: 'animateMarker',
            value: function (t, i, a, s, o, l) {
              i || (i = 0),
                t
                  .attr({ r: i, width: i, height: i })
                  .animate(s, o)
                  .attr({ r: a, width: a.width, height: a.height })
                  .afterAll(function () {
                    l();
                  });
            },
          },
          {
            key: 'animateCircle',
            value: function (t, i, a, s, o) {
              t.attr({ r: i.r, cx: i.cx, cy: i.cy })
                .animate(s, o)
                .attr({ r: a.r, cx: a.cx, cy: a.cy });
            },
          },
          {
            key: 'animateRect',
            value: function (t, i, a, s, o) {
              t.attr(i)
                .animate(s)
                .attr(a)
                .afterAll(function () {
                  return o();
                });
            },
          },
          {
            key: 'animatePathsGradually',
            value: function (t) {
              var i = t.el,
                a = t.realIndex,
                s = t.j,
                o = t.fill,
                l = t.pathFrom,
                d = t.pathTo,
                u = t.speed,
                p = t.delay,
                x = this.w,
                v = 0;
              x.config.chart.animations.animateGradually.enabled &&
                (v = x.config.chart.animations.animateGradually.delay),
                x.config.chart.animations.dynamicAnimation.enabled &&
                  x.globals.dataChanged &&
                  x.config.chart.type !== 'bar' &&
                  (v = 0),
                this.morphSVG(
                  i,
                  a,
                  s,
                  x.config.chart.type !== 'line' || x.globals.comboCharts
                    ? o
                    : 'stroke',
                  l,
                  d,
                  u,
                  p * v
                );
            },
          },
          {
            key: 'showDelayedElements',
            value: function () {
              this.w.globals.delayedElements.forEach(function (t) {
                var i = t.el;
                i.classList.remove('apexcharts-element-hidden'),
                  i.classList.add('apexcharts-hidden-element-shown');
              });
            },
          },
          {
            key: 'animationCompleted',
            value: function (t) {
              var i = this.w;
              i.globals.animationEnded ||
                ((i.globals.animationEnded = !0),
                this.showDelayedElements(),
                typeof i.config.chart.events.animationEnd == 'function' &&
                  i.config.chart.events.animationEnd(this.ctx, {
                    el: t,
                    w: i,
                  }));
            },
          },
          {
            key: 'morphSVG',
            value: function (t, i, a, s, o, l, d, u) {
              var p = this,
                x = this.w;
              o || (o = t.attr('pathFrom')), l || (l = t.attr('pathTo'));
              var v = function (b) {
                return (
                  x.config.chart.type === 'radar' && (d = 1),
                  'M 0 '.concat(x.globals.gridHeight)
                );
              };
              (!o || o.indexOf('undefined') > -1 || o.indexOf('NaN') > -1) &&
                (o = v()),
                (!l || l.indexOf('undefined') > -1 || l.indexOf('NaN') > -1) &&
                  (l = v()),
                x.globals.shouldAnimate || (d = 1),
                t
                  .plot(o)
                  .animate(1, x.globals.easing, u)
                  .plot(o)
                  .animate(d, x.globals.easing, u)
                  .plot(l)
                  .afterAll(function () {
                    E.isNumber(a)
                      ? a ===
                          x.globals.series[x.globals.maxValsInArrayIndex]
                            .length -
                            2 &&
                        x.globals.shouldAnimate &&
                        p.animationCompleted(t)
                      : s !== 'none' &&
                        x.globals.shouldAnimate &&
                        ((!x.globals.comboCharts &&
                          i === x.globals.series.length - 1) ||
                          x.globals.comboCharts) &&
                        p.animationCompleted(t),
                      p.showDelayedElements();
                  });
            },
          },
        ]),
        j
      );
    })(),
    Q = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'getDefaultFilter',
            value: function (t, i) {
              var a = this.w;
              t.unfilter(!0),
                new window.SVG.Filter().size('120%', '180%', '-5%', '-40%'),
                a.config.states.normal.filter !== 'none'
                  ? this.applyFilter(
                      t,
                      i,
                      a.config.states.normal.filter.type,
                      a.config.states.normal.filter.value
                    )
                  : a.config.chart.dropShadow.enabled &&
                    this.dropShadow(t, a.config.chart.dropShadow, i);
            },
          },
          {
            key: 'addNormalFilter',
            value: function (t, i) {
              var a = this.w;
              a.config.chart.dropShadow.enabled &&
                !t.node.classList.contains('apexcharts-marker') &&
                this.dropShadow(t, a.config.chart.dropShadow, i);
            },
          },
          {
            key: 'addLightenFilter',
            value: function (t, i, a) {
              var s = this,
                o = this.w,
                l = a.intensity;
              t.unfilter(!0),
                new window.SVG.Filter(),
                t.filter(function (d) {
                  var u = o.config.chart.dropShadow;
                  (u.enabled ? s.addShadow(d, i, u) : d).componentTransfer({
                    rgb: { type: 'linear', slope: 1.5, intercept: l },
                  });
                }),
                t.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse'),
                this._scaleFilterSize(t.filterer.node);
            },
          },
          {
            key: 'addDarkenFilter',
            value: function (t, i, a) {
              var s = this,
                o = this.w,
                l = a.intensity;
              t.unfilter(!0),
                new window.SVG.Filter(),
                t.filter(function (d) {
                  var u = o.config.chart.dropShadow;
                  (u.enabled ? s.addShadow(d, i, u) : d).componentTransfer({
                    rgb: { type: 'linear', slope: l },
                  });
                }),
                t.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse'),
                this._scaleFilterSize(t.filterer.node);
            },
          },
          {
            key: 'applyFilter',
            value: function (t, i, a) {
              var s =
                arguments.length > 3 && arguments[3] !== void 0
                  ? arguments[3]
                  : 0.5;
              switch (a) {
                case 'none':
                  this.addNormalFilter(t, i);
                  break;
                case 'lighten':
                  this.addLightenFilter(t, i, { intensity: s });
                  break;
                case 'darken':
                  this.addDarkenFilter(t, i, { intensity: s });
              }
            },
          },
          {
            key: 'addShadow',
            value: function (t, i, a) {
              var s = a.blur,
                o = a.top,
                l = a.left,
                d = a.color,
                u = a.opacity,
                p = t
                  .flood(Array.isArray(d) ? d[i] : d, u)
                  .composite(t.sourceAlpha, 'in')
                  .offset(l, o)
                  .gaussianBlur(s)
                  .merge(t.source);
              return t.blend(t.source, p);
            },
          },
          {
            key: 'dropShadow',
            value: function (t, i) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 0,
                s = i.top,
                o = i.left,
                l = i.blur,
                d = i.color,
                u = i.opacity,
                p = i.noUserSpaceOnUse,
                x = this.w;
              return (
                t.unfilter(!0),
                (E.isIE() && x.config.chart.type === 'radialBar') ||
                  ((d = Array.isArray(d) ? d[a] : d),
                  t.filter(function (v) {
                    var b = null;
                    (b =
                      E.isSafari() || E.isFirefox() || E.isIE()
                        ? v
                            .flood(d, u)
                            .composite(v.sourceAlpha, 'in')
                            .offset(o, s)
                            .gaussianBlur(l)
                        : v
                            .flood(d, u)
                            .composite(v.sourceAlpha, 'in')
                            .offset(o, s)
                            .gaussianBlur(l)
                            .merge(v.source)),
                      v.blend(v.source, b);
                  }),
                  p ||
                    t.filterer.node.setAttribute(
                      'filterUnits',
                      'userSpaceOnUse'
                    ),
                  this._scaleFilterSize(t.filterer.node)),
                t
              );
            },
          },
          {
            key: 'setSelectionFilter',
            value: function (t, i, a) {
              var s = this.w;
              if (
                s.globals.selectedDataPoints[i] !== void 0 &&
                s.globals.selectedDataPoints[i].indexOf(a) > -1
              ) {
                t.node.setAttribute('selected', !0);
                var o = s.config.states.active.filter;
                o !== 'none' && this.applyFilter(t, i, o.type, o.value);
              }
            },
          },
          {
            key: '_scaleFilterSize',
            value: function (t) {
              (function (i) {
                for (var a in i) i.hasOwnProperty(a) && t.setAttribute(a, i[a]);
              })({ width: '200%', height: '200%', x: '-50%', y: '-50%' });
            },
          },
        ]),
        j
      );
    })(),
    W = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(
          j,
          [
            {
              key: 'roundPathCorners',
              value: function (t, i) {
                function a(O, X, G) {
                  var q = X.x - O.x,
                    ie = X.y - O.y,
                    re = Math.sqrt(q * q + ie * ie);
                  return s(O, X, Math.min(1, G / re));
                }
                function s(O, X, G) {
                  return { x: O.x + (X.x - O.x) * G, y: O.y + (X.y - O.y) * G };
                }
                function o(O, X) {
                  O.length > 2 &&
                    ((O[O.length - 2] = X.x), (O[O.length - 1] = X.y));
                }
                function l(O) {
                  return {
                    x: parseFloat(O[O.length - 2]),
                    y: parseFloat(O[O.length - 1]),
                  };
                }
                t.indexOf('NaN') > -1 && (t = '');
                var d = t
                    .split(/[,\s]/)
                    .reduce(function (O, X) {
                      var G = X.match('([a-zA-Z])(.+)');
                      return G ? (O.push(G[1]), O.push(G[2])) : O.push(X), O;
                    }, [])
                    .reduce(function (O, X) {
                      return (
                        parseFloat(X) == X && O.length
                          ? O[O.length - 1].push(X)
                          : O.push([X]),
                        O
                      );
                    }, []),
                  u = [];
                if (d.length > 1) {
                  var p = l(d[0]),
                    x = null;
                  d[d.length - 1][0] == 'Z' &&
                    d[0].length > 2 &&
                    ((x = ['L', p.x, p.y]), (d[d.length - 1] = x)),
                    u.push(d[0]);
                  for (var v = 1; v < d.length; v++) {
                    var b = u[u.length - 1],
                      C = d[v],
                      S = C == x ? d[1] : d[v + 1];
                    if (
                      S &&
                      b &&
                      b.length > 2 &&
                      C[0] == 'L' &&
                      S.length > 2 &&
                      S[0] == 'L'
                    ) {
                      var L,
                        N,
                        T = l(b),
                        I = l(C),
                        h = l(S);
                      (L = a(I, T, i)),
                        (N = a(I, h, i)),
                        o(C, L),
                        (C.origPoint = I),
                        u.push(C);
                      var y = s(L, I, 0.5),
                        A = s(I, N, 0.5),
                        P = ['C', y.x, y.y, A.x, A.y, N.x, N.y];
                      (P.origPoint = I), u.push(P);
                    } else u.push(C);
                  }
                  if (x) {
                    var R = l(u[u.length - 1]);
                    u.push(['Z']), o(u[0], R);
                  }
                } else u = d;
                return u.reduce(function (O, X) {
                  return O + X.join(' ') + ' ';
                }, '');
              },
            },
            {
              key: 'drawLine',
              value: function (t, i, a, s) {
                var o =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : '#a8a8a8',
                  l =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : 0,
                  d =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  u =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : 'butt';
                return this.w.globals.dom.Paper.line().attr({
                  x1: t,
                  y1: i,
                  x2: a,
                  y2: s,
                  stroke: o,
                  'stroke-dasharray': l,
                  'stroke-width': d,
                  'stroke-linecap': u,
                });
              },
            },
            {
              key: 'drawRect',
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0,
                  i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0,
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 0,
                  s =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : 0,
                  o =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0,
                  l =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : '#fefefe',
                  d =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : 1,
                  u =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  p =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : null,
                  x =
                    arguments.length > 9 && arguments[9] !== void 0
                      ? arguments[9]
                      : 0,
                  v = this.w.globals.dom.Paper.rect();
                return (
                  v.attr({
                    x: t,
                    y: i,
                    width: a > 0 ? a : 0,
                    height: s > 0 ? s : 0,
                    rx: o,
                    ry: o,
                    opacity: d,
                    'stroke-width': u !== null ? u : 0,
                    stroke: p !== null ? p : 'none',
                    'stroke-dasharray': x,
                  }),
                  v.node.setAttribute('fill', l),
                  v
                );
              },
            },
            {
              key: 'drawPolygon',
              value: function (t) {
                var i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : '#e1e1e1',
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 1,
                  s =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : 'none';
                return this.w.globals.dom.Paper.polygon(t).attr({
                  fill: s,
                  stroke: i,
                  'stroke-width': a,
                });
              },
            },
            {
              key: 'drawCircle',
              value: function (t) {
                var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null;
                t < 0 && (t = 0);
                var a = this.w.globals.dom.Paper.circle(2 * t);
                return i !== null && a.attr(i), a;
              },
            },
            {
              key: 'drawPath',
              value: function (t) {
                var i = t.d,
                  a = i === void 0 ? '' : i,
                  s = t.stroke,
                  o = s === void 0 ? '#a8a8a8' : s,
                  l = t.strokeWidth,
                  d = l === void 0 ? 1 : l,
                  u = t.fill,
                  p = t.fillOpacity,
                  x = p === void 0 ? 1 : p,
                  v = t.strokeOpacity,
                  b = v === void 0 ? 1 : v,
                  C = t.classes,
                  S = t.strokeLinecap,
                  L = S === void 0 ? null : S,
                  N = t.strokeDashArray,
                  T = N === void 0 ? 0 : N,
                  I = this.w;
                return (
                  L === null && (L = I.config.stroke.lineCap),
                  (a.indexOf('undefined') > -1 || a.indexOf('NaN') > -1) &&
                    (a = 'M 0 '.concat(I.globals.gridHeight)),
                  I.globals.dom.Paper.path(a).attr({
                    fill: u,
                    'fill-opacity': x,
                    stroke: o,
                    'stroke-opacity': b,
                    'stroke-linecap': L,
                    'stroke-width': d,
                    'stroke-dasharray': T,
                    class: C,
                  })
                );
              },
            },
            {
              key: 'group',
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  i = this.w.globals.dom.Paper.group();
                return t !== null && i.attr(t), i;
              },
            },
            {
              key: 'move',
              value: function (t, i) {
                var a = ['M', t, i].join(' ');
                return a;
              },
            },
            {
              key: 'line',
              value: function (t, i) {
                var a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : null,
                  s = null;
                return (
                  a === null
                    ? (s = [' L', t, i].join(' '))
                    : a === 'H'
                    ? (s = [' H', t].join(' '))
                    : a === 'V' && (s = [' V', i].join(' ')),
                  s
                );
              },
            },
            {
              key: 'curve',
              value: function (t, i, a, s, o, l) {
                var d = ['C', t, i, a, s, o, l].join(' ');
                return d;
              },
            },
            {
              key: 'quadraticCurve',
              value: function (t, i, a, s) {
                return ['Q', t, i, a, s].join(' ');
              },
            },
            {
              key: 'arc',
              value: function (t, i, a, s, o, l, d) {
                var u = 'A';
                arguments.length > 7 &&
                  arguments[7] !== void 0 &&
                  arguments[7] &&
                  (u = 'a');
                var p = [u, t, i, a, s, o, l, d].join(' ');
                return p;
              },
            },
            {
              key: 'renderPaths',
              value: function (t) {
                var i,
                  a = t.j,
                  s = t.realIndex,
                  o = t.pathFrom,
                  l = t.pathTo,
                  d = t.stroke,
                  u = t.strokeWidth,
                  p = t.strokeLinecap,
                  x = t.fill,
                  v = t.animationDelay,
                  b = t.initialSpeed,
                  C = t.dataChangeSpeed,
                  S = t.className,
                  L = t.shouldClipToGrid,
                  N = L === void 0 || L,
                  T = t.bindEventsOnPaths,
                  I = T === void 0 || T,
                  h = t.drawShadow,
                  y = h === void 0 || h,
                  A = this.w,
                  P = new Q(this.ctx),
                  R = new _(this.ctx),
                  O = this.w.config.chart.animations.enabled,
                  X =
                    O &&
                    this.w.config.chart.animations.dynamicAnimation.enabled,
                  G = !!(
                    (O && !A.globals.resized) ||
                    (X && A.globals.dataChanged && A.globals.shouldAnimate)
                  );
                G ? (i = o) : ((i = l), (A.globals.animationEnded = !0));
                var q = A.config.stroke.dashArray,
                  ie = 0;
                ie = Array.isArray(q) ? q[s] : A.config.stroke.dashArray;
                var re = this.drawPath({
                  d: i,
                  stroke: d,
                  strokeWidth: u,
                  fill: x,
                  fillOpacity: 1,
                  classes: S,
                  strokeLinecap: p,
                  strokeDashArray: ie,
                });
                if (
                  (re.attr('index', s),
                  N &&
                    re.attr({
                      'clip-path': 'url(#gridRectMask'.concat(
                        A.globals.cuid,
                        ')'
                      ),
                    }),
                  A.config.states.normal.filter.type !== 'none')
                )
                  P.getDefaultFilter(re, s);
                else if (
                  A.config.chart.dropShadow.enabled &&
                  y &&
                  (!A.config.chart.dropShadow.enabledOnSeries ||
                    (A.config.chart.dropShadow.enabledOnSeries &&
                      A.config.chart.dropShadow.enabledOnSeries.indexOf(s) !==
                        -1))
                ) {
                  var se = A.config.chart.dropShadow;
                  P.dropShadow(re, se, s);
                }
                I &&
                  (re.node.addEventListener(
                    'mouseenter',
                    this.pathMouseEnter.bind(this, re)
                  ),
                  re.node.addEventListener(
                    'mouseleave',
                    this.pathMouseLeave.bind(this, re)
                  ),
                  re.node.addEventListener(
                    'mousedown',
                    this.pathMouseDown.bind(this, re)
                  )),
                  re.attr({ pathTo: l, pathFrom: o });
                var me = {
                  el: re,
                  j: a,
                  realIndex: s,
                  pathFrom: o,
                  pathTo: l,
                  fill: x,
                  strokeWidth: u,
                  delay: v,
                };
                return (
                  !O || A.globals.resized || A.globals.dataChanged
                    ? (!A.globals.resized && A.globals.dataChanged) ||
                      R.showDelayedElements()
                    : R.animatePathsGradually(c(c({}, me), {}, { speed: b })),
                  A.globals.dataChanged &&
                    X &&
                    G &&
                    R.animatePathsGradually(c(c({}, me), {}, { speed: C })),
                  re
                );
              },
            },
            {
              key: 'drawPattern',
              value: function (t, i, a) {
                var s =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : '#a8a8a8',
                  o =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0;
                return this.w.globals.dom.Paper.pattern(i, a, function (l) {
                  t === 'horizontalLines'
                    ? l.line(0, 0, a, 0).stroke({ color: s, width: o + 1 })
                    : t === 'verticalLines'
                    ? l.line(0, 0, 0, i).stroke({ color: s, width: o + 1 })
                    : t === 'slantedLines'
                    ? l.line(0, 0, i, a).stroke({ color: s, width: o })
                    : t === 'squares'
                    ? l.rect(i, a).fill('none').stroke({ color: s, width: o })
                    : t === 'circles' &&
                      l.circle(i).fill('none').stroke({ color: s, width: o });
                });
              },
            },
            {
              key: 'drawGradient',
              value: function (t, i, a, s, o) {
                var l,
                  d =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : null,
                  u =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  p =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  x =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : 0,
                  v = this.w;
                i.length < 9 && i.indexOf('#') === 0 && (i = E.hexToRgba(i, s)),
                  a.length < 9 &&
                    a.indexOf('#') === 0 &&
                    (a = E.hexToRgba(a, o));
                var b = 0,
                  C = 1,
                  S = 1,
                  L = null;
                u !== null &&
                  ((b = u[0] !== void 0 ? u[0] / 100 : 0),
                  (C = u[1] !== void 0 ? u[1] / 100 : 1),
                  (S = u[2] !== void 0 ? u[2] / 100 : 1),
                  (L = u[3] !== void 0 ? u[3] / 100 : null));
                var N = !(
                  v.config.chart.type !== 'donut' &&
                  v.config.chart.type !== 'pie' &&
                  v.config.chart.type !== 'polarArea' &&
                  v.config.chart.type !== 'bubble'
                );
                if (
                  ((l =
                    p === null || p.length === 0
                      ? v.globals.dom.Paper.gradient(
                          N ? 'radial' : 'linear',
                          function (h) {
                            h.at(b, i, s),
                              h.at(C, a, o),
                              h.at(S, a, o),
                              L !== null && h.at(L, i, s);
                          }
                        )
                      : v.globals.dom.Paper.gradient(
                          N ? 'radial' : 'linear',
                          function (h) {
                            (Array.isArray(p[x]) ? p[x] : p).forEach(function (
                              y
                            ) {
                              h.at(y.offset / 100, y.color, y.opacity);
                            });
                          }
                        )),
                  N)
                ) {
                  var T = v.globals.gridWidth / 2,
                    I = v.globals.gridHeight / 2;
                  v.config.chart.type !== 'bubble'
                    ? l.attr({
                        gradientUnits: 'userSpaceOnUse',
                        cx: T,
                        cy: I,
                        r: d,
                      })
                    : l.attr({ cx: 0.5, cy: 0.5, r: 0.8, fx: 0.2, fy: 0.2 });
                } else
                  t === 'vertical'
                    ? l.from(0, 0).to(0, 1)
                    : t === 'diagonal'
                    ? l.from(0, 0).to(1, 1)
                    : t === 'horizontal'
                    ? l.from(0, 1).to(1, 1)
                    : t === 'diagonal2' && l.from(1, 0).to(0, 1);
                return l;
              },
            },
            {
              key: 'getTextBasedOnMaxWidth',
              value: function (t) {
                var i = t.text,
                  a = t.maxWidth,
                  s = t.fontSize,
                  o = t.fontFamily,
                  l = this.getTextRects(i, s, o),
                  d = l.width / i.length,
                  u = Math.floor(a / d);
                return a < l.width ? i.slice(0, u - 3) + '...' : i;
              },
            },
            {
              key: 'drawText',
              value: function (t) {
                var i = this,
                  a = t.x,
                  s = t.y,
                  o = t.text,
                  l = t.textAnchor,
                  d = t.fontSize,
                  u = t.fontFamily,
                  p = t.fontWeight,
                  x = t.foreColor,
                  v = t.opacity,
                  b = t.maxWidth,
                  C = t.cssClass,
                  S = C === void 0 ? '' : C,
                  L = t.isPlainText,
                  N = L === void 0 || L,
                  T = this.w;
                o === void 0 && (o = '');
                var I = o;
                l || (l = 'start'),
                  (x && x.length) || (x = T.config.chart.foreColor),
                  (u = u || T.config.chart.fontFamily),
                  (p = p || 'regular');
                var h,
                  y = {
                    maxWidth: b,
                    fontSize: (d = d || '11px'),
                    fontFamily: u,
                  };
                return (
                  Array.isArray(o)
                    ? (h = T.globals.dom.Paper.text(function (A) {
                        for (var P = 0; P < o.length; P++)
                          (I = o[P]),
                            b &&
                              (I = i.getTextBasedOnMaxWidth(
                                c({ text: o[P] }, y)
                              )),
                            P === 0 ? A.tspan(I) : A.tspan(I).newLine();
                      }))
                    : (b &&
                        (I = this.getTextBasedOnMaxWidth(c({ text: o }, y))),
                      (h = N
                        ? T.globals.dom.Paper.plain(o)
                        : T.globals.dom.Paper.text(function (A) {
                            return A.tspan(I);
                          }))),
                  h.attr({
                    x: a,
                    y: s,
                    'text-anchor': l,
                    'dominant-baseline': 'auto',
                    'font-size': d,
                    'font-family': u,
                    'font-weight': p,
                    fill: x,
                    class: 'apexcharts-text ' + S,
                  }),
                  (h.node.style.fontFamily = u),
                  (h.node.style.opacity = v),
                  h
                );
              },
            },
            {
              key: 'drawMarker',
              value: function (t, i, a) {
                t = t || 0;
                var s = a.pSize || 0,
                  o = null;
                if (a.shape === 'square' || a.shape === 'rect') {
                  var l = a.pRadius === void 0 ? s / 2 : a.pRadius;
                  (i !== null && s) || ((s = 0), (l = 0));
                  var d = 1.2 * s + l,
                    u = this.drawRect(d, d, d, d, l);
                  u.attr({
                    x: t - d / 2,
                    y: i - d / 2,
                    cx: t,
                    cy: i,
                    class: a.class ? a.class : '',
                    fill: a.pointFillColor,
                    'fill-opacity': a.pointFillOpacity ? a.pointFillOpacity : 1,
                    stroke: a.pointStrokeColor,
                    'stroke-width': a.pointStrokeWidth ? a.pointStrokeWidth : 0,
                    'stroke-opacity': a.pointStrokeOpacity
                      ? a.pointStrokeOpacity
                      : 1,
                  }),
                    (o = u);
                } else
                  (a.shape !== 'circle' && a.shape) ||
                    (E.isNumber(i) || ((s = 0), (i = 0)),
                    (o = this.drawCircle(s, {
                      cx: t,
                      cy: i,
                      class: a.class ? a.class : '',
                      stroke: a.pointStrokeColor,
                      fill: a.pointFillColor,
                      'fill-opacity': a.pointFillOpacity
                        ? a.pointFillOpacity
                        : 1,
                      'stroke-width': a.pointStrokeWidth
                        ? a.pointStrokeWidth
                        : 0,
                      'stroke-opacity': a.pointStrokeOpacity
                        ? a.pointStrokeOpacity
                        : 1,
                    })));
                return o;
              },
            },
            {
              key: 'pathMouseEnter',
              value: function (t, i) {
                var a = this.w,
                  s = new Q(this.ctx),
                  o = parseInt(t.node.getAttribute('index'), 10),
                  l = parseInt(t.node.getAttribute('j'), 10);
                if (
                  (typeof a.config.chart.events.dataPointMouseEnter ==
                    'function' &&
                    a.config.chart.events.dataPointMouseEnter(i, this.ctx, {
                      seriesIndex: o,
                      dataPointIndex: l,
                      w: a,
                    }),
                  this.ctx.events.fireEvent('dataPointMouseEnter', [
                    i,
                    this.ctx,
                    { seriesIndex: o, dataPointIndex: l, w: a },
                  ]),
                  (a.config.states.active.filter.type === 'none' ||
                    t.node.getAttribute('selected') !== 'true') &&
                    a.config.states.hover.filter.type !== 'none' &&
                    !a.globals.isTouchDevice)
                ) {
                  var d = a.config.states.hover.filter;
                  s.applyFilter(t, o, d.type, d.value);
                }
              },
            },
            {
              key: 'pathMouseLeave',
              value: function (t, i) {
                var a = this.w,
                  s = new Q(this.ctx),
                  o = parseInt(t.node.getAttribute('index'), 10),
                  l = parseInt(t.node.getAttribute('j'), 10);
                typeof a.config.chart.events.dataPointMouseLeave ==
                  'function' &&
                  a.config.chart.events.dataPointMouseLeave(i, this.ctx, {
                    seriesIndex: o,
                    dataPointIndex: l,
                    w: a,
                  }),
                  this.ctx.events.fireEvent('dataPointMouseLeave', [
                    i,
                    this.ctx,
                    { seriesIndex: o, dataPointIndex: l, w: a },
                  ]),
                  (a.config.states.active.filter.type !== 'none' &&
                    t.node.getAttribute('selected') === 'true') ||
                    (a.config.states.hover.filter.type !== 'none' &&
                      s.getDefaultFilter(t, o));
              },
            },
            {
              key: 'pathMouseDown',
              value: function (t, i) {
                var a = this.w,
                  s = new Q(this.ctx),
                  o = parseInt(t.node.getAttribute('index'), 10),
                  l = parseInt(t.node.getAttribute('j'), 10),
                  d = 'false';
                if (t.node.getAttribute('selected') === 'true') {
                  if (
                    (t.node.setAttribute('selected', 'false'),
                    a.globals.selectedDataPoints[o].indexOf(l) > -1)
                  ) {
                    var u = a.globals.selectedDataPoints[o].indexOf(l);
                    a.globals.selectedDataPoints[o].splice(u, 1);
                  }
                } else {
                  if (
                    !a.config.states.active.allowMultipleDataPointsSelection &&
                    a.globals.selectedDataPoints.length > 0
                  ) {
                    a.globals.selectedDataPoints = [];
                    var p = a.globals.dom.Paper.select(
                        '.apexcharts-series path'
                      ).members,
                      x = a.globals.dom.Paper.select(
                        '.apexcharts-series circle, .apexcharts-series rect'
                      ).members,
                      v = function (S) {
                        Array.prototype.forEach.call(S, function (L) {
                          L.node.setAttribute('selected', 'false'),
                            s.getDefaultFilter(L, o);
                        });
                      };
                    v(p), v(x);
                  }
                  t.node.setAttribute('selected', 'true'),
                    (d = 'true'),
                    a.globals.selectedDataPoints[o] === void 0 &&
                      (a.globals.selectedDataPoints[o] = []),
                    a.globals.selectedDataPoints[o].push(l);
                }
                if (d === 'true') {
                  var b = a.config.states.active.filter;
                  if (b !== 'none') s.applyFilter(t, o, b.type, b.value);
                  else if (
                    a.config.states.hover.filter !== 'none' &&
                    !a.globals.isTouchDevice
                  ) {
                    var C = a.config.states.hover.filter;
                    s.applyFilter(t, o, C.type, C.value);
                  }
                } else
                  a.config.states.active.filter.type !== 'none' &&
                    (a.config.states.hover.filter.type === 'none' ||
                    a.globals.isTouchDevice
                      ? s.getDefaultFilter(t, o)
                      : ((C = a.config.states.hover.filter),
                        s.applyFilter(t, o, C.type, C.value)));
                typeof a.config.chart.events.dataPointSelection == 'function' &&
                  a.config.chart.events.dataPointSelection(i, this.ctx, {
                    selectedDataPoints: a.globals.selectedDataPoints,
                    seriesIndex: o,
                    dataPointIndex: l,
                    w: a,
                  }),
                  i &&
                    this.ctx.events.fireEvent('dataPointSelection', [
                      i,
                      this.ctx,
                      {
                        selectedDataPoints: a.globals.selectedDataPoints,
                        seriesIndex: o,
                        dataPointIndex: l,
                        w: a,
                      },
                    ]);
              },
            },
            {
              key: 'rotateAroundCenter',
              value: function (t) {
                var i = {};
                return (
                  t && typeof t.getBBox == 'function' && (i = t.getBBox()),
                  { x: i.x + i.width / 2, y: i.y + i.height / 2 }
                );
              },
            },
            {
              key: 'getTextRects',
              value: function (t, i, a, s) {
                var o =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  l = this.w,
                  d = this.drawText({
                    x: -200,
                    y: -200,
                    text: t,
                    textAnchor: 'start',
                    fontSize: i,
                    fontFamily: a,
                    foreColor: '#fff',
                    opacity: 0,
                  });
                s && d.attr('transform', s), l.globals.dom.Paper.add(d);
                var u = d.bbox();
                return (
                  o || (u = d.node.getBoundingClientRect()),
                  d.remove(),
                  { width: u.width, height: u.height }
                );
              },
            },
            {
              key: 'placeTextWithEllipsis',
              value: function (t, i, a) {
                if (
                  typeof t.getComputedTextLength == 'function' &&
                  ((t.textContent = i),
                  i.length > 0 && t.getComputedTextLength() >= a / 1.1)
                ) {
                  for (var s = i.length - 3; s > 0; s -= 3)
                    if (t.getSubStringLength(0, s) <= a / 1.1)
                      return void (t.textContent = i.substring(0, s) + '...');
                  t.textContent = '.';
                }
              },
            },
          ],
          [
            {
              key: 'setAttrs',
              value: function (t, i) {
                for (var a in i) i.hasOwnProperty(a) && t.setAttribute(a, i[a]);
              },
            },
          ]
        ),
        j
      );
    })(),
    ae = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(
          j,
          [
            {
              key: 'getStackedSeriesTotals',
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  i = this.w,
                  a = [];
                if (i.globals.series.length === 0) return a;
                for (
                  var s = 0;
                  s < i.globals.series[i.globals.maxValsInArrayIndex].length;
                  s++
                ) {
                  for (var o = 0, l = 0; l < i.globals.series.length; l++)
                    i.globals.series[l][s] !== void 0 &&
                      t.indexOf(l) === -1 &&
                      (o += i.globals.series[l][s]);
                  a.push(o);
                }
                return a;
              },
            },
            {
              key: 'getSeriesTotalByIndex',
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return t === null
                  ? this.w.config.series.reduce(function (i, a) {
                      return i + a;
                    }, 0)
                  : this.w.globals.series[t].reduce(function (i, a) {
                      return i + a;
                    }, 0);
              },
            },
            {
              key: 'isSeriesNull',
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return (
                  (t === null
                    ? this.w.config.series.filter(function (i) {
                        return i !== null;
                      })
                    : this.w.config.series[t].data.filter(function (i) {
                        return i !== null;
                      })
                  ).length === 0
                );
              },
            },
            {
              key: 'seriesHaveSameValues',
              value: function (t) {
                return this.w.globals.series[t].every(function (i, a, s) {
                  return i === s[0];
                });
              },
            },
            {
              key: 'getCategoryLabels',
              value: function (t) {
                var i = this.w,
                  a = t.slice();
                return (
                  i.config.xaxis.convertedCatToNumeric &&
                    (a = t.map(function (s, o) {
                      return i.config.xaxis.labels.formatter(
                        s - i.globals.minX + 1
                      );
                    })),
                  a
                );
              },
            },
            {
              key: 'getLargestSeries',
              value: function () {
                var t = this.w;
                t.globals.maxValsInArrayIndex = t.globals.series
                  .map(function (i) {
                    return i.length;
                  })
                  .indexOf(
                    Math.max.apply(
                      Math,
                      t.globals.series.map(function (i) {
                        return i.length;
                      })
                    )
                  );
              },
            },
            {
              key: 'getLargestMarkerSize',
              value: function () {
                var t = this.w,
                  i = 0;
                return (
                  t.globals.markers.size.forEach(function (a) {
                    i = Math.max(i, a);
                  }),
                  t.config.markers.discrete &&
                    t.config.markers.discrete.length &&
                    t.config.markers.discrete.forEach(function (a) {
                      i = Math.max(i, a.size);
                    }),
                  i > 0 && (i += t.config.markers.hover.sizeOffset + 1),
                  (t.globals.markers.largestSize = i),
                  i
                );
              },
            },
            {
              key: 'getSeriesTotals',
              value: function () {
                var t = this.w;
                t.globals.seriesTotals = t.globals.series.map(function (i, a) {
                  var s = 0;
                  if (Array.isArray(i))
                    for (var o = 0; o < i.length; o++) s += i[o];
                  else s += i;
                  return s;
                });
              },
            },
            {
              key: 'getSeriesTotalsXRange',
              value: function (t, i) {
                var a = this.w;
                return a.globals.series.map(function (s, o) {
                  for (var l = 0, d = 0; d < s.length; d++)
                    a.globals.seriesX[o][d] > t &&
                      a.globals.seriesX[o][d] < i &&
                      (l += s[d]);
                  return l;
                });
              },
            },
            {
              key: 'getPercentSeries',
              value: function () {
                var t = this.w;
                t.globals.seriesPercent = t.globals.series.map(function (i, a) {
                  var s = [];
                  if (Array.isArray(i))
                    for (var o = 0; o < i.length; o++) {
                      var l = t.globals.stackedSeriesTotals[o],
                        d = 0;
                      l && (d = (100 * i[o]) / l), s.push(d);
                    }
                  else {
                    var u =
                      (100 * i) /
                      t.globals.seriesTotals.reduce(function (p, x) {
                        return p + x;
                      }, 0);
                    s.push(u);
                  }
                  return s;
                });
              },
            },
            {
              key: 'getCalculatedRatios',
              value: function () {
                var t,
                  i,
                  a,
                  s,
                  o = this.w.globals,
                  l = [],
                  d = 0,
                  u = [],
                  p = 0.1,
                  x = 0;
                if (((o.yRange = []), o.isMultipleYAxis))
                  for (var v = 0; v < o.minYArr.length; v++)
                    o.yRange.push(Math.abs(o.minYArr[v] - o.maxYArr[v])),
                      u.push(0);
                else o.yRange.push(Math.abs(o.minY - o.maxY));
                (o.xRange = Math.abs(o.maxX - o.minX)),
                  (o.zRange = Math.abs(o.maxZ - o.minZ));
                for (var b = 0; b < o.yRange.length; b++)
                  l.push(o.yRange[b] / o.gridHeight);
                if (
                  ((i = o.xRange / o.gridWidth),
                  (a = Math.abs(o.initialMaxX - o.initialMinX) / o.gridWidth),
                  (t = o.yRange / o.gridWidth),
                  (s = o.xRange / o.gridHeight),
                  (d = (o.zRange / o.gridHeight) * 16) || (d = 1),
                  o.minY !== Number.MIN_VALUE &&
                    Math.abs(o.minY) !== 0 &&
                    (o.hasNegs = !0),
                  o.isMultipleYAxis)
                ) {
                  u = [];
                  for (var C = 0; C < l.length; C++)
                    u.push(-o.minYArr[C] / l[C]);
                } else
                  u.push(-o.minY / l[0]),
                    o.minY !== Number.MIN_VALUE &&
                      Math.abs(o.minY) !== 0 &&
                      ((p = -o.minY / t), (x = o.minX / i));
                return {
                  yRatio: l,
                  invertedYRatio: t,
                  zRatio: d,
                  xRatio: i,
                  initialXRatio: a,
                  invertedXRatio: s,
                  baseLineInvertedY: p,
                  baseLineY: u,
                  baseLineX: x,
                };
              },
            },
            {
              key: 'getLogSeries',
              value: function (t) {
                var i = this,
                  a = this.w;
                return (
                  (a.globals.seriesLog = t.map(function (s, o) {
                    return a.config.yaxis[o] && a.config.yaxis[o].logarithmic
                      ? s.map(function (l) {
                          return l === null
                            ? null
                            : i.getLogVal(a.config.yaxis[o].logBase, l, o);
                        })
                      : s;
                  })),
                  a.globals.invalidLogScale ? t : a.globals.seriesLog
                );
              },
            },
            {
              key: 'getBaseLog',
              value: function (t, i) {
                return Math.log(i) / Math.log(t);
              },
            },
            {
              key: 'getLogVal',
              value: function (t, i, a) {
                if (i === 0) return 0;
                var s = this.w,
                  o =
                    s.globals.minYArr[a] === 0
                      ? -1
                      : this.getBaseLog(t, s.globals.minYArr[a]),
                  l =
                    (s.globals.maxYArr[a] === 0
                      ? 0
                      : this.getBaseLog(t, s.globals.maxYArr[a])) - o;
                return i < 1 ? i / l : (this.getBaseLog(t, i) - o) / l;
              },
            },
            {
              key: 'getLogYRatios',
              value: function (t) {
                var i = this,
                  a = this.w,
                  s = this.w.globals;
                return (
                  (s.yLogRatio = t.slice()),
                  (s.logYRange = s.yRange.map(function (o, l) {
                    if (a.config.yaxis[l] && i.w.config.yaxis[l].logarithmic) {
                      var d,
                        u = -Number.MAX_VALUE,
                        p = Number.MIN_VALUE;
                      return (
                        s.seriesLog.forEach(function (x, v) {
                          x.forEach(function (b) {
                            a.config.yaxis[v] &&
                              a.config.yaxis[v].logarithmic &&
                              ((u = Math.max(b, u)), (p = Math.min(b, p)));
                          });
                        }),
                        (d = Math.pow(
                          s.yRange[l],
                          Math.abs(p - u) / s.yRange[l]
                        )),
                        (s.yLogRatio[l] = d / s.gridHeight),
                        d
                      );
                    }
                  })),
                  s.invalidLogScale ? t.slice() : s.yLogRatio
                );
              },
            },
          ],
          [
            {
              key: 'checkComboSeries',
              value: function (t) {
                var i = !1,
                  a = 0,
                  s = 0;
                return (
                  t.length &&
                    t[0].type !== void 0 &&
                    t.forEach(function (o) {
                      (o.type !== 'bar' &&
                        o.type !== 'column' &&
                        o.type !== 'candlestick' &&
                        o.type !== 'boxPlot') ||
                        a++,
                        o.type !== void 0 && s++;
                    }),
                  s > 0 && (i = !0),
                  { comboBarCount: a, comboCharts: i }
                );
              },
            },
            {
              key: 'extendArrayProps',
              value: function (t, i, a) {
                return (
                  i.yaxis && (i = t.extendYAxis(i, a)),
                  i.annotations &&
                    (i.annotations.yaxis && (i = t.extendYAxisAnnotations(i)),
                    i.annotations.xaxis && (i = t.extendXAxisAnnotations(i)),
                    i.annotations.points && (i = t.extendPointAnnotations(i))),
                  i
                );
              },
            },
          ]
        ),
        j
      );
    })(),
    ce = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.annoCtx = t);
      }
      return (
        k(j, [
          {
            key: 'setOrientations',
            value: function (t) {
              var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                a = this.w;
              if (t.label.orientation === 'vertical') {
                var s = i !== null ? i : 0,
                  o = a.globals.dom.baseEl.querySelector(
                    ".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(
                      s,
                      "']"
                    )
                  );
                if (o !== null) {
                  var l = o.getBoundingClientRect();
                  o.setAttribute(
                    'x',
                    parseFloat(o.getAttribute('x')) - l.height + 4
                  ),
                    t.label.position === 'top'
                      ? o.setAttribute(
                          'y',
                          parseFloat(o.getAttribute('y')) + l.width
                        )
                      : o.setAttribute(
                          'y',
                          parseFloat(o.getAttribute('y')) - l.width
                        );
                  var d = this.annoCtx.graphics.rotateAroundCenter(o),
                    u = d.x,
                    p = d.y;
                  o.setAttribute(
                    'transform',
                    'rotate(-90 '.concat(u, ' ').concat(p, ')')
                  );
                }
              }
            },
          },
          {
            key: 'addBackgroundToAnno',
            value: function (t, i) {
              var a = this.w;
              if (
                !t ||
                i.label.text === void 0 ||
                (i.label.text !== void 0 && !String(i.label.text).trim())
              )
                return null;
              var s = a.globals.dom.baseEl
                  .querySelector('.apexcharts-grid')
                  .getBoundingClientRect(),
                o = t.getBoundingClientRect(),
                l = i.label.style.padding.left,
                d = i.label.style.padding.right,
                u = i.label.style.padding.top,
                p = i.label.style.padding.bottom;
              i.label.orientation === 'vertical' &&
                ((u = i.label.style.padding.left),
                (p = i.label.style.padding.right),
                (l = i.label.style.padding.top),
                (d = i.label.style.padding.bottom));
              var x = o.left - s.left - l,
                v = o.top - s.top - u,
                b = this.annoCtx.graphics.drawRect(
                  x - a.globals.barPadForNumericAxis,
                  v,
                  o.width + l + d,
                  o.height + u + p,
                  i.label.borderRadius,
                  i.label.style.background,
                  1,
                  i.label.borderWidth,
                  i.label.borderColor,
                  0
                );
              return i.id && b.node.classList.add(i.id), b;
            },
          },
          {
            key: 'annotationsBackground',
            value: function () {
              var t = this,
                i = this.w,
                a = function (s, o, l) {
                  var d = i.globals.dom.baseEl.querySelector(
                    '.apexcharts-'
                      .concat(l, '-annotations .apexcharts-')
                      .concat(l, "-annotation-label[rel='")
                      .concat(o, "']")
                  );
                  if (d) {
                    var u = d.parentNode,
                      p = t.addBackgroundToAnno(d, s);
                    p &&
                      (u.insertBefore(p.node, d),
                      s.label.mouseEnter &&
                        p.node.addEventListener(
                          'mouseenter',
                          s.label.mouseEnter.bind(t, s)
                        ),
                      s.label.mouseLeave &&
                        p.node.addEventListener(
                          'mouseleave',
                          s.label.mouseLeave.bind(t, s)
                        ),
                      s.label.click &&
                        p.node.addEventListener(
                          'click',
                          s.label.click.bind(t, s)
                        ));
                  }
                };
              i.config.annotations.xaxis.map(function (s, o) {
                a(s, o, 'xaxis');
              }),
                i.config.annotations.yaxis.map(function (s, o) {
                  a(s, o, 'yaxis');
                }),
                i.config.annotations.points.map(function (s, o) {
                  a(s, o, 'point');
                });
            },
          },
          {
            key: 'getY1Y2',
            value: function (t, i) {
              var a,
                s = t === 'y1' ? i.y : i.y2,
                o = this.w;
              if (this.annoCtx.invertAxis) {
                var l = o.globals.labels.indexOf(s);
                o.config.xaxis.convertedCatToNumeric &&
                  (l = o.globals.categoryLabels.indexOf(s));
                var d = o.globals.dom.baseEl.querySelector(
                  '.apexcharts-yaxis-texts-g text:nth-child(' + (l + 1) + ')'
                );
                d && (a = parseFloat(d.getAttribute('y')));
              } else {
                var u;
                o.config.yaxis[i.yAxisIndex].logarithmic
                  ? (u =
                      (s = new ae(this.annoCtx.ctx).getLogVal(
                        s,
                        i.yAxisIndex
                      )) / o.globals.yLogRatio[i.yAxisIndex])
                  : (u =
                      (s - o.globals.minYArr[i.yAxisIndex]) /
                      (o.globals.yRange[i.yAxisIndex] / o.globals.gridHeight)),
                  (a = o.globals.gridHeight - u),
                  !i.marker || (i.y !== void 0 && i.y !== null) || (a = 0),
                  o.config.yaxis[i.yAxisIndex] &&
                    o.config.yaxis[i.yAxisIndex].reversed &&
                    (a = u);
              }
              return (
                typeof s == 'string' &&
                  s.indexOf('px') > -1 &&
                  (a = parseFloat(s)),
                a
              );
            },
          },
          {
            key: 'getX1X2',
            value: function (t, i) {
              var a = this.w,
                s = this.annoCtx.invertAxis ? a.globals.minY : a.globals.minX,
                o = this.annoCtx.invertAxis ? a.globals.maxY : a.globals.maxX,
                l = this.annoCtx.invertAxis
                  ? a.globals.yRange[0]
                  : a.globals.xRange,
                d = (i.x - s) / (l / a.globals.gridWidth);
              this.annoCtx.inversedReversedAxis &&
                (d = (o - i.x) / (l / a.globals.gridWidth)),
                (a.config.xaxis.type !== 'category' &&
                  !a.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  a.globals.dataFormatXNumeric ||
                  (d = this.getStringX(i.x));
              var u = (i.x2 - s) / (l / a.globals.gridWidth);
              return (
                this.annoCtx.inversedReversedAxis &&
                  (u = (o - i.x2) / (l / a.globals.gridWidth)),
                (a.config.xaxis.type !== 'category' &&
                  !a.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  a.globals.dataFormatXNumeric ||
                  (u = this.getStringX(i.x2)),
                (i.x !== void 0 && i.x !== null) ||
                  !i.marker ||
                  (d = a.globals.gridWidth),
                t === 'x1' &&
                  typeof i.x == 'string' &&
                  i.x.indexOf('px') > -1 &&
                  (d = parseFloat(i.x)),
                t === 'x2' &&
                  typeof i.x2 == 'string' &&
                  i.x2.indexOf('px') > -1 &&
                  (u = parseFloat(i.x2)),
                t === 'x1' ? d : u
              );
            },
          },
          {
            key: 'getStringX',
            value: function (t) {
              var i = this.w,
                a = t;
              i.config.xaxis.convertedCatToNumeric &&
                i.globals.categoryLabels.length &&
                (t = i.globals.categoryLabels.indexOf(t) + 1);
              var s = i.globals.labels.indexOf(t),
                o = i.globals.dom.baseEl.querySelector(
                  '.apexcharts-xaxis-texts-g text:nth-child(' + (s + 1) + ')'
                );
              return o && (a = parseFloat(o.getAttribute('x'))), a;
            },
          },
        ]),
        j
      );
    })(),
    he = (function () {
      function j(t) {
        g(this, j),
          (this.w = t.w),
          (this.annoCtx = t),
          (this.invertAxis = this.annoCtx.invertAxis),
          (this.helpers = new ce(this.annoCtx));
      }
      return (
        k(j, [
          {
            key: 'addXaxisAnnotation',
            value: function (t, i, a) {
              var s,
                o = this.w,
                l = this.helpers.getX1X2('x1', t),
                d = t.label.text,
                u = t.strokeDashArray;
              if (E.isNumber(l)) {
                if (t.x2 === null || t.x2 === void 0) {
                  var p = this.annoCtx.graphics.drawLine(
                    l + t.offsetX,
                    0 + t.offsetY,
                    l + t.offsetX,
                    o.globals.gridHeight + t.offsetY,
                    t.borderColor,
                    u,
                    t.borderWidth
                  );
                  i.appendChild(p.node), t.id && p.node.classList.add(t.id);
                } else {
                  if ((s = this.helpers.getX1X2('x2', t)) < l) {
                    var x = l;
                    (l = s), (s = x);
                  }
                  var v = this.annoCtx.graphics.drawRect(
                    l + t.offsetX,
                    0 + t.offsetY,
                    s - l,
                    o.globals.gridHeight + t.offsetY,
                    0,
                    t.fillColor,
                    t.opacity,
                    1,
                    t.borderColor,
                    u
                  );
                  v.node.classList.add('apexcharts-annotation-rect'),
                    v.attr(
                      'clip-path',
                      'url(#gridRectMask'.concat(o.globals.cuid, ')')
                    ),
                    i.appendChild(v.node),
                    t.id && v.node.classList.add(t.id);
                }
                var b = this.annoCtx.graphics.getTextRects(
                    d,
                    parseFloat(t.label.style.fontSize)
                  ),
                  C =
                    t.label.position === 'top'
                      ? 4
                      : t.label.position === 'center'
                      ? o.globals.gridHeight / 2 +
                        (t.label.orientation === 'vertical' ? b.width / 2 : 0)
                      : o.globals.gridHeight,
                  S = this.annoCtx.graphics.drawText({
                    x: l + t.label.offsetX,
                    y:
                      C +
                      t.label.offsetY -
                      (t.label.orientation === 'vertical'
                        ? t.label.position === 'top'
                          ? b.width / 2 - 12
                          : -b.width / 2
                        : 0),
                    text: d,
                    textAnchor: t.label.textAnchor,
                    fontSize: t.label.style.fontSize,
                    fontFamily: t.label.style.fontFamily,
                    fontWeight: t.label.style.fontWeight,
                    foreColor: t.label.style.color,
                    cssClass: 'apexcharts-xaxis-annotation-label '
                      .concat(t.label.style.cssClass, ' ')
                      .concat(t.id ? t.id : ''),
                  });
                S.attr({ rel: a }),
                  i.appendChild(S.node),
                  this.annoCtx.helpers.setOrientations(t, a);
              }
            },
          },
          {
            key: 'drawXAxisAnnotations',
            value: function () {
              var t = this,
                i = this.w,
                a = this.annoCtx.graphics.group({
                  class: 'apexcharts-xaxis-annotations',
                });
              return (
                i.config.annotations.xaxis.map(function (s, o) {
                  t.addXaxisAnnotation(s, a.node, o);
                }),
                a
              );
            },
          },
        ]),
        j
      );
    })(),
    Te = (function () {
      function j(t) {
        g(this, j),
          (this.w = t.w),
          (this.annoCtx = t),
          (this.helpers = new ce(this.annoCtx));
      }
      return (
        k(j, [
          {
            key: 'addYaxisAnnotation',
            value: function (t, i, a) {
              var s,
                o = this.w,
                l = t.strokeDashArray,
                d = this.helpers.getY1Y2('y1', t),
                u = t.label.text;
              if (t.y2 === null || t.y2 === void 0) {
                var p = this.annoCtx.graphics.drawLine(
                  0 + t.offsetX,
                  d + t.offsetY,
                  this._getYAxisAnnotationWidth(t),
                  d + t.offsetY,
                  t.borderColor,
                  l,
                  t.borderWidth
                );
                i.appendChild(p.node), t.id && p.node.classList.add(t.id);
              } else {
                if ((s = this.helpers.getY1Y2('y2', t)) > d) {
                  var x = d;
                  (d = s), (s = x);
                }
                var v = this.annoCtx.graphics.drawRect(
                  0 + t.offsetX,
                  s + t.offsetY,
                  this._getYAxisAnnotationWidth(t),
                  d - s,
                  0,
                  t.fillColor,
                  t.opacity,
                  1,
                  t.borderColor,
                  l
                );
                v.node.classList.add('apexcharts-annotation-rect'),
                  v.attr(
                    'clip-path',
                    'url(#gridRectMask'.concat(o.globals.cuid, ')')
                  ),
                  i.appendChild(v.node),
                  t.id && v.node.classList.add(t.id);
              }
              var b =
                  t.label.position === 'right'
                    ? o.globals.gridWidth
                    : t.label.position === 'center'
                    ? o.globals.gridWidth / 2
                    : 0,
                C = this.annoCtx.graphics.drawText({
                  x: b + t.label.offsetX,
                  y: (s ?? d) + t.label.offsetY - 3,
                  text: u,
                  textAnchor: t.label.textAnchor,
                  fontSize: t.label.style.fontSize,
                  fontFamily: t.label.style.fontFamily,
                  fontWeight: t.label.style.fontWeight,
                  foreColor: t.label.style.color,
                  cssClass: 'apexcharts-yaxis-annotation-label '
                    .concat(t.label.style.cssClass, ' ')
                    .concat(t.id ? t.id : ''),
                });
              C.attr({ rel: a }), i.appendChild(C.node);
            },
          },
          {
            key: '_getYAxisAnnotationWidth',
            value: function (t) {
              var i = this.w;
              return (
                i.globals.gridWidth,
                (t.width.indexOf('%') > -1
                  ? (i.globals.gridWidth * parseInt(t.width, 10)) / 100
                  : parseInt(t.width, 10)) + t.offsetX
              );
            },
          },
          {
            key: 'drawYAxisAnnotations',
            value: function () {
              var t = this,
                i = this.w,
                a = this.annoCtx.graphics.group({
                  class: 'apexcharts-yaxis-annotations',
                });
              return (
                i.config.annotations.yaxis.map(function (s, o) {
                  t.addYaxisAnnotation(s, a.node, o);
                }),
                a
              );
            },
          },
        ]),
        j
      );
    })(),
    ye = (function () {
      function j(t) {
        g(this, j),
          (this.w = t.w),
          (this.annoCtx = t),
          (this.helpers = new ce(this.annoCtx));
      }
      return (
        k(j, [
          {
            key: 'addPointAnnotation',
            value: function (t, i, a) {
              this.w;
              var s = this.helpers.getX1X2('x1', t),
                o = this.helpers.getY1Y2('y1', t);
              if (E.isNumber(s)) {
                var l = {
                    pSize: t.marker.size,
                    pointStrokeWidth: t.marker.strokeWidth,
                    pointFillColor: t.marker.fillColor,
                    pointStrokeColor: t.marker.strokeColor,
                    shape: t.marker.shape,
                    pRadius: t.marker.radius,
                    class: 'apexcharts-point-annotation-marker '
                      .concat(t.marker.cssClass, ' ')
                      .concat(t.id ? t.id : ''),
                  },
                  d = this.annoCtx.graphics.drawMarker(
                    s + t.marker.offsetX,
                    o + t.marker.offsetY,
                    l
                  );
                i.appendChild(d.node);
                var u = t.label.text ? t.label.text : '',
                  p = this.annoCtx.graphics.drawText({
                    x: s + t.label.offsetX,
                    y:
                      o +
                      t.label.offsetY -
                      t.marker.size -
                      parseFloat(t.label.style.fontSize) / 1.6,
                    text: u,
                    textAnchor: t.label.textAnchor,
                    fontSize: t.label.style.fontSize,
                    fontFamily: t.label.style.fontFamily,
                    fontWeight: t.label.style.fontWeight,
                    foreColor: t.label.style.color,
                    cssClass: 'apexcharts-point-annotation-label '
                      .concat(t.label.style.cssClass, ' ')
                      .concat(t.id ? t.id : ''),
                  });
                if (
                  (p.attr({ rel: a }), i.appendChild(p.node), t.customSVG.SVG)
                ) {
                  var x = this.annoCtx.graphics.group({
                    class:
                      'apexcharts-point-annotations-custom-svg ' +
                      t.customSVG.cssClass,
                  });
                  x.attr({
                    transform: 'translate('
                      .concat(s + t.customSVG.offsetX, ', ')
                      .concat(o + t.customSVG.offsetY, ')'),
                  }),
                    (x.node.innerHTML = t.customSVG.SVG),
                    i.appendChild(x.node);
                }
                if (t.image.path) {
                  var v = t.image.width ? t.image.width : 20,
                    b = t.image.height ? t.image.height : 20;
                  d = this.annoCtx.addImage({
                    x: s + t.image.offsetX - v / 2,
                    y: o + t.image.offsetY - b / 2,
                    width: v,
                    height: b,
                    path: t.image.path,
                    appendTo: '.apexcharts-point-annotations',
                  });
                }
                t.mouseEnter &&
                  d.node.addEventListener(
                    'mouseenter',
                    t.mouseEnter.bind(this, t)
                  ),
                  t.mouseLeave &&
                    d.node.addEventListener(
                      'mouseleave',
                      t.mouseLeave.bind(this, t)
                    ),
                  t.click &&
                    d.node.addEventListener('click', t.click.bind(this, t));
              }
            },
          },
          {
            key: 'drawPointAnnotations',
            value: function () {
              var t = this,
                i = this.w,
                a = this.annoCtx.graphics.group({
                  class: 'apexcharts-point-annotations',
                });
              return (
                i.config.annotations.points.map(function (s, o) {
                  t.addPointAnnotation(s, a.node, o);
                }),
                a
              );
            },
          },
        ]),
        j
      );
    })(),
    ct = {
      name: 'en',
      options: {
        months: [
          'January',
          'February',
          'March',
          'April',
          'May',
          'June',
          'July',
          'August',
          'September',
          'October',
          'November',
          'December',
        ],
        shortMonths: [
          'Jan',
          'Feb',
          'Mar',
          'Apr',
          'May',
          'Jun',
          'Jul',
          'Aug',
          'Sep',
          'Oct',
          'Nov',
          'Dec',
        ],
        days: [
          'Sunday',
          'Monday',
          'Tuesday',
          'Wednesday',
          'Thursday',
          'Friday',
          'Saturday',
        ],
        shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
        toolbar: {
          exportToSVG: 'Download SVG',
          exportToPNG: 'Download PNG',
          exportToCSV: 'Download CSV',
          menu: 'Menu',
          selection: 'Selection',
          selectionZoom: 'Selection Zoom',
          zoomIn: 'Zoom In',
          zoomOut: 'Zoom Out',
          pan: 'Panning',
          reset: 'Reset Zoom',
        },
      },
    },
    rt = (function () {
      function j() {
        g(this, j),
          (this.yAxis = {
            show: !0,
            showAlways: !1,
            showForNullSeries: !0,
            seriesName: void 0,
            opposite: !1,
            reversed: !1,
            logarithmic: !1,
            logBase: 10,
            tickAmount: void 0,
            forceNiceScale: !1,
            max: void 0,
            min: void 0,
            floating: !1,
            decimalsInFloat: void 0,
            labels: {
              show: !0,
              minWidth: 0,
              maxWidth: 160,
              offsetX: 0,
              offsetY: 0,
              align: void 0,
              rotate: 0,
              padding: 20,
              style: {
                colors: [],
                fontSize: '11px',
                fontWeight: 400,
                fontFamily: void 0,
                cssClass: '',
              },
              formatter: void 0,
            },
            axisBorder: {
              show: !1,
              color: '#e0e0e0',
              width: 1,
              offsetX: 0,
              offsetY: 0,
            },
            axisTicks: {
              show: !1,
              color: '#e0e0e0',
              width: 6,
              offsetX: 0,
              offsetY: 0,
            },
            title: {
              text: void 0,
              rotate: -90,
              offsetY: 0,
              offsetX: 0,
              style: {
                color: void 0,
                fontSize: '11px',
                fontWeight: 900,
                fontFamily: void 0,
                cssClass: '',
              },
            },
            tooltip: { enabled: !1, offsetX: 0 },
            crosshairs: {
              show: !0,
              position: 'front',
              stroke: { color: '#b6b6b6', width: 1, dashArray: 0 },
            },
          }),
          (this.pointAnnotation = {
            id: void 0,
            x: 0,
            y: null,
            yAxisIndex: 0,
            seriesIndex: 0,
            mouseEnter: void 0,
            mouseLeave: void 0,
            click: void 0,
            marker: {
              size: 4,
              fillColor: '#fff',
              strokeWidth: 2,
              strokeColor: '#333',
              shape: 'circle',
              offsetX: 0,
              offsetY: 0,
              radius: 2,
              cssClass: '',
            },
            label: {
              borderColor: '#c2c2c2',
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: 'middle',
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: '#fff',
                color: void 0,
                fontSize: '11px',
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: '',
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
            customSVG: {
              SVG: void 0,
              cssClass: void 0,
              offsetX: 0,
              offsetY: 0,
            },
            image: {
              path: void 0,
              width: 20,
              height: 20,
              offsetX: 0,
              offsetY: 0,
            },
          }),
          (this.yAxisAnnotation = {
            id: void 0,
            y: 0,
            y2: null,
            strokeDashArray: 1,
            fillColor: '#c2c2c2',
            borderColor: '#c2c2c2',
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            width: '100%',
            yAxisIndex: 0,
            label: {
              borderColor: '#c2c2c2',
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: 'end',
              position: 'right',
              offsetX: 0,
              offsetY: -3,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: '#fff',
                color: void 0,
                fontSize: '11px',
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: '',
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.xAxisAnnotation = {
            id: void 0,
            x: 0,
            x2: null,
            strokeDashArray: 1,
            fillColor: '#c2c2c2',
            borderColor: '#c2c2c2',
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            label: {
              borderColor: '#c2c2c2',
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: 'middle',
              orientation: 'vertical',
              position: 'top',
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: '#fff',
                color: void 0,
                fontSize: '11px',
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: '',
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.text = {
            x: 0,
            y: 0,
            text: '',
            textAnchor: 'start',
            foreColor: void 0,
            fontSize: '13px',
            fontFamily: void 0,
            fontWeight: 400,
            appendTo: '.apexcharts-annotations',
            backgroundColor: 'transparent',
            borderColor: '#c2c2c2',
            borderRadius: 0,
            borderWidth: 0,
            paddingLeft: 4,
            paddingRight: 4,
            paddingTop: 2,
            paddingBottom: 2,
          });
      }
      return (
        k(j, [
          {
            key: 'init',
            value: function () {
              return {
                annotations: {
                  yaxis: [this.yAxisAnnotation],
                  xaxis: [this.xAxisAnnotation],
                  points: [this.pointAnnotation],
                  texts: [],
                  images: [],
                  shapes: [],
                },
                chart: {
                  animations: {
                    enabled: !0,
                    easing: 'easeinout',
                    speed: 800,
                    animateGradually: { delay: 150, enabled: !0 },
                    dynamicAnimation: { enabled: !0, speed: 350 },
                  },
                  background: 'transparent',
                  locales: [ct],
                  defaultLocale: 'en',
                  dropShadow: {
                    enabled: !1,
                    enabledOnSeries: void 0,
                    top: 2,
                    left: 2,
                    blur: 4,
                    color: '#000',
                    opacity: 0.35,
                  },
                  events: {
                    animationEnd: void 0,
                    beforeMount: void 0,
                    mounted: void 0,
                    updated: void 0,
                    click: void 0,
                    mouseMove: void 0,
                    mouseLeave: void 0,
                    xAxisLabelClick: void 0,
                    legendClick: void 0,
                    markerClick: void 0,
                    selection: void 0,
                    dataPointSelection: void 0,
                    dataPointMouseEnter: void 0,
                    dataPointMouseLeave: void 0,
                    beforeZoom: void 0,
                    beforeResetZoom: void 0,
                    zoomed: void 0,
                    scrolled: void 0,
                    brushScrolled: void 0,
                  },
                  foreColor: '#373d3f',
                  fontFamily: 'Helvetica, Arial, sans-serif',
                  height: 'auto',
                  parentHeightOffset: 15,
                  redrawOnParentResize: !0,
                  redrawOnWindowResize: !0,
                  id: void 0,
                  group: void 0,
                  offsetX: 0,
                  offsetY: 0,
                  selection: {
                    enabled: !1,
                    type: 'x',
                    fill: { color: '#24292e', opacity: 0.1 },
                    stroke: {
                      width: 1,
                      color: '#24292e',
                      opacity: 0.4,
                      dashArray: 3,
                    },
                    xaxis: { min: void 0, max: void 0 },
                    yaxis: { min: void 0, max: void 0 },
                  },
                  sparkline: { enabled: !1 },
                  brush: { enabled: !1, autoScaleYaxis: !0, target: void 0 },
                  stacked: !1,
                  stackType: 'normal',
                  toolbar: {
                    show: !0,
                    offsetX: 0,
                    offsetY: 0,
                    tools: {
                      download: !0,
                      selection: !0,
                      zoom: !0,
                      zoomin: !0,
                      zoomout: !0,
                      pan: !0,
                      reset: !0,
                      customIcons: [],
                    },
                    export: {
                      csv: {
                        filename: void 0,
                        columnDelimiter: ',',
                        headerCategory: 'category',
                        headerValue: 'value',
                        dateFormatter: function (t) {
                          return new Date(t).toDateString();
                        },
                      },
                      png: { filename: void 0 },
                      svg: { filename: void 0 },
                    },
                    autoSelected: 'zoom',
                  },
                  type: 'line',
                  width: '100%',
                  zoom: {
                    enabled: !0,
                    type: 'x',
                    autoScaleYaxis: !1,
                    zoomedArea: {
                      fill: { color: '#90CAF9', opacity: 0.4 },
                      stroke: { color: '#0D47A1', opacity: 0.4, width: 1 },
                    },
                  },
                },
                plotOptions: {
                  area: { fillTo: 'origin' },
                  bar: {
                    horizontal: !1,
                    columnWidth: '70%',
                    barHeight: '70%',
                    distributed: !1,
                    borderRadius: 0,
                    borderRadiusApplication: 'around',
                    borderRadiusWhenStacked: 'last',
                    rangeBarOverlap: !0,
                    rangeBarGroupRows: !1,
                    hideZeroBarsWhenGrouped: !1,
                    isDumbbell: !1,
                    dumbbellColors: void 0,
                    isFunnel: !1,
                    isFunnel3d: !0,
                    colors: {
                      ranges: [],
                      backgroundBarColors: [],
                      backgroundBarOpacity: 1,
                      backgroundBarRadius: 0,
                    },
                    dataLabels: {
                      position: 'top',
                      maxItems: 100,
                      hideOverflowingLabels: !0,
                      orientation: 'horizontal',
                      total: {
                        enabled: !1,
                        formatter: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        style: {
                          color: '#373d3f',
                          fontSize: '12px',
                          fontFamily: void 0,
                          fontWeight: 600,
                        },
                      },
                    },
                  },
                  bubble: {
                    zScaling: !0,
                    minBubbleRadius: void 0,
                    maxBubbleRadius: void 0,
                  },
                  candlestick: {
                    colors: { upward: '#00B746', downward: '#EF403C' },
                    wick: { useFillColor: !0 },
                  },
                  boxPlot: { colors: { upper: '#00E396', lower: '#008FFB' } },
                  heatmap: {
                    radius: 2,
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    reverseNegativeShade: !1,
                    distributed: !1,
                    useFillColorAsStroke: !1,
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  treemap: {
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    distributed: !1,
                    reverseNegativeShade: !1,
                    useFillColorAsStroke: !1,
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  radialBar: {
                    inverseOrder: !1,
                    startAngle: 0,
                    endAngle: 360,
                    offsetX: 0,
                    offsetY: 0,
                    hollow: {
                      margin: 5,
                      size: '50%',
                      background: 'transparent',
                      image: void 0,
                      imageWidth: 150,
                      imageHeight: 150,
                      imageOffsetX: 0,
                      imageOffsetY: 0,
                      imageClipped: !0,
                      position: 'front',
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: '#000',
                        opacity: 0.5,
                      },
                    },
                    track: {
                      show: !0,
                      startAngle: void 0,
                      endAngle: void 0,
                      background: '#f2f2f2',
                      strokeWidth: '97%',
                      opacity: 1,
                      margin: 5,
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: '#000',
                        opacity: 0.5,
                      },
                    },
                    dataLabels: {
                      show: !0,
                      name: {
                        show: !0,
                        fontSize: '16px',
                        fontFamily: void 0,
                        fontWeight: 600,
                        color: void 0,
                        offsetY: 0,
                        formatter: function (t) {
                          return t;
                        },
                      },
                      value: {
                        show: !0,
                        fontSize: '14px',
                        fontFamily: void 0,
                        fontWeight: 400,
                        color: void 0,
                        offsetY: 16,
                        formatter: function (t) {
                          return t + '%';
                        },
                      },
                      total: {
                        show: !1,
                        label: 'Total',
                        fontSize: '16px',
                        fontWeight: 600,
                        fontFamily: void 0,
                        color: void 0,
                        formatter: function (t) {
                          return (
                            t.globals.seriesTotals.reduce(function (i, a) {
                              return i + a;
                            }, 0) /
                              t.globals.series.length +
                            '%'
                          );
                        },
                      },
                    },
                  },
                  pie: {
                    customScale: 1,
                    offsetX: 0,
                    offsetY: 0,
                    startAngle: 0,
                    endAngle: 360,
                    expandOnClick: !0,
                    dataLabels: { offset: 0, minAngleToShowLabel: 10 },
                    donut: {
                      size: '65%',
                      background: 'transparent',
                      labels: {
                        show: !1,
                        name: {
                          show: !0,
                          fontSize: '16px',
                          fontFamily: void 0,
                          fontWeight: 600,
                          color: void 0,
                          offsetY: -10,
                          formatter: function (t) {
                            return t;
                          },
                        },
                        value: {
                          show: !0,
                          fontSize: '20px',
                          fontFamily: void 0,
                          fontWeight: 400,
                          color: void 0,
                          offsetY: 10,
                          formatter: function (t) {
                            return t;
                          },
                        },
                        total: {
                          show: !1,
                          showAlways: !1,
                          label: 'Total',
                          fontSize: '16px',
                          fontWeight: 400,
                          fontFamily: void 0,
                          color: void 0,
                          formatter: function (t) {
                            return t.globals.seriesTotals.reduce(function (
                              i,
                              a
                            ) {
                              return i + a;
                            },
                            0);
                          },
                        },
                      },
                    },
                  },
                  polarArea: {
                    rings: { strokeWidth: 1, strokeColor: '#e8e8e8' },
                    spokes: { strokeWidth: 1, connectorColors: '#e8e8e8' },
                  },
                  radar: {
                    size: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    polygons: {
                      strokeWidth: 1,
                      strokeColors: '#e8e8e8',
                      connectorColors: '#e8e8e8',
                      fill: { colors: void 0 },
                    },
                  },
                },
                colors: void 0,
                dataLabels: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  formatter: function (t) {
                    return t !== null ? t : '';
                  },
                  textAnchor: 'middle',
                  distributed: !1,
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    fontSize: '12px',
                    fontFamily: void 0,
                    fontWeight: 600,
                    colors: void 0,
                  },
                  background: {
                    enabled: !0,
                    foreColor: '#fff',
                    borderRadius: 2,
                    padding: 4,
                    opacity: 0.9,
                    borderWidth: 1,
                    borderColor: '#fff',
                    dropShadow: {
                      enabled: !1,
                      top: 1,
                      left: 1,
                      blur: 1,
                      color: '#000',
                      opacity: 0.45,
                    },
                  },
                  dropShadow: {
                    enabled: !1,
                    top: 1,
                    left: 1,
                    blur: 1,
                    color: '#000',
                    opacity: 0.45,
                  },
                },
                fill: {
                  type: 'solid',
                  colors: void 0,
                  opacity: 0.85,
                  gradient: {
                    shade: 'dark',
                    type: 'horizontal',
                    shadeIntensity: 0.5,
                    gradientToColors: void 0,
                    inverseColors: !0,
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [0, 50, 100],
                    colorStops: [],
                  },
                  image: { src: [], width: void 0, height: void 0 },
                  pattern: {
                    style: 'squares',
                    width: 6,
                    height: 6,
                    strokeWidth: 2,
                  },
                },
                forecastDataPoints: {
                  count: 0,
                  fillOpacity: 0.5,
                  strokeWidth: void 0,
                  dashArray: 4,
                },
                grid: {
                  show: !0,
                  borderColor: '#e0e0e0',
                  strokeDashArray: 0,
                  position: 'back',
                  xaxis: { lines: { show: !1 } },
                  yaxis: { lines: { show: !0 } },
                  row: { colors: void 0, opacity: 0.5 },
                  column: { colors: void 0, opacity: 0.5 },
                  padding: { top: 0, right: 10, bottom: 0, left: 12 },
                },
                labels: [],
                legend: {
                  show: !0,
                  showForSingleSeries: !1,
                  showForNullSeries: !0,
                  showForZeroSeries: !0,
                  floating: !1,
                  position: 'bottom',
                  horizontalAlign: 'center',
                  inverseOrder: !1,
                  fontSize: '12px',
                  fontFamily: void 0,
                  fontWeight: 400,
                  width: void 0,
                  height: void 0,
                  formatter: void 0,
                  tooltipHoverFormatter: void 0,
                  offsetX: -20,
                  offsetY: 4,
                  customLegendItems: [],
                  labels: { colors: void 0, useSeriesColors: !1 },
                  markers: {
                    width: 12,
                    height: 12,
                    strokeWidth: 0,
                    fillColors: void 0,
                    strokeColor: '#fff',
                    radius: 12,
                    customHTML: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    onClick: void 0,
                  },
                  itemMargin: { horizontal: 5, vertical: 2 },
                  onItemClick: { toggleDataSeries: !0 },
                  onItemHover: { highlightDataSeries: !0 },
                },
                markers: {
                  discrete: [],
                  size: 0,
                  colors: void 0,
                  strokeColors: '#fff',
                  strokeWidth: 2,
                  strokeOpacity: 0.9,
                  strokeDashArray: 0,
                  fillOpacity: 1,
                  shape: 'circle',
                  width: 8,
                  height: 8,
                  radius: 2,
                  offsetX: 0,
                  offsetY: 0,
                  onClick: void 0,
                  onDblClick: void 0,
                  showNullDataPoints: !0,
                  hover: { size: void 0, sizeOffset: 3 },
                },
                noData: {
                  text: void 0,
                  align: 'center',
                  verticalAlign: 'middle',
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    color: void 0,
                    fontSize: '14px',
                    fontFamily: void 0,
                  },
                },
                responsive: [],
                series: void 0,
                states: {
                  normal: { filter: { type: 'none', value: 0 } },
                  hover: { filter: { type: 'lighten', value: 0.1 } },
                  active: {
                    allowMultipleDataPointsSelection: !1,
                    filter: { type: 'darken', value: 0.5 },
                  },
                },
                title: {
                  text: void 0,
                  align: 'left',
                  margin: 5,
                  offsetX: 0,
                  offsetY: 0,
                  floating: !1,
                  style: {
                    fontSize: '14px',
                    fontWeight: 900,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                subtitle: {
                  text: void 0,
                  align: 'left',
                  margin: 5,
                  offsetX: 0,
                  offsetY: 30,
                  floating: !1,
                  style: {
                    fontSize: '12px',
                    fontWeight: 400,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                stroke: {
                  show: !0,
                  curve: 'smooth',
                  lineCap: 'butt',
                  width: 2,
                  colors: void 0,
                  dashArray: 0,
                  fill: {
                    type: 'solid',
                    colors: void 0,
                    opacity: 0.85,
                    gradient: {
                      shade: 'dark',
                      type: 'horizontal',
                      shadeIntensity: 0.5,
                      gradientToColors: void 0,
                      inverseColors: !0,
                      opacityFrom: 1,
                      opacityTo: 1,
                      stops: [0, 50, 100],
                      colorStops: [],
                    },
                  },
                },
                tooltip: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  shared: !0,
                  followCursor: !1,
                  intersect: !1,
                  inverseOrder: !1,
                  custom: void 0,
                  fillSeriesColor: !1,
                  theme: 'light',
                  cssClass: '',
                  style: { fontSize: '12px', fontFamily: void 0 },
                  onDatasetHover: { highlightDataSeries: !1 },
                  x: { show: !0, format: 'dd MMM', formatter: void 0 },
                  y: {
                    formatter: void 0,
                    title: {
                      formatter: function (t) {
                        return t ? t + ': ' : '';
                      },
                    },
                  },
                  z: { formatter: void 0, title: 'Size: ' },
                  marker: { show: !0, fillColors: void 0 },
                  items: { display: 'flex' },
                  fixed: {
                    enabled: !1,
                    position: 'topRight',
                    offsetX: 0,
                    offsetY: 0,
                  },
                },
                xaxis: {
                  type: 'category',
                  categories: [],
                  convertedCatToNumeric: !1,
                  offsetX: 0,
                  offsetY: 0,
                  overwriteCategories: void 0,
                  labels: {
                    show: !0,
                    rotate: -45,
                    rotateAlways: !1,
                    hideOverlappingLabels: !0,
                    trim: !1,
                    minHeight: void 0,
                    maxHeight: 120,
                    showDuplicates: !0,
                    style: {
                      colors: [],
                      fontSize: '12px',
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: '',
                    },
                    offsetX: 0,
                    offsetY: 0,
                    format: void 0,
                    formatter: void 0,
                    datetimeUTC: !0,
                    datetimeFormatter: {
                      year: 'yyyy',
                      month: "MMM 'yy",
                      day: 'dd MMM',
                      hour: 'HH:mm',
                      minute: 'HH:mm:ss',
                      second: 'HH:mm:ss',
                    },
                  },
                  group: {
                    groups: [],
                    style: {
                      colors: [],
                      fontSize: '12px',
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: '',
                    },
                  },
                  axisBorder: {
                    show: !0,
                    color: '#e0e0e0',
                    width: '100%',
                    height: 1,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  axisTicks: {
                    show: !0,
                    color: '#e0e0e0',
                    height: 6,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  tickAmount: void 0,
                  tickPlacement: 'on',
                  min: void 0,
                  max: void 0,
                  range: void 0,
                  floating: !1,
                  decimalsInFloat: void 0,
                  position: 'bottom',
                  title: {
                    text: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    style: {
                      color: void 0,
                      fontSize: '12px',
                      fontWeight: 900,
                      fontFamily: void 0,
                      cssClass: '',
                    },
                  },
                  crosshairs: {
                    show: !0,
                    width: 1,
                    position: 'back',
                    opacity: 0.9,
                    stroke: { color: '#b6b6b6', width: 1, dashArray: 3 },
                    fill: {
                      type: 'solid',
                      color: '#B1B9C4',
                      gradient: {
                        colorFrom: '#D8E3F0',
                        colorTo: '#BED1E6',
                        stops: [0, 100],
                        opacityFrom: 0.4,
                        opacityTo: 0.5,
                      },
                    },
                    dropShadow: {
                      enabled: !1,
                      left: 0,
                      top: 0,
                      blur: 1,
                      opacity: 0.4,
                    },
                  },
                  tooltip: {
                    enabled: !0,
                    offsetY: 0,
                    formatter: void 0,
                    style: { fontSize: '12px', fontFamily: void 0 },
                  },
                },
                yaxis: this.yAxis,
                theme: {
                  mode: 'light',
                  palette: 'palette1',
                  monochrome: {
                    enabled: !1,
                    color: '#008FFB',
                    shadeTo: 'light',
                    shadeIntensity: 0.65,
                  },
                },
              };
            },
          },
        ]),
        j
      );
    })(),
    St = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.graphics = new W(this.ctx)),
          this.w.globals.isBarHorizontal && (this.invertAxis = !0),
          (this.helpers = new ce(this)),
          (this.xAxisAnnotations = new he(this)),
          (this.yAxisAnnotations = new Te(this)),
          (this.pointsAnnotations = new ye(this)),
          this.w.globals.isBarHorizontal &&
            this.w.config.yaxis[0].reversed &&
            (this.inversedReversedAxis = !0),
          (this.xDivision =
            this.w.globals.gridWidth / this.w.globals.dataPoints);
      }
      return (
        k(j, [
          {
            key: 'drawAxesAnnotations',
            value: function () {
              var t = this.w;
              if (t.globals.axisCharts) {
                for (
                  var i = this.yAxisAnnotations.drawYAxisAnnotations(),
                    a = this.xAxisAnnotations.drawXAxisAnnotations(),
                    s = this.pointsAnnotations.drawPointAnnotations(),
                    o = t.config.chart.animations.enabled,
                    l = [i, a, s],
                    d = [a.node, i.node, s.node],
                    u = 0;
                  u < 3;
                  u++
                )
                  t.globals.dom.elGraphical.add(l[u]),
                    !o ||
                      t.globals.resized ||
                      t.globals.dataChanged ||
                      (t.config.chart.type !== 'scatter' &&
                        t.config.chart.type !== 'bubble' &&
                        t.globals.dataPoints > 1 &&
                        d[u].classList.add('apexcharts-element-hidden')),
                    t.globals.delayedElements.push({ el: d[u], index: 0 });
                this.helpers.annotationsBackground();
              }
            },
          },
          {
            key: 'drawImageAnnos',
            value: function () {
              var t = this;
              this.w.config.annotations.images.map(function (i, a) {
                t.addImage(i, a);
              });
            },
          },
          {
            key: 'drawTextAnnos',
            value: function () {
              var t = this;
              this.w.config.annotations.texts.map(function (i, a) {
                t.addText(i, a);
              });
            },
          },
          {
            key: 'addXaxisAnnotation',
            value: function (t, i, a) {
              this.xAxisAnnotations.addXaxisAnnotation(t, i, a);
            },
          },
          {
            key: 'addYaxisAnnotation',
            value: function (t, i, a) {
              this.yAxisAnnotations.addYaxisAnnotation(t, i, a);
            },
          },
          {
            key: 'addPointAnnotation',
            value: function (t, i, a) {
              this.pointsAnnotations.addPointAnnotation(t, i, a);
            },
          },
          {
            key: 'addText',
            value: function (t, i) {
              var a = t.x,
                s = t.y,
                o = t.text,
                l = t.textAnchor,
                d = t.foreColor,
                u = t.fontSize,
                p = t.fontFamily,
                x = t.fontWeight,
                v = t.cssClass,
                b = t.backgroundColor,
                C = t.borderWidth,
                S = t.strokeDashArray,
                L = t.borderRadius,
                N = t.borderColor,
                T = t.appendTo,
                I = T === void 0 ? '.apexcharts-annotations' : T,
                h = t.paddingLeft,
                y = h === void 0 ? 4 : h,
                A = t.paddingRight,
                P = A === void 0 ? 4 : A,
                R = t.paddingBottom,
                O = R === void 0 ? 2 : R,
                X = t.paddingTop,
                G = X === void 0 ? 2 : X,
                q = this.w,
                ie = this.graphics.drawText({
                  x: a,
                  y: s,
                  text: o,
                  textAnchor: l || 'start',
                  fontSize: u || '12px',
                  fontWeight: x || 'regular',
                  fontFamily: p || q.config.chart.fontFamily,
                  foreColor: d || q.config.chart.foreColor,
                  cssClass: v,
                }),
                re = q.globals.dom.baseEl.querySelector(I);
              re && re.appendChild(ie.node);
              var se = ie.bbox();
              if (o) {
                var me = this.graphics.drawRect(
                  se.x - y,
                  se.y - G,
                  se.width + y + P,
                  se.height + O + G,
                  L,
                  b || 'transparent',
                  1,
                  C,
                  N,
                  S
                );
                re.insertBefore(me.node, ie.node);
              }
            },
          },
          {
            key: 'addImage',
            value: function (t, i) {
              var a = this.w,
                s = t.path,
                o = t.x,
                l = o === void 0 ? 0 : o,
                d = t.y,
                u = d === void 0 ? 0 : d,
                p = t.width,
                x = p === void 0 ? 20 : p,
                v = t.height,
                b = v === void 0 ? 20 : v,
                C = t.appendTo,
                S = C === void 0 ? '.apexcharts-annotations' : C,
                L = a.globals.dom.Paper.image(s);
              L.size(x, b).move(l, u);
              var N = a.globals.dom.baseEl.querySelector(S);
              return N && N.appendChild(L.node), L;
            },
          },
          {
            key: 'addXaxisAnnotationExternal',
            value: function (t, i, a) {
              return (
                this.addAnnotationExternal({
                  params: t,
                  pushToMemory: i,
                  context: a,
                  type: 'xaxis',
                  contextMethod: a.addXaxisAnnotation,
                }),
                a
              );
            },
          },
          {
            key: 'addYaxisAnnotationExternal',
            value: function (t, i, a) {
              return (
                this.addAnnotationExternal({
                  params: t,
                  pushToMemory: i,
                  context: a,
                  type: 'yaxis',
                  contextMethod: a.addYaxisAnnotation,
                }),
                a
              );
            },
          },
          {
            key: 'addPointAnnotationExternal',
            value: function (t, i, a) {
              return (
                this.invertAxis === void 0 &&
                  (this.invertAxis = a.w.globals.isBarHorizontal),
                this.addAnnotationExternal({
                  params: t,
                  pushToMemory: i,
                  context: a,
                  type: 'point',
                  contextMethod: a.addPointAnnotation,
                }),
                a
              );
            },
          },
          {
            key: 'addAnnotationExternal',
            value: function (t) {
              var i = t.params,
                a = t.pushToMemory,
                s = t.context,
                o = t.type,
                l = t.contextMethod,
                d = s,
                u = d.w,
                p = u.globals.dom.baseEl.querySelector(
                  '.apexcharts-'.concat(o, '-annotations')
                ),
                x = p.childNodes.length + 1,
                v = new rt(),
                b = Object.assign(
                  {},
                  o === 'xaxis'
                    ? v.xAxisAnnotation
                    : o === 'yaxis'
                    ? v.yAxisAnnotation
                    : v.pointAnnotation
                ),
                C = E.extend(b, i);
              switch (o) {
                case 'xaxis':
                  this.addXaxisAnnotation(C, p, x);
                  break;
                case 'yaxis':
                  this.addYaxisAnnotation(C, p, x);
                  break;
                case 'point':
                  this.addPointAnnotation(C, p, x);
              }
              var S = u.globals.dom.baseEl.querySelector(
                  '.apexcharts-'
                    .concat(o, '-annotations .apexcharts-')
                    .concat(o, "-annotation-label[rel='")
                    .concat(x, "']")
                ),
                L = this.helpers.addBackgroundToAnno(S, C);
              return (
                L && p.insertBefore(L.node, S),
                a &&
                  u.globals.memory.methodsToExec.push({
                    context: d,
                    id: C.id ? C.id : E.randomId(),
                    method: l,
                    label: 'addAnnotation',
                    params: i,
                  }),
                s
              );
            },
          },
          {
            key: 'clearAnnotations',
            value: function (t) {
              var i = t.w,
                a = i.globals.dom.baseEl.querySelectorAll(
                  '.apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations'
                );
              i.globals.memory.methodsToExec.map(function (s, o) {
                (s.label !== 'addText' && s.label !== 'addAnnotation') ||
                  i.globals.memory.methodsToExec.splice(o, 1);
              }),
                (a = E.listToArray(a)),
                Array.prototype.forEach.call(a, function (s) {
                  for (; s.firstChild; ) s.removeChild(s.firstChild);
                });
            },
          },
          {
            key: 'removeAnnotation',
            value: function (t, i) {
              var a = t.w,
                s = a.globals.dom.baseEl.querySelectorAll('.'.concat(i));
              s &&
                (a.globals.memory.methodsToExec.map(function (o, l) {
                  o.id === i && a.globals.memory.methodsToExec.splice(l, 1);
                }),
                Array.prototype.forEach.call(s, function (o) {
                  o.parentElement.removeChild(o);
                }));
            },
          },
        ]),
        j
      );
    })(),
    Ge = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.months31 = [1, 3, 5, 7, 8, 10, 12]),
          (this.months30 = [2, 4, 6, 9, 11]),
          (this.daysCntOfYear = [
            0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,
          ]);
      }
      return (
        k(j, [
          {
            key: 'isValidDate',
            value: function (t) {
              return !isNaN(this.parseDate(t));
            },
          },
          {
            key: 'getTimeStamp',
            value: function (t) {
              return Date.parse(t)
                ? this.w.config.xaxis.labels.datetimeUTC
                  ? new Date(new Date(t).toISOString().substr(0, 25)).getTime()
                  : new Date(t).getTime()
                : t;
            },
          },
          {
            key: 'getDate',
            value: function (t) {
              return this.w.config.xaxis.labels.datetimeUTC
                ? new Date(new Date(t).toUTCString())
                : new Date(t);
            },
          },
          {
            key: 'parseDate',
            value: function (t) {
              var i = Date.parse(t);
              if (!isNaN(i)) return this.getTimeStamp(t);
              var a = Date.parse(t.replace(/-/g, '/').replace(/[a-z]+/gi, ' '));
              return (a = this.getTimeStamp(a));
            },
          },
          {
            key: 'parseDateWithTimezone',
            value: function (t) {
              return Date.parse(t.replace(/-/g, '/').replace(/[a-z]+/gi, ' '));
            },
          },
          {
            key: 'formatDate',
            value: function (t, i) {
              var a = this.w.globals.locale,
                s = this.w.config.xaxis.labels.datetimeUTC,
                o = ['\0'].concat(V(a.months)),
                l = [''].concat(V(a.shortMonths)),
                d = [''].concat(V(a.days)),
                u = [''].concat(V(a.shortDays));
              function p(O, X) {
                var G = O + '';
                for (X = X || 2; G.length < X; ) G = '0' + G;
                return G;
              }
              var x = s ? t.getUTCFullYear() : t.getFullYear();
              i = (i = (i = i.replace(/(^|[^\\])yyyy+/g, '$1' + x)).replace(
                /(^|[^\\])yy/g,
                '$1' + x.toString().substr(2, 2)
              )).replace(/(^|[^\\])y/g, '$1' + x);
              var v = (s ? t.getUTCMonth() : t.getMonth()) + 1;
              i = (i = (i = (i = i.replace(
                /(^|[^\\])MMMM+/g,
                '$1' + o[0]
              )).replace(/(^|[^\\])MMM/g, '$1' + l[0])).replace(
                /(^|[^\\])MM/g,
                '$1' + p(v)
              )).replace(/(^|[^\\])M/g, '$1' + v);
              var b = s ? t.getUTCDate() : t.getDate();
              i = (i = (i = (i = i.replace(
                /(^|[^\\])dddd+/g,
                '$1' + d[0]
              )).replace(/(^|[^\\])ddd/g, '$1' + u[0])).replace(
                /(^|[^\\])dd/g,
                '$1' + p(b)
              )).replace(/(^|[^\\])d/g, '$1' + b);
              var C = s ? t.getUTCHours() : t.getHours(),
                S = C > 12 ? C - 12 : C === 0 ? 12 : C;
              i = (i = (i = (i = i.replace(
                /(^|[^\\])HH+/g,
                '$1' + p(C)
              )).replace(/(^|[^\\])H/g, '$1' + C)).replace(
                /(^|[^\\])hh+/g,
                '$1' + p(S)
              )).replace(/(^|[^\\])h/g, '$1' + S);
              var L = s ? t.getUTCMinutes() : t.getMinutes();
              i = (i = i.replace(/(^|[^\\])mm+/g, '$1' + p(L))).replace(
                /(^|[^\\])m/g,
                '$1' + L
              );
              var N = s ? t.getUTCSeconds() : t.getSeconds();
              i = (i = i.replace(/(^|[^\\])ss+/g, '$1' + p(N))).replace(
                /(^|[^\\])s/g,
                '$1' + N
              );
              var T = s ? t.getUTCMilliseconds() : t.getMilliseconds();
              (i = i.replace(/(^|[^\\])fff+/g, '$1' + p(T, 3))),
                (T = Math.round(T / 10)),
                (i = i.replace(/(^|[^\\])ff/g, '$1' + p(T))),
                (T = Math.round(T / 10));
              var I = C < 12 ? 'AM' : 'PM';
              i = (i = (i = i.replace(/(^|[^\\])f/g, '$1' + T)).replace(
                /(^|[^\\])TT+/g,
                '$1' + I
              )).replace(/(^|[^\\])T/g, '$1' + I.charAt(0));
              var h = I.toLowerCase();
              i = (i = i.replace(/(^|[^\\])tt+/g, '$1' + h)).replace(
                /(^|[^\\])t/g,
                '$1' + h.charAt(0)
              );
              var y = -t.getTimezoneOffset(),
                A = s || !y ? 'Z' : y > 0 ? '+' : '-';
              if (!s) {
                var P = (y = Math.abs(y)) % 60;
                A += p(Math.floor(y / 60)) + ':' + p(P);
              }
              i = i.replace(/(^|[^\\])K/g, '$1' + A);
              var R = (s ? t.getUTCDay() : t.getDay()) + 1;
              return (i = (i = (i = (i = (i = i.replace(
                new RegExp(d[0], 'g'),
                d[R]
              )).replace(new RegExp(u[0], 'g'), u[R])).replace(
                new RegExp(o[0], 'g'),
                o[v]
              )).replace(new RegExp(l[0], 'g'), l[v])).replace(/\\(.)/g, '$1'));
            },
          },
          {
            key: 'getTimeUnitsfromTimestamp',
            value: function (t, i, a) {
              var s = this.w;
              s.config.xaxis.min !== void 0 && (t = s.config.xaxis.min),
                s.config.xaxis.max !== void 0 && (i = s.config.xaxis.max);
              var o = this.getDate(t),
                l = this.getDate(i),
                d = this.formatDate(o, 'yyyy MM dd HH mm ss fff').split(' '),
                u = this.formatDate(l, 'yyyy MM dd HH mm ss fff').split(' ');
              return {
                minMillisecond: parseInt(d[6], 10),
                maxMillisecond: parseInt(u[6], 10),
                minSecond: parseInt(d[5], 10),
                maxSecond: parseInt(u[5], 10),
                minMinute: parseInt(d[4], 10),
                maxMinute: parseInt(u[4], 10),
                minHour: parseInt(d[3], 10),
                maxHour: parseInt(u[3], 10),
                minDate: parseInt(d[2], 10),
                maxDate: parseInt(u[2], 10),
                minMonth: parseInt(d[1], 10) - 1,
                maxMonth: parseInt(u[1], 10) - 1,
                minYear: parseInt(d[0], 10),
                maxYear: parseInt(u[0], 10),
              };
            },
          },
          {
            key: 'isLeapYear',
            value: function (t) {
              return (t % 4 == 0 && t % 100 != 0) || t % 400 == 0;
            },
          },
          {
            key: 'calculcateLastDaysOfMonth',
            value: function (t, i, a) {
              return this.determineDaysOfMonths(t, i) - a;
            },
          },
          {
            key: 'determineDaysOfYear',
            value: function (t) {
              var i = 365;
              return this.isLeapYear(t) && (i = 366), i;
            },
          },
          {
            key: 'determineRemainingDaysOfYear',
            value: function (t, i, a) {
              var s = this.daysCntOfYear[i] + a;
              return i > 1 && this.isLeapYear() && s++, s;
            },
          },
          {
            key: 'determineDaysOfMonths',
            value: function (t, i) {
              var a = 30;
              switch (((t = E.monthMod(t)), !0)) {
                case this.months30.indexOf(t) > -1:
                  t === 2 && (a = this.isLeapYear(i) ? 29 : 28);
                  break;
                case this.months31.indexOf(t) > -1:
                default:
                  a = 31;
              }
              return a;
            },
          },
        ]),
        j
      );
    })(),
    fi = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.tooltipKeyFormat = 'dd MMM');
      }
      return (
        k(j, [
          {
            key: 'xLabelFormat',
            value: function (t, i, a, s) {
              var o = this.w;
              if (
                o.config.xaxis.type === 'datetime' &&
                o.config.xaxis.labels.formatter === void 0 &&
                o.config.tooltip.x.formatter === void 0
              ) {
                var l = new Ge(this.ctx);
                return l.formatDate(l.getDate(i), o.config.tooltip.x.format);
              }
              return t(i, a, s);
            },
          },
          {
            key: 'defaultGeneralFormatter',
            value: function (t) {
              return Array.isArray(t)
                ? t.map(function (i) {
                    return i;
                  })
                : t;
            },
          },
          {
            key: 'defaultYFormatter',
            value: function (t, i, a) {
              var s = this.w;
              return (
                E.isNumber(t) &&
                  (t =
                    s.globals.yValueDecimal !== 0
                      ? t.toFixed(
                          i.decimalsInFloat !== void 0
                            ? i.decimalsInFloat
                            : s.globals.yValueDecimal
                        )
                      : s.globals.maxYArr[a] - s.globals.minYArr[a] < 5
                      ? t.toFixed(1)
                      : t.toFixed(0)),
                t
              );
            },
          },
          {
            key: 'setLabelFormatters',
            value: function () {
              var t = this,
                i = this.w;
              return (
                (i.globals.xaxisTooltipFormatter = function (a) {
                  return t.defaultGeneralFormatter(a);
                }),
                (i.globals.ttKeyFormatter = function (a) {
                  return t.defaultGeneralFormatter(a);
                }),
                (i.globals.ttZFormatter = function (a) {
                  return a;
                }),
                (i.globals.legendFormatter = function (a) {
                  return t.defaultGeneralFormatter(a);
                }),
                i.config.xaxis.labels.formatter !== void 0
                  ? (i.globals.xLabelFormatter =
                      i.config.xaxis.labels.formatter)
                  : (i.globals.xLabelFormatter = function (a) {
                      if (E.isNumber(a)) {
                        if (
                          !i.config.xaxis.convertedCatToNumeric &&
                          i.config.xaxis.type === 'numeric'
                        ) {
                          if (E.isNumber(i.config.xaxis.decimalsInFloat))
                            return a.toFixed(i.config.xaxis.decimalsInFloat);
                          var s = i.globals.maxX - i.globals.minX;
                          return s > 0 && s < 100 ? a.toFixed(1) : a.toFixed(0);
                        }
                        return i.globals.isBarHorizontal &&
                          i.globals.maxY - i.globals.minYArr < 4
                          ? a.toFixed(1)
                          : a.toFixed(0);
                      }
                      return a;
                    }),
                typeof i.config.tooltip.x.formatter == 'function'
                  ? (i.globals.ttKeyFormatter = i.config.tooltip.x.formatter)
                  : (i.globals.ttKeyFormatter = i.globals.xLabelFormatter),
                typeof i.config.xaxis.tooltip.formatter == 'function' &&
                  (i.globals.xaxisTooltipFormatter =
                    i.config.xaxis.tooltip.formatter),
                (Array.isArray(i.config.tooltip.y) ||
                  i.config.tooltip.y.formatter !== void 0) &&
                  (i.globals.ttVal = i.config.tooltip.y),
                i.config.tooltip.z.formatter !== void 0 &&
                  (i.globals.ttZFormatter = i.config.tooltip.z.formatter),
                i.config.legend.formatter !== void 0 &&
                  (i.globals.legendFormatter = i.config.legend.formatter),
                i.config.yaxis.forEach(function (a, s) {
                  a.labels.formatter !== void 0
                    ? (i.globals.yLabelFormatters[s] = a.labels.formatter)
                    : (i.globals.yLabelFormatters[s] = function (o) {
                        return i.globals.xyCharts
                          ? Array.isArray(o)
                            ? o.map(function (l) {
                                return t.defaultYFormatter(l, a, s);
                              })
                            : t.defaultYFormatter(o, a, s)
                          : o;
                      });
                }),
                i.globals
              );
            },
          },
          {
            key: 'heatmapLabelFormatters',
            value: function () {
              var t = this.w;
              if (t.config.chart.type === 'heatmap') {
                t.globals.yAxisScale[0].result = t.globals.seriesNames.slice();
                var i = t.globals.seriesNames.reduce(function (a, s) {
                  return a.length > s.length ? a : s;
                }, 0);
                (t.globals.yAxisScale[0].niceMax = i),
                  (t.globals.yAxisScale[0].niceMin = i);
              }
            },
          },
        ]),
        j
      );
    })(),
    yi = function (j) {
      var t,
        i = j.isTimeline,
        a = j.ctx,
        s = j.seriesIndex,
        o = j.dataPointIndex,
        l = j.y1,
        d = j.y2,
        u = j.w,
        p = u.globals.seriesRangeStart[s][o],
        x = u.globals.seriesRangeEnd[s][o],
        v = u.globals.labels[o],
        b = u.config.series[s].name ? u.config.series[s].name : '',
        C = u.globals.ttKeyFormatter,
        S = u.config.tooltip.y.title.formatter,
        L = { w: u, seriesIndex: s, dataPointIndex: o, start: p, end: x };
      typeof S == 'function' && (b = S(b, L)),
        (t = u.config.series[s].data[o]) !== null &&
          t !== void 0 &&
          t.x &&
          (v = u.config.series[s].data[o].x),
        i ||
          (u.config.xaxis.type === 'datetime' &&
            (v = new fi(a).xLabelFormat(u.globals.ttKeyFormatter, v, v, {
              i: void 0,
              dateFormatter: new Ge(a).formatDate,
              w: u,
            }))),
        typeof C == 'function' && (v = C(v, L)),
        Number.isFinite(l) && Number.isFinite(d) && ((p = l), (x = d));
      var N = '',
        T = '',
        I = u.globals.colors[s];
      if (u.config.tooltip.x.formatter === void 0)
        if (u.config.xaxis.type === 'datetime') {
          var h = new Ge(a);
          (N = h.formatDate(h.getDate(p), u.config.tooltip.x.format)),
            (T = h.formatDate(h.getDate(x), u.config.tooltip.x.format));
        } else (N = p), (T = x);
      else
        (N = u.config.tooltip.x.formatter(p)),
          (T = u.config.tooltip.x.formatter(x));
      return {
        start: p,
        end: x,
        startVal: N,
        endVal: T,
        ylabel: v,
        color: I,
        seriesName: b,
      };
    },
    wi = function (j) {
      var t = j.color,
        i = j.seriesName,
        a = j.ylabel,
        s = j.start,
        o = j.end,
        l = j.seriesIndex,
        d = j.dataPointIndex,
        u = j.ctx.tooltip.tooltipLabels.getFormatters(l);
      (s = u.yLbFormatter(s)), (o = u.yLbFormatter(o));
      var p = u.yLbFormatter(j.w.globals.series[l][d]),
        x = `<span class="value start-value">
  `
          .concat(
            s,
            `
  </span> <span class="separator">-</span> <span class="value end-value">
  `
          )
          .concat(
            o,
            `
  </span>`
          );
      return (
        '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' +
        t +
        '">' +
        (i || '') +
        '</span></div><div> <span class="category">' +
        a +
        ': </span> ' +
        (j.w.globals.comboCharts
          ? j.w.config.series[l].type === 'rangeArea' ||
            j.w.config.series[l].type === 'rangeBar'
            ? x
            : '<span>'.concat(p, '</span>')
          : x) +
        ' </div></div>'
      );
    },
    de = (function () {
      function j(t) {
        g(this, j), (this.opts = t);
      }
      return (
        k(j, [
          {
            key: 'hideYAxis',
            value: function () {
              (this.opts.yaxis[0].show = !1),
                (this.opts.yaxis[0].title.text = ''),
                (this.opts.yaxis[0].axisBorder.show = !1),
                (this.opts.yaxis[0].axisTicks.show = !1),
                (this.opts.yaxis[0].floating = !0);
            },
          },
          {
            key: 'line',
            value: function () {
              return {
                chart: { animations: { easing: 'swing' } },
                dataLabels: { enabled: !1 },
                stroke: { width: 5, curve: 'straight' },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: 'sparkline',
            value: function (t) {
              return (
                this.hideYAxis(),
                E.extend(t, {
                  grid: {
                    show: !1,
                    padding: { left: 0, right: 0, top: 0, bottom: 0 },
                  },
                  legend: { show: !1 },
                  xaxis: {
                    labels: { show: !1 },
                    tooltip: { enabled: !1 },
                    axisBorder: { show: !1 },
                    axisTicks: { show: !1 },
                  },
                  chart: { toolbar: { show: !1 }, zoom: { enabled: !1 } },
                  dataLabels: { enabled: !1 },
                })
              );
            },
          },
          {
            key: 'bar',
            value: function () {
              return {
                chart: { stacked: !1, animations: { easing: 'swing' } },
                plotOptions: { bar: { dataLabels: { position: 'center' } } },
                dataLabels: {
                  style: { colors: ['#fff'] },
                  background: { enabled: !1 },
                },
                stroke: { width: 0, lineCap: 'round' },
                fill: { opacity: 0.85 },
                legend: { markers: { shape: 'square', radius: 2, size: 8 } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: {
                  tooltip: { enabled: !1 },
                  tickPlacement: 'between',
                  crosshairs: {
                    width: 'barWidth',
                    position: 'back',
                    fill: { type: 'gradient' },
                    dropShadow: { enabled: !1 },
                    stroke: { width: 0 },
                  },
                },
              };
            },
          },
          {
            key: 'funnel',
            value: function () {
              return (
                this.hideYAxis(),
                c(
                  c({}, this.bar()),
                  {},
                  {
                    chart: {
                      animations: {
                        easing: 'linear',
                        speed: 800,
                        animateGradually: { enabled: !1 },
                      },
                    },
                    plotOptions: {
                      bar: {
                        horizontal: !0,
                        borderRadiusApplication: 'around',
                        borderRadius: 0,
                        dataLabels: { position: 'center' },
                      },
                    },
                    grid: { show: !1, padding: { left: 0, right: 0 } },
                    xaxis: {
                      labels: { show: !1 },
                      tooltip: { enabled: !1 },
                      axisBorder: { show: !1 },
                      axisTicks: { show: !1 },
                    },
                  }
                )
              );
            },
          },
          {
            key: 'candlestick',
            value: function () {
              var t = this;
              return {
                stroke: { width: 1, colors: ['#333'] },
                fill: { opacity: 1 },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (i) {
                    var a = i.seriesIndex,
                      s = i.dataPointIndex,
                      o = i.w;
                    return t._getBoxTooltip(
                      o,
                      a,
                      s,
                      ['Open', 'High', '', 'Low', 'Close'],
                      'candlestick'
                    );
                  },
                },
                states: { active: { filter: { type: 'none' } } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: 'boxPlot',
            value: function () {
              var t = this;
              return {
                chart: { animations: { dynamicAnimation: { enabled: !1 } } },
                stroke: { width: 1, colors: ['#24292e'] },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (i) {
                    var a = i.seriesIndex,
                      s = i.dataPointIndex,
                      o = i.w;
                    return t._getBoxTooltip(
                      o,
                      a,
                      s,
                      ['Minimum', 'Q1', 'Median', 'Q3', 'Maximum'],
                      'boxPlot'
                    );
                  },
                },
                markers: { size: 5, strokeWidth: 1, strokeColors: '#111' },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: 'rangeBar',
            value: function () {
              return {
                chart: { animations: { animateGradually: !1 } },
                stroke: { width: 0, lineCap: 'square' },
                plotOptions: {
                  bar: { borderRadius: 0, dataLabels: { position: 'center' } },
                },
                dataLabels: {
                  enabled: !1,
                  formatter: function (t, i) {
                    i.ctx;
                    var a = i.seriesIndex,
                      s = i.dataPointIndex,
                      o = i.w,
                      l = function () {
                        var d = o.globals.seriesRangeStart[a][s];
                        return o.globals.seriesRangeEnd[a][s] - d;
                      };
                    return o.globals.comboCharts
                      ? o.config.series[a].type === 'rangeBar' ||
                        o.config.series[a].type === 'rangeArea'
                        ? l()
                        : t
                      : l();
                  },
                  background: { enabled: !1 },
                  style: { colors: ['#fff'] },
                },
                markers: { size: 10 },
                tooltip: {
                  shared: !1,
                  followCursor: !0,
                  custom: function (t) {
                    return t.w.config.plotOptions &&
                      t.w.config.plotOptions.bar &&
                      t.w.config.plotOptions.bar.horizontal
                      ? (function (i) {
                          var a = yi(c(c({}, i), {}, { isTimeline: !0 })),
                            s = a.color,
                            o = a.seriesName,
                            l = a.ylabel,
                            d = a.startVal,
                            u = a.endVal;
                          return wi(
                            c(
                              c({}, i),
                              {},
                              {
                                color: s,
                                seriesName: o,
                                ylabel: l,
                                start: d,
                                end: u,
                              }
                            )
                          );
                        })(t)
                      : (function (i) {
                          var a = yi(i),
                            s = a.color,
                            o = a.seriesName,
                            l = a.ylabel,
                            d = a.start,
                            u = a.end;
                          return wi(
                            c(
                              c({}, i),
                              {},
                              {
                                color: s,
                                seriesName: o,
                                ylabel: l,
                                start: d,
                                end: u,
                              }
                            )
                          );
                        })(t);
                  },
                },
                xaxis: {
                  tickPlacement: 'between',
                  tooltip: { enabled: !1 },
                  crosshairs: { stroke: { width: 0 } },
                },
              };
            },
          },
          {
            key: 'dumbbell',
            value: function (t) {
              var i, a;
              return (
                ((i = t.plotOptions.bar) !== null &&
                  i !== void 0 &&
                  i.barHeight) ||
                  (t.plotOptions.bar.barHeight = 2),
                ((a = t.plotOptions.bar) !== null &&
                  a !== void 0 &&
                  a.columnWidth) ||
                  (t.plotOptions.bar.columnWidth = 2),
                t
              );
            },
          },
          {
            key: 'area',
            value: function () {
              return {
                stroke: {
                  width: 4,
                  fill: {
                    type: 'solid',
                    gradient: {
                      inverseColors: !1,
                      shade: 'light',
                      type: 'vertical',
                      opacityFrom: 0.65,
                      opacityTo: 0.5,
                      stops: [0, 100, 100],
                    },
                  },
                },
                fill: {
                  type: 'gradient',
                  gradient: {
                    inverseColors: !1,
                    shade: 'light',
                    type: 'vertical',
                    opacityFrom: 0.65,
                    opacityTo: 0.5,
                    stops: [0, 100, 100],
                  },
                },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                tooltip: { followCursor: !1 },
              };
            },
          },
          {
            key: 'rangeArea',
            value: function () {
              return {
                stroke: { curve: 'straight', width: 0 },
                fill: { type: 'solid', opacity: 0.6 },
                markers: { size: 0 },
                states: {
                  hover: { filter: { type: 'none' } },
                  active: { filter: { type: 'none' } },
                },
                tooltip: {
                  intersect: !1,
                  shared: !0,
                  followCursor: !0,
                  custom: function (t) {
                    return (function (i) {
                      var a = yi(i),
                        s = a.color,
                        o = a.seriesName,
                        l = a.ylabel,
                        d = a.start,
                        u = a.end;
                      return wi(
                        c(
                          c({}, i),
                          {},
                          {
                            color: s,
                            seriesName: o,
                            ylabel: l,
                            start: d,
                            end: u,
                          }
                        )
                      );
                    })(t);
                  },
                },
              };
            },
          },
          {
            key: 'brush',
            value: function (t) {
              return E.extend(t, {
                chart: {
                  toolbar: { autoSelected: 'selection', show: !1 },
                  zoom: { enabled: !1 },
                },
                dataLabels: { enabled: !1 },
                stroke: { width: 1 },
                tooltip: { enabled: !1 },
                xaxis: { tooltip: { enabled: !1 } },
              });
            },
          },
          {
            key: 'stacked100',
            value: function (t) {
              (t.dataLabels = t.dataLabels || {}),
                (t.dataLabels.formatter = t.dataLabels.formatter || void 0);
              var i = t.dataLabels.formatter;
              return (
                t.yaxis.forEach(function (a, s) {
                  (t.yaxis[s].min = 0), (t.yaxis[s].max = 100);
                }),
                t.chart.type === 'bar' &&
                  (t.dataLabels.formatter =
                    i ||
                    function (a) {
                      return typeof a == 'number' && a ? a.toFixed(0) + '%' : a;
                    }),
                t
              );
            },
          },
          {
            key: 'stackedBars',
            value: function () {
              var t = this.bar();
              return c(
                c({}, t),
                {},
                {
                  plotOptions: c(
                    c({}, t.plotOptions),
                    {},
                    {
                      bar: c(
                        c({}, t.plotOptions.bar),
                        {},
                        {
                          borderRadiusApplication: 'end',
                          borderRadiusWhenStacked: 'last',
                        }
                      ),
                    }
                  ),
                }
              );
            },
          },
          {
            key: 'convertCatToNumeric',
            value: function (t) {
              return (t.xaxis.convertedCatToNumeric = !0), t;
            },
          },
          {
            key: 'convertCatToNumericXaxis',
            value: function (t, i, a) {
              (t.xaxis.type = 'numeric'),
                (t.xaxis.labels = t.xaxis.labels || {}),
                (t.xaxis.labels.formatter =
                  t.xaxis.labels.formatter ||
                  function (l) {
                    return E.isNumber(l) ? Math.floor(l) : l;
                  });
              var s = t.xaxis.labels.formatter,
                o =
                  t.xaxis.categories && t.xaxis.categories.length
                    ? t.xaxis.categories
                    : t.labels;
              return (
                a &&
                  a.length &&
                  (o = a.map(function (l) {
                    return Array.isArray(l) ? l : String(l);
                  })),
                o &&
                  o.length &&
                  (t.xaxis.labels.formatter = function (l) {
                    return E.isNumber(l) ? s(o[Math.floor(l) - 1]) : s(l);
                  }),
                (t.xaxis.categories = []),
                (t.labels = []),
                (t.xaxis.tickAmount = t.xaxis.tickAmount || 'dataPoints'),
                t
              );
            },
          },
          {
            key: 'bubble',
            value: function () {
              return {
                dataLabels: { style: { colors: ['#fff'] } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: { crosshairs: { width: 0 } },
                fill: {
                  type: 'solid',
                  gradient: {
                    shade: 'light',
                    inverse: !0,
                    shadeIntensity: 0.55,
                    opacityFrom: 0.4,
                    opacityTo: 0.8,
                  },
                },
              };
            },
          },
          {
            key: 'scatter',
            value: function () {
              return {
                dataLabels: { enabled: !1 },
                tooltip: { shared: !1, intersect: !0 },
                markers: { size: 6, strokeWidth: 1, hover: { sizeOffset: 2 } },
              };
            },
          },
          {
            key: 'heatmap',
            value: function () {
              return {
                chart: { stacked: !1 },
                fill: { opacity: 1 },
                dataLabels: { style: { colors: ['#fff'] } },
                stroke: { colors: ['#fff'] },
                tooltip: {
                  followCursor: !0,
                  marker: { show: !1 },
                  x: { show: !1 },
                },
                legend: {
                  position: 'top',
                  markers: { shape: 'square', size: 10, offsetY: 2 },
                },
                grid: { padding: { right: 20 } },
              };
            },
          },
          {
            key: 'treemap',
            value: function () {
              return {
                chart: { zoom: { enabled: !1 } },
                dataLabels: {
                  style: { fontSize: 14, fontWeight: 600, colors: ['#fff'] },
                },
                stroke: { show: !0, width: 2, colors: ['#fff'] },
                legend: { show: !1 },
                fill: { gradient: { stops: [0, 100] } },
                tooltip: { followCursor: !0, x: { show: !1 } },
                grid: { padding: { left: 0, right: 0 } },
                xaxis: { crosshairs: { show: !1 }, tooltip: { enabled: !1 } },
              };
            },
          },
          {
            key: 'pie',
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                plotOptions: { pie: { donut: { labels: { show: !1 } } } },
                dataLabels: {
                  formatter: function (t) {
                    return t.toFixed(1) + '%';
                  },
                  style: { colors: ['#fff'] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ['#fff'] },
                fill: {
                  opacity: 1,
                  gradient: { shade: 'light', stops: [0, 100] },
                },
                tooltip: { theme: 'dark', fillSeriesColor: !0 },
                legend: { position: 'right' },
              };
            },
          },
          {
            key: 'donut',
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                dataLabels: {
                  formatter: function (t) {
                    return t.toFixed(1) + '%';
                  },
                  style: { colors: ['#fff'] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ['#fff'] },
                fill: {
                  opacity: 1,
                  gradient: {
                    shade: 'light',
                    shadeIntensity: 0.35,
                    stops: [80, 100],
                    opacityFrom: 1,
                    opacityTo: 1,
                  },
                },
                tooltip: { theme: 'dark', fillSeriesColor: !0 },
                legend: { position: 'right' },
              };
            },
          },
          {
            key: 'polarArea',
            value: function () {
              return (
                (this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount
                  ? this.opts.yaxis[0].tickAmount
                  : 6),
                {
                  chart: { toolbar: { show: !1 } },
                  dataLabels: {
                    formatter: function (t) {
                      return t.toFixed(1) + '%';
                    },
                    enabled: !1,
                  },
                  stroke: { show: !0, width: 2 },
                  fill: { opacity: 0.7 },
                  tooltip: { theme: 'dark', fillSeriesColor: !0 },
                  legend: { position: 'right' },
                }
              );
            },
          },
          {
            key: 'radar',
            value: function () {
              return (
                (this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels
                  .offsetY
                  ? this.opts.yaxis[0].labels.offsetY
                  : 6),
                {
                  dataLabels: { enabled: !1, style: { fontSize: '11px' } },
                  stroke: { width: 2 },
                  markers: { size: 3, strokeWidth: 1, strokeOpacity: 1 },
                  fill: { opacity: 0.2 },
                  tooltip: { shared: !1, intersect: !0, followCursor: !0 },
                  grid: { show: !1 },
                  xaxis: {
                    labels: {
                      formatter: function (t) {
                        return t;
                      },
                      style: { colors: ['#a8a8a8'], fontSize: '11px' },
                    },
                    tooltip: { enabled: !1 },
                    crosshairs: { show: !1 },
                  },
                }
              );
            },
          },
          {
            key: 'radialBar',
            value: function () {
              return {
                chart: {
                  animations: { dynamicAnimation: { enabled: !0, speed: 800 } },
                  toolbar: { show: !1 },
                },
                fill: {
                  gradient: {
                    shade: 'dark',
                    shadeIntensity: 0.4,
                    inverseColors: !1,
                    type: 'diagonal2',
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [70, 98, 100],
                  },
                },
                legend: { show: !1, position: 'right' },
                tooltip: { enabled: !1, fillSeriesColor: !0 },
              };
            },
          },
          {
            key: '_getBoxTooltip',
            value: function (t, i, a, s, o) {
              var l = t.globals.seriesCandleO[i][a],
                d = t.globals.seriesCandleH[i][a],
                u = t.globals.seriesCandleM[i][a],
                p = t.globals.seriesCandleL[i][a],
                x = t.globals.seriesCandleC[i][a];
              return t.config.series[i].type && t.config.series[i].type !== o
                ? `<div class="apexcharts-custom-tooltip">
          `
                    .concat(
                      t.config.series[i].name
                        ? t.config.series[i].name
                        : 'series-' + (i + 1),
                      ': <strong>'
                    )
                    .concat(
                      t.globals.series[i][a],
                      `</strong>
        </div>`
                    )
                : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(
                    t.config.chart.type,
                    '">'
                  ) +
                    '<div>'.concat(s[0], ': <span class="value">') +
                    l +
                    '</span></div>' +
                    '<div>'.concat(s[1], ': <span class="value">') +
                    d +
                    '</span></div>' +
                    (u
                      ? '<div>'.concat(s[2], ': <span class="value">') +
                        u +
                        '</span></div>'
                      : '') +
                    '<div>'.concat(s[3], ': <span class="value">') +
                    p +
                    '</span></div>' +
                    '<div>'.concat(s[4], ': <span class="value">') +
                    x +
                    '</span></div></div>';
            },
          },
        ]),
        j
      );
    })(),
    xe = (function () {
      function j(t) {
        g(this, j), (this.opts = t);
      }
      return (
        k(j, [
          {
            key: 'init',
            value: function (t) {
              var i = t.responsiveOverride,
                a = this.opts,
                s = new rt(),
                o = new de(a);
              (this.chartType = a.chart.type),
                (a = this.extendYAxis(a)),
                (a = this.extendAnnotations(a));
              var l = s.init(),
                d = {};
              if (a && f(a) === 'object') {
                var u,
                  p,
                  x,
                  v,
                  b,
                  C,
                  S,
                  L,
                  N = {};
                (N =
                  [
                    'line',
                    'area',
                    'bar',
                    'candlestick',
                    'boxPlot',
                    'rangeBar',
                    'rangeArea',
                    'bubble',
                    'scatter',
                    'heatmap',
                    'treemap',
                    'pie',
                    'polarArea',
                    'donut',
                    'radar',
                    'radialBar',
                  ].indexOf(a.chart.type) !== -1
                    ? o[a.chart.type]()
                    : o.line()),
                  (u = a.plotOptions) !== null &&
                    u !== void 0 &&
                    (p = u.bar) !== null &&
                    p !== void 0 &&
                    p.isFunnel &&
                    (N = o.funnel()),
                  a.chart.stacked &&
                    a.chart.type === 'bar' &&
                    (N = o.stackedBars()),
                  (x = a.chart.brush) !== null &&
                    x !== void 0 &&
                    x.enabled &&
                    (N = o.brush(N)),
                  a.chart.stacked &&
                    a.chart.stackType === '100%' &&
                    (a = o.stacked100(a)),
                  (v = a.plotOptions) !== null &&
                    v !== void 0 &&
                    (b = v.bar) !== null &&
                    b !== void 0 &&
                    b.isDumbbell &&
                    (a = o.dumbbell(a)),
                  this.checkForDarkTheme(window.Apex),
                  this.checkForDarkTheme(a),
                  (a.xaxis = a.xaxis || window.Apex.xaxis || {}),
                  i || (a.xaxis.convertedCatToNumeric = !1),
                  (((C = (a = this.checkForCatToNumericXAxis(
                    this.chartType,
                    N,
                    a
                  )).chart.sparkline) !== null &&
                    C !== void 0 &&
                    C.enabled) ||
                    ((S = window.Apex.chart) !== null &&
                      S !== void 0 &&
                      (L = S.sparkline) !== null &&
                      L !== void 0 &&
                      L.enabled)) &&
                    (N = o.sparkline(N)),
                  (d = E.extend(l, N));
              }
              var T = E.extend(d, window.Apex);
              return (l = E.extend(T, a)), (l = this.handleUserInputErrors(l));
            },
          },
          {
            key: 'checkForCatToNumericXAxis',
            value: function (t, i, a) {
              var s,
                o,
                l = new de(a),
                d =
                  (t === 'bar' || t === 'boxPlot') &&
                  ((s = a.plotOptions) === null ||
                  s === void 0 ||
                  (o = s.bar) === null ||
                  o === void 0
                    ? void 0
                    : o.horizontal),
                u =
                  t === 'pie' ||
                  t === 'polarArea' ||
                  t === 'donut' ||
                  t === 'radar' ||
                  t === 'radialBar' ||
                  t === 'heatmap',
                p = a.xaxis.type !== 'datetime' && a.xaxis.type !== 'numeric',
                x = a.xaxis.tickPlacement
                  ? a.xaxis.tickPlacement
                  : i.xaxis && i.xaxis.tickPlacement;
              return (
                d ||
                  u ||
                  !p ||
                  x === 'between' ||
                  (a = l.convertCatToNumeric(a)),
                a
              );
            },
          },
          {
            key: 'extendYAxis',
            value: function (t, i) {
              var a = new rt();
              (t.yaxis === void 0 ||
                !t.yaxis ||
                (Array.isArray(t.yaxis) && t.yaxis.length === 0)) &&
                (t.yaxis = {}),
                t.yaxis.constructor !== Array &&
                  window.Apex.yaxis &&
                  window.Apex.yaxis.constructor !== Array &&
                  (t.yaxis = E.extend(t.yaxis, window.Apex.yaxis)),
                t.yaxis.constructor !== Array
                  ? (t.yaxis = [E.extend(a.yAxis, t.yaxis)])
                  : (t.yaxis = E.extendArray(t.yaxis, a.yAxis));
              var s = !1;
              t.yaxis.forEach(function (l) {
                l.logarithmic && (s = !0);
              });
              var o = t.series;
              return (
                i && !o && (o = i.config.series),
                s &&
                  o.length !== t.yaxis.length &&
                  o.length &&
                  (t.yaxis = o.map(function (l, d) {
                    if (
                      (l.name || (o[d].name = 'series-'.concat(d + 1)),
                      t.yaxis[d])
                    )
                      return (t.yaxis[d].seriesName = o[d].name), t.yaxis[d];
                    var u = E.extend(a.yAxis, t.yaxis[0]);
                    return (u.show = !1), u;
                  })),
                s &&
                  o.length > 1 &&
                  o.length !== t.yaxis.length &&
                  console.warn(
                    'A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both.'
                  ),
                t
              );
            },
          },
          {
            key: 'extendAnnotations',
            value: function (t) {
              return (
                t.annotations === void 0 &&
                  ((t.annotations = {}),
                  (t.annotations.yaxis = []),
                  (t.annotations.xaxis = []),
                  (t.annotations.points = [])),
                (t = this.extendYAxisAnnotations(t)),
                (t = this.extendXAxisAnnotations(t)),
                (t = this.extendPointAnnotations(t))
              );
            },
          },
          {
            key: 'extendYAxisAnnotations',
            value: function (t) {
              var i = new rt();
              return (
                (t.annotations.yaxis = E.extendArray(
                  t.annotations.yaxis !== void 0 ? t.annotations.yaxis : [],
                  i.yAxisAnnotation
                )),
                t
              );
            },
          },
          {
            key: 'extendXAxisAnnotations',
            value: function (t) {
              var i = new rt();
              return (
                (t.annotations.xaxis = E.extendArray(
                  t.annotations.xaxis !== void 0 ? t.annotations.xaxis : [],
                  i.xAxisAnnotation
                )),
                t
              );
            },
          },
          {
            key: 'extendPointAnnotations',
            value: function (t) {
              var i = new rt();
              return (
                (t.annotations.points = E.extendArray(
                  t.annotations.points !== void 0 ? t.annotations.points : [],
                  i.pointAnnotation
                )),
                t
              );
            },
          },
          {
            key: 'checkForDarkTheme',
            value: function (t) {
              t.theme &&
                t.theme.mode === 'dark' &&
                (t.tooltip || (t.tooltip = {}),
                t.tooltip.theme !== 'light' && (t.tooltip.theme = 'dark'),
                t.chart.foreColor || (t.chart.foreColor = '#f6f7f8'),
                t.chart.background || (t.chart.background = '#424242'),
                t.theme.palette || (t.theme.palette = 'palette4'));
            },
          },
          {
            key: 'handleUserInputErrors',
            value: function (t) {
              var i = t;
              if (i.tooltip.shared && i.tooltip.intersect)
                throw new Error(
                  'tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.'
                );
              if (i.chart.type === 'bar' && i.plotOptions.bar.horizontal) {
                if (i.yaxis.length > 1)
                  throw new Error(
                    'Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false'
                  );
                i.yaxis[0].reversed && (i.yaxis[0].opposite = !0),
                  (i.xaxis.tooltip.enabled = !1),
                  (i.yaxis[0].tooltip.enabled = !1),
                  (i.chart.zoom.enabled = !1);
              }
              return (
                (i.chart.type !== 'bar' && i.chart.type !== 'rangeBar') ||
                  (i.tooltip.shared &&
                    i.xaxis.crosshairs.width === 'barWidth' &&
                    i.series.length > 1 &&
                    (i.xaxis.crosshairs.width = 'tickWidth')),
                (i.chart.type !== 'candlestick' &&
                  i.chart.type !== 'boxPlot') ||
                  (i.yaxis[0].reversed &&
                    (console.warn(
                      'Reversed y-axis in '.concat(
                        i.chart.type,
                        ' chart is not supported.'
                      )
                    ),
                    (i.yaxis[0].reversed = !1))),
                i
              );
            },
          },
        ]),
        j
      );
    })(),
    we = (function () {
      function j() {
        g(this, j);
      }
      return (
        k(j, [
          {
            key: 'initGlobalVars',
            value: function (t) {
              (t.series = []),
                (t.seriesCandleO = []),
                (t.seriesCandleH = []),
                (t.seriesCandleM = []),
                (t.seriesCandleL = []),
                (t.seriesCandleC = []),
                (t.seriesRangeStart = []),
                (t.seriesRangeEnd = []),
                (t.seriesRange = []),
                (t.seriesPercent = []),
                (t.seriesGoals = []),
                (t.seriesX = []),
                (t.seriesZ = []),
                (t.seriesNames = []),
                (t.seriesTotals = []),
                (t.seriesLog = []),
                (t.seriesColors = []),
                (t.stackedSeriesTotals = []),
                (t.seriesXvalues = []),
                (t.seriesYvalues = []),
                (t.labels = []),
                (t.hasXaxisGroups = !1),
                (t.groups = []),
                (t.hasSeriesGroups = !1),
                (t.seriesGroups = []),
                (t.categoryLabels = []),
                (t.timescaleLabels = []),
                (t.noLabelsProvided = !1),
                (t.resizeTimer = null),
                (t.selectionResizeTimer = null),
                (t.delayedElements = []),
                (t.pointsArray = []),
                (t.dataLabelsRects = []),
                (t.isXNumeric = !1),
                (t.skipLastTimelinelabel = !1),
                (t.skipFirstTimelinelabel = !1),
                (t.isDataXYZ = !1),
                (t.isMultiLineX = !1),
                (t.isMultipleYAxis = !1),
                (t.maxY = -Number.MAX_VALUE),
                (t.minY = Number.MIN_VALUE),
                (t.minYArr = []),
                (t.maxYArr = []),
                (t.maxX = -Number.MAX_VALUE),
                (t.minX = Number.MAX_VALUE),
                (t.initialMaxX = -Number.MAX_VALUE),
                (t.initialMinX = Number.MAX_VALUE),
                (t.maxDate = 0),
                (t.minDate = Number.MAX_VALUE),
                (t.minZ = Number.MAX_VALUE),
                (t.maxZ = -Number.MAX_VALUE),
                (t.minXDiff = Number.MAX_VALUE),
                (t.yAxisScale = []),
                (t.xAxisScale = null),
                (t.xAxisTicksPositions = []),
                (t.yLabelsCoords = []),
                (t.yTitleCoords = []),
                (t.barPadForNumericAxis = 0),
                (t.padHorizontal = 0),
                (t.xRange = 0),
                (t.yRange = []),
                (t.zRange = 0),
                (t.dataPoints = 0),
                (t.xTickAmount = 0);
            },
          },
          {
            key: 'globalVars',
            value: function (t) {
              return {
                chartID: null,
                cuid: null,
                events: {
                  beforeMount: [],
                  mounted: [],
                  updated: [],
                  clicked: [],
                  selection: [],
                  dataPointSelection: [],
                  zoomed: [],
                  scrolled: [],
                },
                colors: [],
                clientX: null,
                clientY: null,
                fill: { colors: [] },
                stroke: { colors: [] },
                dataLabels: { style: { colors: [] } },
                radarPolygons: { fill: { colors: [] } },
                markers: { colors: [], size: t.markers.size, largestSize: 0 },
                animationEnded: !1,
                isTouchDevice:
                  'ontouchstart' in window || navigator.msMaxTouchPoints,
                isDirty: !1,
                isExecCalled: !1,
                initialConfig: null,
                initialSeries: [],
                lastXAxis: [],
                lastYAxis: [],
                columnSeries: null,
                labels: [],
                timescaleLabels: [],
                noLabelsProvided: !1,
                allSeriesCollapsed: !1,
                collapsedSeries: [],
                collapsedSeriesIndices: [],
                ancillaryCollapsedSeries: [],
                ancillaryCollapsedSeriesIndices: [],
                risingSeries: [],
                dataFormatXNumeric: !1,
                capturedSeriesIndex: -1,
                capturedDataPointIndex: -1,
                selectedDataPoints: [],
                goldenPadding: 35,
                invalidLogScale: !1,
                ignoreYAxisIndexes: [],
                yAxisSameScaleIndices: [],
                maxValsInArrayIndex: 0,
                radialSize: 0,
                selection: void 0,
                zoomEnabled:
                  t.chart.toolbar.autoSelected === 'zoom' &&
                  t.chart.toolbar.tools.zoom &&
                  t.chart.zoom.enabled,
                panEnabled:
                  t.chart.toolbar.autoSelected === 'pan' &&
                  t.chart.toolbar.tools.pan,
                selectionEnabled:
                  t.chart.toolbar.autoSelected === 'selection' &&
                  t.chart.toolbar.tools.selection,
                yaxis: null,
                mousedown: !1,
                lastClientPosition: {},
                visibleXRange: void 0,
                yValueDecimal: 0,
                total: 0,
                SVGNS: 'http://www.w3.org/2000/svg',
                svgWidth: 0,
                svgHeight: 0,
                noData: !1,
                locale: {},
                dom: {},
                memory: { methodsToExec: [] },
                shouldAnimate: !0,
                skipLastTimelinelabel: !1,
                skipFirstTimelinelabel: !1,
                delayedElements: [],
                axisCharts: !0,
                isDataXYZ: !1,
                resized: !1,
                resizeTimer: null,
                comboCharts: !1,
                dataChanged: !1,
                previousPaths: [],
                allSeriesHasEqualX: !0,
                pointsArray: [],
                dataLabelsRects: [],
                lastDrawnDataLabelsIndexes: [],
                hasNullValues: !1,
                easing: null,
                zoomed: !1,
                gridWidth: 0,
                gridHeight: 0,
                rotateXLabels: !1,
                defaultLabels: !1,
                xLabelFormatter: void 0,
                yLabelFormatters: [],
                xaxisTooltipFormatter: void 0,
                ttKeyFormatter: void 0,
                ttVal: void 0,
                ttZFormatter: void 0,
                LINE_HEIGHT_RATIO: 1.618,
                xAxisLabelsHeight: 0,
                xAxisGroupLabelsHeight: 0,
                xAxisLabelsWidth: 0,
                yAxisLabelsWidth: 0,
                scaleX: 1,
                scaleY: 1,
                translateX: 0,
                translateY: 0,
                translateYAxisX: [],
                yAxisWidths: [],
                translateXAxisY: 0,
                translateXAxisX: 0,
                tooltip: null,
              };
            },
          },
          {
            key: 'init',
            value: function (t) {
              var i = this.globalVars(t);
              return (
                this.initGlobalVars(i),
                (i.initialConfig = E.extend({}, t)),
                (i.initialSeries = E.clone(t.series)),
                (i.lastXAxis = E.clone(i.initialConfig.xaxis)),
                (i.lastYAxis = E.clone(i.initialConfig.yaxis)),
                i
              );
            },
          },
        ]),
        j
      );
    })(),
    Re = (function () {
      function j(t) {
        g(this, j), (this.opts = t);
      }
      return (
        k(j, [
          {
            key: 'init',
            value: function () {
              var t = new xe(this.opts).init({ responsiveOverride: !1 });
              return { config: t, globals: new we().init(t) };
            },
          },
        ]),
        j
      );
    })(),
    je = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.opts = null),
          (this.seriesIndex = 0);
      }
      return (
        k(j, [
          {
            key: 'clippedImgArea',
            value: function (t) {
              var i = this.w,
                a = i.config,
                s = parseInt(i.globals.gridWidth, 10),
                o = parseInt(i.globals.gridHeight, 10),
                l = s > o ? s : o,
                d = t.image,
                u = 0,
                p = 0;
              t.width === void 0 && t.height === void 0
                ? a.fill.image.width !== void 0 &&
                  a.fill.image.height !== void 0
                  ? ((u = a.fill.image.width + 1), (p = a.fill.image.height))
                  : ((u = l + 1), (p = l))
                : ((u = t.width), (p = t.height));
              var x = document.createElementNS(i.globals.SVGNS, 'pattern');
              W.setAttrs(x, {
                id: t.patternID,
                patternUnits: t.patternUnits
                  ? t.patternUnits
                  : 'userSpaceOnUse',
                width: u + 'px',
                height: p + 'px',
              });
              var v = document.createElementNS(i.globals.SVGNS, 'image');
              x.appendChild(v),
                v.setAttributeNS(window.SVG.xlink, 'href', d),
                W.setAttrs(v, {
                  x: 0,
                  y: 0,
                  preserveAspectRatio: 'none',
                  width: u + 'px',
                  height: p + 'px',
                }),
                (v.style.opacity = t.opacity),
                i.globals.dom.elDefs.node.appendChild(x);
            },
          },
          {
            key: 'getSeriesIndex',
            value: function (t) {
              var i = this.w,
                a = i.config.chart.type;
              return (
                ((a === 'bar' || a === 'rangeBar') &&
                  i.config.plotOptions.bar.distributed) ||
                a === 'heatmap' ||
                a === 'treemap'
                  ? (this.seriesIndex = t.seriesNumber)
                  : (this.seriesIndex =
                      t.seriesNumber % i.globals.series.length),
                this.seriesIndex
              );
            },
          },
          {
            key: 'fillPath',
            value: function (t) {
              var i = this.w;
              this.opts = t;
              var a,
                s,
                o,
                l = this.w.config;
              this.seriesIndex = this.getSeriesIndex(t);
              var d = this.getFillColors()[this.seriesIndex];
              i.globals.seriesColors[this.seriesIndex] !== void 0 &&
                (d = i.globals.seriesColors[this.seriesIndex]),
                typeof d == 'function' &&
                  (d = d({
                    seriesIndex: this.seriesIndex,
                    dataPointIndex: t.dataPointIndex,
                    value: t.value,
                    w: i,
                  }));
              var u = t.fillType
                  ? t.fillType
                  : this.getFillType(this.seriesIndex),
                p = Array.isArray(l.fill.opacity)
                  ? l.fill.opacity[this.seriesIndex]
                  : l.fill.opacity;
              t.color && (d = t.color);
              var x = d;
              if (
                (d.indexOf('rgb') === -1
                  ? d.length < 9 && (x = E.hexToRgba(d, p))
                  : d.indexOf('rgba') > -1 && (p = E.getOpacityFromRGBA(d)),
                t.opacity && (p = t.opacity),
                u === 'pattern' &&
                  (s = this.handlePatternFill({
                    fillConfig: t.fillConfig,
                    patternFill: s,
                    fillColor: d,
                    fillOpacity: p,
                    defaultColor: x,
                  })),
                u === 'gradient' &&
                  (o = this.handleGradientFill({
                    fillConfig: t.fillConfig,
                    fillColor: d,
                    fillOpacity: p,
                    i: this.seriesIndex,
                  })),
                u === 'image')
              ) {
                var v = l.fill.image.src,
                  b = t.patternID ? t.patternID : '';
                this.clippedImgArea({
                  opacity: p,
                  image: Array.isArray(v)
                    ? t.seriesNumber < v.length
                      ? v[t.seriesNumber]
                      : v[0]
                    : v,
                  width: t.width ? t.width : void 0,
                  height: t.height ? t.height : void 0,
                  patternUnits: t.patternUnits,
                  patternID: 'pattern'
                    .concat(i.globals.cuid)
                    .concat(t.seriesNumber + 1)
                    .concat(b),
                }),
                  (a = 'url(#pattern'
                    .concat(i.globals.cuid)
                    .concat(t.seriesNumber + 1)
                    .concat(b, ')'));
              } else a = u === 'gradient' ? o : u === 'pattern' ? s : x;
              return t.solid && (a = x), a;
            },
          },
          {
            key: 'getFillType',
            value: function (t) {
              var i = this.w;
              return Array.isArray(i.config.fill.type)
                ? i.config.fill.type[t]
                : i.config.fill.type;
            },
          },
          {
            key: 'getFillColors',
            value: function () {
              var t = this.w,
                i = t.config,
                a = this.opts,
                s = [];
              return (
                t.globals.comboCharts
                  ? t.config.series[this.seriesIndex].type === 'line'
                    ? Array.isArray(t.globals.stroke.colors)
                      ? (s = t.globals.stroke.colors)
                      : s.push(t.globals.stroke.colors)
                    : Array.isArray(t.globals.fill.colors)
                    ? (s = t.globals.fill.colors)
                    : s.push(t.globals.fill.colors)
                  : i.chart.type === 'line'
                  ? Array.isArray(t.globals.stroke.colors)
                    ? (s = t.globals.stroke.colors)
                    : s.push(t.globals.stroke.colors)
                  : Array.isArray(t.globals.fill.colors)
                  ? (s = t.globals.fill.colors)
                  : s.push(t.globals.fill.colors),
                a.fillColors !== void 0 &&
                  ((s = []),
                  Array.isArray(a.fillColors)
                    ? (s = a.fillColors.slice())
                    : s.push(a.fillColors)),
                s
              );
            },
          },
          {
            key: 'handlePatternFill',
            value: function (t) {
              var i = t.fillConfig,
                a = t.patternFill,
                s = t.fillColor,
                o = t.fillOpacity,
                l = t.defaultColor,
                d = this.w.config.fill;
              i && (d = i);
              var u = this.opts,
                p = new W(this.ctx),
                x = Array.isArray(d.pattern.strokeWidth)
                  ? d.pattern.strokeWidth[this.seriesIndex]
                  : d.pattern.strokeWidth,
                v = s;
              return (
                Array.isArray(d.pattern.style)
                  ? (a =
                      d.pattern.style[u.seriesNumber] !== void 0
                        ? p.drawPattern(
                            d.pattern.style[u.seriesNumber],
                            d.pattern.width,
                            d.pattern.height,
                            v,
                            x,
                            o
                          )
                        : l)
                  : (a = p.drawPattern(
                      d.pattern.style,
                      d.pattern.width,
                      d.pattern.height,
                      v,
                      x,
                      o
                    )),
                a
              );
            },
          },
          {
            key: 'handleGradientFill',
            value: function (t) {
              var i = t.fillColor,
                a = t.fillOpacity,
                s = t.fillConfig,
                o = t.i,
                l = this.w.config.fill;
              s && (l = c(c({}, l), s));
              var d,
                u = this.opts,
                p = new W(this.ctx),
                x = new E(),
                v = l.gradient.type,
                b = i,
                C =
                  l.gradient.opacityFrom === void 0
                    ? a
                    : Array.isArray(l.gradient.opacityFrom)
                    ? l.gradient.opacityFrom[o]
                    : l.gradient.opacityFrom;
              b.indexOf('rgba') > -1 && (C = E.getOpacityFromRGBA(b));
              var S =
                l.gradient.opacityTo === void 0
                  ? a
                  : Array.isArray(l.gradient.opacityTo)
                  ? l.gradient.opacityTo[o]
                  : l.gradient.opacityTo;
              if (
                l.gradient.gradientToColors === void 0 ||
                l.gradient.gradientToColors.length === 0
              )
                d =
                  l.gradient.shade === 'dark'
                    ? x.shadeColor(
                        -1 * parseFloat(l.gradient.shadeIntensity),
                        i.indexOf('rgb') > -1 ? E.rgb2hex(i) : i
                      )
                    : x.shadeColor(
                        parseFloat(l.gradient.shadeIntensity),
                        i.indexOf('rgb') > -1 ? E.rgb2hex(i) : i
                      );
              else if (l.gradient.gradientToColors[u.seriesNumber]) {
                var L = l.gradient.gradientToColors[u.seriesNumber];
                (d = L),
                  L.indexOf('rgba') > -1 && (S = E.getOpacityFromRGBA(L));
              } else d = i;
              if (
                (l.gradient.gradientFrom && (b = l.gradient.gradientFrom),
                l.gradient.gradientTo && (d = l.gradient.gradientTo),
                l.gradient.inverseColors)
              ) {
                var N = b;
                (b = d), (d = N);
              }
              return (
                b.indexOf('rgb') > -1 && (b = E.rgb2hex(b)),
                d.indexOf('rgb') > -1 && (d = E.rgb2hex(d)),
                p.drawGradient(
                  v,
                  b,
                  d,
                  C,
                  S,
                  u.size,
                  l.gradient.stops,
                  l.gradient.colorStops,
                  o
                )
              );
            },
          },
        ]),
        j
      );
    })(),
    _t = (function () {
      function j(t, i) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'setGlobalMarkerSize',
            value: function () {
              var t = this.w;
              if (
                ((t.globals.markers.size = Array.isArray(t.config.markers.size)
                  ? t.config.markers.size
                  : [t.config.markers.size]),
                t.globals.markers.size.length > 0)
              ) {
                if (t.globals.markers.size.length < t.globals.series.length + 1)
                  for (var i = 0; i <= t.globals.series.length; i++)
                    t.globals.markers.size[i] === void 0 &&
                      t.globals.markers.size.push(t.globals.markers.size[0]);
              } else
                t.globals.markers.size = t.config.series.map(function (a) {
                  return t.config.markers.size;
                });
            },
          },
          {
            key: 'plotChartMarkers',
            value: function (t, i, a, s) {
              var o,
                l =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4],
                d = this.w,
                u = i,
                p = t,
                x = null,
                v = new W(this.ctx),
                b =
                  d.config.markers.discrete && d.config.markers.discrete.length;
              if (
                ((d.globals.markers.size[i] > 0 || l || b) &&
                  (x = v.group({
                    class: l || b ? '' : 'apexcharts-series-markers',
                  })).attr(
                    'clip-path',
                    'url(#gridRectMarkerMask'.concat(d.globals.cuid, ')')
                  ),
                Array.isArray(p.x))
              )
                for (var C = 0; C < p.x.length; C++) {
                  var S = a;
                  a === 1 && C === 0 && (S = 0), a === 1 && C === 1 && (S = 1);
                  var L = 'apexcharts-marker';
                  if (
                    ((d.config.chart.type !== 'line' &&
                      d.config.chart.type !== 'area') ||
                      d.globals.comboCharts ||
                      d.config.tooltip.intersect ||
                      (L += ' no-pointer-events'),
                    (Array.isArray(d.config.markers.size)
                      ? d.globals.markers.size[i] > 0
                      : d.config.markers.size > 0) ||
                      l ||
                      b)
                  ) {
                    E.isNumber(p.y[C])
                      ? (L += ' w'.concat(E.randomId()))
                      : (L = 'apexcharts-nullpoint');
                    var N = this.getMarkerConfig({
                      cssClass: L,
                      seriesIndex: i,
                      dataPointIndex: S,
                    });
                    d.config.series[u].data[S] &&
                      (d.config.series[u].data[S].fillColor &&
                        (N.pointFillColor =
                          d.config.series[u].data[S].fillColor),
                      d.config.series[u].data[S].strokeColor &&
                        (N.pointStrokeColor =
                          d.config.series[u].data[S].strokeColor)),
                      s && (N.pSize = s),
                      (p.x[C] < 0 ||
                        p.x[C] > d.globals.gridWidth ||
                        p.y[C] < 0 ||
                        p.y[C] > d.globals.gridHeight) &&
                        (N.pSize = 0),
                      (o = v.drawMarker(p.x[C], p.y[C], N)).attr('rel', S),
                      o.attr('j', S),
                      o.attr('index', i),
                      o.node.setAttribute('default-marker-size', N.pSize),
                      new Q(this.ctx).setSelectionFilter(o, i, S),
                      this.addEvents(o),
                      x && x.add(o);
                  } else
                    d.globals.pointsArray[i] === void 0 &&
                      (d.globals.pointsArray[i] = []),
                      d.globals.pointsArray[i].push([p.x[C], p.y[C]]);
                }
              return x;
            },
          },
          {
            key: 'getMarkerConfig',
            value: function (t) {
              var i = t.cssClass,
                a = t.seriesIndex,
                s = t.dataPointIndex,
                o = s === void 0 ? null : s,
                l = t.finishRadius,
                d = l === void 0 ? null : l,
                u = this.w,
                p = this.getMarkerStyle(a),
                x = u.globals.markers.size[a],
                v = u.config.markers;
              return (
                o !== null &&
                  v.discrete.length &&
                  v.discrete.map(function (b) {
                    b.seriesIndex === a &&
                      b.dataPointIndex === o &&
                      ((p.pointStrokeColor = b.strokeColor),
                      (p.pointFillColor = b.fillColor),
                      (x = b.size),
                      (p.pointShape = b.shape));
                  }),
                {
                  pSize: d === null ? x : d,
                  pRadius: v.radius,
                  width: Array.isArray(v.width) ? v.width[a] : v.width,
                  height: Array.isArray(v.height) ? v.height[a] : v.height,
                  pointStrokeWidth: Array.isArray(v.strokeWidth)
                    ? v.strokeWidth[a]
                    : v.strokeWidth,
                  pointStrokeColor: p.pointStrokeColor,
                  pointFillColor: p.pointFillColor,
                  shape:
                    p.pointShape ||
                    (Array.isArray(v.shape) ? v.shape[a] : v.shape),
                  class: i,
                  pointStrokeOpacity: Array.isArray(v.strokeOpacity)
                    ? v.strokeOpacity[a]
                    : v.strokeOpacity,
                  pointStrokeDashArray: Array.isArray(v.strokeDashArray)
                    ? v.strokeDashArray[a]
                    : v.strokeDashArray,
                  pointFillOpacity: Array.isArray(v.fillOpacity)
                    ? v.fillOpacity[a]
                    : v.fillOpacity,
                  seriesIndex: a,
                }
              );
            },
          },
          {
            key: 'addEvents',
            value: function (t) {
              var i = this.w,
                a = new W(this.ctx);
              t.node.addEventListener(
                'mouseenter',
                a.pathMouseEnter.bind(this.ctx, t)
              ),
                t.node.addEventListener(
                  'mouseleave',
                  a.pathMouseLeave.bind(this.ctx, t)
                ),
                t.node.addEventListener(
                  'mousedown',
                  a.pathMouseDown.bind(this.ctx, t)
                ),
                t.node.addEventListener('click', i.config.markers.onClick),
                t.node.addEventListener(
                  'dblclick',
                  i.config.markers.onDblClick
                ),
                t.node.addEventListener(
                  'touchstart',
                  a.pathMouseDown.bind(this.ctx, t),
                  { passive: !0 }
                );
            },
          },
          {
            key: 'getMarkerStyle',
            value: function (t) {
              var i = this.w,
                a = i.globals.markers.colors,
                s =
                  i.config.markers.strokeColor || i.config.markers.strokeColors;
              return {
                pointStrokeColor: Array.isArray(s) ? s[t] : s,
                pointFillColor: Array.isArray(a) ? a[t] : a,
              };
            },
          },
        ]),
        j
      );
    })(),
    Vt = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled);
      }
      return (
        k(j, [
          {
            key: 'draw',
            value: function (t, i, a) {
              var s = this.w,
                o = new W(this.ctx),
                l = a.realIndex,
                d = a.pointsPos,
                u = a.zRatio,
                p = a.elParent,
                x = o.group({
                  class: 'apexcharts-series-markers apexcharts-series-'.concat(
                    s.config.chart.type
                  ),
                });
              if (
                (x.attr(
                  'clip-path',
                  'url(#gridRectMarkerMask'.concat(s.globals.cuid, ')')
                ),
                Array.isArray(d.x))
              )
                for (var v = 0; v < d.x.length; v++) {
                  var b = i + 1,
                    C = !0;
                  i === 0 && v === 0 && (b = 0), i === 0 && v === 1 && (b = 1);
                  var S = 0,
                    L = s.globals.markers.size[l];
                  if (u !== 1 / 0) {
                    var N = s.config.plotOptions.bubble;
                    (L = s.globals.seriesZ[l][b]),
                      N.zScaling && (L /= u),
                      N.minBubbleRadius &&
                        L < N.minBubbleRadius &&
                        (L = N.minBubbleRadius),
                      N.maxBubbleRadius &&
                        L > N.maxBubbleRadius &&
                        (L = N.maxBubbleRadius);
                  }
                  s.config.chart.animations.enabled || (S = L);
                  var T = d.x[v],
                    I = d.y[v];
                  if (
                    ((S = S || 0),
                    (I !== null && s.globals.series[l][b] !== void 0) ||
                      (C = !1),
                    C)
                  ) {
                    var h = this.drawPoint(T, I, S, L, l, b, i);
                    x.add(h);
                  }
                  p.add(x);
                }
            },
          },
          {
            key: 'drawPoint',
            value: function (t, i, a, s, o, l, d) {
              var u = this.w,
                p = o,
                x = new _(this.ctx),
                v = new Q(this.ctx),
                b = new je(this.ctx),
                C = new _t(this.ctx),
                S = new W(this.ctx),
                L = C.getMarkerConfig({
                  cssClass: 'apexcharts-marker',
                  seriesIndex: p,
                  dataPointIndex: l,
                  finishRadius:
                    u.config.chart.type === 'bubble' ||
                    (u.globals.comboCharts &&
                      u.config.series[o] &&
                      u.config.series[o].type === 'bubble')
                      ? s
                      : null,
                });
              s = L.pSize;
              var N,
                T = b.fillPath({
                  seriesNumber: o,
                  dataPointIndex: l,
                  color: L.pointFillColor,
                  patternUnits: 'objectBoundingBox',
                  value: u.globals.series[o][d],
                });
              if (
                (L.shape === 'circle'
                  ? (N = S.drawCircle(a))
                  : (L.shape !== 'square' && L.shape !== 'rect') ||
                    (N = S.drawRect(
                      0,
                      0,
                      L.width - L.pointStrokeWidth / 2,
                      L.height - L.pointStrokeWidth / 2,
                      L.pRadius
                    )),
                u.config.series[p].data[l] &&
                  u.config.series[p].data[l].fillColor &&
                  (T = u.config.series[p].data[l].fillColor),
                N.attr({
                  x: t - L.width / 2 - L.pointStrokeWidth / 2,
                  y: i - L.height / 2 - L.pointStrokeWidth / 2,
                  cx: t,
                  cy: i,
                  fill: T,
                  'fill-opacity': L.pointFillOpacity,
                  stroke: L.pointStrokeColor,
                  r: s,
                  'stroke-width': L.pointStrokeWidth,
                  'stroke-dasharray': L.pointStrokeDashArray,
                  'stroke-opacity': L.pointStrokeOpacity,
                }),
                u.config.chart.dropShadow.enabled)
              ) {
                var I = u.config.chart.dropShadow;
                v.dropShadow(N, I, o);
              }
              if (
                !this.initialAnim ||
                u.globals.dataChanged ||
                u.globals.resized
              )
                u.globals.animationEnded = !0;
              else {
                var h = u.config.chart.animations.speed;
                x.animateMarker(
                  N,
                  0,
                  L.shape === 'circle'
                    ? s
                    : { width: L.width, height: L.height },
                  h,
                  u.globals.easing,
                  function () {
                    window.setTimeout(function () {
                      x.animationCompleted(N);
                    }, 100);
                  }
                );
              }
              if (u.globals.dataChanged && L.shape === 'circle')
                if (this.dynamicAnim) {
                  var y,
                    A,
                    P,
                    R,
                    O = u.config.chart.animations.dynamicAnimation.speed;
                  (R =
                    u.globals.previousPaths[o] &&
                    u.globals.previousPaths[o][d]) != null &&
                    ((y = R.x), (A = R.y), (P = R.r !== void 0 ? R.r : s));
                  for (var X = 0; X < u.globals.collapsedSeries.length; X++)
                    u.globals.collapsedSeries[X].index === o &&
                      ((O = 1), (s = 0));
                  t === 0 && i === 0 && (s = 0),
                    x.animateCircle(
                      N,
                      { cx: y, cy: A, r: P },
                      { cx: t, cy: i, r: s },
                      O,
                      u.globals.easing
                    );
                } else N.attr({ r: s });
              return (
                N.attr({ rel: l, j: l, index: o, 'default-marker-size': s }),
                v.setSelectionFilter(N, o, l),
                C.addEvents(N),
                N.node.classList.add('apexcharts-marker'),
                N
              );
            },
          },
          {
            key: 'centerTextInBubble',
            value: function (t) {
              var i = this.w;
              return {
                y: (t += parseInt(i.config.dataLabels.style.fontSize, 10) / 4),
              };
            },
          },
        ]),
        j
      );
    })(),
    dt = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'dataLabelsCorrection',
            value: function (t, i, a, s, o, l, d) {
              var u = this.w,
                p = !1,
                x = new W(this.ctx).getTextRects(a, d),
                v = x.width,
                b = x.height;
              i < 0 && (i = 0),
                i > u.globals.gridHeight + b &&
                  (i = u.globals.gridHeight + b / 2),
                u.globals.dataLabelsRects[s] === void 0 &&
                  (u.globals.dataLabelsRects[s] = []),
                u.globals.dataLabelsRects[s].push({
                  x: t,
                  y: i,
                  width: v,
                  height: b,
                });
              var C = u.globals.dataLabelsRects[s].length - 2,
                S =
                  u.globals.lastDrawnDataLabelsIndexes[s] !== void 0
                    ? u.globals.lastDrawnDataLabelsIndexes[s][
                        u.globals.lastDrawnDataLabelsIndexes[s].length - 1
                      ]
                    : 0;
              if (u.globals.dataLabelsRects[s][C] !== void 0) {
                var L = u.globals.dataLabelsRects[s][S];
                (t > L.x + L.width + 2 ||
                  i > L.y + L.height + 2 ||
                  t + v < L.x) &&
                  (p = !0);
              }
              return (
                (o === 0 || l) && (p = !0),
                { x: t, y: i, textRects: x, drawnextLabel: p }
              );
            },
          },
          {
            key: 'drawDataLabel',
            value: function (t) {
              var i = this,
                a = t.type,
                s = t.pos,
                o = t.i,
                l = t.j,
                d = t.isRangeStart,
                u = t.strokeWidth,
                p = u === void 0 ? 2 : u,
                x = this.w,
                v = new W(this.ctx),
                b = x.config.dataLabels,
                C = 0,
                S = 0,
                L = l,
                N = null;
              if (!b.enabled || !Array.isArray(s.x)) return N;
              N = v.group({ class: 'apexcharts-data-labels' });
              for (var T = 0; T < s.x.length; T++)
                if (
                  ((C = s.x[T] + b.offsetX),
                  (S = s.y[T] + b.offsetY + p),
                  !isNaN(C))
                ) {
                  l === 1 && T === 0 && (L = 0), l === 1 && T === 1 && (L = 1);
                  var I = x.globals.series[o][L];
                  a === 'rangeArea' &&
                    (I = d
                      ? x.globals.seriesRangeStart[o][L]
                      : x.globals.seriesRangeEnd[o][L]);
                  var h = '',
                    y = function (A) {
                      return x.config.dataLabels.formatter(A, {
                        ctx: i.ctx,
                        seriesIndex: o,
                        dataPointIndex: L,
                        w: x,
                      });
                    };
                  x.config.chart.type === 'bubble'
                    ? ((h = y((I = x.globals.seriesZ[o][L]))),
                      (S = s.y[T]),
                      (S = new Vt(this.ctx).centerTextInBubble(S, o, L).y))
                    : I !== void 0 && (h = y(I)),
                    this.plotDataLabelsText({
                      x: C,
                      y: S,
                      text: h,
                      i: o,
                      j: L,
                      parent: N,
                      offsetCorrection: !0,
                      dataLabelsConfig: x.config.dataLabels,
                    });
                }
              return N;
            },
          },
          {
            key: 'plotDataLabelsText',
            value: function (t) {
              var i = this.w,
                a = new W(this.ctx),
                s = t.x,
                o = t.y,
                l = t.i,
                d = t.j,
                u = t.text,
                p = t.textAnchor,
                x = t.fontSize,
                v = t.parent,
                b = t.dataLabelsConfig,
                C = t.color,
                S = t.alwaysDrawDataLabel,
                L = t.offsetCorrection;
              if (
                !(
                  Array.isArray(i.config.dataLabels.enabledOnSeries) &&
                  i.config.dataLabels.enabledOnSeries.indexOf(l) < 0
                )
              ) {
                var N = { x: s, y: o, drawnextLabel: !0, textRects: null };
                L &&
                  (N = this.dataLabelsCorrection(
                    s,
                    o,
                    u,
                    l,
                    d,
                    S,
                    parseInt(b.style.fontSize, 10)
                  )),
                  i.globals.zoomed || ((s = N.x), (o = N.y)),
                  N.textRects &&
                    (s < -10 - N.textRects.width ||
                      s > i.globals.gridWidth + N.textRects.width + 10) &&
                    (u = '');
                var T = i.globals.dataLabels.style.colors[l];
                (((i.config.chart.type === 'bar' ||
                  i.config.chart.type === 'rangeBar') &&
                  i.config.plotOptions.bar.distributed) ||
                  i.config.dataLabels.distributed) &&
                  (T = i.globals.dataLabels.style.colors[d]),
                  typeof T == 'function' &&
                    (T = T({
                      series: i.globals.series,
                      seriesIndex: l,
                      dataPointIndex: d,
                      w: i,
                    })),
                  C && (T = C);
                var I = b.offsetX,
                  h = b.offsetY;
                if (
                  ((i.config.chart.type !== 'bar' &&
                    i.config.chart.type !== 'rangeBar') ||
                    ((I = 0), (h = 0)),
                  N.drawnextLabel)
                ) {
                  var y = a.drawText({
                    width: 100,
                    height: parseInt(b.style.fontSize, 10),
                    x: s + I,
                    y: o + h,
                    foreColor: T,
                    textAnchor: p || b.textAnchor,
                    text: u,
                    fontSize: x || b.style.fontSize,
                    fontFamily: b.style.fontFamily,
                    fontWeight: b.style.fontWeight || 'normal',
                  });
                  if (
                    (y.attr({ class: 'apexcharts-datalabel', cx: s, cy: o }),
                    b.dropShadow.enabled)
                  ) {
                    var A = b.dropShadow;
                    new Q(this.ctx).dropShadow(y, A);
                  }
                  v.add(y),
                    i.globals.lastDrawnDataLabelsIndexes[l] === void 0 &&
                      (i.globals.lastDrawnDataLabelsIndexes[l] = []),
                    i.globals.lastDrawnDataLabelsIndexes[l].push(d);
                }
              }
            },
          },
          {
            key: 'addBackgroundToDataLabel',
            value: function (t, i) {
              var a = this.w,
                s = a.config.dataLabels.background,
                o = s.padding,
                l = s.padding / 2,
                d = i.width,
                u = i.height,
                p = new W(this.ctx).drawRect(
                  i.x - o,
                  i.y - l / 2,
                  d + 2 * o,
                  u + l,
                  s.borderRadius,
                  a.config.chart.background === 'transparent'
                    ? '#fff'
                    : a.config.chart.background,
                  s.opacity,
                  s.borderWidth,
                  s.borderColor
                );
              return (
                s.dropShadow.enabled &&
                  new Q(this.ctx).dropShadow(p, s.dropShadow),
                p
              );
            },
          },
          {
            key: 'dataLabelsBackground',
            value: function () {
              var t = this.w;
              if (t.config.chart.type !== 'bubble')
                for (
                  var i = t.globals.dom.baseEl.querySelectorAll(
                      '.apexcharts-datalabels text'
                    ),
                    a = 0;
                  a < i.length;
                  a++
                ) {
                  var s = i[a],
                    o = s.getBBox(),
                    l = null;
                  if (
                    (o.width &&
                      o.height &&
                      (l = this.addBackgroundToDataLabel(s, o)),
                    l)
                  ) {
                    s.parentNode.insertBefore(l.node, s);
                    var d = s.getAttribute('fill');
                    t.config.chart.animations.enabled &&
                    !t.globals.resized &&
                    !t.globals.dataChanged
                      ? l.animate().attr({ fill: d })
                      : l.attr({ fill: d }),
                      s.setAttribute(
                        'fill',
                        t.config.dataLabels.background.foreColor
                      );
                  }
                }
            },
          },
          {
            key: 'bringForward',
            value: function () {
              for (
                var t = this.w,
                  i = t.globals.dom.baseEl.querySelectorAll(
                    '.apexcharts-datalabels'
                  ),
                  a = t.globals.dom.baseEl.querySelector(
                    '.apexcharts-plot-series:last-child'
                  ),
                  s = 0;
                s < i.length;
                s++
              )
                a && a.insertBefore(i[s], a.nextSibling);
            },
          },
        ]),
        j
      );
    })(),
    Be = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.legendInactiveClass = 'legend-mouseover-inactive');
      }
      return (
        k(j, [
          {
            key: 'getAllSeriesEls',
            value: function () {
              return this.w.globals.dom.baseEl.getElementsByClassName(
                'apexcharts-series'
              );
            },
          },
          {
            key: 'getSeriesByName',
            value: function (t) {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-inner .apexcharts-series[seriesName='".concat(
                  E.escapeString(t),
                  "']"
                )
              );
            },
          },
          {
            key: 'isSeriesHidden',
            value: function (t) {
              var i = this.getSeriesByName(t),
                a = parseInt(i.getAttribute('data:realIndex'), 10);
              return {
                isHidden: i.classList.contains('apexcharts-series-collapsed'),
                realIndex: a,
              };
            },
          },
          {
            key: 'addCollapsedClassToSeries',
            value: function (t, i) {
              var a = this.w;
              function s(o) {
                for (var l = 0; l < o.length; l++)
                  o[l].index === i &&
                    t.node.classList.add('apexcharts-series-collapsed');
              }
              s(a.globals.collapsedSeries),
                s(a.globals.ancillaryCollapsedSeries);
            },
          },
          {
            key: 'toggleSeries',
            value: function (t) {
              var i = this.isSeriesHidden(t);
              return (
                this.ctx.legend.legendHelpers.toggleDataSeries(
                  i.realIndex,
                  i.isHidden
                ),
                i.isHidden
              );
            },
          },
          {
            key: 'showSeries',
            value: function (t) {
              var i = this.isSeriesHidden(t);
              i.isHidden &&
                this.ctx.legend.legendHelpers.toggleDataSeries(i.realIndex, !0);
            },
          },
          {
            key: 'hideSeries',
            value: function (t) {
              var i = this.isSeriesHidden(t);
              i.isHidden ||
                this.ctx.legend.legendHelpers.toggleDataSeries(i.realIndex, !1);
            },
          },
          {
            key: 'resetSeries',
            value: function () {
              var t =
                  !(arguments.length > 0 && arguments[0] !== void 0) ||
                  arguments[0],
                i =
                  !(arguments.length > 1 && arguments[1] !== void 0) ||
                  arguments[1],
                a =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                s = this.w,
                o = E.clone(s.globals.initialSeries);
              (s.globals.previousPaths = []),
                a
                  ? ((s.globals.collapsedSeries = []),
                    (s.globals.ancillaryCollapsedSeries = []),
                    (s.globals.collapsedSeriesIndices = []),
                    (s.globals.ancillaryCollapsedSeriesIndices = []))
                  : (o = this.emptyCollapsedSeries(o)),
                (s.config.series = o),
                t &&
                  (i &&
                    ((s.globals.zoomed = !1),
                    this.ctx.updateHelpers.revertDefaultAxisMinMax()),
                  this.ctx.updateHelpers._updateSeries(
                    o,
                    s.config.chart.animations.dynamicAnimation.enabled
                  ));
            },
          },
          {
            key: 'emptyCollapsedSeries',
            value: function (t) {
              for (var i = this.w, a = 0; a < t.length; a++)
                i.globals.collapsedSeriesIndices.indexOf(a) > -1 &&
                  (t[a].data = []);
              return t;
            },
          },
          {
            key: 'toggleSeriesOnHover',
            value: function (t, i) {
              var a = this.w;
              i || (i = t.target);
              var s = a.globals.dom.baseEl.querySelectorAll(
                '.apexcharts-series, .apexcharts-datalabels'
              );
              if (t.type === 'mousemove') {
                var o = parseInt(i.getAttribute('rel'), 10) - 1,
                  l = null,
                  d = null;
                a.globals.axisCharts || a.config.chart.type === 'radialBar'
                  ? a.globals.axisCharts
                    ? ((l = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(o, "']")
                      )),
                      (d = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-datalabels[data\\:realIndex='".concat(
                          o,
                          "']"
                        )
                      )))
                    : (l = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(o + 1, "']")
                      ))
                  : (l = a.globals.dom.baseEl.querySelector(
                      ".apexcharts-series[rel='".concat(o + 1, "'] path")
                    ));
                for (var u = 0; u < s.length; u++)
                  s[u].classList.add(this.legendInactiveClass);
                l !== null &&
                  (a.globals.axisCharts ||
                    l.parentNode.classList.remove(this.legendInactiveClass),
                  l.classList.remove(this.legendInactiveClass),
                  d !== null && d.classList.remove(this.legendInactiveClass));
              } else if (t.type === 'mouseout')
                for (var p = 0; p < s.length; p++)
                  s[p].classList.remove(this.legendInactiveClass);
            },
          },
          {
            key: 'highlightRangeInSeries',
            value: function (t, i) {
              var a = this,
                s = this.w,
                o = s.globals.dom.baseEl.getElementsByClassName(
                  'apexcharts-heatmap-rect'
                ),
                l = function (u) {
                  for (var p = 0; p < o.length; p++)
                    o[p].classList[u](a.legendInactiveClass);
                };
              if (t.type === 'mousemove') {
                var d = parseInt(i.getAttribute('rel'), 10) - 1;
                l('add'),
                  (function (u) {
                    for (var p = 0; p < o.length; p++) {
                      var x = parseInt(o[p].getAttribute('val'), 10);
                      x >= u.from &&
                        x <= u.to &&
                        o[p].classList.remove(a.legendInactiveClass);
                    }
                  })(s.config.plotOptions.heatmap.colorScale.ranges[d]);
              } else t.type === 'mouseout' && l('remove');
            },
          },
          {
            key: 'getActiveConfigSeriesIndex',
            value: function () {
              var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 'asc',
                i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : [],
                a = this.w,
                s = 0;
              if (a.config.series.length > 1) {
                for (
                  var o = a.config.series.map(function (d, u) {
                      return d.data &&
                        d.data.length > 0 &&
                        a.globals.collapsedSeriesIndices.indexOf(u) === -1 &&
                        (!a.globals.comboCharts ||
                          i.length === 0 ||
                          (i.length && i.indexOf(a.config.series[u].type) > -1))
                        ? u
                        : -1;
                    }),
                    l = t === 'asc' ? 0 : o.length - 1;
                  t === 'asc' ? l < o.length : l >= 0;
                  t === 'asc' ? l++ : l--
                )
                  if (o[l] !== -1) {
                    s = o[l];
                    break;
                  }
              }
              return s;
            },
          },
          {
            key: 'getBarSeriesIndices',
            value: function () {
              return this.w.globals.comboCharts
                ? this.w.config.series
                    .map(function (t, i) {
                      return t.type === 'bar' || t.type === 'column' ? i : -1;
                    })
                    .filter(function (t) {
                      return t !== -1;
                    })
                : this.w.config.series.map(function (t, i) {
                    return i;
                  });
            },
          },
          {
            key: 'getPreviousPaths',
            value: function () {
              var t = this.w;
              function i(l, d, u) {
                for (
                  var p = l[d].childNodes,
                    x = {
                      type: u,
                      paths: [],
                      realIndex: l[d].getAttribute('data:realIndex'),
                    },
                    v = 0;
                  v < p.length;
                  v++
                )
                  if (p[v].hasAttribute('pathTo')) {
                    var b = p[v].getAttribute('pathTo');
                    x.paths.push({ d: b });
                  }
                t.globals.previousPaths.push(x);
              }
              (t.globals.previousPaths = []),
                [
                  'line',
                  'area',
                  'bar',
                  'rangebar',
                  'rangeArea',
                  'candlestick',
                  'radar',
                ].forEach(function (l) {
                  for (
                    var d,
                      u =
                        ((d = l),
                        t.globals.dom.baseEl.querySelectorAll(
                          '.apexcharts-'.concat(d, '-series .apexcharts-series')
                        )),
                      p = 0;
                    p < u.length;
                    p++
                  )
                    i(u, p, l);
                }),
                this.handlePrevBubbleScatterPaths('bubble'),
                this.handlePrevBubbleScatterPaths('scatter');
              var a = t.globals.dom.baseEl.querySelectorAll(
                '.apexcharts-'.concat(
                  t.config.chart.type,
                  ' .apexcharts-series'
                )
              );
              if (a.length > 0)
                for (
                  var s = function (l) {
                      for (
                        var d = t.globals.dom.baseEl.querySelectorAll(
                            '.apexcharts-'
                              .concat(
                                t.config.chart.type,
                                " .apexcharts-series[data\\:realIndex='"
                              )
                              .concat(l, "'] rect")
                          ),
                          u = [],
                          p = function (v) {
                            var b = function (S) {
                                return d[v].getAttribute(S);
                              },
                              C = {
                                x: parseFloat(b('x')),
                                y: parseFloat(b('y')),
                                width: parseFloat(b('width')),
                                height: parseFloat(b('height')),
                              };
                            u.push({
                              rect: C,
                              color: d[v].getAttribute('color'),
                            });
                          },
                          x = 0;
                        x < d.length;
                        x++
                      )
                        p(x);
                      t.globals.previousPaths.push(u);
                    },
                    o = 0;
                  o < a.length;
                  o++
                )
                  s(o);
              t.globals.axisCharts ||
                (t.globals.previousPaths = t.globals.series);
            },
          },
          {
            key: 'handlePrevBubbleScatterPaths',
            value: function (t) {
              var i = this.w,
                a = i.globals.dom.baseEl.querySelectorAll(
                  '.apexcharts-'.concat(t, '-series .apexcharts-series')
                );
              if (a.length > 0)
                for (var s = 0; s < a.length; s++) {
                  for (
                    var o = i.globals.dom.baseEl.querySelectorAll(
                        '.apexcharts-'
                          .concat(
                            t,
                            "-series .apexcharts-series[data\\:realIndex='"
                          )
                          .concat(s, "'] circle")
                      ),
                      l = [],
                      d = 0;
                    d < o.length;
                    d++
                  )
                    l.push({
                      x: o[d].getAttribute('cx'),
                      y: o[d].getAttribute('cy'),
                      r: o[d].getAttribute('r'),
                    });
                  i.globals.previousPaths.push(l);
                }
            },
          },
          {
            key: 'clearPreviousPaths',
            value: function () {
              var t = this.w;
              (t.globals.previousPaths = []),
                (t.globals.allSeriesCollapsed = !1);
            },
          },
          {
            key: 'handleNoData',
            value: function () {
              var t = this.w,
                i = t.config.noData,
                a = new W(this.ctx),
                s = t.globals.svgWidth / 2,
                o = t.globals.svgHeight / 2,
                l = 'middle';
              if (
                ((t.globals.noData = !0),
                (t.globals.animationEnded = !0),
                i.align === 'left'
                  ? ((s = 10), (l = 'start'))
                  : i.align === 'right' &&
                    ((s = t.globals.svgWidth - 10), (l = 'end')),
                i.verticalAlign === 'top'
                  ? (o = 50)
                  : i.verticalAlign === 'bottom' &&
                    (o = t.globals.svgHeight - 50),
                (s += i.offsetX),
                (o = o + parseInt(i.style.fontSize, 10) + 2 + i.offsetY),
                i.text !== void 0 && i.text !== '')
              ) {
                var d = a.drawText({
                  x: s,
                  y: o,
                  text: i.text,
                  textAnchor: l,
                  fontSize: i.style.fontSize,
                  fontFamily: i.style.fontFamily,
                  foreColor: i.style.color,
                  opacity: 1,
                  class: 'apexcharts-text-nodata',
                });
                t.globals.dom.Paper.add(d);
              }
            },
          },
          {
            key: 'setNullSeriesToZeroValues',
            value: function (t) {
              for (var i = this.w, a = 0; a < t.length; a++)
                if (t[a].length === 0)
                  for (
                    var s = 0;
                    s < t[i.globals.maxValsInArrayIndex].length;
                    s++
                  )
                    t[a].push(0);
              return t;
            },
          },
          {
            key: 'hasAllSeriesEqualX',
            value: function () {
              for (
                var t = !0, i = this.w, a = this.filteredSeriesX(), s = 0;
                s < a.length - 1;
                s++
              )
                if (a[s][0] !== a[s + 1][0]) {
                  t = !1;
                  break;
                }
              return (i.globals.allSeriesHasEqualX = t), t;
            },
          },
          {
            key: 'filteredSeriesX',
            value: function () {
              var t = this.w.globals.seriesX.map(function (i) {
                return i.length > 0 ? i : [];
              });
              return t;
            },
          },
        ]),
        j
      );
    })(),
    Wt = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.twoDSeries = []),
          (this.threeDSeries = []),
          (this.twoDSeriesX = []),
          (this.seriesGoals = []),
          (this.coreUtils = new ae(this.ctx));
      }
      return (
        k(j, [
          {
            key: 'isMultiFormat',
            value: function () {
              return this.isFormatXY() || this.isFormat2DArray();
            },
          },
          {
            key: 'isFormatXY',
            value: function () {
              var t = this.w.config.series.slice(),
                i = new Be(this.ctx);
              if (
                ((this.activeSeriesIndex = i.getActiveConfigSeriesIndex()),
                t[this.activeSeriesIndex].data !== void 0 &&
                  t[this.activeSeriesIndex].data.length > 0 &&
                  t[this.activeSeriesIndex].data[0] !== null &&
                  t[this.activeSeriesIndex].data[0].x !== void 0 &&
                  t[this.activeSeriesIndex].data[0] !== null)
              )
                return !0;
            },
          },
          {
            key: 'isFormat2DArray',
            value: function () {
              var t = this.w.config.series.slice(),
                i = new Be(this.ctx);
              if (
                ((this.activeSeriesIndex = i.getActiveConfigSeriesIndex()),
                t[this.activeSeriesIndex].data !== void 0 &&
                  t[this.activeSeriesIndex].data.length > 0 &&
                  t[this.activeSeriesIndex].data[0] !== void 0 &&
                  t[this.activeSeriesIndex].data[0] !== null &&
                  t[this.activeSeriesIndex].data[0].constructor === Array)
              )
                return !0;
            },
          },
          {
            key: 'handleFormat2DArray',
            value: function (t, i) {
              for (
                var a = this.w.config,
                  s = this.w.globals,
                  o =
                    a.chart.type === 'boxPlot' ||
                    a.series[i].type === 'boxPlot',
                  l = 0;
                l < t[i].data.length;
                l++
              )
                if (
                  (t[i].data[l][1] !== void 0 &&
                    (Array.isArray(t[i].data[l][1]) &&
                    t[i].data[l][1].length === 4 &&
                    !o
                      ? this.twoDSeries.push(E.parseNumber(t[i].data[l][1][3]))
                      : t[i].data[l].length >= 5
                      ? this.twoDSeries.push(E.parseNumber(t[i].data[l][4]))
                      : this.twoDSeries.push(E.parseNumber(t[i].data[l][1])),
                    (s.dataFormatXNumeric = !0)),
                  a.xaxis.type === 'datetime')
                ) {
                  var d = new Date(t[i].data[l][0]);
                  (d = new Date(d).getTime()), this.twoDSeriesX.push(d);
                } else this.twoDSeriesX.push(t[i].data[l][0]);
              for (var u = 0; u < t[i].data.length; u++)
                t[i].data[u][2] !== void 0 &&
                  (this.threeDSeries.push(t[i].data[u][2]), (s.isDataXYZ = !0));
            },
          },
          {
            key: 'handleFormatXY',
            value: function (t, i) {
              var a = this.w.config,
                s = this.w.globals,
                o = new Ge(this.ctx),
                l = i;
              s.collapsedSeriesIndices.indexOf(i) > -1 &&
                (l = this.activeSeriesIndex);
              for (var d = 0; d < t[i].data.length; d++)
                t[i].data[d].y !== void 0 &&
                  (Array.isArray(t[i].data[d].y)
                    ? this.twoDSeries.push(
                        E.parseNumber(t[i].data[d].y[t[i].data[d].y.length - 1])
                      )
                    : this.twoDSeries.push(E.parseNumber(t[i].data[d].y))),
                  t[i].data[d].goals !== void 0 &&
                  Array.isArray(t[i].data[d].goals)
                    ? (this.seriesGoals[i] === void 0 &&
                        (this.seriesGoals[i] = []),
                      this.seriesGoals[i].push(t[i].data[d].goals))
                    : (this.seriesGoals[i] === void 0 &&
                        (this.seriesGoals[i] = []),
                      this.seriesGoals[i].push(null));
              for (var u = 0; u < t[l].data.length; u++) {
                var p = typeof t[l].data[u].x == 'string',
                  x = Array.isArray(t[l].data[u].x),
                  v = !x && !!o.isValidDate(t[l].data[u].x.toString());
                if (p || v)
                  if (p || a.xaxis.convertedCatToNumeric) {
                    var b = s.isBarHorizontal && s.isRangeData;
                    a.xaxis.type !== 'datetime' || b
                      ? ((this.fallbackToCategory = !0),
                        this.twoDSeriesX.push(t[l].data[u].x))
                      : this.twoDSeriesX.push(o.parseDate(t[l].data[u].x));
                  } else
                    a.xaxis.type === 'datetime'
                      ? this.twoDSeriesX.push(
                          o.parseDate(t[l].data[u].x.toString())
                        )
                      : ((s.dataFormatXNumeric = !0),
                        (s.isXNumeric = !0),
                        this.twoDSeriesX.push(parseFloat(t[l].data[u].x)));
                else
                  x
                    ? ((this.fallbackToCategory = !0),
                      this.twoDSeriesX.push(t[l].data[u].x))
                    : ((s.isXNumeric = !0),
                      (s.dataFormatXNumeric = !0),
                      this.twoDSeriesX.push(t[l].data[u].x));
              }
              if (t[i].data[0] && t[i].data[0].z !== void 0) {
                for (var C = 0; C < t[i].data.length; C++)
                  this.threeDSeries.push(t[i].data[C].z);
                s.isDataXYZ = !0;
              }
            },
          },
          {
            key: 'handleRangeData',
            value: function (t, i) {
              var a = this.w.globals,
                s = {};
              return (
                this.isFormat2DArray()
                  ? (s = this.handleRangeDataFormat('array', t, i))
                  : this.isFormatXY() &&
                    (s = this.handleRangeDataFormat('xy', t, i)),
                a.seriesRangeStart.push(s.start),
                a.seriesRangeEnd.push(s.end),
                a.seriesRange.push(s.rangeUniques),
                a.seriesRange.forEach(function (o, l) {
                  o &&
                    o.forEach(function (d, u) {
                      d.y.forEach(function (p, x) {
                        for (var v = 0; v < d.y.length; v++)
                          if (x !== v) {
                            var b = p.y1,
                              C = p.y2,
                              S = d.y[v].y1;
                            b <= d.y[v].y2 &&
                              S <= C &&
                              (d.overlaps.indexOf(p.rangeName) < 0 &&
                                d.overlaps.push(p.rangeName),
                              d.overlaps.indexOf(d.y[v].rangeName) < 0 &&
                                d.overlaps.push(d.y[v].rangeName));
                          }
                      });
                    });
                }),
                s
              );
            },
          },
          {
            key: 'handleCandleStickBoxData',
            value: function (t, i) {
              var a = this.w.globals,
                s = {};
              return (
                this.isFormat2DArray()
                  ? (s = this.handleCandleStickBoxDataFormat('array', t, i))
                  : this.isFormatXY() &&
                    (s = this.handleCandleStickBoxDataFormat('xy', t, i)),
                (a.seriesCandleO[i] = s.o),
                (a.seriesCandleH[i] = s.h),
                (a.seriesCandleM[i] = s.m),
                (a.seriesCandleL[i] = s.l),
                (a.seriesCandleC[i] = s.c),
                s
              );
            },
          },
          {
            key: 'handleRangeDataFormat',
            value: function (t, i, a) {
              var s = [],
                o = [],
                l = i[a].data
                  .filter(function (x, v, b) {
                    return (
                      v ===
                      b.findIndex(function (C) {
                        return C.x === x.x;
                      })
                    );
                  })
                  .map(function (x, v) {
                    return { x: x.x, overlaps: [], y: [] };
                  });
              if (t === 'array')
                for (var d = 0; d < i[a].data.length; d++)
                  Array.isArray(i[a].data[d])
                    ? (s.push(i[a].data[d][1][0]), o.push(i[a].data[d][1][1]))
                    : (s.push(i[a].data[d]), o.push(i[a].data[d]));
              else if (t === 'xy')
                for (
                  var u = function (x) {
                      var v = Array.isArray(i[a].data[x].y),
                        b = E.randomId(),
                        C = i[a].data[x].x,
                        S = {
                          y1: v ? i[a].data[x].y[0] : i[a].data[x].y,
                          y2: v ? i[a].data[x].y[1] : i[a].data[x].y,
                          rangeName: b,
                        };
                      i[a].data[x].rangeName = b;
                      var L = l.findIndex(function (N) {
                        return N.x === C;
                      });
                      l[L].y.push(S), s.push(S.y1), o.push(S.y2);
                    },
                    p = 0;
                  p < i[a].data.length;
                  p++
                )
                  u(p);
              return { start: s, end: o, rangeUniques: l };
            },
          },
          {
            key: 'handleCandleStickBoxDataFormat',
            value: function (t, i, a) {
              var s = this.w,
                o =
                  s.config.chart.type === 'boxPlot' ||
                  s.config.series[a].type === 'boxPlot',
                l = [],
                d = [],
                u = [],
                p = [],
                x = [];
              if (t === 'array')
                if (
                  (o && i[a].data[0].length === 6) ||
                  (!o && i[a].data[0].length === 5)
                )
                  for (var v = 0; v < i[a].data.length; v++)
                    l.push(i[a].data[v][1]),
                      d.push(i[a].data[v][2]),
                      o
                        ? (u.push(i[a].data[v][3]),
                          p.push(i[a].data[v][4]),
                          x.push(i[a].data[v][5]))
                        : (p.push(i[a].data[v][3]), x.push(i[a].data[v][4]));
                else
                  for (var b = 0; b < i[a].data.length; b++)
                    Array.isArray(i[a].data[b][1]) &&
                      (l.push(i[a].data[b][1][0]),
                      d.push(i[a].data[b][1][1]),
                      o
                        ? (u.push(i[a].data[b][1][2]),
                          p.push(i[a].data[b][1][3]),
                          x.push(i[a].data[b][1][4]))
                        : (p.push(i[a].data[b][1][2]),
                          x.push(i[a].data[b][1][3])));
              else if (t === 'xy')
                for (var C = 0; C < i[a].data.length; C++)
                  Array.isArray(i[a].data[C].y) &&
                    (l.push(i[a].data[C].y[0]),
                    d.push(i[a].data[C].y[1]),
                    o
                      ? (u.push(i[a].data[C].y[2]),
                        p.push(i[a].data[C].y[3]),
                        x.push(i[a].data[C].y[4]))
                      : (p.push(i[a].data[C].y[2]), x.push(i[a].data[C].y[3])));
              return { o: l, h: d, m: u, l: p, c: x };
            },
          },
          {
            key: 'parseDataAxisCharts',
            value: function (t) {
              var i,
                a = this,
                s =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : this.ctx,
                o = this.w.config,
                l = this.w.globals,
                d = new Ge(s),
                u =
                  o.labels.length > 0
                    ? o.labels.slice()
                    : o.xaxis.categories.slice();
              if (
                ((l.isRangeBar =
                  o.chart.type === 'rangeBar' && l.isBarHorizontal),
                (l.hasXaxisGroups =
                  o.xaxis.type === 'category' &&
                  o.xaxis.group.groups.length > 0),
                l.hasXaxisGroups && (l.groups = o.xaxis.group.groups),
                (l.hasSeriesGroups =
                  (i = t[0]) === null || i === void 0 ? void 0 : i.group),
                l.hasSeriesGroups)
              ) {
                var p = [],
                  x = V(
                    new Set(
                      t.map(function (S) {
                        return S.group;
                      })
                    )
                  );
                t.forEach(function (S, L) {
                  var N = x.indexOf(S.group);
                  p[N] || (p[N] = []), p[N].push(S.name);
                }),
                  (l.seriesGroups = p);
              }
              for (
                var v = function () {
                    for (var S = 0; S < u.length; S++)
                      if (typeof u[S] == 'string') {
                        if (!d.isValidDate(u[S]))
                          throw new Error(
                            'You have provided invalid Date format. Please provide a valid JavaScript Date'
                          );
                        a.twoDSeriesX.push(d.parseDate(u[S]));
                      } else a.twoDSeriesX.push(u[S]);
                  },
                  b = 0;
                b < t.length;
                b++
              ) {
                if (
                  ((this.twoDSeries = []),
                  (this.twoDSeriesX = []),
                  (this.threeDSeries = []),
                  t[b].data === void 0)
                )
                  return void console.error(
                    "It is a possibility that you may have not included 'data' property in series."
                  );
                if (
                  ((o.chart.type !== 'rangeBar' &&
                    o.chart.type !== 'rangeArea' &&
                    t[b].type !== 'rangeBar' &&
                    t[b].type !== 'rangeArea') ||
                    ((l.isRangeData = !0),
                    l.isComboCharts
                      ? (t[b].type !== 'rangeBar' &&
                          t[b].type !== 'rangeArea') ||
                        this.handleRangeData(t, b)
                      : (o.chart.type !== 'rangeBar' &&
                          o.chart.type !== 'rangeArea') ||
                        this.handleRangeData(t, b)),
                  this.isMultiFormat())
                )
                  this.isFormat2DArray()
                    ? this.handleFormat2DArray(t, b)
                    : this.isFormatXY() && this.handleFormatXY(t, b),
                    (o.chart.type !== 'candlestick' &&
                      t[b].type !== 'candlestick' &&
                      o.chart.type !== 'boxPlot' &&
                      t[b].type !== 'boxPlot') ||
                      this.handleCandleStickBoxData(t, b),
                    l.series.push(this.twoDSeries),
                    l.labels.push(this.twoDSeriesX),
                    l.seriesX.push(this.twoDSeriesX),
                    (l.seriesGoals = this.seriesGoals),
                    b !== this.activeSeriesIndex ||
                      this.fallbackToCategory ||
                      (l.isXNumeric = !0);
                else {
                  o.xaxis.type === 'datetime'
                    ? ((l.isXNumeric = !0),
                      v(),
                      l.seriesX.push(this.twoDSeriesX))
                    : o.xaxis.type === 'numeric' &&
                      ((l.isXNumeric = !0),
                      u.length > 0 &&
                        ((this.twoDSeriesX = u),
                        l.seriesX.push(this.twoDSeriesX))),
                    l.labels.push(this.twoDSeriesX);
                  var C = t[b].data.map(function (S) {
                    return E.parseNumber(S);
                  });
                  l.series.push(C);
                }
                l.seriesZ.push(this.threeDSeries),
                  t[b].name !== void 0
                    ? l.seriesNames.push(t[b].name)
                    : l.seriesNames.push('series-' + parseInt(b + 1, 10)),
                  t[b].color !== void 0
                    ? l.seriesColors.push(t[b].color)
                    : l.seriesColors.push(void 0);
              }
              return this.w;
            },
          },
          {
            key: 'parseDataNonAxisCharts',
            value: function (t) {
              var i = this.w.globals,
                a = this.w.config;
              (i.series = t.slice()), (i.seriesNames = a.labels.slice());
              for (var s = 0; s < i.series.length; s++)
                i.seriesNames[s] === void 0 &&
                  i.seriesNames.push('series-' + (s + 1));
              return this.w;
            },
          },
          {
            key: 'handleExternalLabelsData',
            value: function (t) {
              var i = this.w.config,
                a = this.w.globals;
              i.xaxis.categories.length > 0
                ? (a.labels = i.xaxis.categories)
                : i.labels.length > 0
                ? (a.labels = i.labels.slice())
                : this.fallbackToCategory
                ? ((a.labels = a.labels[0]),
                  a.seriesRange.length &&
                    (a.seriesRange.map(function (s) {
                      s.forEach(function (o) {
                        a.labels.indexOf(o.x) < 0 && o.x && a.labels.push(o.x);
                      });
                    }),
                    (a.labels = Array.from(
                      new Set(a.labels.map(JSON.stringify)),
                      JSON.parse
                    ))),
                  i.xaxis.convertedCatToNumeric &&
                    (new de(i).convertCatToNumericXaxis(
                      i,
                      this.ctx,
                      a.seriesX[0]
                    ),
                    this._generateExternalLabels(t)))
                : this._generateExternalLabels(t);
            },
          },
          {
            key: '_generateExternalLabels',
            value: function (t) {
              var i = this.w.globals,
                a = this.w.config,
                s = [];
              if (i.axisCharts) {
                if (i.series.length > 0)
                  if (this.isFormatXY())
                    for (
                      var o = a.series.map(function (v, b) {
                          return v.data.filter(function (C, S, L) {
                            return (
                              L.findIndex(function (N) {
                                return N.x === C.x;
                              }) === S
                            );
                          });
                        }),
                        l = o.reduce(function (v, b, C, S) {
                          return S[v].length > b.length ? v : C;
                        }, 0),
                        d = 0;
                      d < o[l].length;
                      d++
                    )
                      s.push(d + 1);
                  else
                    for (
                      var u = 0;
                      u < i.series[i.maxValsInArrayIndex].length;
                      u++
                    )
                      s.push(u + 1);
                i.seriesX = [];
                for (var p = 0; p < t.length; p++) i.seriesX.push(s);
                i.isXNumeric = !0;
              }
              if (s.length === 0) {
                s = i.axisCharts
                  ? []
                  : i.series.map(function (v, b) {
                      return b + 1;
                    });
                for (var x = 0; x < t.length; x++) i.seriesX.push(s);
              }
              (i.labels = s),
                a.xaxis.convertedCatToNumeric &&
                  (i.categoryLabels = s.map(function (v) {
                    return a.xaxis.labels.formatter(v);
                  })),
                (i.noLabelsProvided = !0);
            },
          },
          {
            key: 'parseData',
            value: function (t) {
              var i = this.w,
                a = i.config,
                s = i.globals;
              if (
                (this.excludeCollapsedSeriesInYAxis(),
                (this.fallbackToCategory = !1),
                this.ctx.core.resetGlobals(),
                this.ctx.core.isMultipleY(),
                s.axisCharts
                  ? (this.parseDataAxisCharts(t),
                    this.coreUtils.getLargestSeries())
                  : this.parseDataNonAxisCharts(t),
                a.chart.stacked)
              ) {
                var o = new Be(this.ctx);
                s.series = o.setNullSeriesToZeroValues(s.series);
              }
              this.coreUtils.getSeriesTotals(),
                s.axisCharts &&
                  (s.stackedSeriesTotals =
                    this.coreUtils.getStackedSeriesTotals()),
                this.coreUtils.getPercentSeries(),
                s.dataFormatXNumeric ||
                  (s.isXNumeric &&
                    (a.xaxis.type !== 'numeric' ||
                      a.labels.length !== 0 ||
                      a.xaxis.categories.length !== 0)) ||
                  this.handleExternalLabelsData(t);
              for (
                var l = this.coreUtils.getCategoryLabels(s.labels), d = 0;
                d < l.length;
                d++
              )
                if (Array.isArray(l[d])) {
                  s.isMultiLineX = !0;
                  break;
                }
            },
          },
          {
            key: 'excludeCollapsedSeriesInYAxis',
            value: function () {
              var t = this,
                i = this.w;
              i.globals.ignoreYAxisIndexes = i.globals.collapsedSeries.map(
                function (a, s) {
                  if (t.w.globals.isMultipleYAxis && !i.config.chart.stacked)
                    return a.index;
                }
              );
            },
          },
        ]),
        j
      );
    })(),
    xt = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'getLabel',
            value: function (t, i, a, s) {
              var o =
                  arguments.length > 4 && arguments[4] !== void 0
                    ? arguments[4]
                    : [],
                l =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : '12px',
                d =
                  !(arguments.length > 6 && arguments[6] !== void 0) ||
                  arguments[6],
                u = this.w,
                p = t[s] === void 0 ? '' : t[s],
                x = p,
                v = u.globals.xLabelFormatter,
                b = u.config.xaxis.labels.formatter,
                C = !1,
                S = new fi(this.ctx),
                L = p;
              d &&
                ((x = S.xLabelFormat(v, p, L, {
                  i: s,
                  dateFormatter: new Ge(this.ctx).formatDate,
                  w: u,
                })),
                b !== void 0 &&
                  (x = b(p, t[s], {
                    i: s,
                    dateFormatter: new Ge(this.ctx).formatDate,
                    w: u,
                  })));
              var N, T;
              i.length > 0
                ? ((N = i[s].unit),
                  (T = null),
                  i.forEach(function (A) {
                    A.unit === 'month'
                      ? (T = 'year')
                      : A.unit === 'day'
                      ? (T = 'month')
                      : A.unit === 'hour'
                      ? (T = 'day')
                      : A.unit === 'minute' && (T = 'hour');
                  }),
                  (C = T === N),
                  (a = i[s].position),
                  (x = i[s].value))
                : u.config.xaxis.type === 'datetime' &&
                  b === void 0 &&
                  (x = ''),
                x === void 0 && (x = ''),
                (x = Array.isArray(x) ? x : x.toString());
              var I = new W(this.ctx),
                h = {};
              h =
                u.globals.rotateXLabels && d
                  ? I.getTextRects(
                      x,
                      parseInt(l, 10),
                      null,
                      'rotate('.concat(u.config.xaxis.labels.rotate, ' 0 0)'),
                      !1
                    )
                  : I.getTextRects(x, parseInt(l, 10));
              var y =
                !u.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
              return (
                !Array.isArray(x) &&
                  (x.indexOf('NaN') === 0 ||
                    x.toLowerCase().indexOf('invalid') === 0 ||
                    x.toLowerCase().indexOf('infinity') >= 0 ||
                    (o.indexOf(x) >= 0 && y)) &&
                  (x = ''),
                { x: a, text: x, textRect: h, isBold: C }
              );
            },
          },
          {
            key: 'checkLabelBasedOnTickamount',
            value: function (t, i, a) {
              var s = this.w,
                o = s.config.xaxis.tickAmount;
              return (
                o === 'dataPoints' &&
                  (o = Math.round(s.globals.gridWidth / 120)),
                o > a || t % Math.round(a / (o + 1)) == 0 || (i.text = ''),
                i
              );
            },
          },
          {
            key: 'checkForOverflowingLabels',
            value: function (t, i, a, s, o) {
              var l = this.w;
              if (
                (t === 0 && l.globals.skipFirstTimelinelabel && (i.text = ''),
                t === a - 1 && l.globals.skipLastTimelinelabel && (i.text = ''),
                l.config.xaxis.labels.hideOverlappingLabels && s.length > 0)
              ) {
                var d = o[o.length - 1];
                i.x <
                  d.textRect.width /
                    (l.globals.rotateXLabels
                      ? Math.abs(l.config.xaxis.labels.rotate) / 12
                      : 1.01) +
                    d.x && (i.text = '');
              }
              return i;
            },
          },
          {
            key: 'checkForReversedLabels',
            value: function (t, i) {
              var a = this.w;
              return (
                a.config.yaxis[t] && a.config.yaxis[t].reversed && i.reverse(),
                i
              );
            },
          },
          {
            key: 'isYAxisHidden',
            value: function (t) {
              var i = this.w,
                a = new ae(this.ctx);
              return (
                !i.config.yaxis[t].show ||
                (!i.config.yaxis[t].showForNullSeries &&
                  a.isSeriesNull(t) &&
                  i.globals.collapsedSeriesIndices.indexOf(t) === -1)
              );
            },
          },
          {
            key: 'getYAxisForeColor',
            value: function (t, i) {
              var a = this.w;
              return (
                Array.isArray(t) &&
                  a.globals.yAxisScale[i] &&
                  this.ctx.theme.pushExtraColors(
                    t,
                    a.globals.yAxisScale[i].result.length,
                    !1
                  ),
                t
              );
            },
          },
          {
            key: 'drawYAxisTicks',
            value: function (t, i, a, s, o, l, d) {
              var u = this.w,
                p = new W(this.ctx),
                x = u.globals.translateY;
              if (s.show && i > 0) {
                u.config.yaxis[o].opposite === !0 && (t += s.width);
                for (var v = i; v >= 0; v--) {
                  var b = x + i / 10 + u.config.yaxis[o].labels.offsetY - 1;
                  u.globals.isBarHorizontal && (b = l * v),
                    u.config.chart.type === 'heatmap' && (b += l / 2);
                  var C = p.drawLine(
                    t + a.offsetX - s.width + s.offsetX,
                    b + s.offsetY,
                    t + a.offsetX + s.offsetX,
                    b + s.offsetY,
                    s.color
                  );
                  d.add(C), (x += l);
                }
              }
            },
          },
        ]),
        j
      );
    })(),
    Ci = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'scaleSvgNode',
            value: function (t, i) {
              var a = parseFloat(t.getAttributeNS(null, 'width')),
                s = parseFloat(t.getAttributeNS(null, 'height'));
              t.setAttributeNS(null, 'width', a * i),
                t.setAttributeNS(null, 'height', s * i),
                t.setAttributeNS(null, 'viewBox', '0 0 ' + a + ' ' + s);
            },
          },
          {
            key: 'fixSvgStringForIe11',
            value: function (t) {
              if (!E.isIE11()) return t.replace(/&nbsp;/g, '&#160;');
              var i = 0,
                a = t.replace(
                  /xmlns="http:\/\/www.w3.org\/2000\/svg"/g,
                  function (s) {
                    return ++i === 2
                      ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"'
                      : s;
                  }
                );
              return (a = (a = a.replace(/xmlns:NS\d+=""/g, '')).replace(
                /NS\d+:(\w+:\w+=")/g,
                '$1'
              ));
            },
          },
          {
            key: 'getSvgString',
            value: function (t) {
              t == null && (t = 1);
              var i = this.w.globals.dom.Paper.svg();
              if (t !== 1) {
                var a = this.w.globals.dom.Paper.node.cloneNode(!0);
                this.scaleSvgNode(a, t),
                  (i = new XMLSerializer().serializeToString(a));
              }
              return this.fixSvgStringForIe11(i);
            },
          },
          {
            key: 'cleanup',
            value: function () {
              var t = this.w,
                i = t.globals.dom.baseEl.getElementsByClassName(
                  'apexcharts-xcrosshairs'
                ),
                a = t.globals.dom.baseEl.getElementsByClassName(
                  'apexcharts-ycrosshairs'
                ),
                s = t.globals.dom.baseEl.querySelectorAll(
                  '.apexcharts-zoom-rect, .apexcharts-selection-rect'
                );
              Array.prototype.forEach.call(s, function (o) {
                o.setAttribute('width', 0);
              }),
                i &&
                  i[0] &&
                  (i[0].setAttribute('x', -500),
                  i[0].setAttribute('x1', -500),
                  i[0].setAttribute('x2', -500)),
                a &&
                  a[0] &&
                  (a[0].setAttribute('y', -100),
                  a[0].setAttribute('y1', -100),
                  a[0].setAttribute('y2', -100));
            },
          },
          {
            key: 'svgUrl',
            value: function () {
              this.cleanup();
              var t = this.getSvgString(),
                i = new Blob([t], { type: 'image/svg+xml;charset=utf-8' });
              return URL.createObjectURL(i);
            },
          },
          {
            key: 'dataURI',
            value: function (t) {
              var i = this;
              return new Promise(function (a) {
                var s = i.w,
                  o = t ? t.scale || t.width / s.globals.svgWidth : 1;
                i.cleanup();
                var l = document.createElement('canvas');
                (l.width = s.globals.svgWidth * o),
                  (l.height =
                    parseInt(s.globals.dom.elWrap.style.height, 10) * o);
                var d =
                    s.config.chart.background === 'transparent'
                      ? '#fff'
                      : s.config.chart.background,
                  u = l.getContext('2d');
                (u.fillStyle = d), u.fillRect(0, 0, l.width * o, l.height * o);
                var p = i.getSvgString(o);
                if (window.canvg && E.isIE11()) {
                  var x = window.canvg.Canvg.fromString(u, p, {
                    ignoreClear: !0,
                    ignoreDimensions: !0,
                  });
                  x.start();
                  var v = l.msToBlob();
                  x.stop(), a({ blob: v });
                } else {
                  var b = 'data:image/svg+xml,' + encodeURIComponent(p),
                    C = new Image();
                  (C.crossOrigin = 'anonymous'),
                    (C.onload = function () {
                      if ((u.drawImage(C, 0, 0), l.msToBlob)) {
                        var S = l.msToBlob();
                        a({ blob: S });
                      } else {
                        var L = l.toDataURL('image/png');
                        a({ imgURI: L });
                      }
                    }),
                    (C.src = b);
                }
              });
            },
          },
          {
            key: 'exportToSVG',
            value: function () {
              this.triggerDownload(
                this.svgUrl(),
                this.w.config.chart.toolbar.export.svg.filename,
                '.svg'
              );
            },
          },
          {
            key: 'exportToPng',
            value: function () {
              var t = this;
              this.dataURI().then(function (i) {
                var a = i.imgURI,
                  s = i.blob;
                s
                  ? navigator.msSaveOrOpenBlob(s, t.w.globals.chartID + '.png')
                  : t.triggerDownload(
                      a,
                      t.w.config.chart.toolbar.export.png.filename,
                      '.png'
                    );
              });
            },
          },
          {
            key: 'exportToCSV',
            value: function (t) {
              var i = this,
                a = t.series,
                s = t.fileName,
                o = t.columnDelimiter,
                l = o === void 0 ? ',' : o,
                d = t.lineDelimiter,
                u =
                  d === void 0
                    ? `
`
                    : d,
                p = this.w;
              a || (a = p.config.series);
              var x = [],
                v = [],
                b = '',
                C = p.globals.series.map(function (h, y) {
                  return p.globals.collapsedSeriesIndices.indexOf(y) === -1
                    ? h
                    : [];
                }),
                S = Math.max.apply(
                  Math,
                  V(
                    a.map(function (h) {
                      return h.data ? h.data.length : 0;
                    })
                  )
                ),
                L = new Wt(this.ctx),
                N = new xt(this.ctx),
                T = function (h) {
                  var y = '';
                  if (p.globals.axisCharts) {
                    if (
                      p.config.xaxis.type === 'category' ||
                      p.config.xaxis.convertedCatToNumeric
                    )
                      if (p.globals.isBarHorizontal) {
                        var A = p.globals.yLabelFormatters[0],
                          P = new Be(i.ctx).getActiveConfigSeriesIndex();
                        y = A(p.globals.labels[h], {
                          seriesIndex: P,
                          dataPointIndex: h,
                          w: p,
                        });
                      } else
                        y = N.getLabel(
                          p.globals.labels,
                          p.globals.timescaleLabels,
                          0,
                          h
                        ).text;
                    p.config.xaxis.type === 'datetime' &&
                      (p.config.xaxis.categories.length
                        ? (y = p.config.xaxis.categories[h])
                        : p.config.labels.length && (y = p.config.labels[h]));
                  } else y = p.config.labels[h];
                  return (
                    Array.isArray(y) && (y = y.join(' ')),
                    E.isNumber(y) ? y : y.split(l).join('')
                  );
                },
                I = function (h, y) {
                  if ((x.length && y === 0 && v.push(x.join(l)), h.data)) {
                    h.data =
                      (h.data.length && h.data) ||
                      V(Array(S)).map(function () {
                        return '';
                      });
                    for (var A = 0; A < h.data.length; A++) {
                      x = [];
                      var P = T(A);
                      if (
                        (P ||
                          (L.isFormatXY()
                            ? (P = a[y].data[A].x)
                            : L.isFormat2DArray() &&
                              (P = a[y].data[A] ? a[y].data[A][0] : '')),
                        y === 0)
                      ) {
                        x.push(
                          ((O = P),
                          p.config.xaxis.type === 'datetime' &&
                          String(O).length >= 10
                            ? p.config.chart.toolbar.export.csv.dateFormatter(P)
                            : E.isNumber(P)
                            ? P
                            : P.split(l).join(''))
                        );
                        for (var R = 0; R < p.globals.series.length; R++)
                          L.isFormatXY()
                            ? x.push(a[R].data[A].y)
                            : x.push(C[R][A]);
                      }
                      (p.config.chart.type === 'candlestick' ||
                        (h.type && h.type === 'candlestick')) &&
                        (x.pop(),
                        x.push(p.globals.seriesCandleO[y][A]),
                        x.push(p.globals.seriesCandleH[y][A]),
                        x.push(p.globals.seriesCandleL[y][A]),
                        x.push(p.globals.seriesCandleC[y][A])),
                        (p.config.chart.type === 'boxPlot' ||
                          (h.type && h.type === 'boxPlot')) &&
                          (x.pop(),
                          x.push(p.globals.seriesCandleO[y][A]),
                          x.push(p.globals.seriesCandleH[y][A]),
                          x.push(p.globals.seriesCandleM[y][A]),
                          x.push(p.globals.seriesCandleL[y][A]),
                          x.push(p.globals.seriesCandleC[y][A])),
                        p.config.chart.type === 'rangeBar' &&
                          (x.pop(),
                          x.push(p.globals.seriesRangeStart[y][A]),
                          x.push(p.globals.seriesRangeEnd[y][A])),
                        x.length && v.push(x.join(l));
                    }
                  }
                  var O;
                };
              x.push(p.config.chart.toolbar.export.csv.headerCategory),
                p.config.chart.type === 'boxPlot'
                  ? (x.push('minimum'),
                    x.push('q1'),
                    x.push('median'),
                    x.push('q3'),
                    x.push('maximum'))
                  : p.config.chart.type === 'candlestick'
                  ? (x.push('open'),
                    x.push('high'),
                    x.push('low'),
                    x.push('close'))
                  : p.config.chart.type === 'rangeBar'
                  ? (x.push('minimum'), x.push('maximum'))
                  : a.map(function (h, y) {
                      var A = h.name ? h.name : 'series-'.concat(y);
                      p.globals.axisCharts &&
                        x.push(
                          A.split(l).join('')
                            ? A.split(l).join('')
                            : 'series-'.concat(y)
                        );
                    }),
                p.globals.axisCharts ||
                  (x.push(p.config.chart.toolbar.export.csv.headerValue),
                  v.push(x.join(l))),
                a.map(function (h, y) {
                  p.globals.axisCharts
                    ? I(h, y)
                    : ((x = []).push(p.globals.labels[y].split(l).join('')),
                      x.push(C[y]),
                      v.push(x.join(l)));
                }),
                (b += v.join(u)),
                this.triggerDownload(
                  'data:text/csv; charset=utf-8,' +
                    encodeURIComponent('\uFEFF' + b),
                  s || p.config.chart.toolbar.export.csv.filename,
                  '.csv'
                );
            },
          },
          {
            key: 'triggerDownload',
            value: function (t, i, a) {
              var s = document.createElement('a');
              (s.href = t),
                (s.download = (i || this.w.globals.chartID) + a),
                document.body.appendChild(s),
                s.click(),
                document.body.removeChild(s);
            },
          },
        ]),
        j
      );
    })(),
    sr = (function () {
      function j(t, i) {
        g(this, j), (this.ctx = t), (this.elgrid = i), (this.w = t.w);
        var a = this.w;
        (this.axesUtils = new xt(t)),
          (this.xaxisLabels = a.globals.labels.slice()),
          a.globals.timescaleLabels.length > 0 &&
            !a.globals.isBarHorizontal &&
            (this.xaxisLabels = a.globals.timescaleLabels.slice()),
          a.config.xaxis.overwriteCategories &&
            (this.xaxisLabels = a.config.xaxis.overwriteCategories),
          (this.drawnLabels = []),
          (this.drawnLabelsRects = []),
          a.config.xaxis.position === 'top'
            ? (this.offY = 0)
            : (this.offY = a.globals.gridHeight + 1),
          (this.offY = this.offY + a.config.xaxis.axisBorder.offsetY),
          (this.isCategoryBarHorizontal =
            a.config.chart.type === 'bar' &&
            a.config.plotOptions.bar.horizontal),
          (this.xaxisFontSize = a.config.xaxis.labels.style.fontSize),
          (this.xaxisFontFamily = a.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = a.config.xaxis.labels.style.colors),
          (this.xaxisBorderWidth = a.config.xaxis.axisBorder.width),
          this.isCategoryBarHorizontal &&
            (this.xaxisBorderWidth =
              a.config.yaxis[0].axisBorder.width.toString()),
          this.xaxisBorderWidth.indexOf('%') > -1
            ? (this.xaxisBorderWidth =
                (a.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10)) /
                100)
            : (this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10)),
          (this.xaxisBorderHeight = a.config.xaxis.axisBorder.height),
          (this.yaxis = a.config.yaxis[0]);
      }
      return (
        k(j, [
          {
            key: 'drawXaxis',
            value: function () {
              var t = this.w,
                i = new W(this.ctx),
                a = i.group({
                  class: 'apexcharts-xaxis',
                  transform: 'translate('
                    .concat(t.config.xaxis.offsetX, ', ')
                    .concat(t.config.xaxis.offsetY, ')'),
                }),
                s = i.group({
                  class: 'apexcharts-xaxis-texts-g',
                  transform: 'translate('
                    .concat(t.globals.translateXAxisX, ', ')
                    .concat(t.globals.translateXAxisY, ')'),
                });
              a.add(s);
              for (var o = [], l = 0; l < this.xaxisLabels.length; l++)
                o.push(this.xaxisLabels[l]);
              if (
                (this.drawXAxisLabelAndGroup(
                  !0,
                  i,
                  s,
                  o,
                  t.globals.isXNumeric,
                  function (S, L) {
                    return L;
                  }
                ),
                t.globals.hasXaxisGroups)
              ) {
                var d = t.globals.groups;
                o = [];
                for (var u = 0; u < d.length; u++) o.push(d[u].title);
                var p = {};
                t.config.xaxis.group.style &&
                  ((p.xaxisFontSize = t.config.xaxis.group.style.fontSize),
                  (p.xaxisFontFamily = t.config.xaxis.group.style.fontFamily),
                  (p.xaxisForeColors = t.config.xaxis.group.style.colors),
                  (p.fontWeight = t.config.xaxis.group.style.fontWeight),
                  (p.cssClass = t.config.xaxis.group.style.cssClass)),
                  this.drawXAxisLabelAndGroup(
                    !1,
                    i,
                    s,
                    o,
                    !1,
                    function (S, L) {
                      return d[S].cols * L;
                    },
                    p
                  );
              }
              if (t.config.xaxis.title.text !== void 0) {
                var x = i.group({ class: 'apexcharts-xaxis-title' }),
                  v = i.drawText({
                    x: t.globals.gridWidth / 2 + t.config.xaxis.title.offsetX,
                    y:
                      this.offY +
                      parseFloat(this.xaxisFontSize) +
                      (t.config.xaxis.position === 'bottom'
                        ? t.globals.xAxisLabelsHeight
                        : -t.globals.xAxisLabelsHeight - 10) +
                      t.config.xaxis.title.offsetY,
                    text: t.config.xaxis.title.text,
                    textAnchor: 'middle',
                    fontSize: t.config.xaxis.title.style.fontSize,
                    fontFamily: t.config.xaxis.title.style.fontFamily,
                    fontWeight: t.config.xaxis.title.style.fontWeight,
                    foreColor: t.config.xaxis.title.style.color,
                    cssClass:
                      'apexcharts-xaxis-title-text ' +
                      t.config.xaxis.title.style.cssClass,
                  });
                x.add(v), a.add(x);
              }
              if (t.config.xaxis.axisBorder.show) {
                var b = t.globals.barPadForNumericAxis,
                  C = i.drawLine(
                    t.globals.padHorizontal +
                      t.config.xaxis.axisBorder.offsetX -
                      b,
                    this.offY,
                    this.xaxisBorderWidth + b,
                    this.offY,
                    t.config.xaxis.axisBorder.color,
                    0,
                    this.xaxisBorderHeight
                  );
                this.elgrid && this.elgrid.elGridBorders && t.config.grid.show
                  ? this.elgrid.elGridBorders.add(C)
                  : a.add(C);
              }
              return a;
            },
          },
          {
            key: 'drawXAxisLabelAndGroup',
            value: function (t, i, a, s, o, l) {
              var d,
                u = this,
                p =
                  arguments.length > 6 && arguments[6] !== void 0
                    ? arguments[6]
                    : {},
                x = [],
                v = [],
                b = this.w,
                C = p.xaxisFontSize || this.xaxisFontSize,
                S = p.xaxisFontFamily || this.xaxisFontFamily,
                L = p.xaxisForeColors || this.xaxisForeColors,
                N = p.fontWeight || b.config.xaxis.labels.style.fontWeight,
                T = p.cssClass || b.config.xaxis.labels.style.cssClass,
                I = b.globals.padHorizontal,
                h = s.length,
                y =
                  b.config.xaxis.type === 'category' ? b.globals.dataPoints : h;
              if ((y === 0 && h > y && (y = h), o)) {
                var A = y > 1 ? y - 1 : y;
                (d = b.globals.gridWidth / A),
                  (I = I + l(0, d) / 2 + b.config.xaxis.labels.offsetX);
              } else
                (d = b.globals.gridWidth / y),
                  (I = I + l(0, d) + b.config.xaxis.labels.offsetX);
              for (
                var P = function (O) {
                    var X = I - l(O, d) / 2 + b.config.xaxis.labels.offsetX;
                    O === 0 &&
                      h === 1 &&
                      d / 2 === I &&
                      y === 1 &&
                      (X = b.globals.gridWidth / 2);
                    var G = u.axesUtils.getLabel(
                        s,
                        b.globals.timescaleLabels,
                        X,
                        O,
                        x,
                        C,
                        t
                      ),
                      q = 28;
                    if (
                      (b.globals.rotateXLabels && t && (q = 22),
                      b.config.xaxis.title.text &&
                        b.config.xaxis.position === 'top' &&
                        (q +=
                          parseFloat(b.config.xaxis.title.style.fontSize) + 2),
                      t ||
                        (q =
                          q +
                          parseFloat(C) +
                          (b.globals.xAxisLabelsHeight -
                            b.globals.xAxisGroupLabelsHeight) +
                          (b.globals.rotateXLabels ? 10 : 0)),
                      (G =
                        b.config.xaxis.tickAmount !== void 0 &&
                        b.config.xaxis.tickAmount !== 'dataPoints' &&
                        b.config.xaxis.type !== 'datetime'
                          ? u.axesUtils.checkLabelBasedOnTickamount(O, G, h)
                          : u.axesUtils.checkForOverflowingLabels(
                              O,
                              G,
                              h,
                              x,
                              v
                            )),
                      b.config.xaxis.labels.show)
                    ) {
                      var ie = i.drawText({
                        x: G.x,
                        y:
                          u.offY +
                          b.config.xaxis.labels.offsetY +
                          q -
                          (b.config.xaxis.position === 'top'
                            ? b.globals.xAxisHeight +
                              b.config.xaxis.axisTicks.height -
                              2
                            : 0),
                        text: G.text,
                        textAnchor: 'middle',
                        fontWeight: G.isBold ? 600 : N,
                        fontSize: C,
                        fontFamily: S,
                        foreColor: Array.isArray(L)
                          ? t && b.config.xaxis.convertedCatToNumeric
                            ? L[b.globals.minX + O - 1]
                            : L[O]
                          : L,
                        isPlainText: !1,
                        cssClass:
                          (t
                            ? 'apexcharts-xaxis-label '
                            : 'apexcharts-xaxis-group-label ') + T,
                      });
                      if (
                        (a.add(ie),
                        ie.on('click', function (se) {
                          if (
                            typeof b.config.chart.events.xAxisLabelClick ==
                            'function'
                          ) {
                            var me = Object.assign({}, b, { labelIndex: O });
                            b.config.chart.events.xAxisLabelClick(
                              se,
                              u.ctx,
                              me
                            );
                          }
                        }),
                        t)
                      ) {
                        var re = document.createElementNS(
                          b.globals.SVGNS,
                          'title'
                        );
                        (re.textContent = Array.isArray(G.text)
                          ? G.text.join(' ')
                          : G.text),
                          ie.node.appendChild(re),
                          G.text !== '' && (x.push(G.text), v.push(G));
                      }
                    }
                    O < h - 1 && (I += l(O + 1, d));
                  },
                  R = 0;
                R <= h - 1;
                R++
              )
                P(R);
            },
          },
          {
            key: 'drawXaxisInversed',
            value: function (t) {
              var i,
                a,
                s = this,
                o = this.w,
                l = new W(this.ctx),
                d = o.config.yaxis[0].opposite
                  ? o.globals.translateYAxisX[t]
                  : 0,
                u = l.group({
                  class: 'apexcharts-yaxis apexcharts-xaxis-inversed',
                  rel: t,
                }),
                p = l.group({
                  class:
                    'apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g',
                  transform: 'translate(' + d + ', 0)',
                });
              u.add(p);
              var x = [];
              if (o.config.yaxis[t].show)
                for (var v = 0; v < this.xaxisLabels.length; v++)
                  x.push(this.xaxisLabels[v]);
              (i = o.globals.gridHeight / x.length), (a = -i / 2.2);
              var b = o.globals.yLabelFormatters[0],
                C = o.config.yaxis[0].labels;
              if (C.show)
                for (
                  var S = function (A) {
                      var P = x[A] === void 0 ? '' : x[A];
                      P = b(P, { seriesIndex: t, dataPointIndex: A, w: o });
                      var R = s.axesUtils.getYAxisForeColor(C.style.colors, t),
                        O = 0;
                      Array.isArray(P) &&
                        (O = (P.length / 2) * parseInt(C.style.fontSize, 10));
                      var X = C.offsetX - 15,
                        G = 'end';
                      s.yaxis.opposite && (G = 'start'),
                        o.config.yaxis[0].labels.align === 'left'
                          ? ((X = C.offsetX), (G = 'start'))
                          : o.config.yaxis[0].labels.align === 'center'
                          ? ((X = C.offsetX), (G = 'middle'))
                          : o.config.yaxis[0].labels.align === 'right' &&
                            (G = 'end');
                      var q = l.drawText({
                        x: X,
                        y: a + i + C.offsetY - O,
                        text: P,
                        textAnchor: G,
                        foreColor: Array.isArray(R) ? R[A] : R,
                        fontSize: C.style.fontSize,
                        fontFamily: C.style.fontFamily,
                        fontWeight: C.style.fontWeight,
                        isPlainText: !1,
                        cssClass: 'apexcharts-yaxis-label ' + C.style.cssClass,
                        maxWidth: C.maxWidth,
                      });
                      p.add(q),
                        q.on('click', function (se) {
                          if (
                            typeof o.config.chart.events.xAxisLabelClick ==
                            'function'
                          ) {
                            var me = Object.assign({}, o, { labelIndex: A });
                            o.config.chart.events.xAxisLabelClick(
                              se,
                              s.ctx,
                              me
                            );
                          }
                        });
                      var ie = document.createElementNS(
                        o.globals.SVGNS,
                        'title'
                      );
                      if (
                        ((ie.textContent = Array.isArray(P) ? P.join(' ') : P),
                        q.node.appendChild(ie),
                        o.config.yaxis[t].labels.rotate !== 0)
                      ) {
                        var re = l.rotateAroundCenter(q.node);
                        q.node.setAttribute(
                          'transform',
                          'rotate('
                            .concat(o.config.yaxis[t].labels.rotate, ' 0 ')
                            .concat(re.y, ')')
                        );
                      }
                      a += i;
                    },
                    L = 0;
                  L <= x.length - 1;
                  L++
                )
                  S(L);
              if (o.config.yaxis[0].title.text !== void 0) {
                var N = l.group({
                    class:
                      'apexcharts-yaxis-title apexcharts-xaxis-title-inversed',
                    transform: 'translate(' + d + ', 0)',
                  }),
                  T = l.drawText({
                    x: o.config.yaxis[0].title.offsetX,
                    y:
                      o.globals.gridHeight / 2 +
                      o.config.yaxis[0].title.offsetY,
                    text: o.config.yaxis[0].title.text,
                    textAnchor: 'middle',
                    foreColor: o.config.yaxis[0].title.style.color,
                    fontSize: o.config.yaxis[0].title.style.fontSize,
                    fontWeight: o.config.yaxis[0].title.style.fontWeight,
                    fontFamily: o.config.yaxis[0].title.style.fontFamily,
                    cssClass:
                      'apexcharts-yaxis-title-text ' +
                      o.config.yaxis[0].title.style.cssClass,
                  });
                N.add(T), u.add(N);
              }
              var I = 0;
              this.isCategoryBarHorizontal &&
                o.config.yaxis[0].opposite &&
                (I = o.globals.gridWidth);
              var h = o.config.xaxis.axisBorder;
              if (h.show) {
                var y = l.drawLine(
                  o.globals.padHorizontal + h.offsetX + I,
                  1 + h.offsetY,
                  o.globals.padHorizontal + h.offsetX + I,
                  o.globals.gridHeight + h.offsetY,
                  h.color,
                  0
                );
                this.elgrid && this.elgrid.elGridBorders && o.config.grid.show
                  ? this.elgrid.elGridBorders.add(y)
                  : u.add(y);
              }
              return (
                o.config.yaxis[0].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    I,
                    x.length,
                    o.config.yaxis[0].axisBorder,
                    o.config.yaxis[0].axisTicks,
                    0,
                    i,
                    u
                  ),
                u
              );
            },
          },
          {
            key: 'drawXaxisTicks',
            value: function (t, i, a) {
              var s = this.w,
                o = t;
              if (!(t < 0 || t - 2 > s.globals.gridWidth)) {
                var l = this.offY + s.config.xaxis.axisTicks.offsetY;
                if (
                  ((i = i + l + s.config.xaxis.axisTicks.height),
                  s.config.xaxis.position === 'top' &&
                    (i = l - s.config.xaxis.axisTicks.height),
                  s.config.xaxis.axisTicks.show)
                ) {
                  var d = new W(this.ctx).drawLine(
                    t + s.config.xaxis.axisTicks.offsetX,
                    l + s.config.xaxis.offsetY,
                    o + s.config.xaxis.axisTicks.offsetX,
                    i + s.config.xaxis.offsetY,
                    s.config.xaxis.axisTicks.color
                  );
                  a.add(d), d.node.classList.add('apexcharts-xaxis-tick');
                }
              }
            },
          },
          {
            key: 'getXAxisTicksPositions',
            value: function () {
              var t = this.w,
                i = [],
                a = this.xaxisLabels.length,
                s = t.globals.padHorizontal;
              if (t.globals.timescaleLabels.length > 0)
                for (var o = 0; o < a; o++)
                  (s = this.xaxisLabels[o].position), i.push(s);
              else
                for (var l = a, d = 0; d < l; d++) {
                  var u = l;
                  t.globals.isXNumeric &&
                    t.config.chart.type !== 'bar' &&
                    (u -= 1),
                    (s += t.globals.gridWidth / u),
                    i.push(s);
                }
              return i;
            },
          },
          {
            key: 'xAxisLabelCorrections',
            value: function () {
              var t = this.w,
                i = new W(this.ctx),
                a = t.globals.dom.baseEl.querySelector(
                  '.apexcharts-xaxis-texts-g'
                ),
                s = t.globals.dom.baseEl.querySelectorAll(
                  '.apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)'
                ),
                o = t.globals.dom.baseEl.querySelectorAll(
                  '.apexcharts-yaxis-inversed text'
                ),
                l = t.globals.dom.baseEl.querySelectorAll(
                  '.apexcharts-xaxis-inversed-texts-g text tspan'
                );
              if (t.globals.rotateXLabels || t.config.xaxis.labels.rotateAlways)
                for (var d = 0; d < s.length; d++) {
                  var u = i.rotateAroundCenter(s[d]);
                  (u.y = u.y - 1),
                    (u.x = u.x + 1),
                    s[d].setAttribute(
                      'transform',
                      'rotate('
                        .concat(t.config.xaxis.labels.rotate, ' ')
                        .concat(u.x, ' ')
                        .concat(u.y, ')')
                    ),
                    s[d].setAttribute('text-anchor', 'end'),
                    a.setAttribute(
                      'transform',
                      'translate(0, '.concat(-10, ')')
                    );
                  var p = s[d].childNodes;
                  t.config.xaxis.labels.trim &&
                    Array.prototype.forEach.call(p, function (C) {
                      i.placeTextWithEllipsis(
                        C,
                        C.textContent,
                        t.globals.xAxisLabelsHeight -
                          (t.config.legend.position === 'bottom' ? 20 : 10)
                      );
                    });
                }
              else
                (function () {
                  for (
                    var C = t.globals.gridWidth / (t.globals.labels.length + 1),
                      S = 0;
                    S < s.length;
                    S++
                  ) {
                    var L = s[S].childNodes;
                    t.config.xaxis.labels.trim &&
                      t.config.xaxis.type !== 'datetime' &&
                      Array.prototype.forEach.call(L, function (N) {
                        i.placeTextWithEllipsis(N, N.textContent, C);
                      });
                  }
                })();
              if (o.length > 0) {
                var x = o[o.length - 1].getBBox(),
                  v = o[0].getBBox();
                x.x < -20 &&
                  o[o.length - 1].parentNode.removeChild(o[o.length - 1]),
                  v.x + v.width > t.globals.gridWidth &&
                    !t.globals.isBarHorizontal &&
                    o[0].parentNode.removeChild(o[0]);
                for (var b = 0; b < l.length; b++)
                  i.placeTextWithEllipsis(
                    l[b],
                    l[b].textContent,
                    t.config.yaxis[0].labels.maxWidth -
                      (t.config.yaxis[0].title.text
                        ? 2 * parseFloat(t.config.yaxis[0].title.style.fontSize)
                        : 0) -
                      15
                  );
              }
            },
          },
        ]),
        j
      );
    })(),
    xn = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
        var i = this.w;
        (this.xaxisLabels = i.globals.labels.slice()),
          (this.axesUtils = new xt(t)),
          (this.isRangeBar = i.globals.seriesRange.length),
          i.globals.timescaleLabels.length > 0 &&
            (this.xaxisLabels = i.globals.timescaleLabels.slice());
      }
      return (
        k(j, [
          {
            key: 'drawGridArea',
            value: function () {
              var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null,
                i = this.w,
                a = new W(this.ctx);
              t === null && (t = a.group({ class: 'apexcharts-grid' }));
              var s = a.drawLine(
                  i.globals.padHorizontal,
                  1,
                  i.globals.padHorizontal,
                  i.globals.gridHeight,
                  'transparent'
                ),
                o = a.drawLine(
                  i.globals.padHorizontal,
                  i.globals.gridHeight,
                  i.globals.gridWidth,
                  i.globals.gridHeight,
                  'transparent'
                );
              return t.add(o), t.add(s), t;
            },
          },
          {
            key: 'drawGrid',
            value: function () {
              var t = null;
              return (
                this.w.globals.axisCharts &&
                  ((t = this.renderGrid()), this.drawGridArea(t.el)),
                t
              );
            },
          },
          {
            key: 'createGridMask',
            value: function () {
              var t = this.w,
                i = t.globals,
                a = new W(this.ctx),
                s = Array.isArray(t.config.stroke.width)
                  ? 0
                  : t.config.stroke.width;
              if (Array.isArray(t.config.stroke.width)) {
                var o = 0;
                t.config.stroke.width.forEach(function (v) {
                  o = Math.max(o, v);
                }),
                  (s = o);
              }
              (i.dom.elGridRectMask = document.createElementNS(
                i.SVGNS,
                'clipPath'
              )),
                i.dom.elGridRectMask.setAttribute(
                  'id',
                  'gridRectMask'.concat(i.cuid)
                ),
                (i.dom.elGridRectMarkerMask = document.createElementNS(
                  i.SVGNS,
                  'clipPath'
                )),
                i.dom.elGridRectMarkerMask.setAttribute(
                  'id',
                  'gridRectMarkerMask'.concat(i.cuid)
                ),
                (i.dom.elForecastMask = document.createElementNS(
                  i.SVGNS,
                  'clipPath'
                )),
                i.dom.elForecastMask.setAttribute(
                  'id',
                  'forecastMask'.concat(i.cuid)
                ),
                (i.dom.elNonForecastMask = document.createElementNS(
                  i.SVGNS,
                  'clipPath'
                )),
                i.dom.elNonForecastMask.setAttribute(
                  'id',
                  'nonForecastMask'.concat(i.cuid)
                );
              var l = t.config.chart.type,
                d = 0,
                u = 0;
              (l === 'bar' ||
                l === 'rangeBar' ||
                l === 'candlestick' ||
                l === 'boxPlot' ||
                t.globals.comboBarCount > 0) &&
                t.globals.isXNumeric &&
                !t.globals.isBarHorizontal &&
                ((d = t.config.grid.padding.left),
                (u = t.config.grid.padding.right),
                i.barPadForNumericAxis > d &&
                  ((d = i.barPadForNumericAxis), (u = i.barPadForNumericAxis))),
                (i.dom.elGridRect = a.drawRect(
                  -s / 2 - d - 2,
                  -s / 2,
                  i.gridWidth + s + u + d + 4,
                  i.gridHeight + s,
                  0,
                  '#fff'
                ));
              var p = t.globals.markers.largestSize + 1;
              (i.dom.elGridRectMarker = a.drawRect(
                2 * -p,
                2 * -p,
                i.gridWidth + 4 * p,
                i.gridHeight + 4 * p,
                0,
                '#fff'
              )),
                i.dom.elGridRectMask.appendChild(i.dom.elGridRect.node),
                i.dom.elGridRectMarkerMask.appendChild(
                  i.dom.elGridRectMarker.node
                );
              var x = i.dom.baseEl.querySelector('defs');
              x.appendChild(i.dom.elGridRectMask),
                x.appendChild(i.dom.elForecastMask),
                x.appendChild(i.dom.elNonForecastMask),
                x.appendChild(i.dom.elGridRectMarkerMask);
            },
          },
          {
            key: '_drawGridLines',
            value: function (t) {
              var i = t.i,
                a = t.x1,
                s = t.y1,
                o = t.x2,
                l = t.y2,
                d = t.xCount,
                u = t.parent,
                p = this.w;
              if (
                !(
                  (i === 0 && p.globals.skipFirstTimelinelabel) ||
                  (i === d - 1 &&
                    p.globals.skipLastTimelinelabel &&
                    !p.config.xaxis.labels.formatter) ||
                  p.config.chart.type === 'radar'
                )
              ) {
                p.config.grid.xaxis.lines.show &&
                  this._drawGridLine({
                    i,
                    x1: a,
                    y1: s,
                    x2: o,
                    y2: l,
                    xCount: d,
                    parent: u,
                  });
                var x = 0;
                if (
                  p.globals.hasXaxisGroups &&
                  p.config.xaxis.tickPlacement === 'between'
                ) {
                  var v = p.globals.groups;
                  if (v) {
                    for (var b = 0, C = 0; b < i && C < v.length; C++)
                      b += v[C].cols;
                    b === i && (x = 0.6 * p.globals.xAxisLabelsHeight);
                  }
                }
                new sr(this.ctx).drawXaxisTicks(
                  a,
                  x,
                  p.globals.dom.elGraphical
                );
              }
            },
          },
          {
            key: '_drawGridLine',
            value: function (t) {
              var i = t.i,
                a = t.x1,
                s = t.y1,
                o = t.x2,
                l = t.y2,
                d = t.xCount,
                u = t.parent,
                p = this.w,
                x = !1,
                v = u.node.classList.contains(
                  'apexcharts-gridlines-horizontal'
                ),
                b = p.config.grid.strokeDashArray,
                C = p.globals.barPadForNumericAxis;
              ((s === 0 && l === 0) || (a === 0 && o === 0)) && (x = !0),
                s === p.globals.gridHeight &&
                  l === p.globals.gridHeight &&
                  (x = !0),
                !p.globals.isBarHorizontal ||
                  (i !== 0 && i !== d - 1) ||
                  (x = !0);
              var S = new W(this).drawLine(
                a - (v ? C : 0),
                s,
                o + (v ? C : 0),
                l,
                p.config.grid.borderColor,
                b
              );
              S.node.classList.add('apexcharts-gridline'),
                x && p.config.grid.show ? this.elGridBorders.add(S) : u.add(S);
            },
          },
          {
            key: '_drawGridBandRect',
            value: function (t) {
              var i = t.c,
                a = t.x1,
                s = t.y1,
                o = t.x2,
                l = t.y2,
                d = t.type,
                u = this.w,
                p = new W(this.ctx),
                x = u.globals.barPadForNumericAxis;
              if (d !== 'column' || u.config.xaxis.type !== 'datetime') {
                var v = u.config.grid[d].colors[i],
                  b = p.drawRect(
                    a - (d === 'row' ? x : 0),
                    s,
                    o + (d === 'row' ? 2 * x : 0),
                    l,
                    0,
                    v,
                    u.config.grid[d].opacity
                  );
                this.elg.add(b),
                  b.attr(
                    'clip-path',
                    'url(#gridRectMask'.concat(u.globals.cuid, ')')
                  ),
                  b.node.classList.add('apexcharts-grid-'.concat(d));
              }
            },
          },
          {
            key: '_drawXYLines',
            value: function (t) {
              var i = this,
                a = t.xCount,
                s = t.tickAmount,
                o = this.w;
              if (
                o.config.grid.xaxis.lines.show ||
                o.config.xaxis.axisTicks.show
              ) {
                var l,
                  d = o.globals.padHorizontal,
                  u = o.globals.gridHeight;
                o.globals.timescaleLabels.length
                  ? (function (S) {
                      for (
                        var L = S.xC,
                          N = S.x1,
                          T = S.y1,
                          I = S.x2,
                          h = S.y2,
                          y = 0;
                        y < L;
                        y++
                      )
                        (N = i.xaxisLabels[y].position),
                          (I = i.xaxisLabels[y].position),
                          i._drawGridLines({
                            i: y,
                            x1: N,
                            y1: T,
                            x2: I,
                            y2: h,
                            xCount: a,
                            parent: i.elgridLinesV,
                          });
                    })({ xC: a, x1: d, y1: 0, x2: l, y2: u })
                  : (o.globals.isXNumeric &&
                      (a = o.globals.xAxisScale.result.length),
                    (function (S) {
                      for (
                        var L = S.xC,
                          N = S.x1,
                          T = S.y1,
                          I = S.x2,
                          h = S.y2,
                          y = 0;
                        y < L + (o.globals.isXNumeric ? 0 : 1);
                        y++
                      )
                        y === 0 &&
                          L === 1 &&
                          o.globals.dataPoints === 1 &&
                          (I = N = o.globals.gridWidth / 2),
                          i._drawGridLines({
                            i: y,
                            x1: N,
                            y1: T,
                            x2: I,
                            y2: h,
                            xCount: a,
                            parent: i.elgridLinesV,
                          }),
                          (I = N +=
                            o.globals.gridWidth /
                            (o.globals.isXNumeric ? L - 1 : L));
                    })({ xC: a, x1: d, y1: 0, x2: l, y2: u }));
              }
              if (o.config.grid.yaxis.lines.show) {
                var p = 0,
                  x = 0,
                  v = o.globals.gridWidth,
                  b = s + 1;
                this.isRangeBar && (b = o.globals.labels.length);
                for (var C = 0; C < b + (this.isRangeBar ? 1 : 0); C++)
                  this._drawGridLine({
                    i: C,
                    xCount: b + (this.isRangeBar ? 1 : 0),
                    x1: 0,
                    y1: p,
                    x2: v,
                    y2: x,
                    parent: this.elgridLinesH,
                  }),
                    (x = p += o.globals.gridHeight / (this.isRangeBar ? b : s));
              }
            },
          },
          {
            key: '_drawInvertedXYLines',
            value: function (t) {
              var i = t.xCount,
                a = this.w;
              if (
                a.config.grid.xaxis.lines.show ||
                a.config.xaxis.axisTicks.show
              )
                for (
                  var s,
                    o = a.globals.padHorizontal,
                    l = a.globals.gridHeight,
                    d = 0;
                  d < i + 1;
                  d++
                )
                  a.config.grid.xaxis.lines.show &&
                    this._drawGridLine({
                      i: d,
                      xCount: i + 1,
                      x1: o,
                      y1: 0,
                      x2: s,
                      y2: l,
                      parent: this.elgridLinesV,
                    }),
                    new sr(this.ctx).drawXaxisTicks(
                      o,
                      0,
                      a.globals.dom.elGraphical
                    ),
                    (s = o = o + a.globals.gridWidth / i + 0.3);
              if (a.config.grid.yaxis.lines.show)
                for (
                  var u = 0, p = 0, x = a.globals.gridWidth, v = 0;
                  v < a.globals.dataPoints + 1;
                  v++
                )
                  this._drawGridLine({
                    i: v,
                    xCount: a.globals.dataPoints + 1,
                    x1: 0,
                    y1: u,
                    x2: x,
                    y2: p,
                    parent: this.elgridLinesH,
                  }),
                    (p = u += a.globals.gridHeight / a.globals.dataPoints);
            },
          },
          {
            key: 'renderGrid',
            value: function () {
              var t = this.w,
                i = new W(this.ctx);
              (this.elg = i.group({ class: 'apexcharts-grid' })),
                (this.elgridLinesH = i.group({
                  class: 'apexcharts-gridlines-horizontal',
                })),
                (this.elgridLinesV = i.group({
                  class: 'apexcharts-gridlines-vertical',
                })),
                (this.elGridBorders = i.group({
                  class: 'apexcharts-grid-borders',
                })),
                this.elg.add(this.elgridLinesH),
                this.elg.add(this.elgridLinesV),
                t.config.grid.show ||
                  (this.elgridLinesV.hide(),
                  this.elgridLinesH.hide(),
                  this.elGridBorders.hide());
              for (
                var a,
                  s = t.globals.yAxisScale.length
                    ? t.globals.yAxisScale[0].result.length - 1
                    : 5,
                  o = 0;
                o < t.globals.series.length &&
                (t.globals.yAxisScale[o] !== void 0 &&
                  (s = t.globals.yAxisScale[o].result.length - 1),
                !(s > 2));
                o++
              );
              return (
                !t.globals.isBarHorizontal || this.isRangeBar
                  ? ((a = this.xaxisLabels.length),
                    this.isRangeBar &&
                      t.globals.isBarHorizontal &&
                      (a--,
                      (s = t.globals.labels.length),
                      t.config.xaxis.tickAmount &&
                        t.config.xaxis.labels.formatter &&
                        (a = t.config.xaxis.tickAmount)),
                    this._drawXYLines({ xCount: a, tickAmount: s }))
                  : ((a = s),
                    (s = t.globals.xTickAmount),
                    this._drawInvertedXYLines({ xCount: a, tickAmount: s })),
                this.drawGridBands(a, s),
                {
                  el: this.elg,
                  elGridBorders: this.elGridBorders,
                  xAxisTickWidth: t.globals.gridWidth / a,
                }
              );
            },
          },
          {
            key: 'drawGridBands',
            value: function (t, i) {
              var a = this.w;
              if (
                a.config.grid.row.colors !== void 0 &&
                a.config.grid.row.colors.length > 0
              )
                for (
                  var s = 0,
                    o = a.globals.gridHeight / i,
                    l = a.globals.gridWidth,
                    d = 0,
                    u = 0;
                  d < i;
                  d++, u++
                )
                  u >= a.config.grid.row.colors.length && (u = 0),
                    this._drawGridBandRect({
                      c: u,
                      x1: 0,
                      y1: s,
                      x2: l,
                      y2: o,
                      type: 'row',
                    }),
                    (s += a.globals.gridHeight / i);
              if (
                a.config.grid.column.colors !== void 0 &&
                a.config.grid.column.colors.length > 0
              )
                for (
                  var p =
                      a.globals.isBarHorizontal ||
                      (a.config.xaxis.type !== 'category' &&
                        !a.config.xaxis.convertedCatToNumeric)
                        ? t
                        : t - 1,
                    x = a.globals.padHorizontal,
                    v = a.globals.padHorizontal + a.globals.gridWidth / p,
                    b = a.globals.gridHeight,
                    C = 0,
                    S = 0;
                  C < t;
                  C++, S++
                )
                  S >= a.config.grid.column.colors.length && (S = 0),
                    this._drawGridBandRect({
                      c: S,
                      x1: x,
                      y1: 0,
                      x2: v,
                      y2: b,
                      type: 'column',
                    }),
                    (x += a.globals.gridWidth / p);
            },
          },
        ]),
        j
      );
    })(),
    ii = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'niceScale',
            value: function (t, i) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                s =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : 0,
                o = arguments.length > 4 ? arguments[4] : void 0,
                l = this.w,
                d = Math.abs(i - t);
              if (
                ((a = this._adjustTicksForSmallRange(a, s, d)) ===
                  'dataPoints' && (a = l.globals.dataPoints - 1),
                (t === Number.MIN_VALUE && i === 0) ||
                  (!E.isNumber(t) && !E.isNumber(i)) ||
                  (t === Number.MIN_VALUE && i === -Number.MAX_VALUE))
              )
                return (t = 0), (i = a), this.linearScale(t, i, a);
              t > i
                ? (console.warn('axis.min cannot be greater than axis.max'),
                  (i = t + 0.1))
                : t === i &&
                  ((t = t === 0 ? 0 : t - 0.5), (i = i === 0 ? 2 : i + 0.5));
              var u = [];
              d < 1 &&
                o &&
                (l.config.chart.type === 'candlestick' ||
                  l.config.series[s].type === 'candlestick' ||
                  l.config.chart.type === 'boxPlot' ||
                  l.config.series[s].type === 'boxPlot' ||
                  l.globals.isRangeData) &&
                (i *= 1.01);
              var p = a + 1;
              p < 2 ? (p = 2) : p > 2 && (p -= 2);
              var x = d / p,
                v = Math.floor(E.log10(x)),
                b = Math.pow(10, v),
                C = Math.round(x / b);
              C < 1 && (C = 1);
              var S = C * b,
                L = S * Math.floor(t / S),
                N = S * Math.ceil(i / S),
                T = L;
              if (o && d > 2) {
                for (; u.push(T), !((T += S) > N); );
                return { result: u, niceMin: u[0], niceMax: u[u.length - 1] };
              }
              var I = t;
              (u = []).push(I);
              for (var h = Math.abs(i - t) / a, y = 0; y <= a; y++)
                (I += h), u.push(I);
              return (
                u[u.length - 2] >= i && u.pop(),
                { result: u, niceMin: u[0], niceMax: u[u.length - 1] }
              );
            },
          },
          {
            key: 'linearScale',
            value: function (t, i) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                s = arguments.length > 3 ? arguments[3] : void 0,
                o = Math.abs(i - t);
              (a = this._adjustTicksForSmallRange(a, s, o)) === 'dataPoints' &&
                (a = this.w.globals.dataPoints - 1);
              var l = o / a;
              a === Number.MAX_VALUE && ((a = 10), (l = 1));
              for (var d = [], u = t; a >= 0; ) d.push(u), (u += l), (a -= 1);
              return { result: d, niceMin: d[0], niceMax: d[d.length - 1] };
            },
          },
          {
            key: 'logarithmicScaleNice',
            value: function (t, i, a) {
              i <= 0 && (i = Math.max(t, a)), t <= 0 && (t = Math.min(i, a));
              for (
                var s = [],
                  o = Math.ceil(Math.log(i) / Math.log(a) + 1),
                  l = Math.floor(Math.log(t) / Math.log(a));
                l < o;
                l++
              )
                s.push(Math.pow(a, l));
              return { result: s, niceMin: s[0], niceMax: s[s.length - 1] };
            },
          },
          {
            key: 'logarithmicScale',
            value: function (t, i, a) {
              i <= 0 && (i = Math.max(t, a)), t <= 0 && (t = Math.min(i, a));
              for (
                var s = [],
                  o = Math.log(i) / Math.log(a),
                  l = Math.log(t) / Math.log(a),
                  d = o - l,
                  u = Math.round(d),
                  p = d / u,
                  x = 0,
                  v = l;
                x < u;
                x++, v += p
              )
                s.push(Math.pow(a, v));
              return (
                s.push(Math.pow(a, o)), { result: s, niceMin: t, niceMax: i }
              );
            },
          },
          {
            key: '_adjustTicksForSmallRange',
            value: function (t, i, a) {
              var s = t;
              if (
                i !== void 0 &&
                this.w.config.yaxis[i].labels.formatter &&
                this.w.config.yaxis[i].tickAmount === void 0
              ) {
                var o = Number(this.w.config.yaxis[i].labels.formatter(1));
                E.isNumber(o) &&
                  this.w.globals.yValueDecimal === 0 &&
                  (s = Math.ceil(a));
              }
              return s < t ? s : t;
            },
          },
          {
            key: 'setYScaleForIndex',
            value: function (t, i, a) {
              var s = this.w.globals,
                o = this.w.config,
                l = s.isBarHorizontal ? o.xaxis : o.yaxis[t];
              s.yAxisScale[t] === void 0 && (s.yAxisScale[t] = []);
              var d = Math.abs(a - i);
              if (
                (l.logarithmic && d <= 5 && (s.invalidLogScale = !0),
                l.logarithmic && d > 5)
              )
                (s.allSeriesCollapsed = !1),
                  (s.yAxisScale[t] = this.logarithmicScale(i, a, l.logBase)),
                  (s.yAxisScale[t] = l.forceNiceScale
                    ? this.logarithmicScaleNice(i, a, l.logBase)
                    : this.logarithmicScale(i, a, l.logBase));
              else if (a !== -Number.MAX_VALUE && E.isNumber(a))
                if (
                  ((s.allSeriesCollapsed = !1),
                  (l.min === void 0 && l.max === void 0) || l.forceNiceScale)
                ) {
                  var u =
                    (o.yaxis[t].max === void 0 && o.yaxis[t].min === void 0) ||
                    o.yaxis[t].forceNiceScale;
                  s.yAxisScale[t] = this.niceScale(
                    i,
                    a,
                    l.tickAmount ? l.tickAmount : d < 5 && d > 1 ? d + 1 : 5,
                    t,
                    u
                  );
                } else
                  s.yAxisScale[t] = this.linearScale(i, a, l.tickAmount, t);
              else s.yAxisScale[t] = this.linearScale(0, 5, 5);
            },
          },
          {
            key: 'setXScale',
            value: function (t, i) {
              var a = this.w,
                s = a.globals,
                o = a.config.xaxis,
                l = Math.abs(i - t);
              return (
                i !== -Number.MAX_VALUE && E.isNumber(i)
                  ? (s.xAxisScale = this.linearScale(
                      t,
                      i,
                      o.tickAmount ? o.tickAmount : l < 5 && l > 1 ? l + 1 : 5,
                      0
                    ))
                  : (s.xAxisScale = this.linearScale(0, 5, 5)),
                s.xAxisScale
              );
            },
          },
          {
            key: 'setMultipleYScales',
            value: function () {
              var t = this,
                i = this.w.globals,
                a = this.w.config,
                s = i.minYArr.concat([]),
                o = i.maxYArr.concat([]),
                l = [];
              a.yaxis.forEach(function (d, u) {
                var p = u;
                a.series.forEach(function (b, C) {
                  b.name === d.seriesName &&
                    ((p = C),
                    u !== C
                      ? l.push({ index: C, similarIndex: u, alreadyExists: !0 })
                      : l.push({ index: C }));
                });
                var x = s[p],
                  v = o[p];
                t.setYScaleForIndex(u, x, v);
              }),
                this.sameScaleInMultipleAxes(s, o, l);
            },
          },
          {
            key: 'sameScaleInMultipleAxes',
            value: function (t, i, a) {
              var s = this,
                o = this.w.config,
                l = this.w.globals,
                d = [];
              a.forEach(function (L) {
                L.alreadyExists &&
                  (d[L.index] === void 0 && (d[L.index] = []),
                  d[L.index].push(L.index),
                  d[L.index].push(L.similarIndex));
              }),
                (l.yAxisSameScaleIndices = d),
                d.forEach(function (L, N) {
                  d.forEach(function (T, I) {
                    var h, y;
                    N !== I &&
                      ((h = L),
                      (y = T),
                      h.filter(function (A) {
                        return y.indexOf(A) !== -1;
                      })).length > 0 &&
                      (d[N] = d[N].concat(d[I]));
                  });
                });
              var u = d
                .map(function (L) {
                  return L.filter(function (N, T) {
                    return L.indexOf(N) === T;
                  });
                })
                .map(function (L) {
                  return L.sort();
                });
              d = d.filter(function (L) {
                return !!L;
              });
              var p = u.slice(),
                x = p.map(function (L) {
                  return JSON.stringify(L);
                });
              p = p.filter(function (L, N) {
                return x.indexOf(JSON.stringify(L)) === N;
              });
              var v = [],
                b = [];
              t.forEach(function (L, N) {
                p.forEach(function (T, I) {
                  T.indexOf(N) > -1 &&
                    (v[I] === void 0 && ((v[I] = []), (b[I] = [])),
                    v[I].push({ key: N, value: L }),
                    b[I].push({ key: N, value: i[N] }));
                });
              });
              var C = Array.apply(null, Array(p.length)).map(
                  Number.prototype.valueOf,
                  Number.MIN_VALUE
                ),
                S = Array.apply(null, Array(p.length)).map(
                  Number.prototype.valueOf,
                  -Number.MAX_VALUE
                );
              v.forEach(function (L, N) {
                L.forEach(function (T, I) {
                  C[N] = Math.min(T.value, C[N]);
                });
              }),
                b.forEach(function (L, N) {
                  L.forEach(function (T, I) {
                    S[N] = Math.max(T.value, S[N]);
                  });
                }),
                t.forEach(function (L, N) {
                  b.forEach(function (T, I) {
                    var h = C[I],
                      y = S[I];
                    o.chart.stacked &&
                      ((y = 0),
                      T.forEach(function (A, P) {
                        A.value !== -Number.MAX_VALUE && (y += A.value),
                          h !== Number.MIN_VALUE && (h += v[I][P].value);
                      })),
                      T.forEach(function (A, P) {
                        T[P].key === N &&
                          (o.yaxis[N].min !== void 0 &&
                            (h =
                              typeof o.yaxis[N].min == 'function'
                                ? o.yaxis[N].min(l.minY)
                                : o.yaxis[N].min),
                          o.yaxis[N].max !== void 0 &&
                            (y =
                              typeof o.yaxis[N].max == 'function'
                                ? o.yaxis[N].max(l.maxY)
                                : o.yaxis[N].max),
                          s.setYScaleForIndex(N, h, y));
                      });
                  });
                });
            },
          },
          {
            key: 'autoScaleY',
            value: function (t, i, a) {
              t || (t = this);
              var s = t.w;
              if (s.globals.isMultipleYAxis || s.globals.collapsedSeries.length)
                return (
                  console.warn(
                    'autoScaleYaxis is not supported in a multi-yaxis chart.'
                  ),
                  i
                );
              var o = s.globals.seriesX[0],
                l = s.config.chart.stacked;
              return (
                i.forEach(function (d, u) {
                  for (var p = 0, x = 0; x < o.length; x++)
                    if (o[x] >= a.xaxis.min) {
                      p = x;
                      break;
                    }
                  var v,
                    b,
                    C = s.globals.minYArr[u],
                    S = s.globals.maxYArr[u],
                    L = s.globals.stackedSeriesTotals;
                  s.globals.series.forEach(function (N, T) {
                    var I = N[p];
                    l
                      ? ((I = L[p]),
                        (v = b = I),
                        L.forEach(function (h, y) {
                          o[y] <= a.xaxis.max &&
                            o[y] >= a.xaxis.min &&
                            (h > b && h !== null && (b = h),
                            N[y] < v && N[y] !== null && (v = N[y]));
                        }))
                      : ((v = b = I),
                        N.forEach(function (h, y) {
                          if (o[y] <= a.xaxis.max && o[y] >= a.xaxis.min) {
                            var A = h,
                              P = h;
                            s.globals.series.forEach(function (R, O) {
                              h !== null &&
                                ((A = Math.min(R[y], A)),
                                (P = Math.max(R[y], P)));
                            }),
                              P > b && P !== null && (b = P),
                              A < v && A !== null && (v = A);
                          }
                        })),
                      v === void 0 && b === void 0 && ((v = C), (b = S)),
                      (b *= b < 0 ? 0.9 : 1.1),
                      (v *= v < 0 ? 1.1 : 0.9) === 0 &&
                        b === 0 &&
                        ((v = -1), (b = 1)),
                      b < 0 && b < S && (b = S),
                      v < 0 && v > C && (v = C),
                      i.length > 1
                        ? ((i[T].min = d.min === void 0 ? v : d.min),
                          (i[T].max = d.max === void 0 ? b : d.max))
                        : ((i[0].min = d.min === void 0 ? v : d.min),
                          (i[0].max = d.max === void 0 ? b : d.max));
                  });
                }),
                i
              );
            },
          },
        ]),
        j
      );
    })(),
    vn = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w), (this.scales = new ii(t));
      }
      return (
        k(j, [
          {
            key: 'init',
            value: function () {
              this.setYRange(), this.setXRange(), this.setZRange();
            },
          },
          {
            key: 'getMinYMaxY',
            value: function (t) {
              var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : Number.MAX_VALUE,
                a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : -Number.MAX_VALUE,
                s =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                o = this.w.config,
                l = this.w.globals,
                d = -Number.MAX_VALUE,
                u = Number.MIN_VALUE;
              s === null && (s = t + 1);
              var p = l.series,
                x = p,
                v = p;
              o.chart.type === 'candlestick'
                ? ((x = l.seriesCandleL), (v = l.seriesCandleH))
                : o.chart.type === 'boxPlot'
                ? ((x = l.seriesCandleO), (v = l.seriesCandleC))
                : l.isRangeData &&
                  ((x = l.seriesRangeStart), (v = l.seriesRangeEnd));
              for (var b = t; b < s; b++) {
                (l.dataPoints = Math.max(l.dataPoints, p[b].length)),
                  l.categoryLabels.length &&
                    (l.dataPoints = l.categoryLabels.filter(function (L) {
                      return L !== void 0;
                    }).length),
                  l.labels.length &&
                    (l.dataPoints = Math.max(l.dataPoints, l.labels.length));
                for (var C = 0; C < l.series[b].length; C++) {
                  var S = p[b][C];
                  S !== null && E.isNumber(S)
                    ? (v[b][C] !== void 0 &&
                        ((d = Math.max(d, v[b][C])),
                        (i = Math.min(i, v[b][C]))),
                      x[b][C] !== void 0 &&
                        ((i = Math.min(i, x[b][C])),
                        (a = Math.max(a, x[b][C]))),
                      (this.w.config.chart.type !== 'candlestick' &&
                        this.w.config.chart.type !== 'boxPlot' &&
                        this.w.config.chart.type === 'rangeArea' &&
                        this.w.config.chart.type === 'rangeBar') ||
                        ((this.w.config.chart.type !== 'candlestick' &&
                          this.w.config.chart.type !== 'boxPlot') ||
                          (l.seriesCandleC[b][C] !== void 0 &&
                            ((d = Math.max(d, l.seriesCandleO[b][C])),
                            (d = Math.max(d, l.seriesCandleH[b][C])),
                            (d = Math.max(d, l.seriesCandleL[b][C])),
                            (d = Math.max(d, l.seriesCandleC[b][C])),
                            this.w.config.chart.type === 'boxPlot' &&
                              (d = Math.max(d, l.seriesCandleM[b][C])))),
                        !o.series[b].type ||
                          (o.series[b].type === 'candlestick' &&
                            o.series[b].type === 'boxPlot' &&
                            o.series[b].type === 'rangeArea' &&
                            o.series[b].type === 'rangeBar') ||
                          ((d = Math.max(d, l.series[b][C])),
                          (i = Math.min(i, l.series[b][C]))),
                        (a = d)),
                      l.seriesGoals[b] &&
                        l.seriesGoals[b][C] &&
                        Array.isArray(l.seriesGoals[b][C]) &&
                        l.seriesGoals[b][C].forEach(function (L) {
                          u !== Number.MIN_VALUE &&
                            ((u = Math.min(u, L.value)), (i = u)),
                            (d = Math.max(d, L.value)),
                            (a = d);
                        }),
                      E.isFloat(S) &&
                        ((S = E.noExponents(S)),
                        (l.yValueDecimal = Math.max(
                          l.yValueDecimal,
                          S.toString().split('.')[1].length
                        ))),
                      u > x[b][C] && x[b][C] < 0 && (u = x[b][C]))
                    : (l.hasNullValues = !0);
                }
              }
              return (
                o.chart.type === 'rangeBar' &&
                  l.seriesRangeStart.length &&
                  l.isBarHorizontal &&
                  (u = i),
                o.chart.type === 'bar' &&
                  (u < 0 && d < 0 && (d = 0),
                  u === Number.MIN_VALUE && (u = 0)),
                { minY: u, maxY: d, lowestY: i, highestY: a }
              );
            },
          },
          {
            key: 'setYRange',
            value: function () {
              var t = this.w.globals,
                i = this.w.config;
              (t.maxY = -Number.MAX_VALUE), (t.minY = Number.MIN_VALUE);
              var a = Number.MAX_VALUE;
              if (t.isMultipleYAxis)
                for (var s = 0; s < t.series.length; s++) {
                  var o = this.getMinYMaxY(s, a, null, s + 1);
                  t.minYArr.push(o.minY),
                    t.maxYArr.push(o.maxY),
                    (a = o.lowestY);
                }
              var l = this.getMinYMaxY(0, a, null, t.series.length);
              if (
                ((t.minY = l.minY),
                (t.maxY = l.maxY),
                (a = l.lowestY),
                i.chart.stacked && this._setStackedMinMax(),
                (i.chart.type === 'line' ||
                  i.chart.type === 'area' ||
                  i.chart.type === 'candlestick' ||
                  i.chart.type === 'boxPlot' ||
                  (i.chart.type === 'rangeBar' && !t.isBarHorizontal)) &&
                  t.minY === Number.MIN_VALUE &&
                  a !== -Number.MAX_VALUE &&
                  a !== t.maxY)
              ) {
                var d = t.maxY - a;
                ((a >= 0 && a <= 10) ||
                  i.yaxis[0].min !== void 0 ||
                  i.yaxis[0].max !== void 0) &&
                  (d = 0),
                  (t.minY = a - (5 * d) / 100),
                  a > 0 && t.minY < 0 && (t.minY = 0),
                  (t.maxY = t.maxY + (5 * d) / 100);
              }
              return (
                i.yaxis.forEach(function (u, p) {
                  u.max !== void 0 &&
                    (typeof u.max == 'number'
                      ? (t.maxYArr[p] = u.max)
                      : typeof u.max == 'function' &&
                        (t.maxYArr[p] = u.max(
                          t.isMultipleYAxis ? t.maxYArr[p] : t.maxY
                        )),
                    (t.maxY = t.maxYArr[p])),
                    u.min !== void 0 &&
                      (typeof u.min == 'number'
                        ? (t.minYArr[p] = u.min)
                        : typeof u.min == 'function' &&
                          (t.minYArr[p] = u.min(
                            t.isMultipleYAxis
                              ? t.minYArr[p] === Number.MIN_VALUE
                                ? 0
                                : t.minYArr[p]
                              : t.minY
                          )),
                      (t.minY = t.minYArr[p]));
                }),
                t.isBarHorizontal &&
                  ['min', 'max'].forEach(function (u) {
                    i.xaxis[u] !== void 0 &&
                      typeof i.xaxis[u] == 'number' &&
                      (u === 'min'
                        ? (t.minY = i.xaxis[u])
                        : (t.maxY = i.xaxis[u]));
                  }),
                t.isMultipleYAxis
                  ? (this.scales.setMultipleYScales(),
                    (t.minY = a),
                    t.yAxisScale.forEach(function (u, p) {
                      (t.minYArr[p] = u.niceMin), (t.maxYArr[p] = u.niceMax);
                    }))
                  : (this.scales.setYScaleForIndex(0, t.minY, t.maxY),
                    (t.minY = t.yAxisScale[0].niceMin),
                    (t.maxY = t.yAxisScale[0].niceMax),
                    (t.minYArr[0] = t.yAxisScale[0].niceMin),
                    (t.maxYArr[0] = t.yAxisScale[0].niceMax)),
                {
                  minY: t.minY,
                  maxY: t.maxY,
                  minYArr: t.minYArr,
                  maxYArr: t.maxYArr,
                  yAxisScale: t.yAxisScale,
                }
              );
            },
          },
          {
            key: 'setXRange',
            value: function () {
              var t = this.w.globals,
                i = this.w.config,
                a =
                  i.xaxis.type === 'numeric' ||
                  i.xaxis.type === 'datetime' ||
                  (i.xaxis.type === 'category' && !t.noLabelsProvided) ||
                  t.noLabelsProvided ||
                  t.isXNumeric;
              if (
                (t.isXNumeric &&
                  (function () {
                    for (var d = 0; d < t.series.length; d++)
                      if (t.labels[d])
                        for (var u = 0; u < t.labels[d].length; u++)
                          t.labels[d][u] !== null &&
                            E.isNumber(t.labels[d][u]) &&
                            ((t.maxX = Math.max(t.maxX, t.labels[d][u])),
                            (t.initialMaxX = Math.max(t.maxX, t.labels[d][u])),
                            (t.minX = Math.min(t.minX, t.labels[d][u])),
                            (t.initialMinX = Math.min(t.minX, t.labels[d][u])));
                  })(),
                t.noLabelsProvided &&
                  i.xaxis.categories.length === 0 &&
                  ((t.maxX = t.labels[t.labels.length - 1]),
                  (t.initialMaxX = t.labels[t.labels.length - 1]),
                  (t.minX = 1),
                  (t.initialMinX = 1)),
                t.isXNumeric || t.noLabelsProvided || t.dataFormatXNumeric)
              ) {
                var s;
                if (
                  (i.xaxis.tickAmount === void 0
                    ? ((s = Math.round(t.svgWidth / 150)),
                      i.xaxis.type === 'numeric' &&
                        t.dataPoints < 30 &&
                        (s = t.dataPoints - 1),
                      s > t.dataPoints &&
                        t.dataPoints !== 0 &&
                        (s = t.dataPoints - 1))
                    : i.xaxis.tickAmount === 'dataPoints'
                    ? (t.series.length > 1 &&
                        (s = t.series[t.maxValsInArrayIndex].length - 1),
                      t.isXNumeric && (s = t.maxX - t.minX - 1))
                    : (s = i.xaxis.tickAmount),
                  (t.xTickAmount = s),
                  i.xaxis.max !== void 0 &&
                    typeof i.xaxis.max == 'number' &&
                    (t.maxX = i.xaxis.max),
                  i.xaxis.min !== void 0 &&
                    typeof i.xaxis.min == 'number' &&
                    (t.minX = i.xaxis.min),
                  i.xaxis.range !== void 0 && (t.minX = t.maxX - i.xaxis.range),
                  t.minX !== Number.MAX_VALUE && t.maxX !== -Number.MAX_VALUE)
                )
                  if (i.xaxis.convertedCatToNumeric && !t.dataFormatXNumeric) {
                    for (var o = [], l = t.minX - 1; l < t.maxX; l++)
                      o.push(l + 1);
                    t.xAxisScale = {
                      result: o,
                      niceMin: o[0],
                      niceMax: o[o.length - 1],
                    };
                  } else t.xAxisScale = this.scales.setXScale(t.minX, t.maxX);
                else
                  (t.xAxisScale = this.scales.linearScale(1, s, s)),
                    t.noLabelsProvided &&
                      t.labels.length > 0 &&
                      ((t.xAxisScale = this.scales.linearScale(
                        1,
                        t.labels.length,
                        s - 1
                      )),
                      (t.seriesX = t.labels.slice()));
                a && (t.labels = t.xAxisScale.result.slice());
              }
              return (
                t.isBarHorizontal &&
                  t.labels.length &&
                  (t.xTickAmount = t.labels.length),
                this._handleSingleDataPoint(),
                this._getMinXDiff(),
                { minX: t.minX, maxX: t.maxX }
              );
            },
          },
          {
            key: 'setZRange',
            value: function () {
              var t = this.w.globals;
              if (t.isDataXYZ) {
                for (var i = 0; i < t.series.length; i++)
                  if (t.seriesZ[i] !== void 0)
                    for (var a = 0; a < t.seriesZ[i].length; a++)
                      t.seriesZ[i][a] !== null &&
                        E.isNumber(t.seriesZ[i][a]) &&
                        ((t.maxZ = Math.max(t.maxZ, t.seriesZ[i][a])),
                        (t.minZ = Math.min(t.minZ, t.seriesZ[i][a])));
              }
            },
          },
          {
            key: '_handleSingleDataPoint',
            value: function () {
              var t = this.w.globals,
                i = this.w.config;
              if (t.minX === t.maxX) {
                var a = new Ge(this.ctx);
                if (i.xaxis.type === 'datetime') {
                  var s = a.getDate(t.minX);
                  i.xaxis.labels.datetimeUTC
                    ? s.setUTCDate(s.getUTCDate() - 2)
                    : s.setDate(s.getDate() - 2),
                    (t.minX = new Date(s).getTime());
                  var o = a.getDate(t.maxX);
                  i.xaxis.labels.datetimeUTC
                    ? o.setUTCDate(o.getUTCDate() + 2)
                    : o.setDate(o.getDate() + 2),
                    (t.maxX = new Date(o).getTime());
                } else
                  (i.xaxis.type === 'numeric' ||
                    (i.xaxis.type === 'category' && !t.noLabelsProvided)) &&
                    ((t.minX = t.minX - 2),
                    (t.initialMinX = t.minX),
                    (t.maxX = t.maxX + 2),
                    (t.initialMaxX = t.maxX));
              }
            },
          },
          {
            key: '_getMinXDiff',
            value: function () {
              var t = this.w.globals;
              t.isXNumeric &&
                t.seriesX.forEach(function (i, a) {
                  i.length === 1 &&
                    i.push(
                      t.seriesX[t.maxValsInArrayIndex][
                        t.seriesX[t.maxValsInArrayIndex].length - 1
                      ]
                    );
                  var s = i.slice();
                  s.sort(function (o, l) {
                    return o - l;
                  }),
                    s.forEach(function (o, l) {
                      if (l > 0) {
                        var d = o - s[l - 1];
                        d > 0 && (t.minXDiff = Math.min(d, t.minXDiff));
                      }
                    }),
                    (t.dataPoints !== 1 && t.minXDiff !== Number.MAX_VALUE) ||
                      (t.minXDiff = 0.5);
                });
            },
          },
          {
            key: '_setStackedMinMax',
            value: function () {
              var t = this,
                i = this.w.globals;
              if (i.series.length) {
                var a = i.seriesGroups;
                a.length ||
                  (a = [
                    this.w.config.series.map(function (l) {
                      return l.name;
                    }),
                  ]);
                var s = {},
                  o = {};
                a.forEach(function (l) {
                  (s[l] = []),
                    (o[l] = []),
                    t.w.config.series
                      .map(function (d, u) {
                        return l.indexOf(d.name) > -1 ? u : null;
                      })
                      .filter(function (d) {
                        return d !== null;
                      })
                      .forEach(function (d) {
                        for (
                          var u = 0;
                          u < i.series[i.maxValsInArrayIndex].length;
                          u++
                        )
                          s[l][u] === void 0 && ((s[l][u] = 0), (o[l][u] = 0)),
                            i.series[d][u] !== null &&
                              E.isNumber(i.series[d][u]) &&
                              (i.series[d][u] > 0
                                ? (s[l][u] += parseFloat(i.series[d][u]) + 1e-4)
                                : (o[l][u] += parseFloat(i.series[d][u])));
                      });
                }),
                  Object.entries(s).forEach(function (l) {
                    var d = Z(l, 1)[0];
                    s[d].forEach(function (u, p) {
                      (i.maxY = Math.max(i.maxY, s[d][p])),
                        (i.minY = Math.min(i.minY, o[d][p]));
                    });
                  });
              }
            },
          },
        ]),
        j
      );
    })(),
    bn = (function () {
      function j(t, i) {
        g(this, j), (this.ctx = t), (this.elgrid = i), (this.w = t.w);
        var a = this.w;
        (this.xaxisFontSize = a.config.xaxis.labels.style.fontSize),
          (this.axisFontFamily = a.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = a.config.xaxis.labels.style.colors),
          (this.isCategoryBarHorizontal =
            a.config.chart.type === 'bar' &&
            a.config.plotOptions.bar.horizontal),
          (this.xAxisoffX = 0),
          a.config.xaxis.position === 'bottom' &&
            (this.xAxisoffX = a.globals.gridHeight),
          (this.drawnLabels = []),
          (this.axesUtils = new xt(t));
      }
      return (
        k(j, [
          {
            key: 'drawYaxis',
            value: function (t) {
              var i = this,
                a = this.w,
                s = new W(this.ctx),
                o = a.config.yaxis[t].labels.style,
                l = o.fontSize,
                d = o.fontFamily,
                u = o.fontWeight,
                p = s.group({
                  class: 'apexcharts-yaxis',
                  rel: t,
                  transform:
                    'translate(' + a.globals.translateYAxisX[t] + ', 0)',
                });
              if (this.axesUtils.isYAxisHidden(t)) return p;
              var x = s.group({ class: 'apexcharts-yaxis-texts-g' });
              p.add(x);
              var v = a.globals.yAxisScale[t].result.length - 1,
                b = a.globals.gridHeight / v,
                C = a.globals.translateY,
                S = a.globals.yLabelFormatters[t],
                L = a.globals.yAxisScale[t].result.slice();
              L = this.axesUtils.checkForReversedLabels(t, L);
              var N = '';
              if (a.config.yaxis[t].labels.show)
                for (
                  var T = function (X) {
                      var G = L[X];
                      G = S(G, X, a);
                      var q = a.config.yaxis[t].labels.padding;
                      a.config.yaxis[t].opposite &&
                        a.config.yaxis.length !== 0 &&
                        (q *= -1);
                      var ie = 'end';
                      a.config.yaxis[t].opposite && (ie = 'start'),
                        a.config.yaxis[t].labels.align === 'left'
                          ? (ie = 'start')
                          : a.config.yaxis[t].labels.align === 'center'
                          ? (ie = 'middle')
                          : a.config.yaxis[t].labels.align === 'right' &&
                            (ie = 'end');
                      var re = i.axesUtils.getYAxisForeColor(o.colors, t),
                        se = s.drawText({
                          x: q,
                          y: C + v / 10 + a.config.yaxis[t].labels.offsetY + 1,
                          text: G,
                          textAnchor: ie,
                          fontSize: l,
                          fontFamily: d,
                          fontWeight: u,
                          maxWidth: a.config.yaxis[t].labels.maxWidth,
                          foreColor: Array.isArray(re) ? re[X] : re,
                          isPlainText: !1,
                          cssClass: 'apexcharts-yaxis-label ' + o.cssClass,
                        });
                      X === v && (N = se), x.add(se);
                      var me = document.createElementNS(
                        a.globals.SVGNS,
                        'title'
                      );
                      if (
                        ((me.textContent = Array.isArray(G) ? G.join(' ') : G),
                        se.node.appendChild(me),
                        a.config.yaxis[t].labels.rotate !== 0)
                      ) {
                        var Se = s.rotateAroundCenter(N.node),
                          Ae = s.rotateAroundCenter(se.node);
                        se.node.setAttribute(
                          'transform',
                          'rotate('
                            .concat(a.config.yaxis[t].labels.rotate, ' ')
                            .concat(Se.x, ' ')
                            .concat(Ae.y, ')')
                        );
                      }
                      C += b;
                    },
                    I = v;
                  I >= 0;
                  I--
                )
                  T(I);
              if (a.config.yaxis[t].title.text !== void 0) {
                var h = s.group({ class: 'apexcharts-yaxis-title' }),
                  y = 0;
                a.config.yaxis[t].opposite &&
                  (y = a.globals.translateYAxisX[t]);
                var A = s.drawText({
                  x: y,
                  y:
                    a.globals.gridHeight / 2 +
                    a.globals.translateY +
                    a.config.yaxis[t].title.offsetY,
                  text: a.config.yaxis[t].title.text,
                  textAnchor: 'end',
                  foreColor: a.config.yaxis[t].title.style.color,
                  fontSize: a.config.yaxis[t].title.style.fontSize,
                  fontWeight: a.config.yaxis[t].title.style.fontWeight,
                  fontFamily: a.config.yaxis[t].title.style.fontFamily,
                  cssClass:
                    'apexcharts-yaxis-title-text ' +
                    a.config.yaxis[t].title.style.cssClass,
                });
                h.add(A), p.add(h);
              }
              var P = a.config.yaxis[t].axisBorder,
                R = 31 + P.offsetX;
              if (
                (a.config.yaxis[t].opposite && (R = -31 - P.offsetX), P.show)
              ) {
                var O = s.drawLine(
                  R,
                  a.globals.translateY + P.offsetY - 2,
                  R,
                  a.globals.gridHeight + a.globals.translateY + P.offsetY + 2,
                  P.color,
                  0,
                  P.width
                );
                p.add(O);
              }
              return (
                a.config.yaxis[t].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    R,
                    v,
                    P,
                    a.config.yaxis[t].axisTicks,
                    t,
                    b,
                    p
                  ),
                p
              );
            },
          },
          {
            key: 'drawYaxisInversed',
            value: function (t) {
              var i = this.w,
                a = new W(this.ctx),
                s = a.group({
                  class: 'apexcharts-xaxis apexcharts-yaxis-inversed',
                }),
                o = a.group({
                  class: 'apexcharts-xaxis-texts-g',
                  transform: 'translate('
                    .concat(i.globals.translateXAxisX, ', ')
                    .concat(i.globals.translateXAxisY, ')'),
                });
              s.add(o);
              var l = i.globals.yAxisScale[t].result.length - 1,
                d = i.globals.gridWidth / l + 0.1,
                u = d + i.config.xaxis.labels.offsetX,
                p = i.globals.xLabelFormatter,
                x = i.globals.yAxisScale[t].result.slice(),
                v = i.globals.timescaleLabels;
              v.length > 0 &&
                ((this.xaxisLabels = v.slice()), (l = (x = v.slice()).length)),
                (x = this.axesUtils.checkForReversedLabels(t, x));
              var b = v.length;
              if (i.config.xaxis.labels.show)
                for (var C = b ? 0 : l; b ? C < b : C >= 0; b ? C++ : C--) {
                  var S = x[C];
                  S = p(S, C, i);
                  var L =
                    i.globals.gridWidth +
                    i.globals.padHorizontal -
                    (u - d + i.config.xaxis.labels.offsetX);
                  if (v.length) {
                    var N = this.axesUtils.getLabel(
                      x,
                      v,
                      L,
                      C,
                      this.drawnLabels,
                      this.xaxisFontSize
                    );
                    (L = N.x),
                      (S = N.text),
                      this.drawnLabels.push(N.text),
                      C === 0 && i.globals.skipFirstTimelinelabel && (S = ''),
                      C === x.length - 1 &&
                        i.globals.skipLastTimelinelabel &&
                        (S = '');
                  }
                  var T = a.drawText({
                    x: L,
                    y:
                      this.xAxisoffX +
                      i.config.xaxis.labels.offsetY +
                      30 -
                      (i.config.xaxis.position === 'top'
                        ? i.globals.xAxisHeight +
                          i.config.xaxis.axisTicks.height -
                          2
                        : 0),
                    text: S,
                    textAnchor: 'middle',
                    foreColor: Array.isArray(this.xaxisForeColors)
                      ? this.xaxisForeColors[t]
                      : this.xaxisForeColors,
                    fontSize: this.xaxisFontSize,
                    fontFamily: this.xaxisFontFamily,
                    fontWeight: i.config.xaxis.labels.style.fontWeight,
                    isPlainText: !1,
                    cssClass:
                      'apexcharts-xaxis-label ' +
                      i.config.xaxis.labels.style.cssClass,
                  });
                  o.add(T), T.tspan(S);
                  var I = document.createElementNS(i.globals.SVGNS, 'title');
                  (I.textContent = S), T.node.appendChild(I), (u += d);
                }
              return (
                this.inversedYAxisTitleText(s), this.inversedYAxisBorder(s), s
              );
            },
          },
          {
            key: 'inversedYAxisBorder',
            value: function (t) {
              var i = this.w,
                a = new W(this.ctx),
                s = i.config.xaxis.axisBorder;
              if (s.show) {
                var o = 0;
                i.config.chart.type === 'bar' &&
                  i.globals.isXNumeric &&
                  (o -= 15);
                var l = a.drawLine(
                  i.globals.padHorizontal + o + s.offsetX,
                  this.xAxisoffX,
                  i.globals.gridWidth,
                  this.xAxisoffX,
                  s.color,
                  0,
                  s.height
                );
                this.elgrid && this.elgrid.elGridBorders && i.config.grid.show
                  ? this.elgrid.elGridBorders.add(l)
                  : t.add(l);
              }
            },
          },
          {
            key: 'inversedYAxisTitleText',
            value: function (t) {
              var i = this.w,
                a = new W(this.ctx);
              if (i.config.xaxis.title.text !== void 0) {
                var s = a.group({
                    class:
                      'apexcharts-xaxis-title apexcharts-yaxis-title-inversed',
                  }),
                  o = a.drawText({
                    x: i.globals.gridWidth / 2 + i.config.xaxis.title.offsetX,
                    y:
                      this.xAxisoffX +
                      parseFloat(this.xaxisFontSize) +
                      parseFloat(i.config.xaxis.title.style.fontSize) +
                      i.config.xaxis.title.offsetY +
                      20,
                    text: i.config.xaxis.title.text,
                    textAnchor: 'middle',
                    fontSize: i.config.xaxis.title.style.fontSize,
                    fontFamily: i.config.xaxis.title.style.fontFamily,
                    fontWeight: i.config.xaxis.title.style.fontWeight,
                    foreColor: i.config.xaxis.title.style.color,
                    cssClass:
                      'apexcharts-xaxis-title-text ' +
                      i.config.xaxis.title.style.cssClass,
                  });
                s.add(o), t.add(s);
              }
            },
          },
          {
            key: 'yAxisTitleRotate',
            value: function (t, i) {
              var a = this.w,
                s = new W(this.ctx),
                o = { width: 0, height: 0 },
                l = { width: 0, height: 0 },
                d = a.globals.dom.baseEl.querySelector(
                  " .apexcharts-yaxis[rel='".concat(
                    t,
                    "'] .apexcharts-yaxis-texts-g"
                  )
                );
              d !== null && (o = d.getBoundingClientRect());
              var u = a.globals.dom.baseEl.querySelector(
                ".apexcharts-yaxis[rel='".concat(
                  t,
                  "'] .apexcharts-yaxis-title text"
                )
              );
              if ((u !== null && (l = u.getBoundingClientRect()), u !== null)) {
                var p = this.xPaddingForYAxisTitle(t, o, l, i);
                u.setAttribute('x', p.xPos - (i ? 10 : 0));
              }
              if (u !== null) {
                var x = s.rotateAroundCenter(u);
                u.setAttribute(
                  'transform',
                  'rotate('
                    .concat(
                      i
                        ? -1 * a.config.yaxis[t].title.rotate
                        : a.config.yaxis[t].title.rotate,
                      ' '
                    )
                    .concat(x.x, ' ')
                    .concat(x.y, ')')
                );
              }
            },
          },
          {
            key: 'xPaddingForYAxisTitle',
            value: function (t, i, a, s) {
              var o = this.w,
                l = 0,
                d = 0,
                u = 10;
              return o.config.yaxis[t].title.text === void 0 || t < 0
                ? { xPos: d, padd: 0 }
                : (s
                    ? ((d =
                        i.width +
                        o.config.yaxis[t].title.offsetX +
                        a.width / 2 +
                        u / 2),
                      (l += 1) === 0 && (d -= u / 2))
                    : ((d =
                        -1 * i.width +
                        o.config.yaxis[t].title.offsetX +
                        u / 2 +
                        a.width / 2),
                      o.globals.isBarHorizontal &&
                        ((u = 25),
                        (d =
                          -1 * i.width - o.config.yaxis[t].title.offsetX - u))),
                  { xPos: d, padd: u });
            },
          },
          {
            key: 'setYAxisXPosition',
            value: function (t, i) {
              var a = this.w,
                s = 0,
                o = 0,
                l = 18,
                d = 1;
              a.config.yaxis.length > 1 && (this.multipleYs = !0),
                a.config.yaxis.map(function (u, p) {
                  var x =
                      a.globals.ignoreYAxisIndexes.indexOf(p) > -1 ||
                      !u.show ||
                      u.floating ||
                      t[p].width === 0,
                    v = t[p].width + i[p].width;
                  u.opposite
                    ? a.globals.isBarHorizontal
                      ? ((o = a.globals.gridWidth + a.globals.translateX - 1),
                        (a.globals.translateYAxisX[p] = o - u.labels.offsetX))
                      : ((o = a.globals.gridWidth + a.globals.translateX + d),
                        x || (d = d + v + 20),
                        (a.globals.translateYAxisX[p] =
                          o - u.labels.offsetX + 20))
                    : ((s = a.globals.translateX - l),
                      x || (l = l + v + 20),
                      (a.globals.translateYAxisX[p] = s + u.labels.offsetX));
                });
            },
          },
          {
            key: 'setYAxisTextAlignments',
            value: function () {
              var t = this.w,
                i =
                  t.globals.dom.baseEl.getElementsByClassName(
                    'apexcharts-yaxis'
                  );
              (i = E.listToArray(i)).forEach(function (a, s) {
                var o = t.config.yaxis[s];
                if (o && !o.floating && o.labels.align !== void 0) {
                  var l = t.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxis[rel='".concat(
                        s,
                        "'] .apexcharts-yaxis-texts-g"
                      )
                    ),
                    d = t.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-yaxis[rel='".concat(
                        s,
                        "'] .apexcharts-yaxis-label"
                      )
                    );
                  d = E.listToArray(d);
                  var u = l.getBoundingClientRect();
                  o.labels.align === 'left'
                    ? (d.forEach(function (p, x) {
                        p.setAttribute('text-anchor', 'start');
                      }),
                      o.opposite ||
                        l.setAttribute(
                          'transform',
                          'translate(-'.concat(u.width, ', 0)')
                        ))
                    : o.labels.align === 'center'
                    ? (d.forEach(function (p, x) {
                        p.setAttribute('text-anchor', 'middle');
                      }),
                      l.setAttribute(
                        'transform',
                        'translate('.concat(
                          (u.width / 2) * (o.opposite ? 1 : -1),
                          ', 0)'
                        )
                      ))
                    : o.labels.align === 'right' &&
                      (d.forEach(function (p, x) {
                        p.setAttribute('text-anchor', 'end');
                      }),
                      o.opposite &&
                        l.setAttribute(
                          'transform',
                          'translate('.concat(u.width, ', 0)')
                        ));
                }
              });
            },
          },
        ]),
        j
      );
    })(),
    Sa = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.documentEvent = E.bind(this.documentEvent, this));
      }
      return (
        k(j, [
          {
            key: 'addEventListener',
            value: function (t, i) {
              var a = this.w;
              a.globals.events.hasOwnProperty(t)
                ? a.globals.events[t].push(i)
                : (a.globals.events[t] = [i]);
            },
          },
          {
            key: 'removeEventListener',
            value: function (t, i) {
              var a = this.w;
              if (a.globals.events.hasOwnProperty(t)) {
                var s = a.globals.events[t].indexOf(i);
                s !== -1 && a.globals.events[t].splice(s, 1);
              }
            },
          },
          {
            key: 'fireEvent',
            value: function (t, i) {
              var a = this.w;
              if (a.globals.events.hasOwnProperty(t)) {
                (i && i.length) || (i = []);
                for (
                  var s = a.globals.events[t], o = s.length, l = 0;
                  l < o;
                  l++
                )
                  s[l].apply(null, i);
              }
            },
          },
          {
            key: 'setupEventHandlers',
            value: function () {
              var t = this,
                i = this.w,
                a = this.ctx,
                s = i.globals.dom.baseEl.querySelector(i.globals.chartClass);
              this.ctx.eventList.forEach(function (o) {
                s.addEventListener(
                  o,
                  function (l) {
                    var d = Object.assign({}, i, {
                      seriesIndex: i.globals.capturedSeriesIndex,
                      dataPointIndex: i.globals.capturedDataPointIndex,
                    });
                    l.type === 'mousemove' || l.type === 'touchmove'
                      ? typeof i.config.chart.events.mouseMove == 'function' &&
                        i.config.chart.events.mouseMove(l, a, d)
                      : l.type === 'mouseleave' || l.type === 'touchleave'
                      ? typeof i.config.chart.events.mouseLeave == 'function' &&
                        i.config.chart.events.mouseLeave(l, a, d)
                      : ((l.type === 'mouseup' && l.which === 1) ||
                          l.type === 'touchend') &&
                        (typeof i.config.chart.events.click == 'function' &&
                          i.config.chart.events.click(l, a, d),
                        a.ctx.events.fireEvent('click', [l, a, d]));
                  },
                  { capture: !1, passive: !0 }
                );
              }),
                this.ctx.eventList.forEach(function (o) {
                  i.globals.dom.baseEl.addEventListener(o, t.documentEvent, {
                    passive: !0,
                  });
                }),
                this.ctx.core.setupBrushHandler();
            },
          },
          {
            key: 'documentEvent',
            value: function (t) {
              var i = this.w,
                a = t.target.className;
              if (t.type === 'click') {
                var s = i.globals.dom.baseEl.querySelector('.apexcharts-menu');
                s &&
                  s.classList.contains('apexcharts-menu-open') &&
                  a !== 'apexcharts-menu-icon' &&
                  s.classList.remove('apexcharts-menu-open');
              }
              (i.globals.clientX =
                t.type === 'touchmove' ? t.touches[0].clientX : t.clientX),
                (i.globals.clientY =
                  t.type === 'touchmove' ? t.touches[0].clientY : t.clientY);
            },
          },
        ]),
        j
      );
    })(),
    mo = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'setCurrentLocaleValues',
            value: function (t) {
              var i = this.w.config.chart.locales;
              window.Apex.chart &&
                window.Apex.chart.locales &&
                window.Apex.chart.locales.length > 0 &&
                (i = this.w.config.chart.locales.concat(
                  window.Apex.chart.locales
                ));
              var a = i.filter(function (o) {
                return o.name === t;
              })[0];
              if (!a)
                throw new Error(
                  'Wrong locale name provided. Please make sure you set the correct locale name in options'
                );
              var s = E.extend(ct, a);
              this.w.globals.locale = s.options;
            },
          },
        ]),
        j
      );
    })(),
    Aa = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'drawAxis',
            value: function (t, i) {
              var a,
                s,
                o = this,
                l = this.w.globals,
                d = this.w.config,
                u = new sr(this.ctx, i),
                p = new bn(this.ctx, i);
              l.axisCharts &&
                t !== 'radar' &&
                (l.isBarHorizontal
                  ? ((s = p.drawYaxisInversed(0)),
                    (a = u.drawXaxisInversed(0)),
                    l.dom.elGraphical.add(a),
                    l.dom.elGraphical.add(s))
                  : ((a = u.drawXaxis()),
                    l.dom.elGraphical.add(a),
                    d.yaxis.map(function (x, v) {
                      if (
                        l.ignoreYAxisIndexes.indexOf(v) === -1 &&
                        ((s = p.drawYaxis(v)),
                        l.dom.Paper.add(s),
                        o.w.config.grid.position === 'back')
                      ) {
                        var b = l.dom.Paper.children()[1];
                        b.remove(), l.dom.Paper.add(b);
                      }
                    })));
            },
          },
        ]),
        j
      );
    })(),
    jr = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'drawXCrosshairs',
            value: function () {
              var t = this.w,
                i = new W(this.ctx),
                a = new Q(this.ctx),
                s = t.config.xaxis.crosshairs.fill.gradient,
                o = t.config.xaxis.crosshairs.dropShadow,
                l = t.config.xaxis.crosshairs.fill.type,
                d = s.colorFrom,
                u = s.colorTo,
                p = s.opacityFrom,
                x = s.opacityTo,
                v = s.stops,
                b = o.enabled,
                C = o.left,
                S = o.top,
                L = o.blur,
                N = o.color,
                T = o.opacity,
                I = t.config.xaxis.crosshairs.fill.color;
              if (t.config.xaxis.crosshairs.show) {
                l === 'gradient' &&
                  (I = i.drawGradient('vertical', d, u, p, x, null, v, null));
                var h = i.drawRect();
                t.config.xaxis.crosshairs.width === 1 && (h = i.drawLine());
                var y = t.globals.gridHeight;
                (!E.isNumber(y) || y < 0) && (y = 0);
                var A = t.config.xaxis.crosshairs.width;
                (!E.isNumber(A) || A < 0) && (A = 0),
                  h.attr({
                    class: 'apexcharts-xcrosshairs',
                    x: 0,
                    y: 0,
                    y2: y,
                    width: A,
                    height: y,
                    fill: I,
                    filter: 'none',
                    'fill-opacity': t.config.xaxis.crosshairs.opacity,
                    stroke: t.config.xaxis.crosshairs.stroke.color,
                    'stroke-width': t.config.xaxis.crosshairs.stroke.width,
                    'stroke-dasharray':
                      t.config.xaxis.crosshairs.stroke.dashArray,
                  }),
                  b &&
                    (h = a.dropShadow(h, {
                      left: C,
                      top: S,
                      blur: L,
                      color: N,
                      opacity: T,
                    })),
                  t.globals.dom.elGraphical.add(h);
              }
            },
          },
          {
            key: 'drawYCrosshairs',
            value: function () {
              var t = this.w,
                i = new W(this.ctx),
                a = t.config.yaxis[0].crosshairs,
                s = t.globals.barPadForNumericAxis;
              if (t.config.yaxis[0].crosshairs.show) {
                var o = i.drawLine(
                  -s,
                  0,
                  t.globals.gridWidth + s,
                  0,
                  a.stroke.color,
                  a.stroke.dashArray,
                  a.stroke.width
                );
                o.attr({ class: 'apexcharts-ycrosshairs' }),
                  t.globals.dom.elGraphical.add(o);
              }
              var l = i.drawLine(
                -s,
                0,
                t.globals.gridWidth + s,
                0,
                a.stroke.color,
                0,
                0
              );
              l.attr({ class: 'apexcharts-ycrosshairs-hidden' }),
                t.globals.dom.elGraphical.add(l);
            },
          },
        ]),
        j
      );
    })(),
    Mr = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'checkResponsiveConfig',
            value: function (t) {
              var i = this,
                a = this.w,
                s = a.config;
              if (s.responsive.length !== 0) {
                var o = s.responsive.slice();
                o.sort(function (p, x) {
                  return p.breakpoint > x.breakpoint
                    ? 1
                    : x.breakpoint > p.breakpoint
                    ? -1
                    : 0;
                }).reverse();
                var l = new xe({}),
                  d = function () {
                    var p =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : {},
                      x = o[0].breakpoint,
                      v =
                        window.innerWidth > 0
                          ? window.innerWidth
                          : screen.width;
                    if (v > x) {
                      var b = ae.extendArrayProps(
                        l,
                        a.globals.initialConfig,
                        a
                      );
                      (p = E.extend(b, p)),
                        (p = E.extend(a.config, p)),
                        i.overrideResponsiveOptions(p);
                    } else
                      for (var C = 0; C < o.length; C++)
                        v < o[C].breakpoint &&
                          ((p = ae.extendArrayProps(l, o[C].options, a)),
                          (p = E.extend(a.config, p)),
                          i.overrideResponsiveOptions(p));
                  };
                if (t) {
                  var u = ae.extendArrayProps(l, t, a);
                  (u = E.extend(a.config, u)), d((u = E.extend(u, t)));
                } else d({});
              }
            },
          },
          {
            key: 'overrideResponsiveOptions',
            value: function (t) {
              var i = new xe(t).init({ responsiveOverride: !0 });
              this.w.config = i;
            },
          },
        ]),
        j
      );
    })(),
    xo = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.colors = []), (this.w = t.w);
        var i = this.w;
        (this.isColorFn = !1),
          (this.isHeatmapDistributed =
            (i.config.chart.type === 'treemap' &&
              i.config.plotOptions.treemap.distributed) ||
            (i.config.chart.type === 'heatmap' &&
              i.config.plotOptions.heatmap.distributed)),
          (this.isBarDistributed =
            i.config.plotOptions.bar.distributed &&
            (i.config.chart.type === 'bar' ||
              i.config.chart.type === 'rangeBar'));
      }
      return (
        k(j, [
          {
            key: 'init',
            value: function () {
              this.setDefaultColors();
            },
          },
          {
            key: 'setDefaultColors',
            value: function () {
              var t,
                i = this,
                a = this.w,
                s = new E();
              if (
                (a.globals.dom.elWrap.classList.add(
                  'apexcharts-theme-'.concat(a.config.theme.mode)
                ),
                a.config.colors === void 0 ||
                ((t = a.config.colors) === null || t === void 0
                  ? void 0
                  : t.length) === 0
                  ? (a.globals.colors = this.predefined())
                  : ((a.globals.colors = a.config.colors),
                    Array.isArray(a.config.colors) &&
                      a.config.colors.length > 0 &&
                      typeof a.config.colors[0] == 'function' &&
                      (a.globals.colors = a.config.series.map(function (S, L) {
                        var N = a.config.colors[L];
                        return (
                          N || (N = a.config.colors[0]),
                          typeof N == 'function'
                            ? ((i.isColorFn = !0),
                              N({
                                value: a.globals.axisCharts
                                  ? a.globals.series[L][0]
                                    ? a.globals.series[L][0]
                                    : 0
                                  : a.globals.series[L],
                                seriesIndex: L,
                                dataPointIndex: L,
                                w: a,
                              }))
                            : N
                        );
                      }))),
                a.globals.seriesColors.map(function (S, L) {
                  S && (a.globals.colors[L] = S);
                }),
                a.config.theme.monochrome.enabled)
              ) {
                var o = [],
                  l = a.globals.series.length;
                (this.isBarDistributed || this.isHeatmapDistributed) &&
                  (l = a.globals.series[0].length * a.globals.series.length);
                for (
                  var d = a.config.theme.monochrome.color,
                    u = 1 / (l / a.config.theme.monochrome.shadeIntensity),
                    p = a.config.theme.monochrome.shadeTo,
                    x = 0,
                    v = 0;
                  v < l;
                  v++
                ) {
                  var b = void 0;
                  p === 'dark'
                    ? ((b = s.shadeColor(-1 * x, d)), (x += u))
                    : ((b = s.shadeColor(x, d)), (x += u)),
                    o.push(b);
                }
                a.globals.colors = o.slice();
              }
              var C = a.globals.colors.slice();
              this.pushExtraColors(a.globals.colors),
                ['fill', 'stroke'].forEach(function (S) {
                  a.config[S].colors === void 0
                    ? (a.globals[S].colors = i.isColorFn ? a.config.colors : C)
                    : (a.globals[S].colors = a.config[S].colors.slice()),
                    i.pushExtraColors(a.globals[S].colors);
                }),
                a.config.dataLabels.style.colors === void 0
                  ? (a.globals.dataLabels.style.colors = C)
                  : (a.globals.dataLabels.style.colors =
                      a.config.dataLabels.style.colors.slice()),
                this.pushExtraColors(a.globals.dataLabels.style.colors, 50),
                a.config.plotOptions.radar.polygons.fill.colors === void 0
                  ? (a.globals.radarPolygons.fill.colors = [
                      a.config.theme.mode === 'dark' ? '#424242' : 'none',
                    ])
                  : (a.globals.radarPolygons.fill.colors =
                      a.config.plotOptions.radar.polygons.fill.colors.slice()),
                this.pushExtraColors(a.globals.radarPolygons.fill.colors, 20),
                a.config.markers.colors === void 0
                  ? (a.globals.markers.colors = C)
                  : (a.globals.markers.colors =
                      a.config.markers.colors.slice()),
                this.pushExtraColors(a.globals.markers.colors);
            },
          },
          {
            key: 'pushExtraColors',
            value: function (t, i) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                s = this.w,
                o = i || s.globals.series.length;
              if (
                (a === null &&
                  (a =
                    this.isBarDistributed ||
                    this.isHeatmapDistributed ||
                    (s.config.chart.type === 'heatmap' &&
                      s.config.plotOptions.heatmap.colorScale.inverse)),
                a &&
                  s.globals.series.length &&
                  (o =
                    s.globals.series[s.globals.maxValsInArrayIndex].length *
                    s.globals.series.length),
                t.length < o)
              )
                for (var l = o - t.length, d = 0; d < l; d++) t.push(t[d]);
            },
          },
          {
            key: 'updateThemeOptions',
            value: function (t) {
              (t.chart = t.chart || {}), (t.tooltip = t.tooltip || {});
              var i = t.theme.mode || 'light',
                a = t.theme.palette
                  ? t.theme.palette
                  : i === 'dark'
                  ? 'palette4'
                  : 'palette1',
                s = t.chart.foreColor
                  ? t.chart.foreColor
                  : i === 'dark'
                  ? '#f6f7f8'
                  : '#373d3f';
              return (
                (t.tooltip.theme = i),
                (t.chart.foreColor = s),
                (t.theme.palette = a),
                t
              );
            },
          },
          {
            key: 'predefined',
            value: function () {
              switch (this.w.config.theme.palette) {
                case 'palette1':
                default:
                  this.colors = [
                    '#008FFB',
                    '#00E396',
                    '#FEB019',
                    '#FF4560',
                    '#775DD0',
                  ];
                  break;
                case 'palette2':
                  this.colors = [
                    '#3f51b5',
                    '#03a9f4',
                    '#4caf50',
                    '#f9ce1d',
                    '#FF9800',
                  ];
                  break;
                case 'palette3':
                  this.colors = [
                    '#33b2df',
                    '#546E7A',
                    '#d4526e',
                    '#13d8aa',
                    '#A5978B',
                  ];
                  break;
                case 'palette4':
                  this.colors = [
                    '#4ecdc4',
                    '#c7f464',
                    '#81D4FA',
                    '#fd6a6a',
                    '#546E7A',
                  ];
                  break;
                case 'palette5':
                  this.colors = [
                    '#2b908f',
                    '#f9a3a4',
                    '#90ee7e',
                    '#fa4443',
                    '#69d2e7',
                  ];
                  break;
                case 'palette6':
                  this.colors = [
                    '#449DD1',
                    '#F86624',
                    '#EA3546',
                    '#662E9B',
                    '#C5D86D',
                  ];
                  break;
                case 'palette7':
                  this.colors = [
                    '#D7263D',
                    '#1B998B',
                    '#2E294E',
                    '#F46036',
                    '#E2C044',
                  ];
                  break;
                case 'palette8':
                  this.colors = [
                    '#662E9B',
                    '#F86624',
                    '#F9C80E',
                    '#EA3546',
                    '#43BCCD',
                  ];
                  break;
                case 'palette9':
                  this.colors = [
                    '#5C4742',
                    '#A5978B',
                    '#8D5B4C',
                    '#5A2A27',
                    '#C4BBAF',
                  ];
                  break;
                case 'palette10':
                  this.colors = [
                    '#A300D6',
                    '#7D02EB',
                    '#5653FE',
                    '#2983FF',
                    '#00B1F2',
                  ];
              }
              return this.colors;
            },
          },
        ]),
        j
      );
    })(),
    vo = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'draw',
            value: function () {
              this.drawTitleSubtitle('title'),
                this.drawTitleSubtitle('subtitle');
            },
          },
          {
            key: 'drawTitleSubtitle',
            value: function (t) {
              var i = this.w,
                a = t === 'title' ? i.config.title : i.config.subtitle,
                s = i.globals.svgWidth / 2,
                o = a.offsetY,
                l = 'middle';
              if (
                (a.align === 'left'
                  ? ((s = 10), (l = 'start'))
                  : a.align === 'right' &&
                    ((s = i.globals.svgWidth - 10), (l = 'end')),
                (s += a.offsetX),
                (o = o + parseInt(a.style.fontSize, 10) + a.margin / 2),
                a.text !== void 0)
              ) {
                var d = new W(this.ctx).drawText({
                  x: s,
                  y: o,
                  text: a.text,
                  textAnchor: l,
                  fontSize: a.style.fontSize,
                  fontFamily: a.style.fontFamily,
                  fontWeight: a.style.fontWeight,
                  foreColor: a.style.color,
                  opacity: 1,
                });
                d.node.setAttribute('class', 'apexcharts-'.concat(t, '-text')),
                  i.globals.dom.Paper.add(d);
              }
            },
          },
        ]),
        j
      );
    })(),
    La = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.dCtx = t);
      }
      return (
        k(j, [
          {
            key: 'getTitleSubtitleCoords',
            value: function (t) {
              var i = this.w,
                a = 0,
                s = 0,
                o =
                  t === 'title'
                    ? i.config.title.floating
                    : i.config.subtitle.floating,
                l = i.globals.dom.baseEl.querySelector(
                  '.apexcharts-'.concat(t, '-text')
                );
              if (l !== null && !o) {
                var d = l.getBoundingClientRect();
                (a = d.width),
                  (s = i.globals.axisCharts ? d.height + 5 : d.height);
              }
              return { width: a, height: s };
            },
          },
          {
            key: 'getLegendsRect',
            value: function () {
              var t = this.w,
                i = t.globals.dom.elLegendWrap;
              t.config.legend.height ||
                (t.config.legend.position !== 'top' &&
                  t.config.legend.position !== 'bottom') ||
                (i.style.maxHeight = t.globals.svgHeight / 2 + 'px');
              var a = Object.assign({}, E.getBoundingClientRect(i));
              return (
                i !== null && !t.config.legend.floating && t.config.legend.show
                  ? (this.dCtx.lgRect = {
                      x: a.x,
                      y: a.y,
                      height: a.height,
                      width: a.height === 0 ? 0 : a.width,
                    })
                  : (this.dCtx.lgRect = { x: 0, y: 0, height: 0, width: 0 }),
                (t.config.legend.position !== 'left' &&
                  t.config.legend.position !== 'right') ||
                  (1.5 * this.dCtx.lgRect.width > t.globals.svgWidth &&
                    (this.dCtx.lgRect.width = t.globals.svgWidth / 1.5)),
                this.dCtx.lgRect
              );
            },
          },
          {
            key: 'getLargestStringFromMultiArr',
            value: function (t, i) {
              var a = t;
              if (this.w.globals.isMultiLineX) {
                var s = i.map(function (l, d) {
                    return Array.isArray(l) ? l.length : 1;
                  }),
                  o = Math.max.apply(Math, V(s));
                a = i[s.indexOf(o)];
              }
              return a;
            },
          },
        ]),
        j
      );
    })(),
    yn = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.dCtx = t);
      }
      return (
        k(j, [
          {
            key: 'getxAxisLabelsCoords',
            value: function () {
              var t,
                i = this.w,
                a = i.globals.labels.slice();
              if (
                (i.config.xaxis.convertedCatToNumeric &&
                  a.length === 0 &&
                  (a = i.globals.categoryLabels),
                i.globals.timescaleLabels.length > 0)
              ) {
                var s = this.getxAxisTimeScaleLabelsCoords();
                (t = { width: s.width, height: s.height }),
                  (i.globals.rotateXLabels = !1);
              } else {
                this.dCtx.lgWidthForSideLegends =
                  (i.config.legend.position !== 'left' &&
                    i.config.legend.position !== 'right') ||
                  i.config.legend.floating
                    ? 0
                    : this.dCtx.lgRect.width;
                var o = i.globals.xLabelFormatter,
                  l = E.getLargestStringFromArr(a),
                  d = this.dCtx.dimHelpers.getLargestStringFromMultiArr(l, a);
                i.globals.isBarHorizontal &&
                  (d = l =
                    i.globals.yAxisScale[0].result.reduce(function (S, L) {
                      return S.length > L.length ? S : L;
                    }, 0));
                var u = new fi(this.dCtx.ctx),
                  p = l;
                (l = u.xLabelFormat(o, l, p, {
                  i: void 0,
                  dateFormatter: new Ge(this.dCtx.ctx).formatDate,
                  w: i,
                })),
                  (d = u.xLabelFormat(o, d, p, {
                    i: void 0,
                    dateFormatter: new Ge(this.dCtx.ctx).formatDate,
                    w: i,
                  })),
                  ((i.config.xaxis.convertedCatToNumeric && l === void 0) ||
                    String(l).trim() === '') &&
                    (d = l = '1');
                var x = new W(this.dCtx.ctx),
                  v = x.getTextRects(l, i.config.xaxis.labels.style.fontSize),
                  b = v;
                if (
                  (l !== d &&
                    (b = x.getTextRects(
                      d,
                      i.config.xaxis.labels.style.fontSize
                    )),
                  ((t = {
                    width: v.width >= b.width ? v.width : b.width,
                    height: v.height >= b.height ? v.height : b.height,
                  }).width *
                    a.length >
                    i.globals.svgWidth -
                      this.dCtx.lgWidthForSideLegends -
                      this.dCtx.yAxisWidth -
                      this.dCtx.gridPad.left -
                      this.dCtx.gridPad.right &&
                    i.config.xaxis.labels.rotate !== 0) ||
                    i.config.xaxis.labels.rotateAlways)
                ) {
                  if (!i.globals.isBarHorizontal) {
                    i.globals.rotateXLabels = !0;
                    var C = function (S) {
                      return x.getTextRects(
                        S,
                        i.config.xaxis.labels.style.fontSize,
                        i.config.xaxis.labels.style.fontFamily,
                        'rotate('.concat(i.config.xaxis.labels.rotate, ' 0 0)'),
                        !1
                      );
                    };
                    (v = C(l)),
                      l !== d && (b = C(d)),
                      (t.height =
                        (v.height > b.height ? v.height : b.height) / 1.5),
                      (t.width = v.width > b.width ? v.width : b.width);
                  }
                } else i.globals.rotateXLabels = !1;
              }
              return (
                i.config.xaxis.labels.show || (t = { width: 0, height: 0 }),
                { width: t.width, height: t.height }
              );
            },
          },
          {
            key: 'getxAxisGroupLabelsCoords',
            value: function () {
              var t,
                i = this.w;
              if (!i.globals.hasXaxisGroups) return { width: 0, height: 0 };
              var a,
                s =
                  ((t = i.config.xaxis.group.style) === null || t === void 0
                    ? void 0
                    : t.fontSize) || i.config.xaxis.labels.style.fontSize,
                o = i.globals.groups.map(function (v) {
                  return v.title;
                }),
                l = E.getLargestStringFromArr(o),
                d = this.dCtx.dimHelpers.getLargestStringFromMultiArr(l, o),
                u = new W(this.dCtx.ctx),
                p = u.getTextRects(l, s),
                x = p;
              return (
                l !== d && (x = u.getTextRects(d, s)),
                (a = {
                  width: p.width >= x.width ? p.width : x.width,
                  height: p.height >= x.height ? p.height : x.height,
                }),
                i.config.xaxis.labels.show || (a = { width: 0, height: 0 }),
                { width: a.width, height: a.height }
              );
            },
          },
          {
            key: 'getxAxisTitleCoords',
            value: function () {
              var t = this.w,
                i = 0,
                a = 0;
              if (t.config.xaxis.title.text !== void 0) {
                var s = new W(this.dCtx.ctx).getTextRects(
                  t.config.xaxis.title.text,
                  t.config.xaxis.title.style.fontSize
                );
                (i = s.width), (a = s.height);
              }
              return { width: i, height: a };
            },
          },
          {
            key: 'getxAxisTimeScaleLabelsCoords',
            value: function () {
              var t,
                i = this.w;
              this.dCtx.timescaleLabels = i.globals.timescaleLabels.slice();
              var a = this.dCtx.timescaleLabels.map(function (o) {
                  return o.value;
                }),
                s = a.reduce(function (o, l) {
                  return o === void 0
                    ? (console.error(
                        'You have possibly supplied invalid Date format. Please supply a valid JavaScript Date'
                      ),
                      0)
                    : o.length > l.length
                    ? o
                    : l;
                }, 0);
              return (
                1.05 *
                  (t = new W(this.dCtx.ctx).getTextRects(
                    s,
                    i.config.xaxis.labels.style.fontSize
                  )).width *
                  a.length >
                  i.globals.gridWidth &&
                  i.config.xaxis.labels.rotate !== 0 &&
                  (i.globals.overlappingXLabels = !0),
                t
              );
            },
          },
          {
            key: 'additionalPaddingXLabels',
            value: function (t) {
              var i = this,
                a = this.w,
                s = a.globals,
                o = a.config,
                l = o.xaxis.type,
                d = t.width;
              (s.skipLastTimelinelabel = !1), (s.skipFirstTimelinelabel = !1);
              var u = a.config.yaxis[0].opposite && a.globals.isBarHorizontal,
                p = function (x, v) {
                  (o.yaxis.length > 1 &&
                    (function (b) {
                      return s.collapsedSeriesIndices.indexOf(b) !== -1;
                    })(v)) ||
                    (function (b) {
                      if (
                        i.dCtx.timescaleLabels &&
                        i.dCtx.timescaleLabels.length
                      ) {
                        var C = i.dCtx.timescaleLabels[0],
                          S =
                            i.dCtx.timescaleLabels[
                              i.dCtx.timescaleLabels.length - 1
                            ].position +
                            d / 1.75 -
                            i.dCtx.yAxisWidthRight,
                          L = C.position - d / 1.75 + i.dCtx.yAxisWidthLeft,
                          N =
                            a.config.legend.position === 'right' &&
                            i.dCtx.lgRect.width > 0
                              ? i.dCtx.lgRect.width
                              : 0;
                        S > s.svgWidth - s.translateX - N &&
                          (s.skipLastTimelinelabel = !0),
                          L <
                            -((b.show && !b.floating) ||
                            (o.chart.type !== 'bar' &&
                              o.chart.type !== 'candlestick' &&
                              o.chart.type !== 'rangeBar' &&
                              o.chart.type !== 'boxPlot')
                              ? 10
                              : d / 1.75) && (s.skipFirstTimelinelabel = !0);
                      } else
                        l === 'datetime'
                          ? i.dCtx.gridPad.right < d &&
                            !s.rotateXLabels &&
                            (s.skipLastTimelinelabel = !0)
                          : l !== 'datetime' &&
                            i.dCtx.gridPad.right <
                              d / 2 - i.dCtx.yAxisWidthRight &&
                            !s.rotateXLabels &&
                            !a.config.xaxis.labels.trim &&
                            (a.config.xaxis.tickPlacement !== 'between' ||
                              a.globals.isBarHorizontal) &&
                            (i.dCtx.xPadRight = d / 2 + 1);
                    })(x);
                };
              o.yaxis.forEach(function (x, v) {
                u
                  ? (i.dCtx.gridPad.left < d && (i.dCtx.xPadLeft = d / 2 + 1),
                    (i.dCtx.xPadRight = d / 2 + 1))
                  : p(x, v);
              });
            },
          },
        ]),
        j
      );
    })(),
    Na = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.dCtx = t);
      }
      return (
        k(j, [
          {
            key: 'getyAxisLabelsCoords',
            value: function () {
              var t = this,
                i = this.w,
                a = [],
                s = 10,
                o = new xt(this.dCtx.ctx);
              return (
                i.config.yaxis.map(function (l, d) {
                  var u = i.globals.yAxisScale[d],
                    p = 0;
                  if (
                    (!o.isYAxisHidden(d) &&
                      l.labels.show &&
                      l.labels.minWidth !== void 0 &&
                      (p = l.labels.minWidth),
                    !o.isYAxisHidden(d) && l.labels.show && u.result.length)
                  ) {
                    var x = i.globals.yLabelFormatters[d],
                      v = u.niceMin === Number.MIN_VALUE ? 0 : u.niceMin,
                      b =
                        String(v).length > String(u.niceMax).length
                          ? v
                          : u.niceMax,
                      C = x(b, { seriesIndex: d, dataPointIndex: -1, w: i }),
                      S = C;
                    if (
                      ((C !== void 0 && C.length !== 0) || (C = b),
                      i.globals.isBarHorizontal)
                    ) {
                      s = 0;
                      var L = i.globals.labels.slice();
                      (C = x((C = E.getLargestStringFromArr(L)), {
                        seriesIndex: d,
                        dataPointIndex: -1,
                        w: i,
                      })),
                        (S = t.dCtx.dimHelpers.getLargestStringFromMultiArr(
                          C,
                          L
                        ));
                    }
                    var N = new W(t.dCtx.ctx),
                      T = 'rotate('.concat(l.labels.rotate, ' 0 0)'),
                      I = N.getTextRects(
                        C,
                        l.labels.style.fontSize,
                        l.labels.style.fontFamily,
                        T,
                        !1
                      ),
                      h = I;
                    C !== S &&
                      (h = N.getTextRects(
                        S,
                        l.labels.style.fontSize,
                        l.labels.style.fontFamily,
                        T,
                        !1
                      )),
                      a.push({
                        width:
                          (p > h.width || p > I.width
                            ? p
                            : h.width > I.width
                            ? h.width
                            : I.width) + s,
                        height: h.height > I.height ? h.height : I.height,
                      });
                  } else a.push({ width: 0, height: 0 });
                }),
                a
              );
            },
          },
          {
            key: 'getyAxisTitleCoords',
            value: function () {
              var t = this,
                i = this.w,
                a = [];
              return (
                i.config.yaxis.map(function (s, o) {
                  if (s.show && s.title.text !== void 0) {
                    var l = new W(t.dCtx.ctx),
                      d = 'rotate('.concat(s.title.rotate, ' 0 0)'),
                      u = l.getTextRects(
                        s.title.text,
                        s.title.style.fontSize,
                        s.title.style.fontFamily,
                        d,
                        !1
                      );
                    a.push({ width: u.width, height: u.height });
                  } else a.push({ width: 0, height: 0 });
                }),
                a
              );
            },
          },
          {
            key: 'getTotalYAxisWidth',
            value: function () {
              var t = this.w,
                i = 0,
                a = 0,
                s = 0,
                o = t.globals.yAxisScale.length > 1 ? 10 : 0,
                l = new xt(this.dCtx.ctx),
                d = function (u, p) {
                  var x = t.config.yaxis[p].floating,
                    v = 0;
                  u.width > 0 && !x
                    ? ((v = u.width + o),
                      (function (b) {
                        return t.globals.ignoreYAxisIndexes.indexOf(b) > -1;
                      })(p) && (v = v - u.width - o))
                    : (v = x || l.isYAxisHidden(p) ? 0 : 5),
                    t.config.yaxis[p].opposite ? (s += v) : (a += v),
                    (i += v);
                };
              return (
                t.globals.yLabelsCoords.map(function (u, p) {
                  d(u, p);
                }),
                t.globals.yTitleCoords.map(function (u, p) {
                  d(u, p);
                }),
                t.globals.isBarHorizontal &&
                  !t.config.yaxis[0].floating &&
                  (i =
                    t.globals.yLabelsCoords[0].width +
                    t.globals.yTitleCoords[0].width +
                    15),
                (this.dCtx.yAxisWidthLeft = a),
                (this.dCtx.yAxisWidthRight = s),
                i
              );
            },
          },
        ]),
        j
      );
    })(),
    Pr = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.dCtx = t);
      }
      return (
        k(j, [
          {
            key: 'gridPadForColumnsInNumericAxis',
            value: function (t) {
              var i = this.w;
              if (i.globals.noData || i.globals.allSeriesCollapsed) return 0;
              var a = function (x) {
                  return (
                    x === 'bar' ||
                    x === 'rangeBar' ||
                    x === 'candlestick' ||
                    x === 'boxPlot'
                  );
                },
                s = i.config.chart.type,
                o = 0,
                l = a(s) ? i.config.series.length : 1;
              if (
                (i.globals.comboBarCount > 0 && (l = i.globals.comboBarCount),
                i.globals.collapsedSeries.forEach(function (x) {
                  a(x.type) && (l -= 1);
                }),
                i.config.chart.stacked && (l = 1),
                (a(s) || i.globals.comboBarCount > 0) &&
                  i.globals.isXNumeric &&
                  !i.globals.isBarHorizontal &&
                  l > 0)
              ) {
                var d,
                  u,
                  p = Math.abs(i.globals.initialMaxX - i.globals.initialMinX);
                p <= 3 && (p = i.globals.dataPoints),
                  (d = p / t),
                  i.globals.minXDiff &&
                    i.globals.minXDiff / d > 0 &&
                    (u = i.globals.minXDiff / d),
                  u > t / 2 && (u /= 2),
                  (o =
                    ((u / l) *
                      parseInt(i.config.plotOptions.bar.columnWidth, 10)) /
                    100) < 1 && (o = 1),
                  (o = o / (l > 1 ? 1 : 1.5) + 5),
                  (i.globals.barPadForNumericAxis = o);
              }
              return o;
            },
          },
          {
            key: 'gridPadFortitleSubtitle',
            value: function () {
              var t = this,
                i = this.w,
                a = i.globals,
                s = this.dCtx.isSparkline || !i.globals.axisCharts ? 0 : 10;
              ['title', 'subtitle'].forEach(function (d) {
                i.config[d].text !== void 0
                  ? (s += i.config[d].margin)
                  : (s += t.dCtx.isSparkline || !i.globals.axisCharts ? 0 : 5);
              }),
                !i.config.legend.show ||
                  i.config.legend.position !== 'bottom' ||
                  i.config.legend.floating ||
                  i.globals.axisCharts ||
                  (s += 10);
              var o = this.dCtx.dimHelpers.getTitleSubtitleCoords('title'),
                l = this.dCtx.dimHelpers.getTitleSubtitleCoords('subtitle');
              (a.gridHeight = a.gridHeight - o.height - l.height - s),
                (a.translateY = a.translateY + o.height + l.height + s);
            },
          },
          {
            key: 'setGridXPosForDualYAxis',
            value: function (t, i) {
              var a = this.w,
                s = new xt(this.dCtx.ctx);
              a.config.yaxis.map(function (o, l) {
                a.globals.ignoreYAxisIndexes.indexOf(l) !== -1 ||
                  o.floating ||
                  s.isYAxisHidden(l) ||
                  (o.opposite &&
                    (a.globals.translateX =
                      a.globals.translateX -
                      (i[l].width + t[l].width) -
                      parseInt(a.config.yaxis[l].labels.style.fontSize, 10) /
                        1.2 -
                      12),
                  a.globals.translateX < 2 && (a.globals.translateX = 2));
              });
            },
          },
        ]),
        j
      );
    })(),
    Tr = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.lgRect = {}),
          (this.yAxisWidth = 0),
          (this.yAxisWidthLeft = 0),
          (this.yAxisWidthRight = 0),
          (this.xAxisHeight = 0),
          (this.isSparkline = this.w.config.chart.sparkline.enabled),
          (this.dimHelpers = new La(this)),
          (this.dimYAxis = new Na(this)),
          (this.dimXAxis = new yn(this)),
          (this.dimGrid = new Pr(this)),
          (this.lgWidthForSideLegends = 0),
          (this.gridPad = this.w.config.grid.padding),
          (this.xPadRight = 0),
          (this.xPadLeft = 0);
      }
      return (
        k(j, [
          {
            key: 'plotCoords',
            value: function () {
              var t = this,
                i = this.w,
                a = i.globals;
              (this.lgRect = this.dimHelpers.getLegendsRect()),
                this.isSparkline &&
                  (i.config.markers.discrete.length > 0 ||
                    i.config.markers.size > 0) &&
                  Object.entries(this.gridPad).forEach(function (o) {
                    var l = Z(o, 2),
                      d = l[0],
                      u = l[1];
                    t.gridPad[d] = Math.max(
                      u,
                      t.w.globals.markers.largestSize / 1.5
                    );
                  }),
                a.axisCharts
                  ? this.setDimensionsForAxisCharts()
                  : this.setDimensionsForNonAxisCharts(),
                this.dimGrid.gridPadFortitleSubtitle(),
                (a.gridHeight =
                  a.gridHeight - this.gridPad.top - this.gridPad.bottom),
                (a.gridWidth =
                  a.gridWidth -
                  this.gridPad.left -
                  this.gridPad.right -
                  this.xPadRight -
                  this.xPadLeft);
              var s = this.dimGrid.gridPadForColumnsInNumericAxis(a.gridWidth);
              (a.gridWidth = a.gridWidth - 2 * s),
                (a.translateX =
                  a.translateX +
                  this.gridPad.left +
                  this.xPadLeft +
                  (s > 0 ? s + 4 : 0)),
                (a.translateY = a.translateY + this.gridPad.top);
            },
          },
          {
            key: 'setDimensionsForAxisCharts',
            value: function () {
              var t = this,
                i = this.w,
                a = i.globals,
                s = this.dimYAxis.getyAxisLabelsCoords(),
                o = this.dimYAxis.getyAxisTitleCoords();
              (i.globals.yLabelsCoords = []),
                (i.globals.yTitleCoords = []),
                i.config.yaxis.map(function (C, S) {
                  i.globals.yLabelsCoords.push({ width: s[S].width, index: S }),
                    i.globals.yTitleCoords.push({
                      width: o[S].width,
                      index: S,
                    });
                }),
                (this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth());
              var l = this.dimXAxis.getxAxisLabelsCoords(),
                d = this.dimXAxis.getxAxisGroupLabelsCoords(),
                u = this.dimXAxis.getxAxisTitleCoords();
              this.conditionalChecksForAxisCoords(l, u, d),
                (a.translateXAxisY = i.globals.rotateXLabels
                  ? this.xAxisHeight / 8
                  : -4),
                (a.translateXAxisX =
                  i.globals.rotateXLabels &&
                  i.globals.isXNumeric &&
                  i.config.xaxis.labels.rotate <= -45
                    ? -this.xAxisWidth / 4
                    : 0),
                i.globals.isBarHorizontal &&
                  ((a.rotateXLabels = !1),
                  (a.translateXAxisY =
                    (parseInt(i.config.xaxis.labels.style.fontSize, 10) / 1.5) *
                    -1)),
                (a.translateXAxisY =
                  a.translateXAxisY + i.config.xaxis.labels.offsetY),
                (a.translateXAxisX =
                  a.translateXAxisX + i.config.xaxis.labels.offsetX);
              var p = this.yAxisWidth,
                x = this.xAxisHeight;
              (a.xAxisLabelsHeight = this.xAxisHeight - u.height),
                (a.xAxisGroupLabelsHeight = a.xAxisLabelsHeight - l.height),
                (a.xAxisLabelsWidth = this.xAxisWidth),
                (a.xAxisHeight = this.xAxisHeight);
              var v = 10;
              (i.config.chart.type === 'radar' || this.isSparkline) &&
                ((p = 0), (x = a.goldenPadding)),
                this.isSparkline && (this.lgRect = { height: 0, width: 0 }),
                (this.isSparkline || i.config.chart.type === 'treemap') &&
                  ((p = 0), (x = 0), (v = 0)),
                this.isSparkline || this.dimXAxis.additionalPaddingXLabels(l);
              var b = function () {
                (a.translateX = p),
                  (a.gridHeight =
                    a.svgHeight -
                    t.lgRect.height -
                    x -
                    (t.isSparkline || i.config.chart.type === 'treemap'
                      ? 0
                      : i.globals.rotateXLabels
                      ? 10
                      : 15)),
                  (a.gridWidth = a.svgWidth - p);
              };
              switch (
                (i.config.xaxis.position === 'top' &&
                  (v = a.xAxisHeight - i.config.xaxis.axisTicks.height - 5),
                i.config.legend.position)
              ) {
                case 'bottom':
                  (a.translateY = v), b();
                  break;
                case 'top':
                  (a.translateY = this.lgRect.height + v), b();
                  break;
                case 'left':
                  (a.translateY = v),
                    (a.translateX = this.lgRect.width + p),
                    (a.gridHeight = a.svgHeight - x - 12),
                    (a.gridWidth = a.svgWidth - this.lgRect.width - p);
                  break;
                case 'right':
                  (a.translateY = v),
                    (a.translateX = p),
                    (a.gridHeight = a.svgHeight - x - 12),
                    (a.gridWidth = a.svgWidth - this.lgRect.width - p - 5);
                  break;
                default:
                  throw new Error('Legend position not supported');
              }
              this.dimGrid.setGridXPosForDualYAxis(o, s),
                new bn(this.ctx).setYAxisXPosition(s, o);
            },
          },
          {
            key: 'setDimensionsForNonAxisCharts',
            value: function () {
              var t = this.w,
                i = t.globals,
                a = t.config,
                s = 0;
              t.config.legend.show && !t.config.legend.floating && (s = 20);
              var o =
                  a.chart.type === 'pie' ||
                  a.chart.type === 'polarArea' ||
                  a.chart.type === 'donut'
                    ? 'pie'
                    : 'radialBar',
                l = a.plotOptions[o].offsetY,
                d = a.plotOptions[o].offsetX;
              if (!a.legend.show || a.legend.floating)
                return (
                  (i.gridHeight =
                    i.svgHeight - a.grid.padding.left + a.grid.padding.right),
                  (i.gridWidth = i.gridHeight),
                  (i.translateY = l),
                  void (i.translateX = d + (i.svgWidth - i.gridWidth) / 2)
                );
              switch (a.legend.position) {
                case 'bottom':
                  (i.gridHeight =
                    i.svgHeight - this.lgRect.height - i.goldenPadding),
                    (i.gridWidth = i.svgWidth),
                    (i.translateY = l - 10),
                    (i.translateX = d + (i.svgWidth - i.gridWidth) / 2);
                  break;
                case 'top':
                  (i.gridHeight =
                    i.svgHeight - this.lgRect.height - i.goldenPadding),
                    (i.gridWidth = i.svgWidth),
                    (i.translateY = this.lgRect.height + l + 10),
                    (i.translateX = d + (i.svgWidth - i.gridWidth) / 2);
                  break;
                case 'left':
                  (i.gridWidth = i.svgWidth - this.lgRect.width - s),
                    (i.gridHeight =
                      a.chart.height !== 'auto' ? i.svgHeight : i.gridWidth),
                    (i.translateY = l),
                    (i.translateX = d + this.lgRect.width + s);
                  break;
                case 'right':
                  (i.gridWidth = i.svgWidth - this.lgRect.width - s - 5),
                    (i.gridHeight =
                      a.chart.height !== 'auto' ? i.svgHeight : i.gridWidth),
                    (i.translateY = l),
                    (i.translateX = d + 10);
                  break;
                default:
                  throw new Error('Legend position not supported');
              }
            },
          },
          {
            key: 'conditionalChecksForAxisCoords',
            value: function (t, i, a) {
              var s = this.w,
                o = s.globals.hasXaxisGroups ? 2 : 1,
                l = a.height + t.height + i.height,
                d = s.globals.isMultiLineX ? 1.2 : s.globals.LINE_HEIGHT_RATIO,
                u = s.globals.rotateXLabels ? 22 : 10,
                p =
                  s.globals.rotateXLabels &&
                  s.config.legend.position === 'bottom'
                    ? 10
                    : 0;
              (this.xAxisHeight = l * d + o * u + p),
                (this.xAxisWidth = t.width),
                this.xAxisHeight - i.height > s.config.xaxis.labels.maxHeight &&
                  (this.xAxisHeight = s.config.xaxis.labels.maxHeight),
                s.config.xaxis.labels.minHeight &&
                  this.xAxisHeight < s.config.xaxis.labels.minHeight &&
                  (this.xAxisHeight = s.config.xaxis.labels.minHeight),
                s.config.xaxis.floating && (this.xAxisHeight = 0);
              var x = 0,
                v = 0;
              s.config.yaxis.forEach(function (b) {
                (x += b.labels.minWidth), (v += b.labels.maxWidth);
              }),
                this.yAxisWidth < x && (this.yAxisWidth = x),
                this.yAxisWidth > v && (this.yAxisWidth = v);
            },
          },
        ]),
        j
      );
    })(),
    Ea = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.lgCtx = t);
      }
      return (
        k(j, [
          {
            key: 'getLegendStyles',
            value: function () {
              var t = document.createElement('style');
              t.setAttribute('type', 'text/css');
              var i = document.createTextNode(`	
    	
      .apexcharts-legend {	
        display: flex;	
        overflow: auto;	
        padding: 0 10px;	
      }	
      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {	
        flex-wrap: wrap	
      }	
      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        flex-direction: column;	
        bottom: 0;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        justify-content: flex-start;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {	
        justify-content: center;  	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {	
        justify-content: flex-end;	
      }	
      .apexcharts-legend-series {	
        cursor: pointer;	
        line-height: normal;	
      }	
      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{	
        display: flex;	
        align-items: center;	
      }	
      .apexcharts-legend-text {	
        position: relative;	
        font-size: 14px;	
      }	
      .apexcharts-legend-text *, .apexcharts-legend-marker * {	
        pointer-events: none;	
      }	
      .apexcharts-legend-marker {	
        position: relative;	
        display: inline-block;	
        cursor: pointer;	
        margin-right: 3px;	
        border-style: solid;
      }	
      	
      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{	
        display: inline-block;	
      }	
      .apexcharts-legend-series.apexcharts-no-click {	
        cursor: auto;	
      }	
      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {	
        display: none !important;	
      }	
      .apexcharts-inactive-legend {	
        opacity: 0.45;	
      }`);
              return t.appendChild(i), t;
            },
          },
          {
            key: 'getLegendBBox',
            value: function () {
              var t = this.w.globals.dom.baseEl
                  .querySelector('.apexcharts-legend')
                  .getBoundingClientRect(),
                i = t.width;
              return { clwh: t.height, clww: i };
            },
          },
          {
            key: 'appendToForeignObject',
            value: function () {
              this.w.globals.dom.elLegendForeign.appendChild(
                this.getLegendStyles()
              );
            },
          },
          {
            key: 'toggleDataSeries',
            value: function (t, i) {
              var a = this,
                s = this.w;
              if (s.globals.axisCharts || s.config.chart.type === 'radialBar') {
                s.globals.resized = !0;
                var o = null,
                  l = null;
                (s.globals.risingSeries = []),
                  s.globals.axisCharts
                    ? ((o = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(t, "']")
                      )),
                      (l = parseInt(o.getAttribute('data:realIndex'), 10)))
                    : ((o = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(t + 1, "']")
                      )),
                      (l = parseInt(o.getAttribute('rel'), 10) - 1)),
                  i
                    ? [
                        {
                          cs: s.globals.collapsedSeries,
                          csi: s.globals.collapsedSeriesIndices,
                        },
                        {
                          cs: s.globals.ancillaryCollapsedSeries,
                          csi: s.globals.ancillaryCollapsedSeriesIndices,
                        },
                      ].forEach(function (x) {
                        a.riseCollapsedSeries(x.cs, x.csi, l);
                      })
                    : this.hideSeries({ seriesEl: o, realIndex: l });
              } else {
                var d = s.globals.dom.Paper.select(
                    " .apexcharts-series[rel='".concat(t + 1, "'] path")
                  ),
                  u = s.config.chart.type;
                if (u === 'pie' || u === 'polarArea' || u === 'donut') {
                  var p = s.config.plotOptions.pie.donut.labels;
                  new W(this.lgCtx.ctx).pathMouseDown(d.members[0], null),
                    this.lgCtx.ctx.pie.printDataLabelsInner(
                      d.members[0].node,
                      p
                    );
                }
                d.fire('click');
              }
            },
          },
          {
            key: 'hideSeries',
            value: function (t) {
              var i = t.seriesEl,
                a = t.realIndex,
                s = this.w,
                o = E.clone(s.config.series);
              if (s.globals.axisCharts) {
                var l = !1;
                if (
                  (s.config.yaxis[a] &&
                    s.config.yaxis[a].show &&
                    s.config.yaxis[a].showAlways &&
                    ((l = !0),
                    s.globals.ancillaryCollapsedSeriesIndices.indexOf(a) < 0 &&
                      (s.globals.ancillaryCollapsedSeries.push({
                        index: a,
                        data: o[a].data.slice(),
                        type: i.parentNode.className.baseVal.split('-')[1],
                      }),
                      s.globals.ancillaryCollapsedSeriesIndices.push(a))),
                  !l)
                ) {
                  s.globals.collapsedSeries.push({
                    index: a,
                    data: o[a].data.slice(),
                    type: i.parentNode.className.baseVal.split('-')[1],
                  }),
                    s.globals.collapsedSeriesIndices.push(a);
                  var d = s.globals.risingSeries.indexOf(a);
                  s.globals.risingSeries.splice(d, 1);
                }
              } else
                s.globals.collapsedSeries.push({ index: a, data: o[a] }),
                  s.globals.collapsedSeriesIndices.push(a);
              for (var u = i.childNodes, p = 0; p < u.length; p++)
                u[p].classList.contains('apexcharts-series-markers-wrap') &&
                  (u[p].classList.contains('apexcharts-hide')
                    ? u[p].classList.remove('apexcharts-hide')
                    : u[p].classList.add('apexcharts-hide'));
              (s.globals.allSeriesCollapsed =
                s.globals.collapsedSeries.length === s.config.series.length),
                (o = this._getSeriesBasedOnCollapsedState(o)),
                this.lgCtx.ctx.updateHelpers._updateSeries(
                  o,
                  s.config.chart.animations.dynamicAnimation.enabled
                );
            },
          },
          {
            key: 'riseCollapsedSeries',
            value: function (t, i, a) {
              var s = this.w,
                o = E.clone(s.config.series);
              if (t.length > 0) {
                for (var l = 0; l < t.length; l++)
                  t[l].index === a &&
                    (s.globals.axisCharts
                      ? ((o[a].data = t[l].data.slice()),
                        t.splice(l, 1),
                        i.splice(l, 1),
                        s.globals.risingSeries.push(a))
                      : ((o[a] = t[l].data),
                        t.splice(l, 1),
                        i.splice(l, 1),
                        s.globals.risingSeries.push(a)));
                (o = this._getSeriesBasedOnCollapsedState(o)),
                  this.lgCtx.ctx.updateHelpers._updateSeries(
                    o,
                    s.config.chart.animations.dynamicAnimation.enabled
                  );
              }
            },
          },
          {
            key: '_getSeriesBasedOnCollapsedState',
            value: function (t) {
              var i = this.w;
              return (
                i.globals.axisCharts
                  ? t.forEach(function (a, s) {
                      i.globals.collapsedSeriesIndices.indexOf(s) > -1 &&
                        (t[s].data = []);
                    })
                  : t.forEach(function (a, s) {
                      i.globals.collapsedSeriesIndices.indexOf(s) > -1 &&
                        (t[s] = 0);
                    }),
                t
              );
            },
          },
        ]),
        j
      );
    })(),
    ja = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.onLegendClick = this.onLegendClick.bind(this)),
          (this.onLegendHovered = this.onLegendHovered.bind(this)),
          (this.isBarsDistributed =
            this.w.config.chart.type === 'bar' &&
            this.w.config.plotOptions.bar.distributed &&
            this.w.config.series.length === 1),
          (this.legendHelpers = new Ea(this));
      }
      return (
        k(j, [
          {
            key: 'init',
            value: function () {
              var t = this.w,
                i = t.globals,
                a = t.config;
              if (
                ((a.legend.showForSingleSeries && i.series.length === 1) ||
                  this.isBarsDistributed ||
                  i.series.length > 1 ||
                  !i.axisCharts) &&
                a.legend.show
              ) {
                for (; i.dom.elLegendWrap.firstChild; )
                  i.dom.elLegendWrap.removeChild(i.dom.elLegendWrap.firstChild);
                this.drawLegends(),
                  E.isIE11()
                    ? document
                        .getElementsByTagName('head')[0]
                        .appendChild(this.legendHelpers.getLegendStyles())
                    : this.legendHelpers.appendToForeignObject(),
                  a.legend.position === 'bottom' || a.legend.position === 'top'
                    ? this.legendAlignHorizontal()
                    : (a.legend.position !== 'right' &&
                        a.legend.position !== 'left') ||
                      this.legendAlignVertical();
              }
            },
          },
          {
            key: 'drawLegends',
            value: function () {
              var t = this,
                i = this.w,
                a = i.config.legend.fontFamily,
                s = i.globals.seriesNames,
                o = i.globals.colors.slice();
              if (i.config.chart.type === 'heatmap') {
                var l = i.config.plotOptions.heatmap.colorScale.ranges;
                (s = l.map(function (ie) {
                  return ie.name ? ie.name : ie.from + ' - ' + ie.to;
                })),
                  (o = l.map(function (ie) {
                    return ie.color;
                  }));
              } else this.isBarsDistributed && (s = i.globals.labels.slice());
              i.config.legend.customLegendItems.length &&
                (s = i.config.legend.customLegendItems);
              for (
                var d = i.globals.legendFormatter,
                  u = i.config.legend.inverseOrder,
                  p = u ? s.length - 1 : 0;
                u ? p >= 0 : p <= s.length - 1;
                u ? p-- : p++
              ) {
                var x = d(s[p], { seriesIndex: p, w: i }),
                  v = !1,
                  b = !1;
                if (i.globals.collapsedSeries.length > 0)
                  for (var C = 0; C < i.globals.collapsedSeries.length; C++)
                    i.globals.collapsedSeries[C].index === p && (v = !0);
                if (i.globals.ancillaryCollapsedSeriesIndices.length > 0)
                  for (
                    var S = 0;
                    S < i.globals.ancillaryCollapsedSeriesIndices.length;
                    S++
                  )
                    i.globals.ancillaryCollapsedSeriesIndices[S] === p &&
                      (b = !0);
                var L = document.createElement('span');
                L.classList.add('apexcharts-legend-marker');
                var N = i.config.legend.markers.offsetX,
                  T = i.config.legend.markers.offsetY,
                  I = i.config.legend.markers.height,
                  h = i.config.legend.markers.width,
                  y = i.config.legend.markers.strokeWidth,
                  A = i.config.legend.markers.strokeColor,
                  P = i.config.legend.markers.radius,
                  R = L.style;
                (R.background = o[p]),
                  (R.color = o[p]),
                  R.setProperty('background', o[p], 'important'),
                  i.config.legend.markers.fillColors &&
                    i.config.legend.markers.fillColors[p] &&
                    (R.background = i.config.legend.markers.fillColors[p]),
                  i.globals.seriesColors[p] !== void 0 &&
                    ((R.background = i.globals.seriesColors[p]),
                    (R.color = i.globals.seriesColors[p])),
                  (R.height = Array.isArray(I)
                    ? parseFloat(I[p]) + 'px'
                    : parseFloat(I) + 'px'),
                  (R.width = Array.isArray(h)
                    ? parseFloat(h[p]) + 'px'
                    : parseFloat(h) + 'px'),
                  (R.left =
                    (Array.isArray(N) ? parseFloat(N[p]) : parseFloat(N)) +
                    'px'),
                  (R.top =
                    (Array.isArray(T) ? parseFloat(T[p]) : parseFloat(T)) +
                    'px'),
                  (R.borderWidth = Array.isArray(y) ? y[p] : y),
                  (R.borderColor = Array.isArray(A) ? A[p] : A),
                  (R.borderRadius = Array.isArray(P)
                    ? parseFloat(P[p]) + 'px'
                    : parseFloat(P) + 'px'),
                  i.config.legend.markers.customHTML &&
                    (Array.isArray(i.config.legend.markers.customHTML)
                      ? i.config.legend.markers.customHTML[p] &&
                        (L.innerHTML = i.config.legend.markers.customHTML[p]())
                      : (L.innerHTML = i.config.legend.markers.customHTML())),
                  W.setAttrs(L, { rel: p + 1, 'data:collapsed': v || b }),
                  (v || b) && L.classList.add('apexcharts-inactive-legend');
                var O = document.createElement('div'),
                  X = document.createElement('span');
                X.classList.add('apexcharts-legend-text'),
                  (X.innerHTML = Array.isArray(x) ? x.join(' ') : x);
                var G = i.config.legend.labels.useSeriesColors
                  ? i.globals.colors[p]
                  : i.config.legend.labels.colors;
                G || (G = i.config.chart.foreColor),
                  (X.style.color = G),
                  (X.style.fontSize =
                    parseFloat(i.config.legend.fontSize) + 'px'),
                  (X.style.fontWeight = i.config.legend.fontWeight),
                  (X.style.fontFamily = a || i.config.chart.fontFamily),
                  W.setAttrs(X, {
                    rel: p + 1,
                    i: p,
                    'data:default-text': encodeURIComponent(x),
                    'data:collapsed': v || b,
                  }),
                  O.appendChild(L),
                  O.appendChild(X);
                var q = new ae(this.ctx);
                i.config.legend.showForZeroSeries ||
                  (q.getSeriesTotalByIndex(p) === 0 &&
                    q.seriesHaveSameValues(p) &&
                    !q.isSeriesNull(p) &&
                    i.globals.collapsedSeriesIndices.indexOf(p) === -1 &&
                    i.globals.ancillaryCollapsedSeriesIndices.indexOf(p) ===
                      -1 &&
                    O.classList.add('apexcharts-hidden-zero-series')),
                  i.config.legend.showForNullSeries ||
                    (q.isSeriesNull(p) &&
                      i.globals.collapsedSeriesIndices.indexOf(p) === -1 &&
                      i.globals.ancillaryCollapsedSeriesIndices.indexOf(p) ===
                        -1 &&
                      O.classList.add('apexcharts-hidden-null-series')),
                  i.globals.dom.elLegendWrap.appendChild(O),
                  i.globals.dom.elLegendWrap.classList.add(
                    'apexcharts-align-'.concat(i.config.legend.horizontalAlign)
                  ),
                  i.globals.dom.elLegendWrap.classList.add(
                    'apx-legend-position-' + i.config.legend.position
                  ),
                  O.classList.add('apexcharts-legend-series'),
                  (O.style.margin = ''
                    .concat(i.config.legend.itemMargin.vertical, 'px ')
                    .concat(i.config.legend.itemMargin.horizontal, 'px')),
                  (i.globals.dom.elLegendWrap.style.width = i.config.legend
                    .width
                    ? i.config.legend.width + 'px'
                    : ''),
                  (i.globals.dom.elLegendWrap.style.height = i.config.legend
                    .height
                    ? i.config.legend.height + 'px'
                    : ''),
                  W.setAttrs(O, {
                    rel: p + 1,
                    seriesName: E.escapeString(s[p]),
                    'data:collapsed': v || b,
                  }),
                  (v || b) && O.classList.add('apexcharts-inactive-legend'),
                  i.config.legend.onItemClick.toggleDataSeries ||
                    O.classList.add('apexcharts-no-click');
              }
              i.globals.dom.elWrap.addEventListener(
                'click',
                t.onLegendClick,
                !0
              ),
                i.config.legend.onItemHover.highlightDataSeries &&
                  i.config.legend.customLegendItems.length === 0 &&
                  (i.globals.dom.elWrap.addEventListener(
                    'mousemove',
                    t.onLegendHovered,
                    !0
                  ),
                  i.globals.dom.elWrap.addEventListener(
                    'mouseout',
                    t.onLegendHovered,
                    !0
                  ));
            },
          },
          {
            key: 'setLegendWrapXY',
            value: function (t, i) {
              var a = this.w,
                s = a.globals.dom.elLegendWrap,
                o = s.getBoundingClientRect(),
                l = 0,
                d = 0;
              if (a.config.legend.position === 'bottom')
                d += a.globals.svgHeight - o.height / 2;
              else if (a.config.legend.position === 'top') {
                var u = new Tr(this.ctx),
                  p = u.dimHelpers.getTitleSubtitleCoords('title').height,
                  x = u.dimHelpers.getTitleSubtitleCoords('subtitle').height;
                d = d + (p > 0 ? p - 10 : 0) + (x > 0 ? x - 10 : 0);
              }
              (s.style.position = 'absolute'),
                (l = l + t + a.config.legend.offsetX),
                (d = d + i + a.config.legend.offsetY),
                (s.style.left = l + 'px'),
                (s.style.top = d + 'px'),
                a.config.legend.position === 'bottom'
                  ? ((s.style.top = 'auto'),
                    (s.style.bottom = 5 - a.config.legend.offsetY + 'px'))
                  : a.config.legend.position === 'right' &&
                    ((s.style.left = 'auto'),
                    (s.style.right = 25 + a.config.legend.offsetX + 'px')),
                ['width', 'height'].forEach(function (v) {
                  s.style[v] &&
                    (s.style[v] = parseInt(a.config.legend[v], 10) + 'px');
                });
            },
          },
          {
            key: 'legendAlignHorizontal',
            value: function () {
              var t = this.w;
              t.globals.dom.elLegendWrap.style.right = 0;
              var i = this.legendHelpers.getLegendBBox(),
                a = new Tr(this.ctx),
                s = a.dimHelpers.getTitleSubtitleCoords('title'),
                o = a.dimHelpers.getTitleSubtitleCoords('subtitle'),
                l = 0;
              t.config.legend.position === 'bottom'
                ? (l = -i.clwh / 1.8)
                : t.config.legend.position === 'top' &&
                  (l =
                    s.height +
                    o.height +
                    t.config.title.margin +
                    t.config.subtitle.margin -
                    10),
                this.setLegendWrapXY(20, l);
            },
          },
          {
            key: 'legendAlignVertical',
            value: function () {
              var t = this.w,
                i = this.legendHelpers.getLegendBBox(),
                a = 0;
              t.config.legend.position === 'left' && (a = 20),
                t.config.legend.position === 'right' &&
                  (a = t.globals.svgWidth - i.clww - 10),
                this.setLegendWrapXY(a, 20);
            },
          },
          {
            key: 'onLegendHovered',
            value: function (t) {
              var i = this.w,
                a =
                  t.target.classList.contains('apexcharts-legend-text') ||
                  t.target.classList.contains('apexcharts-legend-marker');
              if (i.config.chart.type === 'heatmap' || this.isBarsDistributed) {
                if (a) {
                  var s = parseInt(t.target.getAttribute('rel'), 10) - 1;
                  this.ctx.events.fireEvent('legendHover', [
                    this.ctx,
                    s,
                    this.w,
                  ]),
                    new Be(this.ctx).highlightRangeInSeries(t, t.target);
                }
              } else
                !t.target.classList.contains('apexcharts-inactive-legend') &&
                  a &&
                  new Be(this.ctx).toggleSeriesOnHover(t, t.target);
            },
          },
          {
            key: 'onLegendClick',
            value: function (t) {
              var i = this.w;
              if (
                !i.config.legend.customLegendItems.length &&
                (t.target.classList.contains('apexcharts-legend-text') ||
                  t.target.classList.contains('apexcharts-legend-marker'))
              ) {
                var a = parseInt(t.target.getAttribute('rel'), 10) - 1,
                  s = t.target.getAttribute('data:collapsed') === 'true',
                  o = this.w.config.chart.events.legendClick;
                typeof o == 'function' && o(this.ctx, a, this.w),
                  this.ctx.events.fireEvent('legendClick', [
                    this.ctx,
                    a,
                    this.w,
                  ]);
                var l = this.w.config.legend.markers.onClick;
                typeof l == 'function' &&
                  t.target.classList.contains('apexcharts-legend-marker') &&
                  (l(this.ctx, a, this.w),
                  this.ctx.events.fireEvent('legendMarkerClick', [
                    this.ctx,
                    a,
                    this.w,
                  ])),
                  i.config.chart.type !== 'treemap' &&
                    i.config.chart.type !== 'heatmap' &&
                    !this.isBarsDistributed &&
                    i.config.legend.onItemClick.toggleDataSeries &&
                    this.legendHelpers.toggleDataSeries(a, s);
              }
            },
          },
        ]),
        j
      );
    })(),
    wn = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
        var i = this.w;
        (this.ev = this.w.config.chart.events),
          (this.selectedClass = 'apexcharts-selected'),
          (this.localeValues = this.w.globals.locale.toolbar),
          (this.minX = i.globals.minX),
          (this.maxX = i.globals.maxX);
      }
      return (
        k(j, [
          {
            key: 'createToolbar',
            value: function () {
              var t = this,
                i = this.w,
                a = function () {
                  return document.createElement('div');
                },
                s = a();
              if (
                (s.setAttribute('class', 'apexcharts-toolbar'),
                (s.style.top = i.config.chart.toolbar.offsetY + 'px'),
                (s.style.right = 3 - i.config.chart.toolbar.offsetX + 'px'),
                i.globals.dom.elWrap.appendChild(s),
                (this.elZoom = a()),
                (this.elZoomIn = a()),
                (this.elZoomOut = a()),
                (this.elPan = a()),
                (this.elSelection = a()),
                (this.elZoomReset = a()),
                (this.elMenuIcon = a()),
                (this.elMenu = a()),
                (this.elCustomIcons = []),
                (this.t = i.config.chart.toolbar.tools),
                Array.isArray(this.t.customIcons))
              )
                for (var o = 0; o < this.t.customIcons.length; o++)
                  this.elCustomIcons.push(a());
              var l = [],
                d = function (v, b, C) {
                  var S = v.toLowerCase();
                  t.t[S] &&
                    i.config.chart.zoom.enabled &&
                    l.push({
                      el: b,
                      icon: typeof t.t[S] == 'string' ? t.t[S] : C,
                      title: t.localeValues[v],
                      class: 'apexcharts-'.concat(S, '-icon'),
                    });
                };
              d(
                'zoomIn',
                this.elZoomIn,
                `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
              ),
                d(
                  'zoomOut',
                  this.elZoomOut,
                  `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
                );
              var u = function (v) {
                t.t[v] &&
                  i.config.chart[v].enabled &&
                  l.push({
                    el: v === 'zoom' ? t.elZoom : t.elSelection,
                    icon:
                      typeof t.t[v] == 'string'
                        ? t.t[v]
                        : v === 'zoom'
                        ? `<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
    <path d="M0 0h24v24H0V0z" fill="none"/>
    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>
</svg>`
                        : `<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>
</svg>`,
                    title:
                      t.localeValues[
                        v === 'zoom' ? 'selectionZoom' : 'selection'
                      ],
                    class: i.globals.isTouchDevice
                      ? 'apexcharts-element-hidden'
                      : 'apexcharts-'.concat(v, '-icon'),
                  });
              };
              u('zoom'),
                u('selection'),
                this.t.pan &&
                  i.config.chart.zoom.enabled &&
                  l.push({
                    el: this.elPan,
                    icon:
                      typeof this.t.pan == 'string'
                        ? this.t.pan
                        : `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <defs>
        <path d="M0 0h24v24H0z" id="a"/>
    </defs>
    <clipPath id="b">
        <use overflow="visible" xlink:href="#a"/>
    </clipPath>
    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>
</svg>`,
                    title: this.localeValues.pan,
                    class: i.globals.isTouchDevice
                      ? 'apexcharts-element-hidden'
                      : 'apexcharts-pan-icon',
                  }),
                d(
                  'reset',
                  this.elZoomReset,
                  `<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
    <path d="M0 0h24v24H0z" fill="none"/>
</svg>`
                ),
                this.t.download &&
                  l.push({
                    el: this.elMenuIcon,
                    icon:
                      typeof this.t.download == 'string'
                        ? this.t.download
                        : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                    title: this.localeValues.menu,
                    class: 'apexcharts-menu-icon',
                  });
              for (var p = 0; p < this.elCustomIcons.length; p++)
                l.push({
                  el: this.elCustomIcons[p],
                  icon: this.t.customIcons[p].icon,
                  title: this.t.customIcons[p].title,
                  index: this.t.customIcons[p].index,
                  class:
                    'apexcharts-toolbar-custom-icon ' +
                    this.t.customIcons[p].class,
                });
              l.forEach(function (v, b) {
                v.index && E.moveIndexInArray(l, b, v.index);
              });
              for (var x = 0; x < l.length; x++)
                W.setAttrs(l[x].el, { class: l[x].class, title: l[x].title }),
                  (l[x].el.innerHTML = l[x].icon),
                  s.appendChild(l[x].el);
              this._createHamburgerMenu(s),
                i.globals.zoomEnabled
                  ? this.elZoom.classList.add(this.selectedClass)
                  : i.globals.panEnabled
                  ? this.elPan.classList.add(this.selectedClass)
                  : i.globals.selectionEnabled &&
                    this.elSelection.classList.add(this.selectedClass),
                this.addToolbarEventListeners();
            },
          },
          {
            key: '_createHamburgerMenu',
            value: function (t) {
              (this.elMenuItems = []),
                t.appendChild(this.elMenu),
                W.setAttrs(this.elMenu, { class: 'apexcharts-menu' });
              var i = [
                { name: 'exportSVG', title: this.localeValues.exportToSVG },
                { name: 'exportPNG', title: this.localeValues.exportToPNG },
                { name: 'exportCSV', title: this.localeValues.exportToCSV },
              ];
              this.w.globals.allSeriesHasEqualX || i.splice(2, 1);
              for (var a = 0; a < i.length; a++)
                this.elMenuItems.push(document.createElement('div')),
                  (this.elMenuItems[a].innerHTML = i[a].title),
                  W.setAttrs(this.elMenuItems[a], {
                    class: 'apexcharts-menu-item '.concat(i[a].name),
                    title: i[a].title,
                  }),
                  this.elMenu.appendChild(this.elMenuItems[a]);
            },
          },
          {
            key: 'addToolbarEventListeners',
            value: function () {
              var t = this;
              this.elZoomReset.addEventListener(
                'click',
                this.handleZoomReset.bind(this)
              ),
                this.elSelection.addEventListener(
                  'click',
                  this.toggleZoomSelection.bind(this, 'selection')
                ),
                this.elZoom.addEventListener(
                  'click',
                  this.toggleZoomSelection.bind(this, 'zoom')
                ),
                this.elZoomIn.addEventListener(
                  'click',
                  this.handleZoomIn.bind(this)
                ),
                this.elZoomOut.addEventListener(
                  'click',
                  this.handleZoomOut.bind(this)
                ),
                this.elPan.addEventListener(
                  'click',
                  this.togglePanning.bind(this)
                ),
                this.elMenuIcon.addEventListener(
                  'click',
                  this.toggleMenu.bind(this)
                ),
                this.elMenuItems.forEach(function (a) {
                  a.classList.contains('exportSVG')
                    ? a.addEventListener(
                        'click',
                        t.handleDownload.bind(t, 'svg')
                      )
                    : a.classList.contains('exportPNG')
                    ? a.addEventListener(
                        'click',
                        t.handleDownload.bind(t, 'png')
                      )
                    : a.classList.contains('exportCSV') &&
                      a.addEventListener(
                        'click',
                        t.handleDownload.bind(t, 'csv')
                      );
                });
              for (var i = 0; i < this.t.customIcons.length; i++)
                this.elCustomIcons[i].addEventListener(
                  'click',
                  this.t.customIcons[i].click.bind(this, this.ctx, this.ctx.w)
                );
            },
          },
          {
            key: 'toggleZoomSelection',
            value: function (t) {
              this.ctx.getSyncedCharts().forEach(function (i) {
                i.ctx.toolbar.toggleOtherControls();
                var a =
                    t === 'selection'
                      ? i.ctx.toolbar.elSelection
                      : i.ctx.toolbar.elZoom,
                  s = t === 'selection' ? 'selectionEnabled' : 'zoomEnabled';
                (i.w.globals[s] = !i.w.globals[s]),
                  a.classList.contains(i.ctx.toolbar.selectedClass)
                    ? a.classList.remove(i.ctx.toolbar.selectedClass)
                    : a.classList.add(i.ctx.toolbar.selectedClass);
              });
            },
          },
          {
            key: 'getToolbarIconsReference',
            value: function () {
              var t = this.w;
              this.elZoom ||
                (this.elZoom = t.globals.dom.baseEl.querySelector(
                  '.apexcharts-zoom-icon'
                )),
                this.elPan ||
                  (this.elPan = t.globals.dom.baseEl.querySelector(
                    '.apexcharts-pan-icon'
                  )),
                this.elSelection ||
                  (this.elSelection = t.globals.dom.baseEl.querySelector(
                    '.apexcharts-selection-icon'
                  ));
            },
          },
          {
            key: 'enableZoomPanFromToolbar',
            value: function (t) {
              this.toggleOtherControls(),
                t === 'pan'
                  ? (this.w.globals.panEnabled = !0)
                  : (this.w.globals.zoomEnabled = !0);
              var i = t === 'pan' ? this.elPan : this.elZoom,
                a = t === 'pan' ? this.elZoom : this.elPan;
              i && i.classList.add(this.selectedClass),
                a && a.classList.remove(this.selectedClass);
            },
          },
          {
            key: 'togglePanning',
            value: function () {
              this.ctx.getSyncedCharts().forEach(function (t) {
                t.ctx.toolbar.toggleOtherControls(),
                  (t.w.globals.panEnabled = !t.w.globals.panEnabled),
                  t.ctx.toolbar.elPan.classList.contains(
                    t.ctx.toolbar.selectedClass
                  )
                    ? t.ctx.toolbar.elPan.classList.remove(
                        t.ctx.toolbar.selectedClass
                      )
                    : t.ctx.toolbar.elPan.classList.add(
                        t.ctx.toolbar.selectedClass
                      );
              });
            },
          },
          {
            key: 'toggleOtherControls',
            value: function () {
              var t = this,
                i = this.w;
              (i.globals.panEnabled = !1),
                (i.globals.zoomEnabled = !1),
                (i.globals.selectionEnabled = !1),
                this.getToolbarIconsReference(),
                [this.elPan, this.elSelection, this.elZoom].forEach(function (
                  a
                ) {
                  a && a.classList.remove(t.selectedClass);
                });
            },
          },
          {
            key: 'handleZoomIn',
            value: function () {
              var t = this.w;
              t.globals.isRangeBar &&
                ((this.minX = t.globals.minY), (this.maxX = t.globals.maxY));
              var i = (this.minX + this.maxX) / 2,
                a = (this.minX + i) / 2,
                s = (this.maxX + i) / 2,
                o = this._getNewMinXMaxX(a, s);
              t.globals.disableZoomIn || this.zoomUpdateOptions(o.minX, o.maxX);
            },
          },
          {
            key: 'handleZoomOut',
            value: function () {
              var t = this.w;
              if (
                (t.globals.isRangeBar &&
                  ((this.minX = t.globals.minY), (this.maxX = t.globals.maxY)),
                !(
                  t.config.xaxis.type === 'datetime' &&
                  new Date(this.minX).getUTCFullYear() < 1e3
                ))
              ) {
                var i = (this.minX + this.maxX) / 2,
                  a = this.minX - (i - this.minX),
                  s = this.maxX - (i - this.maxX),
                  o = this._getNewMinXMaxX(a, s);
                t.globals.disableZoomOut ||
                  this.zoomUpdateOptions(o.minX, o.maxX);
              }
            },
          },
          {
            key: '_getNewMinXMaxX',
            value: function (t, i) {
              var a = this.w.config.xaxis.convertedCatToNumeric;
              return {
                minX: a ? Math.floor(t) : t,
                maxX: a ? Math.floor(i) : i,
              };
            },
          },
          {
            key: 'zoomUpdateOptions',
            value: function (t, i) {
              var a = this.w;
              if (t !== void 0 || i !== void 0) {
                if (
                  !(
                    a.config.xaxis.convertedCatToNumeric &&
                    (t < 1 && ((t = 1), (i = a.globals.dataPoints)), i - t < 2)
                  )
                ) {
                  var s = { min: t, max: i },
                    o = this.getBeforeZoomRange(s);
                  o && (s = o.xaxis);
                  var l = { xaxis: s },
                    d = E.clone(a.globals.initialConfig.yaxis);
                  a.config.chart.zoom.autoScaleYaxis &&
                    (d = new ii(this.ctx).autoScaleY(this.ctx, d, {
                      xaxis: s,
                    })),
                    a.config.chart.group || (l.yaxis = d),
                    (this.w.globals.zoomed = !0),
                    this.ctx.updateHelpers._updateOptions(
                      l,
                      !1,
                      this.w.config.chart.animations.dynamicAnimation.enabled
                    ),
                    this.zoomCallback(s, d);
                }
              } else this.handleZoomReset();
            },
          },
          {
            key: 'zoomCallback',
            value: function (t, i) {
              typeof this.ev.zoomed == 'function' &&
                this.ev.zoomed(this.ctx, { xaxis: t, yaxis: i });
            },
          },
          {
            key: 'getBeforeZoomRange',
            value: function (t, i) {
              var a = null;
              return (
                typeof this.ev.beforeZoom == 'function' &&
                  (a = this.ev.beforeZoom(this, { xaxis: t, yaxis: i })),
                a
              );
            },
          },
          {
            key: 'toggleMenu',
            value: function () {
              var t = this;
              window.setTimeout(function () {
                t.elMenu.classList.contains('apexcharts-menu-open')
                  ? t.elMenu.classList.remove('apexcharts-menu-open')
                  : t.elMenu.classList.add('apexcharts-menu-open');
              }, 0);
            },
          },
          {
            key: 'handleDownload',
            value: function (t) {
              var i = this.w,
                a = new Ci(this.ctx);
              switch (t) {
                case 'svg':
                  a.exportToSVG(this.ctx);
                  break;
                case 'png':
                  a.exportToPng(this.ctx);
                  break;
                case 'csv':
                  a.exportToCSV({
                    series: i.config.series,
                    columnDelimiter:
                      i.config.chart.toolbar.export.csv.columnDelimiter,
                  });
              }
            },
          },
          {
            key: 'handleZoomReset',
            value: function (t) {
              this.ctx.getSyncedCharts().forEach(function (i) {
                var a = i.w;
                if (
                  ((a.globals.lastXAxis.min = void 0),
                  (a.globals.lastXAxis.max = void 0),
                  i.updateHelpers.revertDefaultAxisMinMax(),
                  typeof a.config.chart.events.beforeResetZoom == 'function')
                ) {
                  var s = a.config.chart.events.beforeResetZoom(i, a);
                  s && i.updateHelpers.revertDefaultAxisMinMax(s);
                }
                typeof a.config.chart.events.zoomed == 'function' &&
                  i.ctx.toolbar.zoomCallback({
                    min: a.config.xaxis.min,
                    max: a.config.xaxis.max,
                  }),
                  (a.globals.zoomed = !1);
                var o = i.ctx.series.emptyCollapsedSeries(
                  E.clone(a.globals.initialSeries)
                );
                i.updateHelpers._updateSeries(
                  o,
                  a.config.chart.animations.dynamicAnimation.enabled
                );
              });
            },
          },
          {
            key: 'destroy',
            value: function () {
              (this.elZoom = null),
                (this.elZoomIn = null),
                (this.elZoomOut = null),
                (this.elPan = null),
                (this.elSelection = null),
                (this.elZoomReset = null),
                (this.elMenuIcon = null);
            },
          },
        ]),
        j
      );
    })(),
    bo = (function (j) {
      D(i, wn);
      var t = K(i);
      function i(a) {
        var s;
        return (
          g(this, i),
          ((s = t.call(this, a)).ctx = a),
          (s.w = a.w),
          (s.dragged = !1),
          (s.graphics = new W(s.ctx)),
          (s.eventList = [
            'mousedown',
            'mouseleave',
            'mousemove',
            'touchstart',
            'touchmove',
            'mouseup',
            'touchend',
          ]),
          (s.clientX = 0),
          (s.clientY = 0),
          (s.startX = 0),
          (s.endX = 0),
          (s.dragX = 0),
          (s.startY = 0),
          (s.endY = 0),
          (s.dragY = 0),
          (s.moveDirection = 'none'),
          s
        );
      }
      return (
        k(i, [
          {
            key: 'init',
            value: function (a) {
              var s = this,
                o = a.xyRatios,
                l = this.w,
                d = this;
              (this.xyRatios = o),
                (this.zoomRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.selectionRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.gridRect =
                  l.globals.dom.baseEl.querySelector('.apexcharts-grid')),
                this.zoomRect.node.classList.add('apexcharts-zoom-rect'),
                this.selectionRect.node.classList.add(
                  'apexcharts-selection-rect'
                ),
                l.globals.dom.elGraphical.add(this.zoomRect),
                l.globals.dom.elGraphical.add(this.selectionRect),
                l.config.chart.selection.type === 'x'
                  ? (this.slDraggableRect = this.selectionRect
                      .draggable({
                        minX: 0,
                        minY: 0,
                        maxX: l.globals.gridWidth,
                        maxY: l.globals.gridHeight,
                      })
                      .on(
                        'dragmove',
                        this.selectionDragging.bind(this, 'dragging')
                      ))
                  : l.config.chart.selection.type === 'y'
                  ? (this.slDraggableRect = this.selectionRect
                      .draggable({ minX: 0, maxX: l.globals.gridWidth })
                      .on(
                        'dragmove',
                        this.selectionDragging.bind(this, 'dragging')
                      ))
                  : (this.slDraggableRect = this.selectionRect
                      .draggable()
                      .on(
                        'dragmove',
                        this.selectionDragging.bind(this, 'dragging')
                      )),
                this.preselectedSelection(),
                (this.hoverArea = l.globals.dom.baseEl.querySelector(
                  ''.concat(l.globals.chartClass, ' .apexcharts-svg')
                )),
                this.hoverArea.classList.add('apexcharts-zoomable'),
                this.eventList.forEach(function (u) {
                  s.hoverArea.addEventListener(u, d.svgMouseEvents.bind(d, o), {
                    capture: !1,
                    passive: !0,
                  });
                });
            },
          },
          {
            key: 'destroy',
            value: function () {
              this.slDraggableRect &&
                (this.slDraggableRect.draggable(!1),
                this.slDraggableRect.off(),
                this.selectionRect.off()),
                (this.selectionRect = null),
                (this.zoomRect = null),
                (this.gridRect = null);
            },
          },
          {
            key: 'svgMouseEvents',
            value: function (a, s) {
              var o = this.w,
                l = this,
                d = this.ctx.toolbar,
                u = o.globals.zoomEnabled
                  ? o.config.chart.zoom.type
                  : o.config.chart.selection.type,
                p = o.config.chart.toolbar.autoSelected;
              if (
                (s.shiftKey
                  ? ((this.shiftWasPressed = !0),
                    d.enableZoomPanFromToolbar(p === 'pan' ? 'zoom' : 'pan'))
                  : this.shiftWasPressed &&
                    (d.enableZoomPanFromToolbar(p),
                    (this.shiftWasPressed = !1)),
                s.target)
              ) {
                var x,
                  v = s.target.classList;
                if (
                  (s.target.parentNode &&
                    s.target.parentNode !== null &&
                    (x = s.target.parentNode.classList),
                  !(
                    v.contains('apexcharts-selection-rect') ||
                    v.contains('apexcharts-legend-marker') ||
                    v.contains('apexcharts-legend-text') ||
                    (x && x.contains('apexcharts-toolbar'))
                  ))
                ) {
                  if (
                    ((l.clientX =
                      s.type === 'touchmove' || s.type === 'touchstart'
                        ? s.touches[0].clientX
                        : s.type === 'touchend'
                        ? s.changedTouches[0].clientX
                        : s.clientX),
                    (l.clientY =
                      s.type === 'touchmove' || s.type === 'touchstart'
                        ? s.touches[0].clientY
                        : s.type === 'touchend'
                        ? s.changedTouches[0].clientY
                        : s.clientY),
                    s.type === 'mousedown' && s.which === 1)
                  ) {
                    var b = l.gridRect.getBoundingClientRect();
                    (l.startX = l.clientX - b.left),
                      (l.startY = l.clientY - b.top),
                      (l.dragged = !1),
                      (l.w.globals.mousedown = !0);
                  }
                  if (
                    (((s.type === 'mousemove' && s.which === 1) ||
                      s.type === 'touchmove') &&
                      ((l.dragged = !0),
                      o.globals.panEnabled
                        ? ((o.globals.selection = null),
                          l.w.globals.mousedown &&
                            l.panDragging({
                              context: l,
                              zoomtype: u,
                              xyRatios: a,
                            }))
                        : ((l.w.globals.mousedown && o.globals.zoomEnabled) ||
                            (l.w.globals.mousedown &&
                              o.globals.selectionEnabled)) &&
                          (l.selection = l.selectionDrawing({
                            context: l,
                            zoomtype: u,
                          }))),
                    s.type === 'mouseup' ||
                      s.type === 'touchend' ||
                      s.type === 'mouseleave')
                  ) {
                    var C = l.gridRect.getBoundingClientRect();
                    l.w.globals.mousedown &&
                      ((l.endX = l.clientX - C.left),
                      (l.endY = l.clientY - C.top),
                      (l.dragX = Math.abs(l.endX - l.startX)),
                      (l.dragY = Math.abs(l.endY - l.startY)),
                      (o.globals.zoomEnabled || o.globals.selectionEnabled) &&
                        l.selectionDrawn({ context: l, zoomtype: u }),
                      o.globals.panEnabled &&
                        o.config.xaxis.convertedCatToNumeric &&
                        l.delayedPanScrolled()),
                      o.globals.zoomEnabled &&
                        l.hideSelectionRect(this.selectionRect),
                      (l.dragged = !1),
                      (l.w.globals.mousedown = !1);
                  }
                  this.makeSelectionRectDraggable();
                }
              }
            },
          },
          {
            key: 'makeSelectionRectDraggable',
            value: function () {
              var a = this.w;
              if (this.selectionRect) {
                var s = this.selectionRect.node.getBoundingClientRect();
                s.width > 0 &&
                  s.height > 0 &&
                  this.slDraggableRect
                    .selectize({
                      points: 'l, r',
                      pointSize: 8,
                      pointType: 'rect',
                    })
                    .resize({
                      constraint: {
                        minX: 0,
                        minY: 0,
                        maxX: a.globals.gridWidth,
                        maxY: a.globals.gridHeight,
                      },
                    })
                    .on(
                      'resizing',
                      this.selectionDragging.bind(this, 'resizing')
                    );
              }
            },
          },
          {
            key: 'preselectedSelection',
            value: function () {
              var a = this.w,
                s = this.xyRatios;
              if (!a.globals.zoomEnabled) {
                if (
                  a.globals.selection !== void 0 &&
                  a.globals.selection !== null
                )
                  this.drawSelectionRect(a.globals.selection);
                else if (
                  a.config.chart.selection.xaxis.min !== void 0 &&
                  a.config.chart.selection.xaxis.max !== void 0
                ) {
                  var o =
                      (a.config.chart.selection.xaxis.min - a.globals.minX) /
                      s.xRatio,
                    l = {
                      x: o,
                      y: 0,
                      width:
                        a.globals.gridWidth -
                        (a.globals.maxX - a.config.chart.selection.xaxis.max) /
                          s.xRatio -
                        o,
                      height: a.globals.gridHeight,
                      translateX: 0,
                      translateY: 0,
                      selectionEnabled: !0,
                    };
                  this.drawSelectionRect(l),
                    this.makeSelectionRectDraggable(),
                    typeof a.config.chart.events.selection == 'function' &&
                      a.config.chart.events.selection(this.ctx, {
                        xaxis: {
                          min: a.config.chart.selection.xaxis.min,
                          max: a.config.chart.selection.xaxis.max,
                        },
                        yaxis: {},
                      });
                }
              }
            },
          },
          {
            key: 'drawSelectionRect',
            value: function (a) {
              var s = a.x,
                o = a.y,
                l = a.width,
                d = a.height,
                u = a.translateX,
                p = u === void 0 ? 0 : u,
                x = a.translateY,
                v = x === void 0 ? 0 : x,
                b = this.w,
                C = this.zoomRect,
                S = this.selectionRect;
              if (this.dragged || b.globals.selection !== null) {
                var L = { transform: 'translate(' + p + ', ' + v + ')' };
                b.globals.zoomEnabled &&
                  this.dragged &&
                  (l < 0 && (l = 1),
                  C.attr({
                    x: s,
                    y: o,
                    width: l,
                    height: d,
                    fill: b.config.chart.zoom.zoomedArea.fill.color,
                    'fill-opacity': b.config.chart.zoom.zoomedArea.fill.opacity,
                    stroke: b.config.chart.zoom.zoomedArea.stroke.color,
                    'stroke-width': b.config.chart.zoom.zoomedArea.stroke.width,
                    'stroke-opacity':
                      b.config.chart.zoom.zoomedArea.stroke.opacity,
                  }),
                  W.setAttrs(C.node, L)),
                  b.globals.selectionEnabled &&
                    (S.attr({
                      x: s,
                      y: o,
                      width: l > 0 ? l : 0,
                      height: d > 0 ? d : 0,
                      fill: b.config.chart.selection.fill.color,
                      'fill-opacity': b.config.chart.selection.fill.opacity,
                      stroke: b.config.chart.selection.stroke.color,
                      'stroke-width': b.config.chart.selection.stroke.width,
                      'stroke-dasharray':
                        b.config.chart.selection.stroke.dashArray,
                      'stroke-opacity': b.config.chart.selection.stroke.opacity,
                    }),
                    W.setAttrs(S.node, L));
              }
            },
          },
          {
            key: 'hideSelectionRect',
            value: function (a) {
              a && a.attr({ x: 0, y: 0, width: 0, height: 0 });
            },
          },
          {
            key: 'selectionDrawing',
            value: function (a) {
              var s = a.context,
                o = a.zoomtype,
                l = this.w,
                d = s,
                u = this.gridRect.getBoundingClientRect(),
                p = d.startX - 1,
                x = d.startY,
                v = !1,
                b = !1,
                C = d.clientX - u.left - p,
                S = d.clientY - u.top - x,
                L = {};
              return (
                Math.abs(C + p) > l.globals.gridWidth
                  ? (C = l.globals.gridWidth - p)
                  : d.clientX - u.left < 0 && (C = p),
                p > d.clientX - u.left && ((v = !0), (C = Math.abs(C))),
                x > d.clientY - u.top && ((b = !0), (S = Math.abs(S))),
                (L =
                  o === 'x'
                    ? {
                        x: v ? p - C : p,
                        y: 0,
                        width: C,
                        height: l.globals.gridHeight,
                      }
                    : o === 'y'
                    ? {
                        x: 0,
                        y: b ? x - S : x,
                        width: l.globals.gridWidth,
                        height: S,
                      }
                    : {
                        x: v ? p - C : p,
                        y: b ? x - S : x,
                        width: C,
                        height: S,
                      }),
                d.drawSelectionRect(L),
                d.selectionDragging('resizing'),
                L
              );
            },
          },
          {
            key: 'selectionDragging',
            value: function (a, s) {
              var o = this,
                l = this.w,
                d = this.xyRatios,
                u = this.selectionRect,
                p = 0;
              a === 'resizing' && (p = 30);
              var x = function (b) {
                  return parseFloat(u.node.getAttribute(b));
                },
                v = {
                  x: x('x'),
                  y: x('y'),
                  width: x('width'),
                  height: x('height'),
                };
              (l.globals.selection = v),
                typeof l.config.chart.events.selection == 'function' &&
                  l.globals.selectionEnabled &&
                  (clearTimeout(this.w.globals.selectionResizeTimer),
                  (this.w.globals.selectionResizeTimer = window.setTimeout(
                    function () {
                      var b = o.gridRect.getBoundingClientRect(),
                        C = u.node.getBoundingClientRect(),
                        S = {
                          xaxis: {
                            min:
                              l.globals.xAxisScale.niceMin +
                              (C.left - b.left) * d.xRatio,
                            max:
                              l.globals.xAxisScale.niceMin +
                              (C.right - b.left) * d.xRatio,
                          },
                          yaxis: {
                            min:
                              l.globals.yAxisScale[0].niceMin +
                              (b.bottom - C.bottom) * d.yRatio[0],
                            max:
                              l.globals.yAxisScale[0].niceMax -
                              (C.top - b.top) * d.yRatio[0],
                          },
                        };
                      l.config.chart.events.selection(o.ctx, S),
                        l.config.chart.brush.enabled &&
                          l.config.chart.events.brushScrolled !== void 0 &&
                          l.config.chart.events.brushScrolled(o.ctx, S);
                    },
                    p
                  )));
            },
          },
          {
            key: 'selectionDrawn',
            value: function (a) {
              var s = a.context,
                o = a.zoomtype,
                l = this.w,
                d = s,
                u = this.xyRatios,
                p = this.ctx.toolbar;
              if (d.startX > d.endX) {
                var x = d.startX;
                (d.startX = d.endX), (d.endX = x);
              }
              if (d.startY > d.endY) {
                var v = d.startY;
                (d.startY = d.endY), (d.endY = v);
              }
              var b = void 0,
                C = void 0;
              l.globals.isRangeBar
                ? ((b =
                    l.globals.yAxisScale[0].niceMin +
                    d.startX * u.invertedYRatio),
                  (C =
                    l.globals.yAxisScale[0].niceMin +
                    d.endX * u.invertedYRatio))
                : ((b = l.globals.xAxisScale.niceMin + d.startX * u.xRatio),
                  (C = l.globals.xAxisScale.niceMin + d.endX * u.xRatio));
              var S = [],
                L = [];
              if (
                (l.config.yaxis.forEach(function (R, O) {
                  S.push(
                    l.globals.yAxisScale[O].niceMax - u.yRatio[O] * d.startY
                  ),
                    L.push(
                      l.globals.yAxisScale[O].niceMax - u.yRatio[O] * d.endY
                    );
                }),
                d.dragged && (d.dragX > 10 || d.dragY > 10) && b !== C)
              ) {
                if (l.globals.zoomEnabled) {
                  var N = E.clone(l.globals.initialConfig.yaxis),
                    T = E.clone(l.globals.initialConfig.xaxis);
                  if (
                    ((l.globals.zoomed = !0),
                    l.config.xaxis.convertedCatToNumeric &&
                      ((b = Math.floor(b)),
                      (C = Math.floor(C)),
                      b < 1 && ((b = 1), (C = l.globals.dataPoints)),
                      C - b < 2 && (C = b + 1)),
                    (o !== 'xy' && o !== 'x') || (T = { min: b, max: C }),
                    (o !== 'xy' && o !== 'y') ||
                      N.forEach(function (R, O) {
                        (N[O].min = L[O]), (N[O].max = S[O]);
                      }),
                    l.config.chart.zoom.autoScaleYaxis)
                  ) {
                    var I = new ii(d.ctx);
                    N = I.autoScaleY(d.ctx, N, { xaxis: T });
                  }
                  if (p) {
                    var h = p.getBeforeZoomRange(T, N);
                    h &&
                      ((T = h.xaxis ? h.xaxis : T),
                      (N = h.yaxis ? h.yaxis : N));
                  }
                  var y = { xaxis: T };
                  l.config.chart.group || (y.yaxis = N),
                    d.ctx.updateHelpers._updateOptions(
                      y,
                      !1,
                      d.w.config.chart.animations.dynamicAnimation.enabled
                    ),
                    typeof l.config.chart.events.zoomed == 'function' &&
                      p.zoomCallback(T, N);
                } else if (l.globals.selectionEnabled) {
                  var A,
                    P = null;
                  (A = { min: b, max: C }),
                    (o !== 'xy' && o !== 'y') ||
                      (P = E.clone(l.config.yaxis)).forEach(function (R, O) {
                        (P[O].min = L[O]), (P[O].max = S[O]);
                      }),
                    (l.globals.selection = d.selection),
                    typeof l.config.chart.events.selection == 'function' &&
                      l.config.chart.events.selection(d.ctx, {
                        xaxis: A,
                        yaxis: P,
                      });
                }
              }
            },
          },
          {
            key: 'panDragging',
            value: function (a) {
              var s = a.context,
                o = this.w,
                l = s;
              if (o.globals.lastClientPosition.x !== void 0) {
                var d = o.globals.lastClientPosition.x - l.clientX,
                  u = o.globals.lastClientPosition.y - l.clientY;
                Math.abs(d) > Math.abs(u) && d > 0
                  ? (this.moveDirection = 'left')
                  : Math.abs(d) > Math.abs(u) && d < 0
                  ? (this.moveDirection = 'right')
                  : Math.abs(u) > Math.abs(d) && u > 0
                  ? (this.moveDirection = 'up')
                  : Math.abs(u) > Math.abs(d) &&
                    u < 0 &&
                    (this.moveDirection = 'down');
              }
              o.globals.lastClientPosition = { x: l.clientX, y: l.clientY };
              var p = o.globals.isRangeBar ? o.globals.minY : o.globals.minX,
                x = o.globals.isRangeBar ? o.globals.maxY : o.globals.maxX;
              o.config.xaxis.convertedCatToNumeric || l.panScrolled(p, x);
            },
          },
          {
            key: 'delayedPanScrolled',
            value: function () {
              var a = this.w,
                s = a.globals.minX,
                o = a.globals.maxX,
                l = (a.globals.maxX - a.globals.minX) / 2;
              this.moveDirection === 'left'
                ? ((s = a.globals.minX + l), (o = a.globals.maxX + l))
                : this.moveDirection === 'right' &&
                  ((s = a.globals.minX - l), (o = a.globals.maxX - l)),
                (s = Math.floor(s)),
                (o = Math.floor(o)),
                this.updateScrolledChart({ xaxis: { min: s, max: o } }, s, o);
            },
          },
          {
            key: 'panScrolled',
            value: function (a, s) {
              var o = this.w,
                l = this.xyRatios,
                d = E.clone(o.globals.initialConfig.yaxis),
                u = l.xRatio,
                p = o.globals.minX,
                x = o.globals.maxX;
              o.globals.isRangeBar &&
                ((u = l.invertedYRatio),
                (p = o.globals.minY),
                (x = o.globals.maxY)),
                this.moveDirection === 'left'
                  ? ((a = p + (o.globals.gridWidth / 15) * u),
                    (s = x + (o.globals.gridWidth / 15) * u))
                  : this.moveDirection === 'right' &&
                    ((a = p - (o.globals.gridWidth / 15) * u),
                    (s = x - (o.globals.gridWidth / 15) * u)),
                o.globals.isRangeBar ||
                  ((a < o.globals.initialMinX || s > o.globals.initialMaxX) &&
                    ((a = p), (s = x)));
              var v = { min: a, max: s };
              o.config.chart.zoom.autoScaleYaxis &&
                (d = new ii(this.ctx).autoScaleY(this.ctx, d, { xaxis: v }));
              var b = { xaxis: { min: a, max: s } };
              o.config.chart.group || (b.yaxis = d),
                this.updateScrolledChart(b, a, s);
            },
          },
          {
            key: 'updateScrolledChart',
            value: function (a, s, o) {
              var l = this.w;
              this.ctx.updateHelpers._updateOptions(a, !1, !1),
                typeof l.config.chart.events.scrolled == 'function' &&
                  l.config.chart.events.scrolled(this.ctx, {
                    xaxis: { min: s, max: o },
                  });
            },
          },
        ]),
        i
      );
    })(),
    Ma = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.ttCtx = t), (this.ctx = t.ctx);
      }
      return (
        k(j, [
          {
            key: 'getNearestValues',
            value: function (t) {
              var i = t.hoverArea,
                a = t.elGrid,
                s = t.clientX,
                o = t.clientY,
                l = this.w,
                d = a.getBoundingClientRect(),
                u = d.width,
                p = d.height,
                x = u / (l.globals.dataPoints - 1),
                v = p / l.globals.dataPoints,
                b = this.hasBars();
              (!l.globals.comboCharts && !b) ||
                l.config.xaxis.convertedCatToNumeric ||
                (x = u / l.globals.dataPoints);
              var C = s - d.left - l.globals.barPadForNumericAxis,
                S = o - d.top;
              C < 0 || S < 0 || C > u || S > p
                ? (i.classList.remove('hovering-zoom'),
                  i.classList.remove('hovering-pan'))
                : l.globals.zoomEnabled
                ? (i.classList.remove('hovering-pan'),
                  i.classList.add('hovering-zoom'))
                : l.globals.panEnabled &&
                  (i.classList.remove('hovering-zoom'),
                  i.classList.add('hovering-pan'));
              var L = Math.round(C / x),
                N = Math.floor(S / v);
              b &&
                !l.config.xaxis.convertedCatToNumeric &&
                ((L = Math.ceil(C / x)), (L -= 1));
              var T = null,
                I = null,
                h = [],
                y = [];
              if (
                (l.globals.seriesXvalues.forEach(function (O) {
                  h.push([O[0] + 1e-6].concat(O));
                }),
                l.globals.seriesYvalues.forEach(function (O) {
                  y.push([O[0] + 1e-6].concat(O));
                }),
                (h = h.map(function (O) {
                  return O.filter(function (X) {
                    return E.isNumber(X);
                  });
                })),
                (y = y.map(function (O) {
                  return O.filter(function (X) {
                    return E.isNumber(X);
                  });
                })),
                l.globals.isXNumeric)
              ) {
                var A = this.ttCtx.getElGrid().getBoundingClientRect(),
                  P = C * (A.width / u),
                  R = S * (A.height / p);
                (T = (I = this.closestInMultiArray(P, R, h, y)).index),
                  (L = I.j),
                  T !== null &&
                    ((h = l.globals.seriesXvalues[T]),
                    (L = (I = this.closestInArray(P, h)).index));
              }
              return (
                (l.globals.capturedSeriesIndex = T === null ? -1 : T),
                (!L || L < 1) && (L = 0),
                l.globals.isBarHorizontal
                  ? (l.globals.capturedDataPointIndex = N)
                  : (l.globals.capturedDataPointIndex = L),
                {
                  capturedSeries: T,
                  j: l.globals.isBarHorizontal ? N : L,
                  hoverX: C,
                  hoverY: S,
                }
              );
            },
          },
          {
            key: 'closestInMultiArray',
            value: function (t, i, a, s) {
              var o = this.w,
                l = 0,
                d = null,
                u = -1;
              o.globals.series.length > 1
                ? (l = this.getFirstActiveXArray(a))
                : (d = 0);
              var p = a[l][0],
                x = Math.abs(t - p);
              if (
                (a.forEach(function (C) {
                  C.forEach(function (S, L) {
                    var N = Math.abs(t - S);
                    N < x && ((x = N), (u = L));
                  });
                }),
                u !== -1)
              ) {
                var v = s[l][u],
                  b = Math.abs(i - v);
                (d = l),
                  s.forEach(function (C, S) {
                    var L = Math.abs(i - C[u]);
                    L < b && ((b = L), (d = S));
                  });
              }
              return { index: d, j: u };
            },
          },
          {
            key: 'getFirstActiveXArray',
            value: function (t) {
              for (
                var i = this.w,
                  a = 0,
                  s = t.map(function (l, d) {
                    return l.length > 0 ? d : -1;
                  }),
                  o = 0;
                o < s.length;
                o++
              )
                if (
                  s[o] !== -1 &&
                  i.globals.collapsedSeriesIndices.indexOf(o) === -1 &&
                  i.globals.ancillaryCollapsedSeriesIndices.indexOf(o) === -1
                ) {
                  a = s[o];
                  break;
                }
              return a;
            },
          },
          {
            key: 'closestInArray',
            value: function (t, i) {
              for (
                var a = i[0], s = null, o = Math.abs(t - a), l = 0;
                l < i.length;
                l++
              ) {
                var d = Math.abs(t - i[l]);
                d < o && ((o = d), (s = l));
              }
              return { index: s };
            },
          },
          {
            key: 'isXoverlap',
            value: function (t) {
              var i = [],
                a = this.w.globals.seriesX.filter(function (o) {
                  return o[0] !== void 0;
                });
              if (a.length > 0)
                for (var s = 0; s < a.length - 1; s++)
                  a[s][t] !== void 0 &&
                    a[s + 1][t] !== void 0 &&
                    a[s][t] !== a[s + 1][t] &&
                    i.push('unEqual');
              return i.length === 0;
            },
          },
          {
            key: 'isInitialSeriesSameLen',
            value: function () {
              for (
                var t = !0, i = this.w.globals.initialSeries, a = 0;
                a < i.length - 1;
                a++
              )
                if (i[a].data.length !== i[a + 1].data.length) {
                  t = !1;
                  break;
                }
              return t;
            },
          },
          {
            key: 'getBarsHeight',
            value: function (t) {
              return V(t).reduce(function (i, a) {
                return i + a.getBBox().height;
              }, 0);
            },
          },
          {
            key: 'getElMarkers',
            value: function (t) {
              return typeof t == 'number'
                ? this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series[data\\:realIndex='".concat(
                      t,
                      "'] .apexcharts-series-markers-wrap > *"
                    )
                  )
                : this.w.globals.dom.baseEl.querySelectorAll(
                    '.apexcharts-series-markers-wrap > *'
                  );
            },
          },
          {
            key: 'getAllMarkers',
            value: function () {
              var t = this.w.globals.dom.baseEl.querySelectorAll(
                '.apexcharts-series-markers-wrap'
              );
              (t = V(t)).sort(function (a, s) {
                var o = Number(a.getAttribute('data:realIndex')),
                  l = Number(s.getAttribute('data:realIndex'));
                return l < o ? 1 : l > o ? -1 : 0;
              });
              var i = [];
              return (
                t.forEach(function (a) {
                  i.push(a.querySelector('.apexcharts-marker'));
                }),
                i
              );
            },
          },
          {
            key: 'hasMarkers',
            value: function (t) {
              return this.getElMarkers(t).length > 0;
            },
          },
          {
            key: 'getElBars',
            value: function () {
              return this.w.globals.dom.baseEl.querySelectorAll(
                '.apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series'
              );
            },
          },
          {
            key: 'hasBars',
            value: function () {
              return this.getElBars().length > 0;
            },
          },
          {
            key: 'getHoverMarkerSize',
            value: function (t) {
              var i = this.w,
                a = i.config.markers.hover.size;
              return (
                a === void 0 &&
                  (a =
                    i.globals.markers.size[t] +
                    i.config.markers.hover.sizeOffset),
                a
              );
            },
          },
          {
            key: 'toggleAllTooltipSeriesGroups',
            value: function (t) {
              var i = this.w,
                a = this.ttCtx;
              a.allTooltipSeriesGroups.length === 0 &&
                (a.allTooltipSeriesGroups =
                  i.globals.dom.baseEl.querySelectorAll(
                    '.apexcharts-tooltip-series-group'
                  ));
              for (var s = a.allTooltipSeriesGroups, o = 0; o < s.length; o++)
                t === 'enable'
                  ? (s[o].classList.add('apexcharts-active'),
                    (s[o].style.display = i.config.tooltip.items.display))
                  : (s[o].classList.remove('apexcharts-active'),
                    (s[o].style.display = 'none'));
            },
          },
        ]),
        j
      );
    })(),
    Pa = (function () {
      function j(t) {
        g(this, j),
          (this.w = t.w),
          (this.ctx = t.ctx),
          (this.ttCtx = t),
          (this.tooltipUtil = new Ma(t));
      }
      return (
        k(j, [
          {
            key: 'drawSeriesTexts',
            value: function (t) {
              var i = t.shared,
                a = i === void 0 || i,
                s = t.ttItems,
                o = t.i,
                l = o === void 0 ? 0 : o,
                d = t.j,
                u = d === void 0 ? null : d,
                p = t.y1,
                x = t.y2,
                v = t.e,
                b = this.w;
              b.config.tooltip.custom !== void 0
                ? this.handleCustomTooltip({ i: l, j: u, y1: p, y2: x, w: b })
                : this.toggleActiveInactiveSeries(a);
              var C = this.getValuesToPrint({ i: l, j: u });
              this.printLabels({
                i: l,
                j: u,
                values: C,
                ttItems: s,
                shared: a,
                e: v,
              });
              var S = this.ttCtx.getElTooltip();
              (this.ttCtx.tooltipRect.ttWidth =
                S.getBoundingClientRect().width),
                (this.ttCtx.tooltipRect.ttHeight =
                  S.getBoundingClientRect().height);
            },
          },
          {
            key: 'printLabels',
            value: function (t) {
              var i,
                a = this,
                s = t.i,
                o = t.j,
                l = t.values,
                d = t.ttItems,
                u = t.shared,
                p = t.e,
                x = this.w,
                v = [],
                b = function (A) {
                  return (
                    x.globals.seriesGoals[A] &&
                    x.globals.seriesGoals[A][o] &&
                    Array.isArray(x.globals.seriesGoals[A][o])
                  );
                },
                C = l.xVal,
                S = l.zVal,
                L = l.xAxisTTVal,
                N = '',
                T = x.globals.colors[s];
              o !== null &&
                x.config.plotOptions.bar.distributed &&
                (T = x.globals.colors[o]);
              for (
                var I = function (A, P) {
                    var R = a.getFormatters(s);
                    (N = a.getSeriesName({
                      fn: R.yLbTitleFormatter,
                      index: s,
                      seriesIndex: s,
                      j: o,
                    })),
                      x.config.chart.type === 'treemap' &&
                        (N = R.yLbTitleFormatter(
                          String(x.config.series[s].data[o].x),
                          {
                            series: x.globals.series,
                            seriesIndex: s,
                            dataPointIndex: o,
                            w: x,
                          }
                        ));
                    var O = x.config.tooltip.inverseOrder ? P : A;
                    if (x.globals.axisCharts) {
                      var X = function (ie) {
                        var re, se, me, Se;
                        return x.globals.isRangeData
                          ? R.yLbFormatter(
                              (re = x.globals.seriesRangeStart) === null ||
                                re === void 0 ||
                                (se = re[ie]) === null ||
                                se === void 0
                                ? void 0
                                : se[o],
                              {
                                series: x.globals.seriesRangeStart,
                                seriesIndex: ie,
                                dataPointIndex: o,
                                w: x,
                              }
                            ) +
                              ' - ' +
                              R.yLbFormatter(
                                (me = x.globals.seriesRangeEnd) === null ||
                                  me === void 0 ||
                                  (Se = me[ie]) === null ||
                                  Se === void 0
                                  ? void 0
                                  : Se[o],
                                {
                                  series: x.globals.seriesRangeEnd,
                                  seriesIndex: ie,
                                  dataPointIndex: o,
                                  w: x,
                                }
                              )
                          : R.yLbFormatter(x.globals.series[ie][o], {
                              series: x.globals.series,
                              seriesIndex: ie,
                              dataPointIndex: o,
                              w: x,
                            });
                      };
                      if (u)
                        (R = a.getFormatters(O)),
                          (N = a.getSeriesName({
                            fn: R.yLbTitleFormatter,
                            index: O,
                            seriesIndex: s,
                            j: o,
                          })),
                          (T = x.globals.colors[O]),
                          (i = X(O)),
                          b(O) &&
                            (v = x.globals.seriesGoals[O][o].map(function (ie) {
                              return {
                                attrs: ie,
                                val: R.yLbFormatter(ie.value, {
                                  seriesIndex: O,
                                  dataPointIndex: o,
                                  w: x,
                                }),
                              };
                            }));
                      else {
                        var G,
                          q =
                            p == null || (G = p.target) === null || G === void 0
                              ? void 0
                              : G.getAttribute('fill');
                        q &&
                          (T =
                            q.indexOf('url') !== -1
                              ? document
                                  .querySelector(q.substr(4).slice(0, -1))
                                  .childNodes[0].getAttribute('stroke')
                              : q),
                          (i = X(s)),
                          b(s) &&
                            Array.isArray(x.globals.seriesGoals[s][o]) &&
                            (v = x.globals.seriesGoals[s][o].map(function (ie) {
                              return {
                                attrs: ie,
                                val: R.yLbFormatter(ie.value, {
                                  seriesIndex: s,
                                  dataPointIndex: o,
                                  w: x,
                                }),
                              };
                            }));
                      }
                    }
                    o === null &&
                      (i = R.yLbFormatter(
                        x.globals.series[s],
                        c(c({}, x), {}, { seriesIndex: s, dataPointIndex: s })
                      )),
                      a.DOMHandling({
                        i: s,
                        t: O,
                        j: o,
                        ttItems: d,
                        values: {
                          val: i,
                          goalVals: v,
                          xVal: C,
                          xAxisTTVal: L,
                          zVal: S,
                        },
                        seriesName: N,
                        shared: u,
                        pColor: T,
                      });
                  },
                  h = 0,
                  y = x.globals.series.length - 1;
                h < x.globals.series.length;
                h++, y--
              )
                I(h, y);
            },
          },
          {
            key: 'getFormatters',
            value: function (t) {
              var i,
                a = this.w,
                s = a.globals.yLabelFormatters[t];
              return (
                a.globals.ttVal !== void 0
                  ? Array.isArray(a.globals.ttVal)
                    ? ((s = a.globals.ttVal[t] && a.globals.ttVal[t].formatter),
                      (i =
                        a.globals.ttVal[t] &&
                        a.globals.ttVal[t].title &&
                        a.globals.ttVal[t].title.formatter))
                    : ((s = a.globals.ttVal.formatter),
                      typeof a.globals.ttVal.title.formatter == 'function' &&
                        (i = a.globals.ttVal.title.formatter))
                  : (i = a.config.tooltip.y.title.formatter),
                typeof s != 'function' &&
                  (s = a.globals.yLabelFormatters[0]
                    ? a.globals.yLabelFormatters[0]
                    : function (o) {
                        return o;
                      }),
                typeof i != 'function' &&
                  (i = function (o) {
                    return o;
                  }),
                { yLbFormatter: s, yLbTitleFormatter: i }
              );
            },
          },
          {
            key: 'getSeriesName',
            value: function (t) {
              var i = t.fn,
                a = t.index,
                s = t.seriesIndex,
                o = t.j,
                l = this.w;
              return i(String(l.globals.seriesNames[a]), {
                series: l.globals.series,
                seriesIndex: s,
                dataPointIndex: o,
                w: l,
              });
            },
          },
          {
            key: 'DOMHandling',
            value: function (t) {
              t.i;
              var i = t.t,
                a = t.j,
                s = t.ttItems,
                o = t.values,
                l = t.seriesName,
                d = t.shared,
                u = t.pColor,
                p = this.w,
                x = this.ttCtx,
                v = o.val,
                b = o.goalVals,
                C = o.xVal,
                S = o.xAxisTTVal,
                L = o.zVal,
                N = null;
              (N = s[i].children),
                p.config.tooltip.fillSeriesColor &&
                  ((s[i].style.backgroundColor = u),
                  (N[0].style.display = 'none')),
                x.showTooltipTitle &&
                  (x.tooltipTitle === null &&
                    (x.tooltipTitle = p.globals.dom.baseEl.querySelector(
                      '.apexcharts-tooltip-title'
                    )),
                  (x.tooltipTitle.innerHTML = C)),
                x.isXAxisTooltipEnabled &&
                  (x.xaxisTooltipText.innerHTML = S !== '' ? S : C);
              var T = s[i].querySelector('.apexcharts-tooltip-text-y-label');
              T && (T.innerHTML = l || '');
              var I = s[i].querySelector('.apexcharts-tooltip-text-y-value');
              I && (I.innerHTML = v !== void 0 ? v : ''),
                N[0] &&
                  N[0].classList.contains('apexcharts-tooltip-marker') &&
                  (p.config.tooltip.marker.fillColors &&
                    Array.isArray(p.config.tooltip.marker.fillColors) &&
                    (u = p.config.tooltip.marker.fillColors[i]),
                  (N[0].style.backgroundColor = u)),
                p.config.tooltip.marker.show || (N[0].style.display = 'none');
              var h = s[i].querySelector(
                  '.apexcharts-tooltip-text-goals-label'
                ),
                y = s[i].querySelector('.apexcharts-tooltip-text-goals-value');
              if (b.length && p.globals.seriesGoals[i]) {
                var A = function () {
                  var P = '<div >',
                    R = '<div>';
                  b.forEach(function (O, X) {
                    (P +=
                      ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '
                        .concat(
                          O.attrs.strokeColor,
                          '; height: 3px; border-radius: 0; top: 5px;"></span> '
                        )
                        .concat(O.attrs.name, '</div>')),
                      (R += '<div>'.concat(O.val, '</div>'));
                  }),
                    (h.innerHTML = P + '</div>'),
                    (y.innerHTML = R + '</div>');
                };
                d
                  ? p.globals.seriesGoals[i][a] &&
                    Array.isArray(p.globals.seriesGoals[i][a])
                    ? A()
                    : ((h.innerHTML = ''), (y.innerHTML = ''))
                  : A();
              } else (h.innerHTML = ''), (y.innerHTML = '');
              L !== null &&
                ((s[i].querySelector(
                  '.apexcharts-tooltip-text-z-label'
                ).innerHTML = p.config.tooltip.z.title),
                (s[i].querySelector(
                  '.apexcharts-tooltip-text-z-value'
                ).innerHTML = L !== void 0 ? L : '')),
                d &&
                  N[0] &&
                  (v == null ||
                  p.globals.ancillaryCollapsedSeriesIndices.indexOf(i) > -1 ||
                  p.globals.collapsedSeriesIndices.indexOf(i) > -1
                    ? (N[0].parentNode.style.display = 'none')
                    : (N[0].parentNode.style.display =
                        p.config.tooltip.items.display));
            },
          },
          {
            key: 'toggleActiveInactiveSeries',
            value: function (t) {
              var i = this.w;
              if (t) this.tooltipUtil.toggleAllTooltipSeriesGroups('enable');
              else {
                this.tooltipUtil.toggleAllTooltipSeriesGroups('disable');
                var a = i.globals.dom.baseEl.querySelector(
                  '.apexcharts-tooltip-series-group'
                );
                a &&
                  (a.classList.add('apexcharts-active'),
                  (a.style.display = i.config.tooltip.items.display));
              }
            },
          },
          {
            key: 'getValuesToPrint',
            value: function (t) {
              var i = t.i,
                a = t.j,
                s = this.w,
                o = this.ctx.series.filteredSeriesX(),
                l = '',
                d = '',
                u = null,
                p = null,
                x = {
                  series: s.globals.series,
                  seriesIndex: i,
                  dataPointIndex: a,
                  w: s,
                },
                v = s.globals.ttZFormatter;
              a === null
                ? (p = s.globals.series[i])
                : s.globals.isXNumeric && s.config.chart.type !== 'treemap'
                ? ((l = o[i][a]),
                  o[i].length === 0 &&
                    (l = o[this.tooltipUtil.getFirstActiveXArray(o)][a]))
                : (l =
                    s.globals.labels[a] !== void 0 ? s.globals.labels[a] : '');
              var b = l;
              return (
                s.globals.isXNumeric && s.config.xaxis.type === 'datetime'
                  ? (l = new fi(this.ctx).xLabelFormat(
                      s.globals.ttKeyFormatter,
                      b,
                      b,
                      {
                        i: void 0,
                        dateFormatter: new Ge(this.ctx).formatDate,
                        w: this.w,
                      }
                    ))
                  : (l = s.globals.isBarHorizontal
                      ? s.globals.yLabelFormatters[0](b, x)
                      : s.globals.xLabelFormatter(b, x)),
                s.config.tooltip.x.formatter !== void 0 &&
                  (l = s.globals.ttKeyFormatter(b, x)),
                s.globals.seriesZ.length > 0 &&
                  s.globals.seriesZ[i].length > 0 &&
                  (u = v(s.globals.seriesZ[i][a], s)),
                (d =
                  typeof s.config.xaxis.tooltip.formatter == 'function'
                    ? s.globals.xaxisTooltipFormatter(b, x)
                    : l),
                {
                  val: Array.isArray(p) ? p.join(' ') : p,
                  xVal: Array.isArray(l) ? l.join(' ') : l,
                  xAxisTTVal: Array.isArray(d) ? d.join(' ') : d,
                  zVal: u,
                }
              );
            },
          },
          {
            key: 'handleCustomTooltip',
            value: function (t) {
              var i = t.i,
                a = t.j,
                s = t.y1,
                o = t.y2,
                l = t.w,
                d = this.ttCtx.getElTooltip(),
                u = l.config.tooltip.custom;
              Array.isArray(u) && u[i] && (u = u[i]),
                (d.innerHTML = u({
                  ctx: this.ctx,
                  series: l.globals.series,
                  seriesIndex: i,
                  dataPointIndex: a,
                  y1: s,
                  y2: o,
                  w: l,
                }));
            },
          },
        ]),
        j
      );
    })(),
    Ta = (function () {
      function j(t) {
        g(this, j), (this.ttCtx = t), (this.ctx = t.ctx), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'moveXCrosshairs',
            value: function (t) {
              var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                a = this.ttCtx,
                s = this.w,
                o = a.getElXCrosshairs(),
                l = t - a.xcrosshairsWidth / 2,
                d = s.globals.labels.slice().length;
              if (
                (i !== null && (l = (s.globals.gridWidth / d) * i),
                o === null ||
                  s.globals.isBarHorizontal ||
                  (o.setAttribute('x', l),
                  o.setAttribute('x1', l),
                  o.setAttribute('x2', l),
                  o.setAttribute('y2', s.globals.gridHeight),
                  o.classList.add('apexcharts-active')),
                l < 0 && (l = 0),
                l > s.globals.gridWidth && (l = s.globals.gridWidth),
                a.isXAxisTooltipEnabled)
              ) {
                var u = l;
                (s.config.xaxis.crosshairs.width !== 'tickWidth' &&
                  s.config.xaxis.crosshairs.width !== 'barWidth') ||
                  (u = l + a.xcrosshairsWidth / 2),
                  this.moveXAxisTooltip(u);
              }
            },
          },
          {
            key: 'moveYCrosshairs',
            value: function (t) {
              var i = this.ttCtx;
              i.ycrosshairs !== null &&
                W.setAttrs(i.ycrosshairs, { y1: t, y2: t }),
                i.ycrosshairsHidden !== null &&
                  W.setAttrs(i.ycrosshairsHidden, { y1: t, y2: t });
            },
          },
          {
            key: 'moveXAxisTooltip',
            value: function (t) {
              var i = this.w,
                a = this.ttCtx;
              if (a.xaxisTooltip !== null && a.xcrosshairsWidth !== 0) {
                a.xaxisTooltip.classList.add('apexcharts-active');
                var s =
                  a.xaxisOffY +
                  i.config.xaxis.tooltip.offsetY +
                  i.globals.translateY +
                  1 +
                  i.config.xaxis.offsetY;
                if (
                  ((t -= a.xaxisTooltip.getBoundingClientRect().width / 2),
                  !isNaN(t))
                ) {
                  t += i.globals.translateX;
                  var o;
                  (o = new W(this.ctx).getTextRects(
                    a.xaxisTooltipText.innerHTML
                  )),
                    (a.xaxisTooltipText.style.minWidth = o.width + 'px'),
                    (a.xaxisTooltip.style.left = t + 'px'),
                    (a.xaxisTooltip.style.top = s + 'px');
                }
              }
            },
          },
          {
            key: 'moveYAxisTooltip',
            value: function (t) {
              var i = this.w,
                a = this.ttCtx;
              a.yaxisTTEls === null &&
                (a.yaxisTTEls = i.globals.dom.baseEl.querySelectorAll(
                  '.apexcharts-yaxistooltip'
                ));
              var s = parseInt(a.ycrosshairsHidden.getAttribute('y1'), 10),
                o = i.globals.translateY + s,
                l = a.yaxisTTEls[t].getBoundingClientRect().height,
                d = i.globals.translateYAxisX[t] - 2;
              i.config.yaxis[t].opposite && (d -= 26),
                (o -= l / 2),
                i.globals.ignoreYAxisIndexes.indexOf(t) === -1
                  ? (a.yaxisTTEls[t].classList.add('apexcharts-active'),
                    (a.yaxisTTEls[t].style.top = o + 'px'),
                    (a.yaxisTTEls[t].style.left =
                      d + i.config.yaxis[t].tooltip.offsetX + 'px'))
                  : a.yaxisTTEls[t].classList.remove('apexcharts-active');
            },
          },
          {
            key: 'moveTooltip',
            value: function (t, i) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                s = this.w,
                o = this.ttCtx,
                l = o.getElTooltip(),
                d = o.tooltipRect,
                u = a !== null ? parseFloat(a) : 1,
                p = parseFloat(t) + u + 5,
                x = parseFloat(i) + u / 2;
              if (
                (p > s.globals.gridWidth / 2 && (p = p - d.ttWidth - u - 10),
                p > s.globals.gridWidth - d.ttWidth - 10 &&
                  (p = s.globals.gridWidth - d.ttWidth),
                p < -20 && (p = -20),
                s.config.tooltip.followCursor)
              ) {
                var v = o.getElGrid().getBoundingClientRect();
                (p = o.e.clientX - v.left) > s.globals.gridWidth / 2 &&
                  (p -= o.tooltipRect.ttWidth),
                  (x = o.e.clientY + s.globals.translateY - v.top) >
                    s.globals.gridHeight / 2 && (x -= o.tooltipRect.ttHeight);
              } else
                s.globals.isBarHorizontal ||
                  (d.ttHeight / 2 + x > s.globals.gridHeight &&
                    (x =
                      s.globals.gridHeight -
                      d.ttHeight +
                      s.globals.translateY));
              isNaN(p) ||
                ((p += s.globals.translateX),
                (l.style.left = p + 'px'),
                (l.style.top = x + 'px'));
            },
          },
          {
            key: 'moveMarkers',
            value: function (t, i) {
              var a = this.w,
                s = this.ttCtx;
              if (a.globals.markers.size[t] > 0)
                for (
                  var o = a.globals.dom.baseEl.querySelectorAll(
                      " .apexcharts-series[data\\:realIndex='".concat(
                        t,
                        "'] .apexcharts-marker"
                      )
                    ),
                    l = 0;
                  l < o.length;
                  l++
                )
                  parseInt(o[l].getAttribute('rel'), 10) === i &&
                    (s.marker.resetPointsSize(),
                    s.marker.enlargeCurrentPoint(i, o[l]));
              else
                s.marker.resetPointsSize(), this.moveDynamicPointOnHover(i, t);
            },
          },
          {
            key: 'moveDynamicPointOnHover',
            value: function (t, i) {
              var a,
                s,
                o = this.w,
                l = this.ttCtx,
                d = o.globals.pointsArray,
                u = l.tooltipUtil.getHoverMarkerSize(i),
                p = o.config.series[i].type;
              if (
                !p ||
                (p !== 'column' && p !== 'candlestick' && p !== 'boxPlot')
              ) {
                (a = d[i][t][0]), (s = d[i][t][1] ? d[i][t][1] : 0);
                var x = o.globals.dom.baseEl.querySelector(
                  ".apexcharts-series[data\\:realIndex='".concat(
                    i,
                    "'] .apexcharts-series-markers circle"
                  )
                );
                x &&
                  s < o.globals.gridHeight &&
                  s > 0 &&
                  (x.setAttribute('r', u),
                  x.setAttribute('cx', a),
                  x.setAttribute('cy', s)),
                  this.moveXCrosshairs(a),
                  l.fixedTooltip || this.moveTooltip(a, s, u);
              }
            },
          },
          {
            key: 'moveDynamicPointsOnHover',
            value: function (t) {
              var i,
                a = this.ttCtx,
                s = a.w,
                o = 0,
                l = 0,
                d = s.globals.pointsArray;
              i = new Be(this.ctx).getActiveConfigSeriesIndex('asc', [
                'line',
                'area',
                'scatter',
                'bubble',
              ]);
              var u = a.tooltipUtil.getHoverMarkerSize(i);
              d[i] && ((o = d[i][t][0]), (l = d[i][t][1]));
              var p = a.tooltipUtil.getAllMarkers();
              if (p !== null)
                for (var x = 0; x < s.globals.series.length; x++) {
                  var v = d[x];
                  if (
                    (s.globals.comboCharts &&
                      v === void 0 &&
                      p.splice(x, 0, null),
                    v && v.length)
                  ) {
                    var b = d[x][t][1],
                      C = void 0;
                    if (
                      (p[x].setAttribute('cx', o),
                      s.config.chart.type === 'rangeArea' &&
                        !s.globals.comboCharts)
                    ) {
                      var S = t + s.globals.series[x].length;
                      (C = d[x][S][1]), (b -= Math.abs(b - C) / 2);
                    }
                    b !== null &&
                    !isNaN(b) &&
                    b < s.globals.gridHeight + u &&
                    b + u > 0
                      ? (p[x] && p[x].setAttribute('r', u),
                        p[x] && p[x].setAttribute('cy', b))
                      : p[x] && p[x].setAttribute('r', 0);
                  }
                }
              this.moveXCrosshairs(o),
                a.fixedTooltip ||
                  this.moveTooltip(o, l || s.globals.gridHeight, u);
            },
          },
          {
            key: 'moveStickyTooltipOverBars',
            value: function (t, i) {
              var a = this.w,
                s = this.ttCtx,
                o = a.globals.columnSeries
                  ? a.globals.columnSeries.length
                  : a.globals.series.length,
                l =
                  o >= 2 && o % 2 == 0
                    ? Math.floor(o / 2)
                    : Math.floor(o / 2) + 1;
              a.globals.isBarHorizontal &&
                (l = new Be(this.ctx).getActiveConfigSeriesIndex('desc') + 1);
              var d = a.globals.dom.baseEl.querySelector(
                ".apexcharts-bar-series .apexcharts-series[rel='"
                  .concat(l, "'] path[j='")
                  .concat(
                    t,
                    "'], .apexcharts-candlestick-series .apexcharts-series[rel='"
                  )
                  .concat(l, "'] path[j='")
                  .concat(
                    t,
                    "'], .apexcharts-boxPlot-series .apexcharts-series[rel='"
                  )
                  .concat(l, "'] path[j='")
                  .concat(
                    t,
                    "'], .apexcharts-rangebar-series .apexcharts-series[rel='"
                  )
                  .concat(l, "'] path[j='")
                  .concat(t, "']")
              );
              d ||
                typeof i != 'number' ||
                (d = a.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-series .apexcharts-series[data\\:realIndex='"
                    .concat(i, "'] path[j='")
                    .concat(
                      t,
                      `'],
        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='`
                    )
                    .concat(i, "'] path[j='")
                    .concat(
                      t,
                      `'],
        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='`
                    )
                    .concat(i, "'] path[j='")
                    .concat(
                      t,
                      `'],
        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='`
                    )
                    .concat(i, "'] path[j='")
                    .concat(t, "']")
                ));
              var u = d ? parseFloat(d.getAttribute('cx')) : 0,
                p = d ? parseFloat(d.getAttribute('cy')) : 0,
                x = d ? parseFloat(d.getAttribute('barWidth')) : 0,
                v = s.getElGrid().getBoundingClientRect(),
                b =
                  d &&
                  (d.classList.contains('apexcharts-candlestick-area') ||
                    d.classList.contains('apexcharts-boxPlot-area'));
              a.globals.isXNumeric
                ? (d && !b && (u -= o % 2 != 0 ? x / 2 : 0),
                  d && b && a.globals.comboCharts && (u -= x / 2))
                : a.globals.isBarHorizontal ||
                  ((u =
                    s.xAxisTicksPositions[t - 1] +
                    s.dataPointsDividedWidth / 2),
                  isNaN(u) &&
                    (u =
                      s.xAxisTicksPositions[t] - s.dataPointsDividedWidth / 2)),
                a.globals.isBarHorizontal
                  ? (p -= s.tooltipRect.ttHeight)
                  : a.config.tooltip.followCursor
                  ? (p = s.e.clientY - v.top - s.tooltipRect.ttHeight / 2)
                  : p + s.tooltipRect.ttHeight + 15 > a.globals.gridHeight &&
                    (p = a.globals.gridHeight),
                a.globals.isBarHorizontal || this.moveXCrosshairs(u),
                s.fixedTooltip ||
                  this.moveTooltip(u, p || a.globals.gridHeight);
            },
          },
        ]),
        j
      );
    })(),
    yo = (function () {
      function j(t) {
        g(this, j),
          (this.w = t.w),
          (this.ttCtx = t),
          (this.ctx = t.ctx),
          (this.tooltipPosition = new Ta(t));
      }
      return (
        k(j, [
          {
            key: 'drawDynamicPoints',
            value: function () {
              var t = this.w,
                i = new W(this.ctx),
                a = new _t(this.ctx),
                s = t.globals.dom.baseEl.querySelectorAll('.apexcharts-series');
              (s = V(s)),
                t.config.chart.stacked &&
                  s.sort(function (v, b) {
                    return (
                      parseFloat(v.getAttribute('data:realIndex')) -
                      parseFloat(b.getAttribute('data:realIndex'))
                    );
                  });
              for (var o = 0; o < s.length; o++) {
                var l = s[o].querySelector('.apexcharts-series-markers-wrap');
                if (l !== null) {
                  var d = void 0,
                    u = 'apexcharts-marker w'.concat(
                      (Math.random() + 1).toString(36).substring(4)
                    );
                  (t.config.chart.type !== 'line' &&
                    t.config.chart.type !== 'area') ||
                    t.globals.comboCharts ||
                    t.config.tooltip.intersect ||
                    (u += ' no-pointer-events');
                  var p = a.getMarkerConfig({
                    cssClass: u,
                    seriesIndex: Number(l.getAttribute('data:realIndex')),
                  });
                  (d = i.drawMarker(0, 0, p)).node.setAttribute(
                    'default-marker-size',
                    0
                  );
                  var x = document.createElementNS(t.globals.SVGNS, 'g');
                  x.classList.add('apexcharts-series-markers'),
                    x.appendChild(d.node),
                    l.appendChild(x);
                }
              }
            },
          },
          {
            key: 'enlargeCurrentPoint',
            value: function (t, i) {
              var a =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                s =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                o = this.w;
              o.config.chart.type !== 'bubble' && this.newPointSize(t, i);
              var l = i.getAttribute('cx'),
                d = i.getAttribute('cy');
              if (
                (a !== null && s !== null && ((l = a), (d = s)),
                this.tooltipPosition.moveXCrosshairs(l),
                !this.fixedTooltip)
              ) {
                if (o.config.chart.type === 'radar') {
                  var u = this.ttCtx.getElGrid().getBoundingClientRect();
                  l = this.ttCtx.e.clientX - u.left;
                }
                this.tooltipPosition.moveTooltip(
                  l,
                  d,
                  o.config.markers.hover.size
                );
              }
            },
          },
          {
            key: 'enlargePoints',
            value: function (t) {
              for (
                var i = this.w,
                  a = this,
                  s = this.ttCtx,
                  o = t,
                  l = i.globals.dom.baseEl.querySelectorAll(
                    '.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker'
                  ),
                  d = i.config.markers.hover.size,
                  u = 0;
                u < l.length;
                u++
              ) {
                var p = l[u].getAttribute('rel'),
                  x = l[u].getAttribute('index');
                if (
                  (d === void 0 &&
                    (d =
                      i.globals.markers.size[x] +
                      i.config.markers.hover.sizeOffset),
                  o === parseInt(p, 10))
                ) {
                  a.newPointSize(o, l[u]);
                  var v = l[u].getAttribute('cx'),
                    b = l[u].getAttribute('cy');
                  a.tooltipPosition.moveXCrosshairs(v),
                    s.fixedTooltip || a.tooltipPosition.moveTooltip(v, b, d);
                } else a.oldPointSize(l[u]);
              }
            },
          },
          {
            key: 'newPointSize',
            value: function (t, i) {
              var a = this.w,
                s = a.config.markers.hover.size,
                o = t === 0 ? i.parentNode.firstChild : i.parentNode.lastChild;
              if (o.getAttribute('default-marker-size') !== '0') {
                var l = parseInt(o.getAttribute('index'), 10);
                s === void 0 &&
                  (s =
                    a.globals.markers.size[l] +
                    a.config.markers.hover.sizeOffset),
                  s < 0 && (s = 0),
                  o.setAttribute('r', s);
              }
            },
          },
          {
            key: 'oldPointSize',
            value: function (t) {
              var i = parseFloat(t.getAttribute('default-marker-size'));
              t.setAttribute('r', i);
            },
          },
          {
            key: 'resetPointsSize',
            value: function () {
              for (
                var t = this.w.globals.dom.baseEl.querySelectorAll(
                    '.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker'
                  ),
                  i = 0;
                i < t.length;
                i++
              ) {
                var a = parseFloat(t[i].getAttribute('default-marker-size'));
                E.isNumber(a) && a >= 0
                  ? t[i].setAttribute('r', a)
                  : t[i].setAttribute('r', 0);
              }
            },
          },
        ]),
        j
      );
    })(),
    Fe = (function () {
      function j(t) {
        g(this, j), (this.w = t.w);
        var i = this.w;
        (this.ttCtx = t),
          (this.isVerticalGroupedRangeBar =
            !i.globals.isBarHorizontal &&
            i.config.chart.type === 'rangeBar' &&
            i.config.plotOptions.bar.rangeBarGroupRows);
      }
      return (
        k(j, [
          {
            key: 'getAttr',
            value: function (t, i) {
              return parseFloat(t.target.getAttribute(i));
            },
          },
          {
            key: 'handleHeatTreeTooltip',
            value: function (t) {
              var i = t.e,
                a = t.opt,
                s = t.x,
                o = t.y,
                l = t.type,
                d = this.ttCtx,
                u = this.w;
              if (
                i.target.classList.contains('apexcharts-'.concat(l, '-rect'))
              ) {
                var p = this.getAttr(i, 'i'),
                  x = this.getAttr(i, 'j'),
                  v = this.getAttr(i, 'cx'),
                  b = this.getAttr(i, 'cy'),
                  C = this.getAttr(i, 'width'),
                  S = this.getAttr(i, 'height');
                if (
                  (d.tooltipLabels.drawSeriesTexts({
                    ttItems: a.ttItems,
                    i: p,
                    j: x,
                    shared: !1,
                    e: i,
                  }),
                  (u.globals.capturedSeriesIndex = p),
                  (u.globals.capturedDataPointIndex = x),
                  (s = v + d.tooltipRect.ttWidth / 2 + C),
                  (o = b + d.tooltipRect.ttHeight / 2 - S / 2),
                  d.tooltipPosition.moveXCrosshairs(v + C / 2),
                  s > u.globals.gridWidth / 2 &&
                    (s = v - d.tooltipRect.ttWidth / 2 + C),
                  d.w.config.tooltip.followCursor)
                ) {
                  var L = u.globals.dom.elWrap.getBoundingClientRect();
                  (s =
                    u.globals.clientX -
                    L.left -
                    (s > u.globals.gridWidth / 2 ? d.tooltipRect.ttWidth : 0)),
                    (o =
                      u.globals.clientY -
                      L.top -
                      (o > u.globals.gridHeight / 2
                        ? d.tooltipRect.ttHeight
                        : 0));
                }
              }
              return { x: s, y: o };
            },
          },
          {
            key: 'handleMarkerTooltip',
            value: function (t) {
              var i,
                a,
                s = t.e,
                o = t.opt,
                l = t.x,
                d = t.y,
                u = this.w,
                p = this.ttCtx;
              if (s.target.classList.contains('apexcharts-marker')) {
                var x = parseInt(o.paths.getAttribute('cx'), 10),
                  v = parseInt(o.paths.getAttribute('cy'), 10),
                  b = parseFloat(o.paths.getAttribute('val'));
                if (
                  ((a = parseInt(o.paths.getAttribute('rel'), 10)),
                  (i =
                    parseInt(
                      o.paths.parentNode.parentNode.parentNode.getAttribute(
                        'rel'
                      ),
                      10
                    ) - 1),
                  p.intersect)
                ) {
                  var C = E.findAncestor(o.paths, 'apexcharts-series');
                  C && (i = parseInt(C.getAttribute('data:realIndex'), 10));
                }
                if (
                  (p.tooltipLabels.drawSeriesTexts({
                    ttItems: o.ttItems,
                    i,
                    j: a,
                    shared: !p.showOnIntersect && u.config.tooltip.shared,
                    e: s,
                  }),
                  s.type === 'mouseup' && p.markerClick(s, i, a),
                  (u.globals.capturedSeriesIndex = i),
                  (u.globals.capturedDataPointIndex = a),
                  (l = x),
                  (d = v + u.globals.translateY - 1.4 * p.tooltipRect.ttHeight),
                  p.w.config.tooltip.followCursor)
                ) {
                  var S = p.getElGrid().getBoundingClientRect();
                  d = p.e.clientY + u.globals.translateY - S.top;
                }
                b < 0 && (d = v),
                  p.marker.enlargeCurrentPoint(a, o.paths, l, d);
              }
              return { x: l, y: d };
            },
          },
          {
            key: 'handleBarTooltip',
            value: function (t) {
              var i,
                a,
                s = t.e,
                o = t.opt,
                l = this.w,
                d = this.ttCtx,
                u = d.getElTooltip(),
                p = 0,
                x = 0,
                v = 0,
                b = this.getBarTooltipXY({ e: s, opt: o });
              i = b.i;
              var C = b.barHeight,
                S = b.j;
              (l.globals.capturedSeriesIndex = i),
                (l.globals.capturedDataPointIndex = S),
                (l.globals.isBarHorizontal && d.tooltipUtil.hasBars()) ||
                !l.config.tooltip.shared
                  ? ((x = b.x),
                    (v = b.y),
                    (a = Array.isArray(l.config.stroke.width)
                      ? l.config.stroke.width[i]
                      : l.config.stroke.width),
                    (p = x))
                  : l.globals.comboCharts ||
                    l.config.tooltip.shared ||
                    (p /= 2),
                isNaN(v) && (v = l.globals.svgHeight - d.tooltipRect.ttHeight);
              var L = parseInt(
                  o.paths.parentNode.getAttribute('data:realIndex'),
                  10
                ),
                N = l.globals.isMultipleYAxis
                  ? l.config.yaxis[L] && l.config.yaxis[L].reversed
                  : l.config.yaxis[0].reversed;
              if (
                (x + d.tooltipRect.ttWidth > l.globals.gridWidth && !N
                  ? (x -= d.tooltipRect.ttWidth)
                  : x < 0 && (x = 0),
                d.w.config.tooltip.followCursor)
              ) {
                var T = d.getElGrid().getBoundingClientRect();
                v = d.e.clientY - T.top;
              }
              d.tooltip === null &&
                (d.tooltip = l.globals.dom.baseEl.querySelector(
                  '.apexcharts-tooltip'
                )),
                l.config.tooltip.shared ||
                  (l.globals.comboBarCount > 0
                    ? d.tooltipPosition.moveXCrosshairs(p + a / 2)
                    : d.tooltipPosition.moveXCrosshairs(p)),
                !d.fixedTooltip &&
                  (!l.config.tooltip.shared ||
                    (l.globals.isBarHorizontal && d.tooltipUtil.hasBars())) &&
                  (N && (x -= d.tooltipRect.ttWidth) < 0 && (x = 0),
                  !N ||
                    (l.globals.isBarHorizontal && d.tooltipUtil.hasBars()) ||
                    (v = v + C - 2 * (l.globals.series[i][S] < 0 ? C : 0)),
                  (v = v + l.globals.translateY - d.tooltipRect.ttHeight / 2),
                  (u.style.left = x + l.globals.translateX + 'px'),
                  (u.style.top = v + 'px'));
            },
          },
          {
            key: 'getBarTooltipXY',
            value: function (t) {
              var i = this,
                a = t.e,
                s = t.opt,
                o = this.w,
                l = null,
                d = this.ttCtx,
                u = 0,
                p = 0,
                x = 0,
                v = 0,
                b = 0,
                C = a.target.classList;
              if (
                C.contains('apexcharts-bar-area') ||
                C.contains('apexcharts-candlestick-area') ||
                C.contains('apexcharts-boxPlot-area') ||
                C.contains('apexcharts-rangebar-area')
              ) {
                var S = a.target,
                  L = S.getBoundingClientRect(),
                  N = s.elGrid.getBoundingClientRect(),
                  T = L.height;
                b = L.height;
                var I = L.width,
                  h = parseInt(S.getAttribute('cx'), 10),
                  y = parseInt(S.getAttribute('cy'), 10);
                v = parseFloat(S.getAttribute('barWidth'));
                var A =
                  a.type === 'touchmove' ? a.touches[0].clientX : a.clientX;
                (l = parseInt(S.getAttribute('j'), 10)),
                  (u = parseInt(S.parentNode.getAttribute('rel'), 10) - 1);
                var P = S.getAttribute('data-range-y1'),
                  R = S.getAttribute('data-range-y2');
                o.globals.comboCharts &&
                  (u = parseInt(
                    S.parentNode.getAttribute('data:realIndex'),
                    10
                  ));
                var O = function (G) {
                    return o.globals.isXNumeric
                      ? h - I / 2
                      : i.isVerticalGroupedRangeBar
                      ? h + I / 2
                      : h - d.dataPointsDividedWidth + I / 2;
                  },
                  X = function () {
                    return (
                      y -
                      d.dataPointsDividedHeight +
                      T / 2 -
                      d.tooltipRect.ttHeight / 2
                    );
                  };
                d.tooltipLabels.drawSeriesTexts({
                  ttItems: s.ttItems,
                  i: u,
                  j: l,
                  y1: P ? parseInt(P, 10) : null,
                  y2: R ? parseInt(R, 10) : null,
                  shared: !d.showOnIntersect && o.config.tooltip.shared,
                  e: a,
                }),
                  o.config.tooltip.followCursor
                    ? o.globals.isBarHorizontal
                      ? ((p = A - N.left + 15), (x = X()))
                      : ((p = O()),
                        (x =
                          a.clientY - N.top - d.tooltipRect.ttHeight / 2 - 15))
                    : o.globals.isBarHorizontal
                    ? ((p = h) < d.xyRatios.baseLineInvertedY &&
                        (p = h - d.tooltipRect.ttWidth),
                      (x = X()))
                    : ((p = O()), (x = y));
              }
              return { x: p, y: x, barHeight: b, barWidth: v, i: u, j: l };
            },
          },
        ]),
        j
      );
    })(),
    Cn = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.ttCtx = t);
      }
      return (
        k(j, [
          {
            key: 'drawXaxisTooltip',
            value: function () {
              var t = this.w,
                i = this.ttCtx,
                a = t.config.xaxis.position === 'bottom';
              i.xaxisOffY = a
                ? t.globals.gridHeight + 1
                : -t.globals.xAxisHeight - t.config.xaxis.axisTicks.height + 3;
              var s = a
                  ? 'apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom'
                  : 'apexcharts-xaxistooltip apexcharts-xaxistooltip-top',
                o = t.globals.dom.elWrap;
              i.isXAxisTooltipEnabled &&
                t.globals.dom.baseEl.querySelector(
                  '.apexcharts-xaxistooltip'
                ) === null &&
                ((i.xaxisTooltip = document.createElement('div')),
                i.xaxisTooltip.setAttribute(
                  'class',
                  s + ' apexcharts-theme-' + t.config.tooltip.theme
                ),
                o.appendChild(i.xaxisTooltip),
                (i.xaxisTooltipText = document.createElement('div')),
                i.xaxisTooltipText.classList.add(
                  'apexcharts-xaxistooltip-text'
                ),
                (i.xaxisTooltipText.style.fontFamily =
                  t.config.xaxis.tooltip.style.fontFamily ||
                  t.config.chart.fontFamily),
                (i.xaxisTooltipText.style.fontSize =
                  t.config.xaxis.tooltip.style.fontSize),
                i.xaxisTooltip.appendChild(i.xaxisTooltipText));
            },
          },
          {
            key: 'drawYaxisTooltip',
            value: function () {
              for (
                var t = this.w,
                  i = this.ttCtx,
                  a = function (o) {
                    var l =
                      t.config.yaxis[o].opposite ||
                      t.config.yaxis[o].crosshairs.opposite;
                    i.yaxisOffX = l ? t.globals.gridWidth + 1 : 1;
                    var d =
                      'apexcharts-yaxistooltip apexcharts-yaxistooltip-'.concat(
                        o,
                        l
                          ? ' apexcharts-yaxistooltip-right'
                          : ' apexcharts-yaxistooltip-left'
                      );
                    t.globals.yAxisSameScaleIndices.map(function (p, x) {
                      p.map(function (v, b) {
                        b === o &&
                          (d += t.config.yaxis[b].show
                            ? ' '
                            : ' apexcharts-yaxistooltip-hidden');
                      });
                    });
                    var u = t.globals.dom.elWrap;
                    t.globals.dom.baseEl.querySelector(
                      '.apexcharts-yaxistooltip apexcharts-yaxistooltip-'.concat(
                        o
                      )
                    ) === null &&
                      ((i.yaxisTooltip = document.createElement('div')),
                      i.yaxisTooltip.setAttribute(
                        'class',
                        d + ' apexcharts-theme-' + t.config.tooltip.theme
                      ),
                      u.appendChild(i.yaxisTooltip),
                      o === 0 && (i.yaxisTooltipText = []),
                      (i.yaxisTooltipText[o] = document.createElement('div')),
                      i.yaxisTooltipText[o].classList.add(
                        'apexcharts-yaxistooltip-text'
                      ),
                      i.yaxisTooltip.appendChild(i.yaxisTooltipText[o]));
                  },
                  s = 0;
                s < t.config.yaxis.length;
                s++
              )
                a(s);
            },
          },
          {
            key: 'setXCrosshairWidth',
            value: function () {
              var t = this.w,
                i = this.ttCtx,
                a = i.getElXCrosshairs();
              if (
                ((i.xcrosshairsWidth = parseInt(
                  t.config.xaxis.crosshairs.width,
                  10
                )),
                t.globals.comboCharts)
              ) {
                var s = t.globals.dom.baseEl.querySelector(
                  '.apexcharts-bar-area'
                );
                if (
                  s !== null &&
                  t.config.xaxis.crosshairs.width === 'barWidth'
                ) {
                  var o = parseFloat(s.getAttribute('barWidth'));
                  i.xcrosshairsWidth = o;
                } else if (t.config.xaxis.crosshairs.width === 'tickWidth') {
                  var l = t.globals.labels.length;
                  i.xcrosshairsWidth = t.globals.gridWidth / l;
                }
              } else if (t.config.xaxis.crosshairs.width === 'tickWidth') {
                var d = t.globals.labels.length;
                i.xcrosshairsWidth = t.globals.gridWidth / d;
              } else if (t.config.xaxis.crosshairs.width === 'barWidth') {
                var u = t.globals.dom.baseEl.querySelector(
                  '.apexcharts-bar-area'
                );
                if (u !== null) {
                  var p = parseFloat(u.getAttribute('barWidth'));
                  i.xcrosshairsWidth = p;
                } else i.xcrosshairsWidth = 1;
              }
              t.globals.isBarHorizontal && (i.xcrosshairsWidth = 0),
                a !== null &&
                  i.xcrosshairsWidth > 0 &&
                  a.setAttribute('width', i.xcrosshairsWidth);
            },
          },
          {
            key: 'handleYCrosshair',
            value: function () {
              var t = this.w,
                i = this.ttCtx;
              (i.ycrosshairs = t.globals.dom.baseEl.querySelector(
                '.apexcharts-ycrosshairs'
              )),
                (i.ycrosshairsHidden = t.globals.dom.baseEl.querySelector(
                  '.apexcharts-ycrosshairs-hidden'
                ));
            },
          },
          {
            key: 'drawYaxisTooltipText',
            value: function (t, i, a) {
              var s = this.ttCtx,
                o = this.w,
                l = o.globals.yLabelFormatters[t];
              if (s.yaxisTooltips[t]) {
                var d = s.getElGrid().getBoundingClientRect(),
                  u = (i - d.top) * a.yRatio[t],
                  p = o.globals.maxYArr[t] - o.globals.minYArr[t],
                  x = o.globals.minYArr[t] + (p - u);
                s.tooltipPosition.moveYCrosshairs(i - d.top),
                  (s.yaxisTooltipText[t].innerHTML = l(x)),
                  s.tooltipPosition.moveYAxisTooltip(t);
              }
            },
          },
        ]),
        j
      );
    })(),
    Dr = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
        var i = this.w;
        (this.tConfig = i.config.tooltip),
          (this.tooltipUtil = new Ma(this)),
          (this.tooltipLabels = new Pa(this)),
          (this.tooltipPosition = new Ta(this)),
          (this.marker = new yo(this)),
          (this.intersect = new Fe(this)),
          (this.axesTooltip = new Cn(this)),
          (this.showOnIntersect = this.tConfig.intersect),
          (this.showTooltipTitle = this.tConfig.x.show),
          (this.fixedTooltip = this.tConfig.fixed.enabled),
          (this.xaxisTooltip = null),
          (this.yaxisTTEls = null),
          (this.isBarShared =
            !i.globals.isBarHorizontal && this.tConfig.shared),
          (this.lastHoverTime = Date.now());
      }
      return (
        k(j, [
          {
            key: 'getElTooltip',
            value: function (t) {
              return (
                t || (t = this),
                t.w.globals.dom.baseEl
                  ? t.w.globals.dom.baseEl.querySelector('.apexcharts-tooltip')
                  : null
              );
            },
          },
          {
            key: 'getElXCrosshairs',
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                '.apexcharts-xcrosshairs'
              );
            },
          },
          {
            key: 'getElGrid',
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                '.apexcharts-grid'
              );
            },
          },
          {
            key: 'drawTooltip',
            value: function (t) {
              var i = this.w;
              (this.xyRatios = t),
                (this.isXAxisTooltipEnabled =
                  i.config.xaxis.tooltip.enabled && i.globals.axisCharts),
                (this.yaxisTooltips = i.config.yaxis.map(function (l, d) {
                  return !!(
                    l.show &&
                    l.tooltip.enabled &&
                    i.globals.axisCharts
                  );
                })),
                (this.allTooltipSeriesGroups = []),
                i.globals.axisCharts || (this.showTooltipTitle = !1);
              var a = document.createElement('div');
              if (
                (a.classList.add('apexcharts-tooltip'),
                i.config.tooltip.cssClass &&
                  a.classList.add(i.config.tooltip.cssClass),
                a.classList.add('apexcharts-theme-'.concat(this.tConfig.theme)),
                i.globals.dom.elWrap.appendChild(a),
                i.globals.axisCharts)
              ) {
                this.axesTooltip.drawXaxisTooltip(),
                  this.axesTooltip.drawYaxisTooltip(),
                  this.axesTooltip.setXCrosshairWidth(),
                  this.axesTooltip.handleYCrosshair();
                var s = new sr(this.ctx);
                this.xAxisTicksPositions = s.getXAxisTicksPositions();
              }
              if (
                ((!i.globals.comboCharts &&
                  !this.tConfig.intersect &&
                  i.config.chart.type !== 'rangeBar') ||
                  this.tConfig.shared ||
                  (this.showOnIntersect = !0),
                (i.config.markers.size !== 0 &&
                  i.globals.markers.largestSize !== 0) ||
                  this.marker.drawDynamicPoints(this),
                i.globals.collapsedSeries.length !== i.globals.series.length)
              ) {
                (this.dataPointsDividedHeight =
                  i.globals.gridHeight / i.globals.dataPoints),
                  (this.dataPointsDividedWidth =
                    i.globals.gridWidth / i.globals.dataPoints),
                  this.showTooltipTitle &&
                    ((this.tooltipTitle = document.createElement('div')),
                    this.tooltipTitle.classList.add('apexcharts-tooltip-title'),
                    (this.tooltipTitle.style.fontFamily =
                      this.tConfig.style.fontFamily ||
                      i.config.chart.fontFamily),
                    (this.tooltipTitle.style.fontSize =
                      this.tConfig.style.fontSize),
                    a.appendChild(this.tooltipTitle));
                var o = i.globals.series.length;
                (i.globals.xyCharts || i.globals.comboCharts) &&
                  this.tConfig.shared &&
                  (o = this.showOnIntersect ? 1 : i.globals.series.length),
                  (this.legendLabels = i.globals.dom.baseEl.querySelectorAll(
                    '.apexcharts-legend-text'
                  )),
                  (this.ttItems = this.createTTElements(o)),
                  this.addSVGEvents();
              }
            },
          },
          {
            key: 'createTTElements',
            value: function (t) {
              for (
                var i = this,
                  a = this.w,
                  s = [],
                  o = this.getElTooltip(),
                  l = function (u) {
                    var p = document.createElement('div');
                    p.classList.add('apexcharts-tooltip-series-group'),
                      (p.style.order = a.config.tooltip.inverseOrder
                        ? t - u
                        : u + 1),
                      i.tConfig.shared &&
                        i.tConfig.enabledOnSeries &&
                        Array.isArray(i.tConfig.enabledOnSeries) &&
                        i.tConfig.enabledOnSeries.indexOf(u) < 0 &&
                        p.classList.add(
                          'apexcharts-tooltip-series-group-hidden'
                        );
                    var x = document.createElement('span');
                    x.classList.add('apexcharts-tooltip-marker'),
                      (x.style.backgroundColor = a.globals.colors[u]),
                      p.appendChild(x);
                    var v = document.createElement('div');
                    v.classList.add('apexcharts-tooltip-text'),
                      (v.style.fontFamily =
                        i.tConfig.style.fontFamily ||
                        a.config.chart.fontFamily),
                      (v.style.fontSize = i.tConfig.style.fontSize),
                      ['y', 'goals', 'z'].forEach(function (b) {
                        var C = document.createElement('div');
                        C.classList.add(
                          'apexcharts-tooltip-'.concat(b, '-group')
                        );
                        var S = document.createElement('span');
                        S.classList.add(
                          'apexcharts-tooltip-text-'.concat(b, '-label')
                        ),
                          C.appendChild(S);
                        var L = document.createElement('span');
                        L.classList.add(
                          'apexcharts-tooltip-text-'.concat(b, '-value')
                        ),
                          C.appendChild(L),
                          v.appendChild(C);
                      }),
                      p.appendChild(v),
                      o.appendChild(p),
                      s.push(p);
                  },
                  d = 0;
                d < t;
                d++
              )
                l(d);
              return s;
            },
          },
          {
            key: 'addSVGEvents',
            value: function () {
              var t = this.w,
                i = t.config.chart.type,
                a = this.getElTooltip(),
                s = !(
                  i !== 'bar' &&
                  i !== 'candlestick' &&
                  i !== 'boxPlot' &&
                  i !== 'rangeBar'
                ),
                o =
                  i === 'area' ||
                  i === 'line' ||
                  i === 'scatter' ||
                  i === 'bubble' ||
                  i === 'radar',
                l = t.globals.dom.Paper.node,
                d = this.getElGrid();
              d && (this.seriesBound = d.getBoundingClientRect());
              var u,
                p = [],
                x = [],
                v = {
                  hoverArea: l,
                  elGrid: d,
                  tooltipEl: a,
                  tooltipY: p,
                  tooltipX: x,
                  ttItems: this.ttItems,
                };
              if (
                t.globals.axisCharts &&
                (o
                  ? (u = t.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker"
                    ))
                  : s
                  ? (u = t.globals.dom.baseEl.querySelectorAll(
                      '.apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area'
                    ))
                  : (i !== 'heatmap' && i !== 'treemap') ||
                    (u = t.globals.dom.baseEl.querySelectorAll(
                      '.apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap'
                    )),
                u && u.length)
              )
                for (var b = 0; b < u.length; b++)
                  p.push(u[b].getAttribute('cy')),
                    x.push(u[b].getAttribute('cx'));
              if (
                (t.globals.xyCharts && !this.showOnIntersect) ||
                (t.globals.comboCharts && !this.showOnIntersect) ||
                (s && this.tooltipUtil.hasBars() && this.tConfig.shared)
              )
                this.addPathsEventListeners([l], v);
              else if (
                (s && !t.globals.comboCharts) ||
                (o && this.showOnIntersect)
              )
                this.addDatapointEventsListeners(v);
              else if (
                !t.globals.axisCharts ||
                i === 'heatmap' ||
                i === 'treemap'
              ) {
                var C =
                  t.globals.dom.baseEl.querySelectorAll('.apexcharts-series');
                this.addPathsEventListeners(C, v);
              }
              if (this.showOnIntersect) {
                var S = t.globals.dom.baseEl.querySelectorAll(
                  '.apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker'
                );
                S.length > 0 && this.addPathsEventListeners(S, v),
                  this.tooltipUtil.hasBars() &&
                    !this.tConfig.shared &&
                    this.addDatapointEventsListeners(v);
              }
            },
          },
          {
            key: 'drawFixedTooltipRect',
            value: function () {
              var t = this.w,
                i = this.getElTooltip(),
                a = i.getBoundingClientRect(),
                s = a.width + 10,
                o = a.height + 10,
                l = this.tConfig.fixed.offsetX,
                d = this.tConfig.fixed.offsetY,
                u = this.tConfig.fixed.position.toLowerCase();
              return (
                u.indexOf('right') > -1 &&
                  (l = l + t.globals.svgWidth - s + 10),
                u.indexOf('bottom') > -1 &&
                  (d = d + t.globals.svgHeight - o - 10),
                (i.style.left = l + 'px'),
                (i.style.top = d + 'px'),
                { x: l, y: d, ttWidth: s, ttHeight: o }
              );
            },
          },
          {
            key: 'addDatapointEventsListeners',
            value: function (t) {
              var i = this.w.globals.dom.baseEl.querySelectorAll(
                '.apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area'
              );
              this.addPathsEventListeners(i, t);
            },
          },
          {
            key: 'addPathsEventListeners',
            value: function (t, i) {
              for (
                var a = this,
                  s = function (l) {
                    var d = {
                      paths: t[l],
                      tooltipEl: i.tooltipEl,
                      tooltipY: i.tooltipY,
                      tooltipX: i.tooltipX,
                      elGrid: i.elGrid,
                      hoverArea: i.hoverArea,
                      ttItems: i.ttItems,
                    };
                    [
                      'mousemove',
                      'mouseup',
                      'touchmove',
                      'mouseout',
                      'touchend',
                    ].map(function (u) {
                      return t[l].addEventListener(
                        u,
                        a.onSeriesHover.bind(a, d),
                        { capture: !1, passive: !0 }
                      );
                    });
                  },
                  o = 0;
                o < t.length;
                o++
              )
                s(o);
            },
          },
          {
            key: 'onSeriesHover',
            value: function (t, i) {
              var a = this,
                s = Date.now() - this.lastHoverTime;
              s >= 100
                ? this.seriesHover(t, i)
                : (clearTimeout(this.seriesHoverTimeout),
                  (this.seriesHoverTimeout = setTimeout(function () {
                    a.seriesHover(t, i);
                  }, 100 - s)));
            },
          },
          {
            key: 'seriesHover',
            value: function (t, i) {
              var a = this;
              this.lastHoverTime = Date.now();
              var s = [],
                o = this.w;
              o.config.chart.group && (s = this.ctx.getGroupedCharts()),
                (o.globals.axisCharts &&
                  ((o.globals.minX === -1 / 0 && o.globals.maxX === 1 / 0) ||
                    o.globals.dataPoints === 0)) ||
                  (s.length
                    ? s.forEach(function (l) {
                        var d = a.getElTooltip(l),
                          u = {
                            paths: t.paths,
                            tooltipEl: d,
                            tooltipY: t.tooltipY,
                            tooltipX: t.tooltipX,
                            elGrid: t.elGrid,
                            hoverArea: t.hoverArea,
                            ttItems: l.w.globals.tooltip.ttItems,
                          };
                        l.w.globals.minX === a.w.globals.minX &&
                          l.w.globals.maxX === a.w.globals.maxX &&
                          l.w.globals.tooltip.seriesHoverByContext({
                            chartCtx: l,
                            ttCtx: l.w.globals.tooltip,
                            opt: u,
                            e: i,
                          });
                      })
                    : this.seriesHoverByContext({
                        chartCtx: this.ctx,
                        ttCtx: this.w.globals.tooltip,
                        opt: t,
                        e: i,
                      }));
            },
          },
          {
            key: 'seriesHoverByContext',
            value: function (t) {
              var i = t.chartCtx,
                a = t.ttCtx,
                s = t.opt,
                o = t.e,
                l = i.w,
                d = this.getElTooltip();
              d &&
                ((a.tooltipRect = {
                  x: 0,
                  y: 0,
                  ttWidth: d.getBoundingClientRect().width,
                  ttHeight: d.getBoundingClientRect().height,
                }),
                (a.e = o),
                a.tooltipUtil.hasBars() &&
                  !l.globals.comboCharts &&
                  !a.isBarShared &&
                  this.tConfig.onDatasetHover.highlightDataSeries &&
                  new Be(i).toggleSeriesOnHover(o, o.target.parentNode),
                a.fixedTooltip && a.drawFixedTooltipRect(),
                l.globals.axisCharts
                  ? a.axisChartsTooltips({
                      e: o,
                      opt: s,
                      tooltipRect: a.tooltipRect,
                    })
                  : a.nonAxisChartsTooltips({
                      e: o,
                      opt: s,
                      tooltipRect: a.tooltipRect,
                    }));
            },
          },
          {
            key: 'axisChartsTooltips',
            value: function (t) {
              var i,
                a,
                s = t.e,
                o = t.opt,
                l = this.w,
                d = o.elGrid.getBoundingClientRect(),
                u = s.type === 'touchmove' ? s.touches[0].clientX : s.clientX,
                p = s.type === 'touchmove' ? s.touches[0].clientY : s.clientY;
              if (
                ((this.clientY = p),
                (this.clientX = u),
                (l.globals.capturedSeriesIndex = -1),
                (l.globals.capturedDataPointIndex = -1),
                p < d.top || p > d.top + d.height)
              )
                this.handleMouseOut(o);
              else {
                if (
                  Array.isArray(this.tConfig.enabledOnSeries) &&
                  !l.config.tooltip.shared
                ) {
                  var x = parseInt(o.paths.getAttribute('index'), 10);
                  if (this.tConfig.enabledOnSeries.indexOf(x) < 0)
                    return void this.handleMouseOut(o);
                }
                var v = this.getElTooltip(),
                  b = this.getElXCrosshairs(),
                  C =
                    l.globals.xyCharts ||
                    (l.config.chart.type === 'bar' &&
                      !l.globals.isBarHorizontal &&
                      this.tooltipUtil.hasBars() &&
                      this.tConfig.shared) ||
                    (l.globals.comboCharts && this.tooltipUtil.hasBars());
                if (
                  s.type === 'mousemove' ||
                  s.type === 'touchmove' ||
                  s.type === 'mouseup'
                ) {
                  if (
                    l.globals.collapsedSeries.length +
                      l.globals.ancillaryCollapsedSeries.length ===
                    l.globals.series.length
                  )
                    return;
                  b !== null && b.classList.add('apexcharts-active');
                  var S = this.yaxisTooltips.filter(function (T) {
                    return T === !0;
                  });
                  if (
                    (this.ycrosshairs !== null &&
                      S.length &&
                      this.ycrosshairs.classList.add('apexcharts-active'),
                    C && !this.showOnIntersect)
                  )
                    this.handleStickyTooltip(s, u, p, o);
                  else if (
                    l.config.chart.type === 'heatmap' ||
                    l.config.chart.type === 'treemap'
                  ) {
                    var L = this.intersect.handleHeatTreeTooltip({
                      e: s,
                      opt: o,
                      x: i,
                      y: a,
                      type: l.config.chart.type,
                    });
                    (i = L.x),
                      (a = L.y),
                      (v.style.left = i + 'px'),
                      (v.style.top = a + 'px');
                  } else
                    this.tooltipUtil.hasBars() &&
                      this.intersect.handleBarTooltip({ e: s, opt: o }),
                      this.tooltipUtil.hasMarkers() &&
                        this.intersect.handleMarkerTooltip({
                          e: s,
                          opt: o,
                          x: i,
                          y: a,
                        });
                  if (this.yaxisTooltips.length)
                    for (var N = 0; N < l.config.yaxis.length; N++)
                      this.axesTooltip.drawYaxisTooltipText(
                        N,
                        p,
                        this.xyRatios
                      );
                  o.tooltipEl.classList.add('apexcharts-active');
                } else
                  (s.type !== 'mouseout' && s.type !== 'touchend') ||
                    this.handleMouseOut(o);
              }
            },
          },
          {
            key: 'nonAxisChartsTooltips',
            value: function (t) {
              var i = t.e,
                a = t.opt,
                s = t.tooltipRect,
                o = this.w,
                l = a.paths.getAttribute('rel'),
                d = this.getElTooltip(),
                u = o.globals.dom.elWrap.getBoundingClientRect();
              if (i.type === 'mousemove' || i.type === 'touchmove') {
                d.classList.add('apexcharts-active'),
                  this.tooltipLabels.drawSeriesTexts({
                    ttItems: a.ttItems,
                    i: parseInt(l, 10) - 1,
                    shared: !1,
                  });
                var p = o.globals.clientX - u.left - s.ttWidth / 2,
                  x = o.globals.clientY - u.top - s.ttHeight - 10;
                if (
                  ((d.style.left = p + 'px'),
                  (d.style.top = x + 'px'),
                  o.config.legend.tooltipHoverFormatter)
                ) {
                  var v = l - 1,
                    b = (0, o.config.legend.tooltipHoverFormatter)(
                      this.legendLabels[v].getAttribute('data:default-text'),
                      { seriesIndex: v, dataPointIndex: v, w: o }
                    );
                  this.legendLabels[v].innerHTML = b;
                }
              } else
                (i.type !== 'mouseout' && i.type !== 'touchend') ||
                  (d.classList.remove('apexcharts-active'),
                  o.config.legend.tooltipHoverFormatter &&
                    this.legendLabels.forEach(function (C) {
                      var S = C.getAttribute('data:default-text');
                      C.innerHTML = decodeURIComponent(S);
                    }));
            },
          },
          {
            key: 'handleStickyTooltip',
            value: function (t, i, a, s) {
              var o = this.w,
                l = this.tooltipUtil.getNearestValues({
                  context: this,
                  hoverArea: s.hoverArea,
                  elGrid: s.elGrid,
                  clientX: i,
                  clientY: a,
                }),
                d = l.j,
                u = l.capturedSeries;
              o.globals.collapsedSeriesIndices.includes(u) && (u = null);
              var p = s.elGrid.getBoundingClientRect();
              if (l.hoverX < 0 || l.hoverX > p.width) this.handleMouseOut(s);
              else if (u !== null) this.handleStickyCapturedSeries(t, u, s, d);
              else if (
                this.tooltipUtil.isXoverlap(d) ||
                o.globals.isBarHorizontal
              ) {
                var x = o.globals.series.findIndex(function (v, b) {
                  return !o.globals.collapsedSeriesIndices.includes(b);
                });
                this.create(t, this, x, d, s.ttItems);
              }
            },
          },
          {
            key: 'handleStickyCapturedSeries',
            value: function (t, i, a, s) {
              var o = this.w;
              if (!this.tConfig.shared && o.globals.series[i][s] === null)
                return void this.handleMouseOut(a);
              if (o.globals.series[i][s] !== void 0)
                this.tConfig.shared &&
                this.tooltipUtil.isXoverlap(s) &&
                this.tooltipUtil.isInitialSeriesSameLen()
                  ? this.create(t, this, i, s, a.ttItems)
                  : this.create(t, this, i, s, a.ttItems, !1);
              else if (this.tooltipUtil.isXoverlap(s)) {
                var l = o.globals.series.findIndex(function (d, u) {
                  return !o.globals.collapsedSeriesIndices.includes(u);
                });
                this.create(t, this, l, s, a.ttItems);
              }
            },
          },
          {
            key: 'deactivateHoverFilter',
            value: function () {
              for (
                var t = this.w,
                  i = new W(this.ctx),
                  a = t.globals.dom.Paper.select('.apexcharts-bar-area'),
                  s = 0;
                s < a.length;
                s++
              )
                i.pathMouseLeave(a[s]);
            },
          },
          {
            key: 'handleMouseOut',
            value: function (t) {
              var i = this.w,
                a = this.getElXCrosshairs();
              if (
                (t.tooltipEl.classList.remove('apexcharts-active'),
                this.deactivateHoverFilter(),
                i.config.chart.type !== 'bubble' &&
                  this.marker.resetPointsSize(),
                a !== null && a.classList.remove('apexcharts-active'),
                this.ycrosshairs !== null &&
                  this.ycrosshairs.classList.remove('apexcharts-active'),
                this.isXAxisTooltipEnabled &&
                  this.xaxisTooltip.classList.remove('apexcharts-active'),
                this.yaxisTooltips.length)
              ) {
                this.yaxisTTEls === null &&
                  (this.yaxisTTEls = i.globals.dom.baseEl.querySelectorAll(
                    '.apexcharts-yaxistooltip'
                  ));
                for (var s = 0; s < this.yaxisTTEls.length; s++)
                  this.yaxisTTEls[s].classList.remove('apexcharts-active');
              }
              i.config.legend.tooltipHoverFormatter &&
                this.legendLabels.forEach(function (o) {
                  var l = o.getAttribute('data:default-text');
                  o.innerHTML = decodeURIComponent(l);
                });
            },
          },
          {
            key: 'markerClick',
            value: function (t, i, a) {
              var s = this.w;
              typeof s.config.chart.events.markerClick == 'function' &&
                s.config.chart.events.markerClick(t, this.ctx, {
                  seriesIndex: i,
                  dataPointIndex: a,
                  w: s,
                }),
                this.ctx.events.fireEvent('markerClick', [
                  t,
                  this.ctx,
                  { seriesIndex: i, dataPointIndex: a, w: s },
                ]);
            },
          },
          {
            key: 'create',
            value: function (t, i, a, s, o) {
              var l,
                d,
                u,
                p,
                x,
                v,
                b,
                C,
                S,
                L,
                N,
                T,
                I,
                h,
                y,
                A,
                P =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : null,
                R = this.w,
                O = i;
              t.type === 'mouseup' && this.markerClick(t, a, s),
                P === null && (P = this.tConfig.shared);
              var X = this.tooltipUtil.hasMarkers(a),
                G = this.tooltipUtil.getElBars();
              if (R.config.legend.tooltipHoverFormatter) {
                var q = R.config.legend.tooltipHoverFormatter,
                  ie = Array.from(this.legendLabels);
                ie.forEach(function (Ri) {
                  var cr = Ri.getAttribute('data:default-text');
                  Ri.innerHTML = decodeURIComponent(cr);
                });
                for (var re = 0; re < ie.length; re++) {
                  var se = ie[re],
                    me = parseInt(se.getAttribute('i'), 10),
                    Se = decodeURIComponent(
                      se.getAttribute('data:default-text')
                    ),
                    Ae = q(Se, {
                      seriesIndex: P ? me : a,
                      dataPointIndex: s,
                      w: R,
                    });
                  if (P)
                    se.innerHTML =
                      R.globals.collapsedSeriesIndices.indexOf(me) < 0
                        ? Ae
                        : Se;
                  else if (((se.innerHTML = me === a ? Ae : Se), a === me))
                    break;
                }
              }
              var Ne = c(
                c(
                  { ttItems: o, i: a, j: s },
                  ((l = R.globals.seriesRange) === null ||
                  l === void 0 ||
                  (d = l[a]) === null ||
                  d === void 0 ||
                  (u = d[s]) === null ||
                  u === void 0 ||
                  (p = u.y[0]) === null ||
                  p === void 0
                    ? void 0
                    : p.y1) !== void 0 && {
                    y1:
                      (x = R.globals.seriesRange) === null ||
                      x === void 0 ||
                      (v = x[a]) === null ||
                      v === void 0 ||
                      (b = v[s]) === null ||
                      b === void 0 ||
                      (C = b.y[0]) === null ||
                      C === void 0
                        ? void 0
                        : C.y1,
                  }
                ),
                ((S = R.globals.seriesRange) === null ||
                S === void 0 ||
                (L = S[a]) === null ||
                L === void 0 ||
                (N = L[s]) === null ||
                N === void 0 ||
                (T = N.y[0]) === null ||
                T === void 0
                  ? void 0
                  : T.y2) !== void 0 && {
                  y2:
                    (I = R.globals.seriesRange) === null ||
                    I === void 0 ||
                    (h = I[a]) === null ||
                    h === void 0 ||
                    (y = h[s]) === null ||
                    y === void 0 ||
                    (A = y.y[0]) === null ||
                    A === void 0
                      ? void 0
                      : A.y2,
                }
              );
              if (P) {
                if (
                  (O.tooltipLabels.drawSeriesTexts(
                    c(
                      c({}, Ne),
                      {},
                      { shared: !this.showOnIntersect && this.tConfig.shared }
                    )
                  ),
                  X)
                )
                  R.globals.markers.largestSize > 0
                    ? O.marker.enlargePoints(s)
                    : O.tooltipPosition.moveDynamicPointsOnHover(s);
                else if (
                  this.tooltipUtil.hasBars() &&
                  ((this.barSeriesHeight = this.tooltipUtil.getBarsHeight(G)),
                  this.barSeriesHeight > 0)
                ) {
                  var Ze = new W(this.ctx),
                    Ye = R.globals.dom.Paper.select(
                      ".apexcharts-bar-area[j='".concat(s, "']")
                    );
                  this.deactivateHoverFilter(),
                    this.tooltipPosition.moveStickyTooltipOverBars(s, a);
                  for (var et = 0; et < Ye.length; et++)
                    Ze.pathMouseEnter(Ye[et]);
                }
              } else
                O.tooltipLabels.drawSeriesTexts(c({ shared: !1 }, Ne)),
                  this.tooltipUtil.hasBars() &&
                    O.tooltipPosition.moveStickyTooltipOverBars(s, a),
                  X && O.tooltipPosition.moveMarkers(a, s);
            },
          },
        ]),
        j
      );
    })(),
    wo = (function () {
      function j(t) {
        g(this, j),
          (this.w = t.w),
          (this.barCtx = t),
          (this.totalFormatter =
            this.w.config.plotOptions.bar.dataLabels.total.formatter),
          this.totalFormatter ||
            (this.totalFormatter = this.w.config.dataLabels.formatter);
      }
      return (
        k(j, [
          {
            key: 'handleBarDataLabels',
            value: function (t) {
              var i = t.x,
                a = t.y,
                s = t.y1,
                o = t.y2,
                l = t.i,
                d = t.j,
                u = t.realIndex,
                p = t.groupIndex,
                x = t.series,
                v = t.barHeight,
                b = t.barWidth,
                C = t.barXPosition,
                S = t.barYPosition,
                L = t.visibleSeries,
                N = t.renderedPath,
                T = this.w,
                I = new W(this.barCtx.ctx),
                h = Array.isArray(this.barCtx.strokeWidth)
                  ? this.barCtx.strokeWidth[u]
                  : this.barCtx.strokeWidth,
                y = i + parseFloat(b * L),
                A = a + parseFloat(v * L);
              T.globals.isXNumeric &&
                !T.globals.isBarHorizontal &&
                ((y = i + parseFloat(b * (L + 1))),
                (A = a + parseFloat(v * (L + 1)) - h));
              var P,
                R = null,
                O = i,
                X = a,
                G = {},
                q = T.config.dataLabels,
                ie = this.barCtx.barOptions.dataLabels,
                re = this.barCtx.barOptions.dataLabels.total;
              S !== void 0 && this.barCtx.isRangeBar && ((A = S), (X = S)),
                C !== void 0 &&
                  this.barCtx.isVerticalGroupedRangeBar &&
                  ((y = C), (O = C));
              var se = q.offsetX,
                me = q.offsetY,
                Se = { width: 0, height: 0 };
              if (T.config.dataLabels.enabled) {
                var Ae = this.barCtx.series[l][d];
                Se = I.getTextRects(
                  T.globals.yLabelFormatters[0](Ae),
                  parseFloat(q.style.fontSize)
                );
              }
              var Ne = {
                x: i,
                y: a,
                i: l,
                j: d,
                realIndex: u,
                groupIndex: p || -1,
                renderedPath: N,
                bcx: y,
                bcy: A,
                barHeight: v,
                barWidth: b,
                textRects: Se,
                strokeWidth: h,
                dataLabelsX: O,
                dataLabelsY: X,
                dataLabelsConfig: q,
                barDataLabelsConfig: ie,
                barTotalDataLabelsConfig: re,
                offX: se,
                offY: me,
              };
              return (
                (G = this.barCtx.isHorizontal
                  ? this.calculateBarsDataLabelsPosition(Ne)
                  : this.calculateColumnsDataLabelsPosition(Ne)),
                N.attr({
                  cy: G.bcy,
                  cx: G.bcx,
                  j: d,
                  val: x[l][d],
                  barHeight: v,
                  barWidth: b,
                }),
                (P = this.drawCalculatedDataLabels({
                  x: G.dataLabelsX,
                  y: G.dataLabelsY,
                  val: this.barCtx.isRangeBar ? [s, o] : x[l][d],
                  i: u,
                  j: d,
                  barWidth: b,
                  barHeight: v,
                  textRects: Se,
                  dataLabelsConfig: q,
                })),
                T.config.chart.stacked &&
                  re.enabled &&
                  (R = this.drawTotalDataLabels({
                    x: G.totalDataLabelsX,
                    y: G.totalDataLabelsY,
                    realIndex: u,
                    textAnchor: G.totalDataLabelsAnchor,
                    val: this.getStackedTotalDataLabel({ realIndex: u, j: d }),
                    dataLabelsConfig: q,
                    barTotalDataLabelsConfig: re,
                  })),
                { dataLabels: P, totalDataLabels: R }
              );
            },
          },
          {
            key: 'getStackedTotalDataLabel',
            value: function (t) {
              var i = t.realIndex,
                a = t.j,
                s = this.w,
                o = this.barCtx.stackedSeriesTotals[a];
              return (
                this.totalFormatter &&
                  (o = this.totalFormatter(
                    o,
                    c(c({}, s), {}, { seriesIndex: i, dataPointIndex: a, w: s })
                  )),
                o
              );
            },
          },
          {
            key: 'calculateColumnsDataLabelsPosition',
            value: function (t) {
              var i,
                a,
                s = this.w,
                o = t.i,
                l = t.j,
                d = t.realIndex,
                u = t.groupIndex,
                p = t.y,
                x = t.bcx,
                v = t.barWidth,
                b = t.barHeight,
                C = t.textRects,
                S = t.dataLabelsX,
                L = t.dataLabelsY,
                N = t.dataLabelsConfig,
                T = t.barDataLabelsConfig,
                I = t.barTotalDataLabelsConfig,
                h = t.strokeWidth,
                y = t.offX,
                A = t.offY;
              b = Math.abs(b);
              var P =
                s.config.plotOptions.bar.dataLabels.orientation === 'vertical';
              x = x - h / 2 + (u !== -1 ? u * v : 0);
              var R = s.globals.gridWidth / s.globals.dataPoints;
              this.barCtx.isVerticalGroupedRangeBar
                ? (S += v / 2)
                : (S = s.globals.isXNumeric
                    ? x - v / 2 + y
                    : x - R + v / 2 + y),
                P && (S = S + C.height / 2 - h / 2 - 2);
              var O = this.barCtx.series[o][l] < 0,
                X = p;
              switch (
                (this.barCtx.isReversed &&
                  ((X = p - b + (O ? 2 * b : 0)), (p -= b)),
                T.position)
              ) {
                case 'center':
                  L = P
                    ? O
                      ? X + b / 2 + A
                      : X + b / 2 - A
                    : O
                    ? X - b / 2 + C.height / 2 + A
                    : X + b / 2 + C.height / 2 - A;
                  break;
                case 'bottom':
                  L = P
                    ? O
                      ? X + b + A
                      : X + b - A
                    : O
                    ? X - b + C.height + h + A
                    : X + b - C.height / 2 + h - A;
                  break;
                case 'top':
                  L = P
                    ? O
                      ? X + A
                      : X - A
                    : O
                    ? X - C.height / 2 - A
                    : X + C.height + A;
              }
              if (this.barCtx.lastActiveBarSerieIndex === d && I.enabled) {
                var G = new W(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: d, j: l }),
                  N.fontSize
                );
                (i = O
                  ? X - G.height / 2 - A - I.offsetY + 18
                  : X + G.height + A + I.offsetY - 18),
                  (a = S + I.offsetX);
              }
              return (
                s.config.chart.stacked ||
                  (L < 0
                    ? (L = 0 + h)
                    : L + C.height / 3 > s.globals.gridHeight &&
                      (L = s.globals.gridHeight - h)),
                {
                  bcx: x,
                  bcy: p,
                  dataLabelsX: S,
                  dataLabelsY: L,
                  totalDataLabelsX: a,
                  totalDataLabelsY: i,
                  totalDataLabelsAnchor: 'middle',
                }
              );
            },
          },
          {
            key: 'calculateBarsDataLabelsPosition',
            value: function (t) {
              var i = this.w,
                a = t.x,
                s = t.i,
                o = t.j,
                l = t.realIndex,
                d = t.groupIndex,
                u = t.bcy,
                p = t.barHeight,
                x = t.barWidth,
                v = t.textRects,
                b = t.dataLabelsX,
                C = t.strokeWidth,
                S = t.dataLabelsConfig,
                L = t.barDataLabelsConfig,
                N = t.barTotalDataLabelsConfig,
                T = t.offX,
                I = t.offY,
                h = i.globals.gridHeight / i.globals.dataPoints;
              x = Math.abs(x);
              var y,
                A,
                P =
                  (u += d !== -1 ? d * p : 0) -
                  (this.barCtx.isRangeBar ? 0 : h) +
                  p / 2 +
                  v.height / 2 +
                  I -
                  3,
                R = 'start',
                O = this.barCtx.series[s][o] < 0,
                X = a;
              switch (
                (this.barCtx.isReversed &&
                  ((X = a + x - (O ? 2 * x : 0)),
                  (a = i.globals.gridWidth - x)),
                L.position)
              ) {
                case 'center':
                  b = O ? X + x / 2 - T : Math.max(v.width / 2, X - x / 2) + T;
                  break;
                case 'bottom':
                  b = O
                    ? X + x - C - Math.round(v.width / 2) - T
                    : X - x + C + Math.round(v.width / 2) + T;
                  break;
                case 'top':
                  b = O
                    ? X - C + Math.round(v.width / 2) - T
                    : X - C - Math.round(v.width / 2) + T;
              }
              if (this.barCtx.lastActiveBarSerieIndex === l && N.enabled) {
                var G = new W(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: l, j: o }),
                  S.fontSize
                );
                O
                  ? ((y = X - C + Math.round(G.width / 2) - T - N.offsetX - 15),
                    (R = 'end'))
                  : (y = X - C - Math.round(G.width / 2) + T + N.offsetX + 15),
                  (A = P + N.offsetY);
              }
              return (
                i.config.chart.stacked ||
                  (b < 0
                    ? (b = b + v.width + C)
                    : b + v.width / 2 > i.globals.gridWidth &&
                      (b = i.globals.gridWidth - v.width - C)),
                {
                  bcx: a,
                  bcy: u,
                  dataLabelsX: b,
                  dataLabelsY: P,
                  totalDataLabelsX: y,
                  totalDataLabelsY: A,
                  totalDataLabelsAnchor: R,
                }
              );
            },
          },
          {
            key: 'drawCalculatedDataLabels',
            value: function (t) {
              var i = t.x,
                a = t.y,
                s = t.val,
                o = t.i,
                l = t.j,
                d = t.textRects,
                u = t.barHeight,
                p = t.barWidth,
                x = t.dataLabelsConfig,
                v = this.w,
                b = 'rotate(0)';
              v.config.plotOptions.bar.dataLabels.orientation === 'vertical' &&
                (b = 'rotate(-90, '.concat(i, ', ').concat(a, ')'));
              var C = new dt(this.barCtx.ctx),
                S = new W(this.barCtx.ctx),
                L = x.formatter,
                N = null,
                T = v.globals.collapsedSeriesIndices.indexOf(o) > -1;
              if (x.enabled && !T) {
                N = S.group({ class: 'apexcharts-data-labels', transform: b });
                var I = '';
                s !== void 0 &&
                  (I = L(
                    s,
                    c(c({}, v), {}, { seriesIndex: o, dataPointIndex: l, w: v })
                  )),
                  !s &&
                    v.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                    (I = '');
                var h = v.globals.series[o][l] < 0,
                  y = v.config.plotOptions.bar.dataLabels.position;
                v.config.plotOptions.bar.dataLabels.orientation ===
                  'vertical' &&
                  (y === 'top' && (x.textAnchor = h ? 'end' : 'start'),
                  y === 'center' && (x.textAnchor = 'middle'),
                  y === 'bottom' && (x.textAnchor = h ? 'end' : 'start')),
                  this.barCtx.isRangeBar &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    p < S.getTextRects(I, parseFloat(x.style.fontSize)).width &&
                    (I = ''),
                  v.config.chart.stacked &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    (this.barCtx.isHorizontal
                      ? d.width / 1.6 > Math.abs(p) && (I = '')
                      : d.height / 1.6 > Math.abs(u) && (I = ''));
                var A = c({}, x);
                this.barCtx.isHorizontal &&
                  s < 0 &&
                  (x.textAnchor === 'start'
                    ? (A.textAnchor = 'end')
                    : x.textAnchor === 'end' && (A.textAnchor = 'start')),
                  C.plotDataLabelsText({
                    x: i,
                    y: a,
                    text: I,
                    i: o,
                    j: l,
                    parent: N,
                    dataLabelsConfig: A,
                    alwaysDrawDataLabel: !0,
                    offsetCorrection: !0,
                  });
              }
              return N;
            },
          },
          {
            key: 'drawTotalDataLabels',
            value: function (t) {
              var i,
                a = t.x,
                s = t.y,
                o = t.val,
                l = t.realIndex,
                d = t.textAnchor,
                u = t.barTotalDataLabelsConfig,
                p = new W(this.barCtx.ctx);
              return (
                u.enabled &&
                  a !== void 0 &&
                  s !== void 0 &&
                  this.barCtx.lastActiveBarSerieIndex === l &&
                  (i = p.drawText({
                    x: a,
                    y: s,
                    foreColor: u.style.color,
                    text: o,
                    textAnchor: d,
                    fontFamily: u.style.fontFamily,
                    fontSize: u.style.fontSize,
                    fontWeight: u.style.fontWeight,
                  })),
                i
              );
            },
          },
        ]),
        j
      );
    })(),
    Ir = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.barCtx = t);
      }
      return (
        k(j, [
          {
            key: 'initVariables',
            value: function (t) {
              var i = this.w;
              (this.barCtx.series = t),
                (this.barCtx.totalItems = 0),
                (this.barCtx.seriesLen = 0),
                (this.barCtx.visibleI = -1),
                (this.barCtx.visibleItems = 1);
              for (var a = 0; a < t.length; a++)
                if (
                  (t[a].length > 0 &&
                    ((this.barCtx.seriesLen = this.barCtx.seriesLen + 1),
                    (this.barCtx.totalItems += t[a].length)),
                  i.globals.isXNumeric)
                )
                  for (var s = 0; s < t[a].length; s++)
                    i.globals.seriesX[a][s] > i.globals.minX &&
                      i.globals.seriesX[a][s] < i.globals.maxX &&
                      this.barCtx.visibleItems++;
                else this.barCtx.visibleItems = i.globals.dataPoints;
              this.barCtx.seriesLen === 0 && (this.barCtx.seriesLen = 1),
                (this.barCtx.zeroSerieses = []),
                i.globals.comboCharts || this.checkZeroSeries({ series: t });
            },
          },
          {
            key: 'initialPositions',
            value: function () {
              var t,
                i,
                a,
                s,
                o,
                l,
                d,
                u,
                p = this.w,
                x = p.globals.dataPoints;
              this.barCtx.isRangeBar && (x = p.globals.labels.length);
              var v = this.barCtx.seriesLen;
              if (
                (p.config.plotOptions.bar.rangeBarGroupRows && (v = 1),
                this.barCtx.isHorizontal)
              )
                (o = (a = p.globals.gridHeight / x) / v),
                  p.globals.isXNumeric &&
                    (o =
                      (a = p.globals.gridHeight / this.barCtx.totalItems) /
                      this.barCtx.seriesLen),
                  (o =
                    (o * parseInt(this.barCtx.barOptions.barHeight, 10)) / 100),
                  String(this.barCtx.barOptions.barHeight).indexOf('%') ===
                    -1 && (o = parseInt(this.barCtx.barOptions.barHeight, 10)),
                  (u =
                    this.barCtx.baseLineInvertedY +
                    p.globals.padHorizontal +
                    (this.barCtx.isReversed ? p.globals.gridWidth : 0) -
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineInvertedY
                      : 0)),
                  this.barCtx.isFunnel && (u = p.globals.gridWidth / 2),
                  (i = (a - o * this.barCtx.seriesLen) / 2);
              else {
                if (
                  ((s = p.globals.gridWidth / this.barCtx.visibleItems),
                  p.config.xaxis.convertedCatToNumeric &&
                    (s = p.globals.gridWidth / p.globals.dataPoints),
                  (l =
                    ((s / v) *
                      parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                    100),
                  p.globals.isXNumeric)
                ) {
                  var b = this.barCtx.xRatio;
                  p.config.xaxis.convertedCatToNumeric &&
                    (b = this.barCtx.initialXRatio),
                    p.globals.minXDiff &&
                      p.globals.minXDiff !== 0.5 &&
                      p.globals.minXDiff / b > 0 &&
                      (s = p.globals.minXDiff / b),
                    (l =
                      ((s / v) *
                        parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                      100) < 1 && (l = 1);
                }
                String(this.barCtx.barOptions.columnWidth).indexOf('%') ===
                  -1 && (l = parseInt(this.barCtx.barOptions.columnWidth, 10)),
                  (d =
                    p.globals.gridHeight -
                    this.barCtx.baseLineY[this.barCtx.yaxisIndex] -
                    (this.barCtx.isReversed ? p.globals.gridHeight : 0) +
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex]
                      : 0)),
                  (t =
                    p.globals.padHorizontal +
                    (s - l * this.barCtx.seriesLen) / 2);
              }
              return {
                x: t,
                y: i,
                yDivision: a,
                xDivision: s,
                barHeight: o,
                barWidth: l,
                zeroH: d,
                zeroW: u,
              };
            },
          },
          {
            key: 'initializeStackedPrevVars',
            value: function (t) {
              var i = t.w;
              i.globals.hasSeriesGroups
                ? i.globals.seriesGroups.forEach(function (a) {
                    t[a] || (t[a] = {}),
                      (t[a].prevY = []),
                      (t[a].prevX = []),
                      (t[a].prevYF = []),
                      (t[a].prevXF = []),
                      (t[a].prevYVal = []),
                      (t[a].prevXVal = []);
                  })
                : ((t.prevY = []),
                  (t.prevX = []),
                  (t.prevYF = []),
                  (t.prevXF = []),
                  (t.prevYVal = []),
                  (t.prevXVal = []));
            },
          },
          {
            key: 'initializeStackedXYVars',
            value: function (t) {
              var i = t.w;
              i.globals.hasSeriesGroups
                ? i.globals.seriesGroups.forEach(function (a) {
                    t[a] || (t[a] = {}),
                      (t[a].xArrj = []),
                      (t[a].xArrjF = []),
                      (t[a].xArrjVal = []),
                      (t[a].yArrj = []),
                      (t[a].yArrjF = []),
                      (t[a].yArrjVal = []);
                  })
                : ((t.xArrj = []),
                  (t.xArrjF = []),
                  (t.xArrjVal = []),
                  (t.yArrj = []),
                  (t.yArrjF = []),
                  (t.yArrjVal = []));
            },
          },
          {
            key: 'getPathFillColor',
            value: function (t, i, a, s) {
              var o,
                l,
                d,
                u,
                p = this.w,
                x = new je(this.barCtx.ctx),
                v = null,
                b = this.barCtx.barOptions.distributed ? a : i;
              return (
                this.barCtx.barOptions.colors.ranges.length > 0 &&
                  this.barCtx.barOptions.colors.ranges.map(function (C) {
                    t[i][a] >= C.from && t[i][a] <= C.to && (v = C.color);
                  }),
                p.config.series[i].data[a] &&
                  p.config.series[i].data[a].fillColor &&
                  (v = p.config.series[i].data[a].fillColor),
                x.fillPath({
                  seriesNumber: this.barCtx.barOptions.distributed ? b : s,
                  dataPointIndex: a,
                  color: v,
                  value: t[i][a],
                  fillConfig:
                    (o = p.config.series[i].data[a]) === null || o === void 0
                      ? void 0
                      : o.fill,
                  fillType:
                    (l = p.config.series[i].data[a]) !== null &&
                    l !== void 0 &&
                    (d = l.fill) !== null &&
                    d !== void 0 &&
                    d.type
                      ? (u = p.config.series[i].data[a]) === null ||
                        u === void 0
                        ? void 0
                        : u.fill.type
                      : p.config.fill.type,
                })
              );
            },
          },
          {
            key: 'getStrokeWidth',
            value: function (t, i, a) {
              var s = 0,
                o = this.w;
              return (
                this.barCtx.series[t][i]
                  ? (this.barCtx.isNullValue = !1)
                  : (this.barCtx.isNullValue = !0),
                o.config.stroke.show &&
                  (this.barCtx.isNullValue ||
                    (s = Array.isArray(this.barCtx.strokeWidth)
                      ? this.barCtx.strokeWidth[a]
                      : this.barCtx.strokeWidth)),
                s
              );
            },
          },
          {
            key: 'shouldApplyRadius',
            value: function (t) {
              var i = this.w,
                a = !1;
              return (
                i.config.plotOptions.bar.borderRadius > 0 &&
                  (i.config.chart.stacked &&
                  i.config.plotOptions.bar.borderRadiusWhenStacked === 'last'
                    ? this.barCtx.lastActiveBarSerieIndex === t && (a = !0)
                    : (a = !0)),
                a
              );
            },
          },
          {
            key: 'barBackground',
            value: function (t) {
              var i = t.j,
                a = t.i,
                s = t.x1,
                o = t.x2,
                l = t.y1,
                d = t.y2,
                u = t.elSeries,
                p = this.w,
                x = new W(this.barCtx.ctx),
                v = new Be(this.barCtx.ctx).getActiveConfigSeriesIndex();
              if (
                this.barCtx.barOptions.colors.backgroundBarColors.length > 0 &&
                v === a
              ) {
                i >= this.barCtx.barOptions.colors.backgroundBarColors.length &&
                  (i %=
                    this.barCtx.barOptions.colors.backgroundBarColors.length);
                var b = this.barCtx.barOptions.colors.backgroundBarColors[i],
                  C = x.drawRect(
                    s !== void 0 ? s : 0,
                    l !== void 0 ? l : 0,
                    o !== void 0 ? o : p.globals.gridWidth,
                    d !== void 0 ? d : p.globals.gridHeight,
                    this.barCtx.barOptions.colors.backgroundBarRadius,
                    b,
                    this.barCtx.barOptions.colors.backgroundBarOpacity
                  );
                u.add(C), C.node.classList.add('apexcharts-backgroundBar');
              }
            },
          },
          {
            key: 'getColumnPaths',
            value: function (t) {
              var i,
                a = t.barWidth,
                s = t.barXPosition,
                o = t.y1,
                l = t.y2,
                d = t.strokeWidth,
                u = t.seriesGroup,
                p = t.realIndex,
                x = t.i,
                v = t.j,
                b = t.w,
                C = new W(this.barCtx.ctx);
              (d = Array.isArray(d) ? d[p] : d) || (d = 0);
              var S = a,
                L = s;
              (i = b.config.series[p].data[v]) !== null &&
                i !== void 0 &&
                i.columnWidthOffset &&
                ((L = s - b.config.series[p].data[v].columnWidthOffset / 2),
                (S = a + b.config.series[p].data[v].columnWidthOffset));
              var N = L,
                T = L + S;
              (o += 0.001), (l += 0.001);
              var I = C.move(N, o),
                h = C.move(N, o),
                y = C.line(T - d, o);
              if (
                (b.globals.previousPaths.length > 0 &&
                  (h = this.barCtx.getPreviousPath(p, v, !1)),
                (I =
                  I +
                  C.line(N, l) +
                  C.line(T - d, l) +
                  C.line(T - d, o) +
                  (b.config.plotOptions.bar.borderRadiusApplication === 'around'
                    ? ' Z'
                    : ' z')),
                (h =
                  h +
                  C.line(N, o) +
                  y +
                  y +
                  y +
                  y +
                  y +
                  C.line(N, o) +
                  (b.config.plotOptions.bar.borderRadiusApplication === 'around'
                    ? ' Z'
                    : ' z')),
                this.shouldApplyRadius(p) &&
                  (I = C.roundPathCorners(
                    I,
                    b.config.plotOptions.bar.borderRadius
                  )),
                b.config.chart.stacked)
              ) {
                var A = this.barCtx;
                b.globals.hasSeriesGroups && u && (A = this.barCtx[u]),
                  A.yArrj.push(l),
                  A.yArrjF.push(Math.abs(o - l)),
                  A.yArrjVal.push(this.barCtx.series[x][v]);
              }
              return { pathTo: I, pathFrom: h };
            },
          },
          {
            key: 'getBarpaths',
            value: function (t) {
              var i,
                a = t.barYPosition,
                s = t.barHeight,
                o = t.x1,
                l = t.x2,
                d = t.strokeWidth,
                u = t.seriesGroup,
                p = t.realIndex,
                x = t.i,
                v = t.j,
                b = t.w,
                C = new W(this.barCtx.ctx);
              (d = Array.isArray(d) ? d[p] : d) || (d = 0);
              var S = a,
                L = s;
              (i = b.config.series[p].data[v]) !== null &&
                i !== void 0 &&
                i.barHeightOffset &&
                ((S = a - b.config.series[p].data[v].barHeightOffset / 2),
                (L = s + b.config.series[p].data[v].barHeightOffset));
              var N = S,
                T = S + L;
              (o += 0.001), (l += 0.001);
              var I = C.move(o, N),
                h = C.move(o, N);
              b.globals.previousPaths.length > 0 &&
                (h = this.barCtx.getPreviousPath(p, v, !1));
              var y = C.line(o, T - d);
              if (
                ((I =
                  I +
                  C.line(l, N) +
                  C.line(l, T - d) +
                  y +
                  (b.config.plotOptions.bar.borderRadiusApplication === 'around'
                    ? ' Z'
                    : ' z')),
                (h =
                  h +
                  C.line(o, N) +
                  y +
                  y +
                  y +
                  y +
                  y +
                  C.line(o, N) +
                  (b.config.plotOptions.bar.borderRadiusApplication === 'around'
                    ? ' Z'
                    : ' z')),
                this.shouldApplyRadius(p) &&
                  (I = C.roundPathCorners(
                    I,
                    b.config.plotOptions.bar.borderRadius
                  )),
                b.config.chart.stacked)
              ) {
                var A = this.barCtx;
                b.globals.hasSeriesGroups && u && (A = this.barCtx[u]),
                  A.xArrj.push(l),
                  A.xArrjF.push(Math.abs(o - l)),
                  A.xArrjVal.push(this.barCtx.series[x][v]);
              }
              return { pathTo: I, pathFrom: h };
            },
          },
          {
            key: 'checkZeroSeries',
            value: function (t) {
              for (var i = t.series, a = this.w, s = 0; s < i.length; s++) {
                for (
                  var o = 0, l = 0;
                  l < i[a.globals.maxValsInArrayIndex].length;
                  l++
                )
                  o += i[s][l];
                o === 0 && this.barCtx.zeroSerieses.push(s);
              }
            },
          },
          {
            key: 'getXForValue',
            value: function (t, i) {
              var a =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? i
                  : null;
              return (
                t != null &&
                  (a =
                    i +
                    t / this.barCtx.invertedYRatio -
                    2 *
                      (this.barCtx.isReversed
                        ? t / this.barCtx.invertedYRatio
                        : 0)),
                a
              );
            },
          },
          {
            key: 'getYForValue',
            value: function (t, i) {
              var a =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? i
                  : null;
              return (
                t != null &&
                  (a =
                    i -
                    t / this.barCtx.yRatio[this.barCtx.yaxisIndex] +
                    2 *
                      (this.barCtx.isReversed
                        ? t / this.barCtx.yRatio[this.barCtx.yaxisIndex]
                        : 0)),
                a
              );
            },
          },
          {
            key: 'getGoalValues',
            value: function (t, i, a, s, o) {
              var l = this,
                d = this.w,
                u = [],
                p = function (b, C) {
                  var S;
                  u.push(
                    (M(
                      (S = {}),
                      t,
                      t === 'x'
                        ? l.getXForValue(b, i, !1)
                        : l.getYForValue(b, a, !1)
                    ),
                    M(S, 'attrs', C),
                    S)
                  );
                };
              if (
                (d.globals.seriesGoals[s] &&
                  d.globals.seriesGoals[s][o] &&
                  Array.isArray(d.globals.seriesGoals[s][o]) &&
                  d.globals.seriesGoals[s][o].forEach(function (b) {
                    p(b.value, b);
                  }),
                this.barCtx.barOptions.isDumbbell &&
                  d.globals.seriesRange.length)
              ) {
                var x = this.barCtx.barOptions.dumbbellColors
                    ? this.barCtx.barOptions.dumbbellColors
                    : d.globals.colors,
                  v = {
                    strokeHeight: t === 'x' ? 0 : d.globals.markers.size[s],
                    strokeWidth: t === 'x' ? d.globals.markers.size[s] : 0,
                    strokeDashArray: 0,
                    strokeLineCap: 'round',
                    strokeColor: Array.isArray(x[s]) ? x[s][0] : x[s],
                  };
                p(d.globals.seriesRangeStart[s][o], v),
                  p(
                    d.globals.seriesRangeEnd[s][o],
                    c(
                      c({}, v),
                      {},
                      { strokeColor: Array.isArray(x[s]) ? x[s][1] : x[s] }
                    )
                  );
              }
              return u;
            },
          },
          {
            key: 'drawGoalLine',
            value: function (t) {
              var i = t.barXPosition,
                a = t.barYPosition,
                s = t.goalX,
                o = t.goalY,
                l = t.barWidth,
                d = t.barHeight,
                u = new W(this.barCtx.ctx),
                p = u.group({ className: 'apexcharts-bar-goals-groups' });
              p.node.classList.add('apexcharts-element-hidden'),
                this.barCtx.w.globals.delayedElements.push({ el: p.node }),
                p.attr(
                  'clip-path',
                  'url(#gridRectMarkerMask'.concat(
                    this.barCtx.w.globals.cuid,
                    ')'
                  )
                );
              var x = null;
              return (
                this.barCtx.isHorizontal
                  ? Array.isArray(s) &&
                    s.forEach(function (v) {
                      var b =
                          v.attrs.strokeHeight !== void 0
                            ? v.attrs.strokeHeight
                            : d / 2,
                        C = a + b + d / 2;
                      (x = u.drawLine(
                        v.x,
                        C - 2 * b,
                        v.x,
                        C,
                        v.attrs.strokeColor ? v.attrs.strokeColor : void 0,
                        v.attrs.strokeDashArray,
                        v.attrs.strokeWidth ? v.attrs.strokeWidth : 2,
                        v.attrs.strokeLineCap
                      )),
                        p.add(x);
                    })
                  : Array.isArray(o) &&
                    o.forEach(function (v) {
                      var b =
                          v.attrs.strokeWidth !== void 0
                            ? v.attrs.strokeWidth
                            : l / 2,
                        C = i + b + l / 2;
                      (x = u.drawLine(
                        C - 2 * b,
                        v.y,
                        C,
                        v.y,
                        v.attrs.strokeColor ? v.attrs.strokeColor : void 0,
                        v.attrs.strokeDashArray,
                        v.attrs.strokeHeight ? v.attrs.strokeHeight : 2,
                        v.attrs.strokeLineCap
                      )),
                        p.add(x);
                    }),
                p
              );
            },
          },
          {
            key: 'drawBarShadow',
            value: function (t) {
              var i = t.prevPaths,
                a = t.currPaths,
                s = t.color,
                o = this.w,
                l = i.x,
                d = i.x1,
                u = i.barYPosition,
                p = a.x,
                x = a.x1,
                v = a.barYPosition,
                b = u + a.barHeight,
                C = new W(this.barCtx.ctx),
                S = new E(),
                L =
                  C.move(d, b) +
                  C.line(l, b) +
                  C.line(p, v) +
                  C.line(x, v) +
                  C.line(d, b) +
                  (o.config.plotOptions.bar.borderRadiusApplication === 'around'
                    ? ' Z'
                    : ' z');
              return C.drawPath({
                d: L,
                fill: S.shadeColor(0.5, E.rgb2hex(s)),
                stroke: 'none',
                strokeWidth: 0,
                fillOpacity: 1,
                classes: 'apexcharts-bar-shadows',
              });
            },
          },
        ]),
        j
      );
    })(),
    pi = (function () {
      function j(t, i) {
        g(this, j), (this.ctx = t), (this.w = t.w);
        var a = this.w;
        (this.barOptions = a.config.plotOptions.bar),
          (this.isHorizontal = this.barOptions.horizontal),
          (this.strokeWidth = a.config.stroke.width),
          (this.isNullValue = !1),
          (this.isRangeBar = a.globals.seriesRange.length && this.isHorizontal),
          (this.isVerticalGroupedRangeBar =
            !a.globals.isBarHorizontal &&
            a.globals.seriesRange.length &&
            a.config.plotOptions.bar.rangeBarGroupRows),
          (this.isFunnel = this.barOptions.isFunnel),
          (this.xyRatios = i),
          this.xyRatios !== null &&
            ((this.xRatio = i.xRatio),
            (this.initialXRatio = i.initialXRatio),
            (this.yRatio = i.yRatio),
            (this.invertedXRatio = i.invertedXRatio),
            (this.invertedYRatio = i.invertedYRatio),
            (this.baseLineY = i.baseLineY),
            (this.baseLineInvertedY = i.baseLineInvertedY)),
          (this.yaxisIndex = 0),
          (this.seriesLen = 0),
          (this.pathArr = []);
        var s = new Be(this.ctx);
        this.lastActiveBarSerieIndex = s.getActiveConfigSeriesIndex('desc', [
          'bar',
          'column',
        ]);
        var o = s.getBarSeriesIndices(),
          l = new ae(this.ctx);
        (this.stackedSeriesTotals = l.getStackedSeriesTotals(
          this.w.config.series
            .map(function (d, u) {
              return o.indexOf(u) === -1 ? u : -1;
            })
            .filter(function (d) {
              return d !== -1;
            })
        )),
          (this.barHelpers = new Ir(this));
      }
      return (
        k(j, [
          {
            key: 'draw',
            value: function (t, i) {
              var a = this.w,
                s = new W(this.ctx),
                o = new ae(this.ctx, a);
              (t = o.getLogSeries(t)),
                (this.series = t),
                (this.yRatio = o.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(t);
              var l = s.group({
                class: 'apexcharts-bar-series apexcharts-plot-series',
              });
              a.config.dataLabels.enabled &&
                this.totalItems > this.barOptions.dataLabels.maxItems &&
                console.warn(
                  'WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.'
                );
              for (var d = 0, u = 0; d < t.length; d++, u++) {
                var p,
                  x,
                  v,
                  b,
                  C = void 0,
                  S = void 0,
                  L = [],
                  N = [],
                  T = a.globals.comboCharts ? i[d] : d,
                  I = s.group({
                    class: 'apexcharts-series',
                    rel: d + 1,
                    seriesName: E.escapeString(a.globals.seriesNames[T]),
                    'data:realIndex': T,
                  });
                this.ctx.series.addCollapsedClassToSeries(I, T),
                  t[d].length > 0 && (this.visibleI = this.visibleI + 1);
                var h = 0,
                  y = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = T),
                  (this.isReversed =
                    a.config.yaxis[this.yaxisIndex] &&
                    a.config.yaxis[this.yaxisIndex].reversed);
                var A = this.barHelpers.initialPositions();
                (S = A.y),
                  (h = A.barHeight),
                  (x = A.yDivision),
                  (b = A.zeroW),
                  (C = A.x),
                  (y = A.barWidth),
                  (p = A.xDivision),
                  (v = A.zeroH),
                  this.horizontal || N.push(C + y / 2);
                var P = s.group({
                  class: 'apexcharts-datalabels',
                  'data:realIndex': T,
                });
                a.globals.delayedElements.push({ el: P.node }),
                  P.node.classList.add('apexcharts-element-hidden');
                var R = s.group({
                    class: 'apexcharts-bar-goals-markers',
                    style: 'pointer-events: none',
                  }),
                  O = s.group({
                    class: 'apexcharts-bar-shadows',
                    style: 'pointer-events: none',
                  });
                a.globals.delayedElements.push({ el: O.node }),
                  O.node.classList.add('apexcharts-element-hidden');
                for (var X = 0; X < a.globals.dataPoints; X++) {
                  var G = this.barHelpers.getStrokeWidth(d, X, T),
                    q = null,
                    ie = {
                      indexes: { i: d, j: X, realIndex: T, bc: u },
                      x: C,
                      y: S,
                      strokeWidth: G,
                      elSeries: I,
                    };
                  this.isHorizontal
                    ? ((q = this.drawBarPaths(
                        c(
                          c({}, ie),
                          {},
                          { barHeight: h, zeroW: b, yDivision: x }
                        )
                      )),
                      (y = this.series[d][X] / this.invertedYRatio))
                    : ((q = this.drawColumnPaths(
                        c(
                          c({}, ie),
                          {},
                          { xDivision: p, barWidth: y, zeroH: v }
                        )
                      )),
                      (h = this.series[d][X] / this.yRatio[this.yaxisIndex]));
                  var re = this.barHelpers.getPathFillColor(t, d, X, T);
                  if (
                    this.isFunnel &&
                    this.barOptions.isFunnel3d &&
                    this.pathArr.length &&
                    X > 0
                  ) {
                    var se = this.barHelpers.drawBarShadow({
                      color:
                        typeof re == 'string' &&
                        (re == null ? void 0 : re.indexOf('url')) === -1
                          ? re
                          : E.hexToRgba(a.globals.colors[d]),
                      prevPaths: this.pathArr[this.pathArr.length - 1],
                      currPaths: q,
                    });
                    se && O.add(se);
                  }
                  this.pathArr.push(q);
                  var me = this.barHelpers.drawGoalLine({
                    barXPosition: q.barXPosition,
                    barYPosition: q.barYPosition,
                    goalX: q.goalX,
                    goalY: q.goalY,
                    barHeight: h,
                    barWidth: y,
                  });
                  me && R.add(me),
                    (S = q.y),
                    (C = q.x),
                    X > 0 && N.push(C + y / 2),
                    L.push(S),
                    this.renderSeries({
                      realIndex: T,
                      pathFill: re,
                      j: X,
                      i: d,
                      pathFrom: q.pathFrom,
                      pathTo: q.pathTo,
                      strokeWidth: G,
                      elSeries: I,
                      x: C,
                      y: S,
                      series: t,
                      barHeight: q.barHeight ? q.barHeight : h,
                      barWidth: q.barWidth ? q.barWidth : y,
                      elDataLabelsWrap: P,
                      elGoalsMarkers: R,
                      elBarShadows: O,
                      visibleSeries: this.visibleI,
                      type: 'bar',
                    });
                }
                (a.globals.seriesXvalues[T] = N),
                  (a.globals.seriesYvalues[T] = L),
                  l.add(I);
              }
              return l;
            },
          },
          {
            key: 'renderSeries',
            value: function (t) {
              var i = t.realIndex,
                a = t.pathFill,
                s = t.lineFill,
                o = t.j,
                l = t.i,
                d = t.groupIndex,
                u = t.pathFrom,
                p = t.pathTo,
                x = t.strokeWidth,
                v = t.elSeries,
                b = t.x,
                C = t.y,
                S = t.y1,
                L = t.y2,
                N = t.series,
                T = t.barHeight,
                I = t.barWidth,
                h = t.barXPosition,
                y = t.barYPosition,
                A = t.elDataLabelsWrap,
                P = t.elGoalsMarkers,
                R = t.elBarShadows,
                O = t.visibleSeries,
                X = t.type,
                G = this.w,
                q = new W(this.ctx);
              s ||
                (s = this.barOptions.distributed
                  ? G.globals.stroke.colors[o]
                  : G.globals.stroke.colors[i]),
                G.config.series[l].data[o] &&
                  G.config.series[l].data[o].strokeColor &&
                  (s = G.config.series[l].data[o].strokeColor),
                this.isNullValue && (a = 'none');
              var ie =
                  ((o / G.config.chart.animations.animateGradually.delay) *
                    (G.config.chart.animations.speed / G.globals.dataPoints)) /
                  2.4,
                re = q.renderPaths({
                  i: l,
                  j: o,
                  realIndex: i,
                  pathFrom: u,
                  pathTo: p,
                  stroke: s,
                  strokeWidth: x,
                  strokeLineCap: G.config.stroke.lineCap,
                  fill: a,
                  animationDelay: ie,
                  initialSpeed: G.config.chart.animations.speed,
                  dataChangeSpeed:
                    G.config.chart.animations.dynamicAnimation.speed,
                  className: 'apexcharts-'.concat(X, '-area'),
                });
              re.attr(
                'clip-path',
                'url(#gridRectMask'.concat(G.globals.cuid, ')')
              );
              var se = G.config.forecastDataPoints;
              se.count > 0 &&
                o >= G.globals.dataPoints - se.count &&
                (re.node.setAttribute('stroke-dasharray', se.dashArray),
                re.node.setAttribute('stroke-width', se.strokeWidth),
                re.node.setAttribute('fill-opacity', se.fillOpacity)),
                S !== void 0 &&
                  L !== void 0 &&
                  (re.attr('data-range-y1', S), re.attr('data-range-y2', L)),
                new Q(this.ctx).setSelectionFilter(re, i, o),
                v.add(re);
              var me = new wo(this).handleBarDataLabels({
                x: b,
                y: C,
                y1: S,
                y2: L,
                i: l,
                j: o,
                series: N,
                realIndex: i,
                groupIndex: d,
                barHeight: T,
                barWidth: I,
                barXPosition: h,
                barYPosition: y,
                renderedPath: re,
                visibleSeries: O,
              });
              return (
                me.dataLabels !== null && A.add(me.dataLabels),
                me.totalDataLabels && A.add(me.totalDataLabels),
                v.add(A),
                P && v.add(P),
                R && v.add(R),
                v
              );
            },
          },
          {
            key: 'drawBarPaths',
            value: function (t) {
              var i,
                a = t.indexes,
                s = t.barHeight,
                o = t.strokeWidth,
                l = t.zeroW,
                d = t.x,
                u = t.y,
                p = t.yDivision,
                x = t.elSeries,
                v = this.w,
                b = a.i,
                C = a.j;
              if (v.globals.isXNumeric)
                i =
                  (u =
                    (v.globals.seriesX[b][C] - v.globals.minX) /
                      this.invertedXRatio -
                    s) +
                  s * this.visibleI;
              else if (v.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var S = 0,
                  L = 0;
                v.globals.seriesPercent.forEach(function (T, I) {
                  T[C] && S++, I < b && T[C] === 0 && L++;
                }),
                  S > 0 && (s = (this.seriesLen * s) / S),
                  (i = u + s * this.visibleI),
                  (i -= s * L);
              } else i = u + s * this.visibleI;
              this.isFunnel &&
                (l -=
                  (this.barHelpers.getXForValue(this.series[b][C], l) - l) / 2),
                (d = this.barHelpers.getXForValue(this.series[b][C], l));
              var N = this.barHelpers.getBarpaths({
                barYPosition: i,
                barHeight: s,
                x1: l,
                x2: d,
                strokeWidth: o,
                series: this.series,
                realIndex: a.realIndex,
                i: b,
                j: C,
                w: v,
              });
              return (
                v.globals.isXNumeric || (u += p),
                this.barHelpers.barBackground({
                  j: C,
                  i: b,
                  y1: i - s * this.visibleI,
                  y2: s * this.seriesLen,
                  elSeries: x,
                }),
                {
                  pathTo: N.pathTo,
                  pathFrom: N.pathFrom,
                  x1: l,
                  x: d,
                  y: u,
                  goalX: this.barHelpers.getGoalValues('x', l, null, b, C),
                  barYPosition: i,
                  barHeight: s,
                }
              );
            },
          },
          {
            key: 'drawColumnPaths',
            value: function (t) {
              var i,
                a = t.indexes,
                s = t.x,
                o = t.y,
                l = t.xDivision,
                d = t.barWidth,
                u = t.zeroH,
                p = t.strokeWidth,
                x = t.elSeries,
                v = this.w,
                b = a.realIndex,
                C = a.i,
                S = a.j,
                L = a.bc;
              if (v.globals.isXNumeric) {
                var N = b;
                v.globals.seriesX[b].length ||
                  (N = v.globals.maxValsInArrayIndex),
                  v.globals.seriesX[N][S] &&
                    (s =
                      (v.globals.seriesX[N][S] - v.globals.minX) / this.xRatio -
                      (d * this.seriesLen) / 2),
                  (i = s + d * this.visibleI);
              } else if (v.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var T = 0,
                  I = 0;
                v.globals.seriesPercent.forEach(function (y, A) {
                  y[S] && T++, A < C && y[S] === 0 && I++;
                }),
                  T > 0 && (d = (this.seriesLen * d) / T),
                  (i = s + d * this.visibleI),
                  (i -= d * I);
              } else i = s + d * this.visibleI;
              o = this.barHelpers.getYForValue(this.series[C][S], u);
              var h = this.barHelpers.getColumnPaths({
                barXPosition: i,
                barWidth: d,
                y1: u,
                y2: o,
                strokeWidth: p,
                series: this.series,
                realIndex: a.realIndex,
                i: C,
                j: S,
                w: v,
              });
              return (
                v.globals.isXNumeric || (s += l),
                this.barHelpers.barBackground({
                  bc: L,
                  j: S,
                  i: C,
                  x1: i - p / 2 - d * this.visibleI,
                  x2: d * this.seriesLen + p / 2,
                  elSeries: x,
                }),
                {
                  pathTo: h.pathTo,
                  pathFrom: h.pathFrom,
                  x: s,
                  y: o,
                  goalY: this.barHelpers.getGoalValues('y', null, u, C, S),
                  barXPosition: i,
                  barWidth: d,
                }
              );
            },
          },
          {
            key: 'getPreviousPath',
            value: function (t, i) {
              for (
                var a, s = this.w, o = 0;
                o < s.globals.previousPaths.length;
                o++
              ) {
                var l = s.globals.previousPaths[o];
                l.paths &&
                  l.paths.length > 0 &&
                  parseInt(l.realIndex, 10) === parseInt(t, 10) &&
                  s.globals.previousPaths[o].paths[i] !== void 0 &&
                  (a = s.globals.previousPaths[o].paths[i].d);
              }
              return a;
            },
          },
        ]),
        j
      );
    })(),
    Gt = (function (j) {
      D(i, pi);
      var t = K(i);
      function i() {
        return g(this, i), t.apply(this, arguments);
      }
      return (
        k(i, [
          {
            key: 'draw',
            value: function (a, s) {
              var o = this,
                l = this.w;
              (this.graphics = new W(this.ctx)),
                (this.bar = new pi(this.ctx, this.xyRatios));
              var d = new ae(this.ctx, l);
              (a = d.getLogSeries(a)),
                (this.yRatio = d.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(a),
                l.config.chart.stackType === '100%' &&
                  (a = l.globals.seriesPercent.slice()),
                (this.series = a),
                this.barHelpers.initializeStackedPrevVars(this);
              for (
                var u = this.graphics.group({
                    class: 'apexcharts-bar-series apexcharts-plot-series',
                  }),
                  p = 0,
                  x = 0,
                  v = function (S, L) {
                    var N = void 0,
                      T = void 0,
                      I = void 0,
                      h = void 0,
                      y = -1;
                    (o.groupCtx = o),
                      l.globals.seriesGroups.forEach(function (Ye, et) {
                        Ye.indexOf(l.config.series[S].name) > -1 && (y = et);
                      }),
                      y !== -1 && (o.groupCtx = o[l.globals.seriesGroups[y]]);
                    var A = [],
                      P = [],
                      R = l.globals.comboCharts ? s[S] : S;
                    o.yRatio.length > 1 && (o.yaxisIndex = R),
                      (o.isReversed =
                        l.config.yaxis[o.yaxisIndex] &&
                        l.config.yaxis[o.yaxisIndex].reversed);
                    var O = o.graphics.group({
                      class: 'apexcharts-series',
                      seriesName: E.escapeString(l.globals.seriesNames[R]),
                      rel: S + 1,
                      'data:realIndex': R,
                    });
                    o.ctx.series.addCollapsedClassToSeries(O, R);
                    var X = o.graphics.group({
                        class: 'apexcharts-datalabels',
                        'data:realIndex': R,
                      }),
                      G = o.graphics.group({
                        class: 'apexcharts-bar-goals-markers',
                        style: 'pointer-events: none',
                      }),
                      q = 0,
                      ie = 0,
                      re = o.initialPositions(p, x, N, T, I, h);
                    (x = re.y),
                      (q = re.barHeight),
                      (T = re.yDivision),
                      (h = re.zeroW),
                      (p = re.x),
                      (ie = re.barWidth),
                      (N = re.xDivision),
                      (I = re.zeroH),
                      o.barHelpers.initializeStackedXYVars(o),
                      o.groupCtx.prevY.length === 1 &&
                        o.groupCtx.prevY[0].every(function (Ye) {
                          return isNaN(Ye);
                        }) &&
                        ((o.groupCtx.prevY[0] = o.groupCtx.prevY[0].map(
                          function (Ye) {
                            return I;
                          }
                        )),
                        (o.groupCtx.prevYF[0] = o.groupCtx.prevYF[0].map(
                          function (Ye) {
                            return 0;
                          }
                        )));
                    for (var se = 0; se < l.globals.dataPoints; se++) {
                      var me = o.barHelpers.getStrokeWidth(S, se, R),
                        Se = {
                          indexes: { i: S, j: se, realIndex: R, bc: L },
                          strokeWidth: me,
                          x: p,
                          y: x,
                          elSeries: O,
                          groupIndex: y,
                          seriesGroup: l.globals.seriesGroups[y],
                        },
                        Ae = null;
                      o.isHorizontal
                        ? ((Ae = o.drawStackedBarPaths(
                            c(
                              c({}, Se),
                              {},
                              { zeroW: h, barHeight: q, yDivision: T }
                            )
                          )),
                          (ie = o.series[S][se] / o.invertedYRatio))
                        : ((Ae = o.drawStackedColumnPaths(
                            c(
                              c({}, Se),
                              {},
                              { xDivision: N, barWidth: ie, zeroH: I }
                            )
                          )),
                          (q = o.series[S][se] / o.yRatio[o.yaxisIndex]));
                      var Ne = o.barHelpers.drawGoalLine({
                        barXPosition: Ae.barXPosition,
                        barYPosition: Ae.barYPosition,
                        goalX: Ae.goalX,
                        goalY: Ae.goalY,
                        barHeight: q,
                        barWidth: ie,
                      });
                      Ne && G.add(Ne),
                        (x = Ae.y),
                        (p = Ae.x),
                        A.push(p),
                        P.push(x);
                      var Ze = o.barHelpers.getPathFillColor(a, S, se, R);
                      O = o.renderSeries({
                        realIndex: R,
                        pathFill: Ze,
                        j: se,
                        i: S,
                        groupIndex: y,
                        pathFrom: Ae.pathFrom,
                        pathTo: Ae.pathTo,
                        strokeWidth: me,
                        elSeries: O,
                        x: p,
                        y: x,
                        series: a,
                        barHeight: q,
                        barWidth: ie,
                        elDataLabelsWrap: X,
                        elGoalsMarkers: G,
                        type: 'bar',
                        visibleSeries: 0,
                      });
                    }
                    (l.globals.seriesXvalues[R] = A),
                      (l.globals.seriesYvalues[R] = P),
                      o.groupCtx.prevY.push(o.groupCtx.yArrj),
                      o.groupCtx.prevYF.push(o.groupCtx.yArrjF),
                      o.groupCtx.prevYVal.push(o.groupCtx.yArrjVal),
                      o.groupCtx.prevX.push(o.groupCtx.xArrj),
                      o.groupCtx.prevXF.push(o.groupCtx.xArrjF),
                      o.groupCtx.prevXVal.push(o.groupCtx.xArrjVal),
                      u.add(O);
                  },
                  b = 0,
                  C = 0;
                b < a.length;
                b++, C++
              )
                v(b, C);
              return u;
            },
          },
          {
            key: 'initialPositions',
            value: function (a, s, o, l, d, u) {
              var p,
                x,
                v,
                b,
                C = this.w;
              return (
                this.isHorizontal
                  ? ((v =
                      ((v = l = C.globals.gridHeight / C.globals.dataPoints) *
                        parseInt(C.config.plotOptions.bar.barHeight, 10)) /
                      100),
                    String(C.config.plotOptions.bar.barHeight).indexOf('%') ===
                      -1 &&
                      (v = parseInt(C.config.plotOptions.bar.barHeight, 10)),
                    (u =
                      this.baseLineInvertedY +
                      C.globals.padHorizontal +
                      (this.isReversed ? C.globals.gridWidth : 0) -
                      (this.isReversed ? 2 * this.baseLineInvertedY : 0)),
                    (s = (l - v) / 2))
                  : ((b = o = C.globals.gridWidth / C.globals.dataPoints),
                    (b =
                      C.globals.isXNumeric && C.globals.dataPoints > 1
                        ? ((o = C.globals.minXDiff / this.xRatio) *
                            parseInt(this.barOptions.columnWidth, 10)) /
                          100
                        : (b *
                            parseInt(
                              C.config.plotOptions.bar.columnWidth,
                              10
                            )) /
                          100),
                    String(C.config.plotOptions.bar.columnWidth).indexOf(
                      '%'
                    ) === -1 &&
                      (b = parseInt(C.config.plotOptions.bar.columnWidth, 10)),
                    (d =
                      C.globals.gridHeight -
                      this.baseLineY[this.yaxisIndex] -
                      (this.isReversed ? C.globals.gridHeight : 0) +
                      (this.isReversed
                        ? 2 * this.baseLineY[this.yaxisIndex]
                        : 0)),
                    (a = C.globals.padHorizontal + (o - b) / 2)),
                {
                  x: a,
                  y: s,
                  yDivision: l,
                  xDivision: o,
                  barHeight:
                    (p = C.globals.seriesGroups) !== null &&
                    p !== void 0 &&
                    p.length
                      ? v / C.globals.seriesGroups.length
                      : v,
                  barWidth:
                    (x = C.globals.seriesGroups) !== null &&
                    x !== void 0 &&
                    x.length
                      ? b / C.globals.seriesGroups.length
                      : b,
                  zeroH: d,
                  zeroW: u,
                }
              );
            },
          },
          {
            key: 'drawStackedBarPaths',
            value: function (a) {
              for (
                var s,
                  o = a.indexes,
                  l = a.barHeight,
                  d = a.strokeWidth,
                  u = a.zeroW,
                  p = a.x,
                  x = a.y,
                  v = a.groupIndex,
                  b = a.seriesGroup,
                  C = a.yDivision,
                  S = a.elSeries,
                  L = this.w,
                  N = x + (v !== -1 ? v * l : 0),
                  T = o.i,
                  I = o.j,
                  h = 0,
                  y = 0;
                y < this.groupCtx.prevXF.length;
                y++
              )
                h += this.groupCtx.prevXF[y][I];
              var A = T;
              if ((b && (A = b.indexOf(L.config.series[T].name)), A > 0)) {
                var P = u;
                this.groupCtx.prevXVal[A - 1][I] < 0
                  ? (P =
                      this.series[T][I] >= 0
                        ? this.groupCtx.prevX[A - 1][I] +
                          h -
                          2 * (this.isReversed ? h : 0)
                        : this.groupCtx.prevX[A - 1][I])
                  : this.groupCtx.prevXVal[A - 1][I] >= 0 &&
                    (P =
                      this.series[T][I] >= 0
                        ? this.groupCtx.prevX[A - 1][I]
                        : this.groupCtx.prevX[A - 1][I] -
                          h +
                          2 * (this.isReversed ? h : 0)),
                  (s = P);
              } else s = u;
              p =
                this.series[T][I] === null
                  ? s
                  : s +
                    this.series[T][I] / this.invertedYRatio -
                    2 *
                      (this.isReversed
                        ? this.series[T][I] / this.invertedYRatio
                        : 0);
              var R = this.barHelpers.getBarpaths({
                barYPosition: N,
                barHeight: l,
                x1: s,
                x2: p,
                strokeWidth: d,
                series: this.series,
                realIndex: o.realIndex,
                seriesGroup: b,
                i: T,
                j: I,
                w: L,
              });
              return (
                this.barHelpers.barBackground({
                  j: I,
                  i: T,
                  y1: N,
                  y2: l,
                  elSeries: S,
                }),
                (x += C),
                {
                  pathTo: R.pathTo,
                  pathFrom: R.pathFrom,
                  goalX: this.barHelpers.getGoalValues('x', u, null, T, I),
                  barYPosition: N,
                  x: p,
                  y: x,
                }
              );
            },
          },
          {
            key: 'drawStackedColumnPaths',
            value: function (a) {
              var s = a.indexes,
                o = a.x,
                l = a.y,
                d = a.xDivision,
                u = a.barWidth,
                p = a.zeroH,
                x = a.groupIndex,
                v = a.seriesGroup,
                b = a.elSeries,
                C = this.w,
                S = s.i,
                L = s.j,
                N = s.bc;
              if (C.globals.isXNumeric) {
                var T = C.globals.seriesX[S][L];
                T || (T = 0),
                  (o = (T - C.globals.minX) / this.xRatio - u / 2),
                  C.globals.seriesGroups.length &&
                    (o =
                      (T - C.globals.minX) / this.xRatio -
                      (u / 2) * C.globals.seriesGroups.length);
              }
              for (
                var I, h = o + (x !== -1 ? x * u : 0), y = 0, A = 0;
                A < this.groupCtx.prevYF.length;
                A++
              )
                y += isNaN(this.groupCtx.prevYF[A][L])
                  ? 0
                  : this.groupCtx.prevYF[A][L];
              var P = S;
              if (
                (v && (P = v.indexOf(C.config.series[S].name)),
                (P > 0 && !C.globals.isXNumeric) ||
                  (P > 0 &&
                    C.globals.isXNumeric &&
                    C.globals.seriesX[S - 1][L] === C.globals.seriesX[S][L]))
              ) {
                var R,
                  O,
                  X,
                  G = Math.min(this.yRatio.length + 1, S + 1);
                if (
                  this.groupCtx.prevY[P - 1] !== void 0 &&
                  this.groupCtx.prevY[P - 1].length
                )
                  for (var q = 1; q < G; q++) {
                    var ie;
                    if (
                      !isNaN(
                        (ie = this.groupCtx.prevY[P - q]) === null ||
                          ie === void 0
                          ? void 0
                          : ie[L]
                      )
                    ) {
                      X = this.groupCtx.prevY[P - q][L];
                      break;
                    }
                  }
                for (var re = 1; re < G; re++) {
                  var se, me;
                  if (
                    ((se = this.groupCtx.prevYVal[P - re]) === null ||
                    se === void 0
                      ? void 0
                      : se[L]) < 0
                  ) {
                    O =
                      this.series[S][L] >= 0
                        ? X - y + 2 * (this.isReversed ? y : 0)
                        : X;
                    break;
                  }
                  if (
                    ((me = this.groupCtx.prevYVal[P - re]) === null ||
                    me === void 0
                      ? void 0
                      : me[L]) >= 0
                  ) {
                    O =
                      this.series[S][L] >= 0
                        ? X
                        : X + y - 2 * (this.isReversed ? y : 0);
                    break;
                  }
                }
                O === void 0 && (O = C.globals.gridHeight),
                  (I =
                    (R = this.groupCtx.prevYF[0]) !== null &&
                    R !== void 0 &&
                    R.every(function (Ae) {
                      return Ae === 0;
                    }) &&
                    this.groupCtx.prevYF.slice(1, P).every(function (Ae) {
                      return Ae.every(function (Ne) {
                        return isNaN(Ne);
                      });
                    })
                      ? p
                      : O);
              } else I = p;
              l = this.series[S][L]
                ? I -
                  this.series[S][L] / this.yRatio[this.yaxisIndex] +
                  2 *
                    (this.isReversed
                      ? this.series[S][L] / this.yRatio[this.yaxisIndex]
                      : 0)
                : I;
              var Se = this.barHelpers.getColumnPaths({
                barXPosition: h,
                barWidth: u,
                y1: I,
                y2: l,
                yRatio: this.yRatio[this.yaxisIndex],
                strokeWidth: this.strokeWidth,
                series: this.series,
                seriesGroup: v,
                realIndex: s.realIndex,
                i: S,
                j: L,
                w: C,
              });
              return (
                this.barHelpers.barBackground({
                  bc: N,
                  j: L,
                  i: S,
                  x1: h,
                  x2: u,
                  elSeries: b,
                }),
                (o += d),
                {
                  pathTo: Se.pathTo,
                  pathFrom: Se.pathFrom,
                  goalY: this.barHelpers.getGoalValues('y', null, p, S, L),
                  barXPosition: h,
                  x: C.globals.isXNumeric ? o - d : o,
                  y: l,
                }
              );
            },
          },
        ]),
        i
      );
    })(),
    kn = (function (j) {
      D(i, pi);
      var t = K(i);
      function i() {
        return g(this, i), t.apply(this, arguments);
      }
      return (
        k(i, [
          {
            key: 'draw',
            value: function (a, s, o) {
              var l = this,
                d = this.w,
                u = new W(this.ctx),
                p = d.globals.comboCharts ? s : d.config.chart.type,
                x = new je(this.ctx);
              (this.candlestickOptions = this.w.config.plotOptions.candlestick),
                (this.boxOptions = this.w.config.plotOptions.boxPlot),
                (this.isHorizontal = d.config.plotOptions.bar.horizontal);
              var v = new ae(this.ctx, d);
              (a = v.getLogSeries(a)),
                (this.series = a),
                (this.yRatio = v.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(a);
              for (
                var b = u.group({
                    class: 'apexcharts-'.concat(
                      p,
                      '-series apexcharts-plot-series'
                    ),
                  }),
                  C = function (L) {
                    l.isBoxPlot =
                      d.config.chart.type === 'boxPlot' ||
                      d.config.series[L].type === 'boxPlot';
                    var N,
                      T,
                      I,
                      h,
                      y = void 0,
                      A = void 0,
                      P = [],
                      R = [],
                      O = d.globals.comboCharts ? o[L] : L,
                      X = u.group({
                        class: 'apexcharts-series',
                        seriesName: E.escapeString(d.globals.seriesNames[O]),
                        rel: L + 1,
                        'data:realIndex': O,
                      });
                    l.ctx.series.addCollapsedClassToSeries(X, O),
                      a[L].length > 0 && (l.visibleI = l.visibleI + 1);
                    var G, q;
                    l.yRatio.length > 1 && (l.yaxisIndex = O);
                    var ie = l.barHelpers.initialPositions();
                    (A = ie.y),
                      (G = ie.barHeight),
                      (T = ie.yDivision),
                      (h = ie.zeroW),
                      (y = ie.x),
                      (q = ie.barWidth),
                      (N = ie.xDivision),
                      (I = ie.zeroH),
                      R.push(y + q / 2);
                    for (
                      var re = u.group({
                          class: 'apexcharts-datalabels',
                          'data:realIndex': O,
                        }),
                        se = function (Se) {
                          var Ae = l.barHelpers.getStrokeWidth(L, Se, O),
                            Ne = null,
                            Ze = {
                              indexes: { i: L, j: Se, realIndex: O },
                              x: y,
                              y: A,
                              strokeWidth: Ae,
                              elSeries: X,
                            };
                          (Ne = l.isHorizontal
                            ? l.drawHorizontalBoxPaths(
                                c(
                                  c({}, Ze),
                                  {},
                                  { yDivision: T, barHeight: G, zeroW: h }
                                )
                              )
                            : l.drawVerticalBoxPaths(
                                c(
                                  c({}, Ze),
                                  {},
                                  { xDivision: N, barWidth: q, zeroH: I }
                                )
                              )),
                            (A = Ne.y),
                            (y = Ne.x),
                            Se > 0 && R.push(y + q / 2),
                            P.push(A),
                            Ne.pathTo.forEach(function (Ye, et) {
                              var Ri =
                                  !l.isBoxPlot &&
                                  l.candlestickOptions.wick.useFillColor
                                    ? Ne.color[et]
                                    : d.globals.stroke.colors[L],
                                cr = x.fillPath({
                                  seriesNumber: O,
                                  dataPointIndex: Se,
                                  color: Ne.color[et],
                                  value: a[L][Se],
                                });
                              l.renderSeries({
                                realIndex: O,
                                pathFill: cr,
                                lineFill: Ri,
                                j: Se,
                                i: L,
                                pathFrom: Ne.pathFrom,
                                pathTo: Ye,
                                strokeWidth: Ae,
                                elSeries: X,
                                x: y,
                                y: A,
                                series: a,
                                barHeight: G,
                                barWidth: q,
                                elDataLabelsWrap: re,
                                visibleSeries: l.visibleI,
                                type: d.config.chart.type,
                              });
                            });
                        },
                        me = 0;
                      me < d.globals.dataPoints;
                      me++
                    )
                      se(me);
                    (d.globals.seriesXvalues[O] = R),
                      (d.globals.seriesYvalues[O] = P),
                      b.add(X);
                  },
                  S = 0;
                S < a.length;
                S++
              )
                C(S);
              return b;
            },
          },
          {
            key: 'drawVerticalBoxPaths',
            value: function (a) {
              var s = a.indexes,
                o = a.x;
              a.y;
              var l = a.xDivision,
                d = a.barWidth,
                u = a.zeroH,
                p = a.strokeWidth,
                x = this.w,
                v = new W(this.ctx),
                b = s.i,
                C = s.j,
                S = !0,
                L = x.config.plotOptions.candlestick.colors.upward,
                N = x.config.plotOptions.candlestick.colors.downward,
                T = '';
              this.isBoxPlot &&
                (T = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var I = this.yRatio[this.yaxisIndex],
                h = s.realIndex,
                y = this.getOHLCValue(h, C),
                A = u,
                P = u;
              y.o > y.c && (S = !1);
              var R = Math.min(y.o, y.c),
                O = Math.max(y.o, y.c),
                X = y.m;
              x.globals.isXNumeric &&
                (o =
                  (x.globals.seriesX[h][C] - x.globals.minX) / this.xRatio -
                  d / 2);
              var G = o + d * this.visibleI;
              this.series[b][C] === void 0 || this.series[b][C] === null
                ? ((R = u), (O = u))
                : ((R = u - R / I),
                  (O = u - O / I),
                  (A = u - y.h / I),
                  (P = u - y.l / I),
                  (X = u - y.m / I));
              var q = v.move(G, u),
                ie = v.move(G + d / 2, R);
              return (
                x.globals.previousPaths.length > 0 &&
                  (ie = this.getPreviousPath(h, C, !0)),
                (q = this.isBoxPlot
                  ? [
                      v.move(G, R) +
                        v.line(G + d / 2, R) +
                        v.line(G + d / 2, A) +
                        v.line(G + d / 4, A) +
                        v.line(G + d - d / 4, A) +
                        v.line(G + d / 2, A) +
                        v.line(G + d / 2, R) +
                        v.line(G + d, R) +
                        v.line(G + d, X) +
                        v.line(G, X) +
                        v.line(G, R + p / 2),
                      v.move(G, X) +
                        v.line(G + d, X) +
                        v.line(G + d, O) +
                        v.line(G + d / 2, O) +
                        v.line(G + d / 2, P) +
                        v.line(G + d - d / 4, P) +
                        v.line(G + d / 4, P) +
                        v.line(G + d / 2, P) +
                        v.line(G + d / 2, O) +
                        v.line(G, O) +
                        v.line(G, X) +
                        'z',
                    ]
                  : [
                      v.move(G, O) +
                        v.line(G + d / 2, O) +
                        v.line(G + d / 2, A) +
                        v.line(G + d / 2, O) +
                        v.line(G + d, O) +
                        v.line(G + d, R) +
                        v.line(G + d / 2, R) +
                        v.line(G + d / 2, P) +
                        v.line(G + d / 2, R) +
                        v.line(G, R) +
                        v.line(G, O - p / 2),
                    ]),
                (ie += v.move(G, R)),
                x.globals.isXNumeric || (o += l),
                {
                  pathTo: q,
                  pathFrom: ie,
                  x: o,
                  y: O,
                  barXPosition: G,
                  color: this.isBoxPlot ? T : S ? [L] : [N],
                }
              );
            },
          },
          {
            key: 'drawHorizontalBoxPaths',
            value: function (a) {
              var s = a.indexes;
              a.x;
              var o = a.y,
                l = a.yDivision,
                d = a.barHeight,
                u = a.zeroW,
                p = a.strokeWidth,
                x = this.w,
                v = new W(this.ctx),
                b = s.i,
                C = s.j,
                S = this.boxOptions.colors.lower;
              this.isBoxPlot &&
                (S = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var L = this.invertedYRatio,
                N = s.realIndex,
                T = this.getOHLCValue(N, C),
                I = u,
                h = u,
                y = Math.min(T.o, T.c),
                A = Math.max(T.o, T.c),
                P = T.m;
              x.globals.isXNumeric &&
                (o =
                  (x.globals.seriesX[N][C] - x.globals.minX) /
                    this.invertedXRatio -
                  d / 2);
              var R = o + d * this.visibleI;
              this.series[b][C] === void 0 || this.series[b][C] === null
                ? ((y = u), (A = u))
                : ((y = u + y / L),
                  (A = u + A / L),
                  (I = u + T.h / L),
                  (h = u + T.l / L),
                  (P = u + T.m / L));
              var O = v.move(u, R),
                X = v.move(y, R + d / 2);
              return (
                x.globals.previousPaths.length > 0 &&
                  (X = this.getPreviousPath(N, C, !0)),
                (O = [
                  v.move(y, R) +
                    v.line(y, R + d / 2) +
                    v.line(I, R + d / 2) +
                    v.line(I, R + d / 2 - d / 4) +
                    v.line(I, R + d / 2 + d / 4) +
                    v.line(I, R + d / 2) +
                    v.line(y, R + d / 2) +
                    v.line(y, R + d) +
                    v.line(P, R + d) +
                    v.line(P, R) +
                    v.line(y + p / 2, R),
                  v.move(P, R) +
                    v.line(P, R + d) +
                    v.line(A, R + d) +
                    v.line(A, R + d / 2) +
                    v.line(h, R + d / 2) +
                    v.line(h, R + d - d / 4) +
                    v.line(h, R + d / 4) +
                    v.line(h, R + d / 2) +
                    v.line(A, R + d / 2) +
                    v.line(A, R) +
                    v.line(P, R) +
                    'z',
                ]),
                (X += v.move(y, R)),
                x.globals.isXNumeric || (o += l),
                {
                  pathTo: O,
                  pathFrom: X,
                  x: A,
                  y: o,
                  barYPosition: R,
                  color: S,
                }
              );
            },
          },
          {
            key: 'getOHLCValue',
            value: function (a, s) {
              var o = this.w;
              return {
                o: this.isBoxPlot
                  ? o.globals.seriesCandleH[a][s]
                  : o.globals.seriesCandleO[a][s],
                h: this.isBoxPlot
                  ? o.globals.seriesCandleO[a][s]
                  : o.globals.seriesCandleH[a][s],
                m: o.globals.seriesCandleM[a][s],
                l: this.isBoxPlot
                  ? o.globals.seriesCandleC[a][s]
                  : o.globals.seriesCandleL[a][s],
                c: this.isBoxPlot
                  ? o.globals.seriesCandleL[a][s]
                  : o.globals.seriesCandleC[a][s],
              };
            },
          },
        ]),
        i
      );
    })(),
    Da = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'checkColorRange',
            value: function () {
              var t = this.w,
                i = !1,
                a = t.config.plotOptions[t.config.chart.type];
              return (
                a.colorScale.ranges.length > 0 &&
                  a.colorScale.ranges.map(function (s, o) {
                    s.from <= 0 && (i = !0);
                  }),
                i
              );
            },
          },
          {
            key: 'getShadeColor',
            value: function (t, i, a, s) {
              var o = this.w,
                l = 1,
                d = o.config.plotOptions[t].shadeIntensity,
                u = this.determineColor(t, i, a);
              o.globals.hasNegs || s
                ? (l = o.config.plotOptions[t].reverseNegativeShade
                    ? u.percent < 0
                      ? (u.percent / 100) * (1.25 * d)
                      : (1 - u.percent / 100) * (1.25 * d)
                    : u.percent <= 0
                    ? 1 - (1 + u.percent / 100) * d
                    : (1 - u.percent / 100) * d)
                : ((l = 1 - u.percent / 100),
                  t === 'treemap' && (l = (1 - u.percent / 100) * (1.25 * d)));
              var p = u.color,
                x = new E();
              return (
                o.config.plotOptions[t].enableShades &&
                  (p =
                    this.w.config.theme.mode === 'dark'
                      ? E.hexToRgba(
                          x.shadeColor(-1 * l, u.color),
                          o.config.fill.opacity
                        )
                      : E.hexToRgba(
                          x.shadeColor(l, u.color),
                          o.config.fill.opacity
                        )),
                { color: p, colorProps: u }
              );
            },
          },
          {
            key: 'determineColor',
            value: function (t, i, a) {
              var s = this.w,
                o = s.globals.series[i][a],
                l = s.config.plotOptions[t],
                d = l.colorScale.inverse ? a : i;
              l.distributed && s.config.chart.type === 'treemap' && (d = a);
              var u = s.globals.colors[d],
                p = null,
                x = Math.min.apply(Math, V(s.globals.series[i])),
                v = Math.max.apply(Math, V(s.globals.series[i]));
              l.distributed ||
                t !== 'heatmap' ||
                ((x = s.globals.minY), (v = s.globals.maxY)),
                l.colorScale.min !== void 0 &&
                  ((x =
                    l.colorScale.min < s.globals.minY
                      ? l.colorScale.min
                      : s.globals.minY),
                  (v =
                    l.colorScale.max > s.globals.maxY
                      ? l.colorScale.max
                      : s.globals.maxY));
              var b = Math.abs(v) + Math.abs(x),
                C = (100 * o) / (b === 0 ? b - 1e-6 : b);
              return (
                l.colorScale.ranges.length > 0 &&
                  l.colorScale.ranges.map(function (S, L) {
                    if (o >= S.from && o <= S.to) {
                      (u = S.color),
                        (p = S.foreColor ? S.foreColor : null),
                        (x = S.from),
                        (v = S.to);
                      var N = Math.abs(v) + Math.abs(x);
                      C = (100 * o) / (N === 0 ? N - 1e-6 : N);
                    }
                  }),
                { color: u, foreColor: p, percent: C }
              );
            },
          },
          {
            key: 'calculateDataLabels',
            value: function (t) {
              var i = t.text,
                a = t.x,
                s = t.y,
                o = t.i,
                l = t.j,
                d = t.colorProps,
                u = t.fontSize,
                p = this.w.config.dataLabels,
                x = new W(this.ctx),
                v = new dt(this.ctx),
                b = null;
              if (p.enabled) {
                b = x.group({ class: 'apexcharts-data-labels' });
                var C = p.offsetX,
                  S = p.offsetY,
                  L = a + C,
                  N = s + parseFloat(p.style.fontSize) / 3 + S;
                v.plotDataLabelsText({
                  x: L,
                  y: N,
                  text: i,
                  i: o,
                  j: l,
                  color: d.foreColor,
                  parent: b,
                  fontSize: u,
                  dataLabelsConfig: p,
                });
              }
              return b;
            },
          },
          {
            key: 'addListeners',
            value: function (t) {
              var i = new W(this.ctx);
              t.node.addEventListener(
                'mouseenter',
                i.pathMouseEnter.bind(this, t)
              ),
                t.node.addEventListener(
                  'mouseleave',
                  i.pathMouseLeave.bind(this, t)
                ),
                t.node.addEventListener(
                  'mousedown',
                  i.pathMouseDown.bind(this, t)
                );
            },
          },
        ]),
        j
      );
    })(),
    F = (function () {
      function j(t, i) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.xRatio = i.xRatio),
          (this.yRatio = i.yRatio),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.helpers = new Da(t)),
          (this.rectRadius = this.w.config.plotOptions.heatmap.radius),
          (this.strokeWidth = this.w.config.stroke.show
            ? this.w.config.stroke.width
            : 0);
      }
      return (
        k(j, [
          {
            key: 'draw',
            value: function (t) {
              var i = this.w,
                a = new W(this.ctx),
                s = a.group({ class: 'apexcharts-heatmap' });
              s.attr(
                'clip-path',
                'url(#gridRectMask'.concat(i.globals.cuid, ')')
              );
              var o = i.globals.gridWidth / i.globals.dataPoints,
                l = i.globals.gridHeight / i.globals.series.length,
                d = 0,
                u = !1;
              this.negRange = this.helpers.checkColorRange();
              var p = t.slice();
              i.config.yaxis[0].reversed && ((u = !0), p.reverse());
              for (
                var x = u ? 0 : p.length - 1;
                u ? x < p.length : x >= 0;
                u ? x++ : x--
              ) {
                var v = a.group({
                  class: 'apexcharts-series apexcharts-heatmap-series',
                  seriesName: E.escapeString(i.globals.seriesNames[x]),
                  rel: x + 1,
                  'data:realIndex': x,
                });
                if (
                  (this.ctx.series.addCollapsedClassToSeries(v, x),
                  i.config.chart.dropShadow.enabled)
                ) {
                  var b = i.config.chart.dropShadow;
                  new Q(this.ctx).dropShadow(v, b, x);
                }
                for (
                  var C = 0,
                    S = i.config.plotOptions.heatmap.shadeIntensity,
                    L = 0;
                  L < p[x].length;
                  L++
                ) {
                  var N = this.helpers.getShadeColor(
                      i.config.chart.type,
                      x,
                      L,
                      this.negRange
                    ),
                    T = N.color,
                    I = N.colorProps;
                  i.config.fill.type === 'image' &&
                    (T = new je(this.ctx).fillPath({
                      seriesNumber: x,
                      dataPointIndex: L,
                      opacity: i.globals.hasNegs
                        ? I.percent < 0
                          ? 1 - (1 + I.percent / 100)
                          : S + I.percent / 100
                        : I.percent / 100,
                      patternID: E.randomId(),
                      width: i.config.fill.image.width
                        ? i.config.fill.image.width
                        : o,
                      height: i.config.fill.image.height
                        ? i.config.fill.image.height
                        : l,
                    }));
                  var h = this.rectRadius,
                    y = a.drawRect(C, d, o, l, h);
                  if (
                    (y.attr({ cx: C, cy: d }),
                    y.node.classList.add('apexcharts-heatmap-rect'),
                    v.add(y),
                    y.attr({
                      fill: T,
                      i: x,
                      index: x,
                      j: L,
                      val: p[x][L],
                      'stroke-width': this.strokeWidth,
                      stroke: i.config.plotOptions.heatmap.useFillColorAsStroke
                        ? T
                        : i.globals.stroke.colors[0],
                      color: T,
                    }),
                    this.helpers.addListeners(y),
                    i.config.chart.animations.enabled && !i.globals.dataChanged)
                  ) {
                    var A = 1;
                    i.globals.resized || (A = i.config.chart.animations.speed),
                      this.animateHeatMap(y, C, d, o, l, A);
                  }
                  if (i.globals.dataChanged) {
                    var P = 1;
                    if (this.dynamicAnim.enabled && i.globals.shouldAnimate) {
                      P = this.dynamicAnim.speed;
                      var R =
                        i.globals.previousPaths[x] &&
                        i.globals.previousPaths[x][L] &&
                        i.globals.previousPaths[x][L].color;
                      R || (R = 'rgba(255, 255, 255, 0)'),
                        this.animateHeatColor(
                          y,
                          E.isColorHex(R) ? R : E.rgb2hex(R),
                          E.isColorHex(T) ? T : E.rgb2hex(T),
                          P
                        );
                    }
                  }
                  var O = (0, i.config.dataLabels.formatter)(
                      i.globals.series[x][L],
                      {
                        value: i.globals.series[x][L],
                        seriesIndex: x,
                        dataPointIndex: L,
                        w: i,
                      }
                    ),
                    X = this.helpers.calculateDataLabels({
                      text: O,
                      x: C + o / 2,
                      y: d + l / 2,
                      i: x,
                      j: L,
                      colorProps: I,
                      series: p,
                    });
                  X !== null && v.add(X), (C += o);
                }
                (d += l), s.add(v);
              }
              var G = i.globals.yAxisScale[0].result.slice();
              i.config.yaxis[0].reversed ? G.unshift('') : G.push(''),
                (i.globals.yAxisScale[0].result = G);
              var q = i.globals.gridHeight / i.globals.series.length;
              return (i.config.yaxis[0].labels.offsetY = -q / 2), s;
            },
          },
          {
            key: 'animateHeatMap',
            value: function (t, i, a, s, o, l) {
              var d = new _(this.ctx);
              d.animateRect(
                t,
                { x: i + s / 2, y: a + o / 2, width: 0, height: 0 },
                { x: i, y: a, width: s, height: o },
                l,
                function () {
                  d.animationCompleted(t);
                }
              );
            },
          },
          {
            key: 'animateHeatColor',
            value: function (t, i, a, s) {
              t.attr({ fill: i }).animate(s).attr({ fill: a });
            },
          },
        ]),
        j
      );
    })(),
    H = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'drawYAxisTexts',
            value: function (t, i, a, s) {
              var o = this.w,
                l = o.config.yaxis[0],
                d = o.globals.yLabelFormatters[0];
              return new W(this.ctx).drawText({
                x: t + l.labels.offsetX,
                y: i + l.labels.offsetY,
                text: d(s, a),
                textAnchor: 'middle',
                fontSize: l.labels.style.fontSize,
                fontFamily: l.labels.style.fontFamily,
                foreColor: Array.isArray(l.labels.style.colors)
                  ? l.labels.style.colors[a]
                  : l.labels.style.colors,
              });
            },
          },
        ]),
        j
      );
    })(),
    $ = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
        var i = this.w;
        (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animBeginArr = [0]),
          (this.animDur = 0),
          (this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels),
          (this.lineColorArr =
            i.globals.stroke.colors !== void 0
              ? i.globals.stroke.colors
              : i.globals.colors),
          (this.defaultSize = Math.min(
            i.globals.gridWidth,
            i.globals.gridHeight
          )),
          (this.centerY = this.defaultSize / 2),
          (this.centerX = i.globals.gridWidth / 2),
          i.config.chart.type === 'radialBar'
            ? (this.fullAngle = 360)
            : (this.fullAngle = Math.abs(
                i.config.plotOptions.pie.endAngle -
                  i.config.plotOptions.pie.startAngle
              )),
          (this.initialAngle =
            i.config.plotOptions.pie.startAngle % this.fullAngle),
          (i.globals.radialSize =
            this.defaultSize / 2.05 -
            i.config.stroke.width -
            (i.config.chart.sparkline.enabled
              ? 0
              : i.config.chart.dropShadow.blur)),
          (this.donutSize =
            (i.globals.radialSize *
              parseInt(i.config.plotOptions.pie.donut.size, 10)) /
            100),
          (this.maxY = 0),
          (this.sliceLabels = []),
          (this.sliceSizes = []),
          (this.prevSectorAngleArr = []);
      }
      return (
        k(j, [
          {
            key: 'draw',
            value: function (t) {
              var i = this,
                a = this.w,
                s = new W(this.ctx);
              if (
                ((this.ret = s.group({ class: 'apexcharts-pie' })),
                a.globals.noData)
              )
                return this.ret;
              for (var o = 0, l = 0; l < t.length; l++) o += E.negToZero(t[l]);
              var d = [],
                u = s.group();
              o === 0 && (o = 1e-5),
                t.forEach(function (R) {
                  i.maxY = Math.max(i.maxY, R);
                }),
                a.config.yaxis[0].max && (this.maxY = a.config.yaxis[0].max),
                a.config.grid.position === 'back' &&
                  this.chartType === 'polarArea' &&
                  this.drawPolarElements(this.ret);
              for (var p = 0; p < t.length; p++) {
                var x = (this.fullAngle * E.negToZero(t[p])) / o;
                d.push(x),
                  this.chartType === 'polarArea'
                    ? ((d[p] = this.fullAngle / t.length),
                      this.sliceSizes.push(
                        (a.globals.radialSize * t[p]) / this.maxY
                      ))
                    : this.sliceSizes.push(a.globals.radialSize);
              }
              if (a.globals.dataChanged) {
                for (
                  var v, b = 0, C = 0;
                  C < a.globals.previousPaths.length;
                  C++
                )
                  b += E.negToZero(a.globals.previousPaths[C]);
                for (var S = 0; S < a.globals.previousPaths.length; S++)
                  (v =
                    (this.fullAngle * E.negToZero(a.globals.previousPaths[S])) /
                    b),
                    this.prevSectorAngleArr.push(v);
              }
              this.donutSize < 0 && (this.donutSize = 0);
              var L = a.config.plotOptions.pie.customScale,
                N = a.globals.gridWidth / 2,
                T = a.globals.gridHeight / 2,
                I = N - (a.globals.gridWidth / 2) * L,
                h = T - (a.globals.gridHeight / 2) * L;
              if (this.chartType === 'donut') {
                var y = s.drawCircle(this.donutSize);
                y.attr({
                  cx: this.centerX,
                  cy: this.centerY,
                  fill: a.config.plotOptions.pie.donut.background
                    ? a.config.plotOptions.pie.donut.background
                    : 'transparent',
                }),
                  u.add(y);
              }
              var A = this.drawArcs(d, t);
              if (
                (this.sliceLabels.forEach(function (R) {
                  A.add(R);
                }),
                u.attr({
                  transform: 'translate('
                    .concat(I, ', ')
                    .concat(h, ') scale(')
                    .concat(L, ')'),
                }),
                u.add(A),
                this.ret.add(u),
                this.donutDataLabels.show)
              ) {
                var P = this.renderInnerDataLabels(this.donutDataLabels, {
                  hollowSize: this.donutSize,
                  centerX: this.centerX,
                  centerY: this.centerY,
                  opacity: this.donutDataLabels.show,
                  translateX: I,
                  translateY: h,
                });
                this.ret.add(P);
              }
              return (
                a.config.grid.position === 'front' &&
                  this.chartType === 'polarArea' &&
                  this.drawPolarElements(this.ret),
                this.ret
              );
            },
          },
          {
            key: 'drawArcs',
            value: function (t, i) {
              var a = this.w,
                s = new Q(this.ctx),
                o = new W(this.ctx),
                l = new je(this.ctx),
                d = o.group({ class: 'apexcharts-slices' }),
                u = this.initialAngle,
                p = this.initialAngle,
                x = this.initialAngle,
                v = this.initialAngle;
              this.strokeWidth = a.config.stroke.show
                ? a.config.stroke.width
                : 0;
              for (var b = 0; b < t.length; b++) {
                var C = o.group({
                  class: 'apexcharts-series apexcharts-pie-series',
                  seriesName: E.escapeString(a.globals.seriesNames[b]),
                  rel: b + 1,
                  'data:realIndex': b,
                });
                d.add(C),
                  (p = v),
                  (x = (u = x) + t[b]),
                  (v = p + this.prevSectorAngleArr[b]);
                var S = x < u ? this.fullAngle + x - u : x - u,
                  L = l.fillPath({
                    seriesNumber: b,
                    size: this.sliceSizes[b],
                    value: i[b],
                  }),
                  N = this.getChangedPath(p, v),
                  T = o.drawPath({
                    d: N,
                    stroke: Array.isArray(this.lineColorArr)
                      ? this.lineColorArr[b]
                      : this.lineColorArr,
                    strokeWidth: 0,
                    fill: L,
                    fillOpacity: a.config.fill.opacity,
                    classes: 'apexcharts-pie-area apexcharts-'
                      .concat(this.chartType.toLowerCase(), '-slice-')
                      .concat(b),
                  });
                if (
                  (T.attr({ index: 0, j: b }),
                  s.setSelectionFilter(T, 0, b),
                  a.config.chart.dropShadow.enabled)
                ) {
                  var I = a.config.chart.dropShadow;
                  s.dropShadow(T, I, b);
                }
                this.addListeners(T, this.donutDataLabels),
                  W.setAttrs(T.node, {
                    'data:angle': S,
                    'data:startAngle': u,
                    'data:strokeWidth': this.strokeWidth,
                    'data:value': i[b],
                  });
                var h = { x: 0, y: 0 };
                this.chartType === 'pie' || this.chartType === 'polarArea'
                  ? (h = E.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      a.globals.radialSize / 1.25 +
                        a.config.plotOptions.pie.dataLabels.offset,
                      (u + S / 2) % this.fullAngle
                    ))
                  : this.chartType === 'donut' &&
                    (h = E.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      (a.globals.radialSize + this.donutSize) / 2 +
                        a.config.plotOptions.pie.dataLabels.offset,
                      (u + S / 2) % this.fullAngle
                    )),
                  C.add(T);
                var y = 0;
                if (
                  (!this.initialAnim ||
                  a.globals.resized ||
                  a.globals.dataChanged
                    ? this.animBeginArr.push(0)
                    : ((y =
                        (S / this.fullAngle) *
                        a.config.chart.animations.speed) === 0 && (y = 1),
                      (this.animDur = y + this.animDur),
                      this.animBeginArr.push(this.animDur)),
                  this.dynamicAnim && a.globals.dataChanged
                    ? this.animatePaths(T, {
                        size: this.sliceSizes[b],
                        endAngle: x,
                        startAngle: u,
                        prevStartAngle: p,
                        prevEndAngle: v,
                        animateStartingPos: !0,
                        i: b,
                        animBeginArr: this.animBeginArr,
                        shouldSetPrevPaths: !0,
                        dur: a.config.chart.animations.dynamicAnimation.speed,
                      })
                    : this.animatePaths(T, {
                        size: this.sliceSizes[b],
                        endAngle: x,
                        startAngle: u,
                        i: b,
                        totalItems: t.length - 1,
                        animBeginArr: this.animBeginArr,
                        dur: y,
                      }),
                  a.config.plotOptions.pie.expandOnClick &&
                    this.chartType !== 'polarArea' &&
                    T.click(this.pieClicked.bind(this, b)),
                  a.globals.selectedDataPoints[0] !== void 0 &&
                    a.globals.selectedDataPoints[0].indexOf(b) > -1 &&
                    this.pieClicked(b),
                  a.config.dataLabels.enabled)
                ) {
                  var A = h.x,
                    P = h.y,
                    R = (100 * S) / this.fullAngle + '%';
                  if (
                    S !== 0 &&
                    a.config.plotOptions.pie.dataLabels.minAngleToShowLabel <
                      t[b]
                  ) {
                    var O = a.config.dataLabels.formatter;
                    O !== void 0 &&
                      (R = O(a.globals.seriesPercent[b][0], {
                        seriesIndex: b,
                        w: a,
                      }));
                    var X = a.globals.dataLabels.style.colors[b],
                      G = o.group({ class: 'apexcharts-datalabels' }),
                      q = o.drawText({
                        x: A,
                        y: P,
                        text: R,
                        textAnchor: 'middle',
                        fontSize: a.config.dataLabels.style.fontSize,
                        fontFamily: a.config.dataLabels.style.fontFamily,
                        fontWeight: a.config.dataLabels.style.fontWeight,
                        foreColor: X,
                      });
                    if ((G.add(q), a.config.dataLabels.dropShadow.enabled)) {
                      var ie = a.config.dataLabels.dropShadow;
                      s.dropShadow(q, ie);
                    }
                    q.node.classList.add('apexcharts-pie-label'),
                      a.config.chart.animations.animate &&
                        a.globals.resized === !1 &&
                        (q.node.classList.add('apexcharts-pie-label-delay'),
                        (q.node.style.animationDelay =
                          a.config.chart.animations.speed / 940 + 's')),
                      this.sliceLabels.push(G);
                  }
                }
              }
              return d;
            },
          },
          {
            key: 'addListeners',
            value: function (t, i) {
              var a = new W(this.ctx);
              t.node.addEventListener(
                'mouseenter',
                a.pathMouseEnter.bind(this, t)
              ),
                t.node.addEventListener(
                  'mouseleave',
                  a.pathMouseLeave.bind(this, t)
                ),
                t.node.addEventListener(
                  'mouseleave',
                  this.revertDataLabelsInner.bind(this, t.node, i)
                ),
                t.node.addEventListener(
                  'mousedown',
                  a.pathMouseDown.bind(this, t)
                ),
                this.donutDataLabels.total.showAlways ||
                  (t.node.addEventListener(
                    'mouseenter',
                    this.printDataLabelsInner.bind(this, t.node, i)
                  ),
                  t.node.addEventListener(
                    'mousedown',
                    this.printDataLabelsInner.bind(this, t.node, i)
                  ));
            },
          },
          {
            key: 'animatePaths',
            value: function (t, i) {
              var a = this.w,
                s =
                  i.endAngle < i.startAngle
                    ? this.fullAngle + i.endAngle - i.startAngle
                    : i.endAngle - i.startAngle,
                o = s,
                l = i.startAngle,
                d = i.startAngle;
              i.prevStartAngle !== void 0 &&
                i.prevEndAngle !== void 0 &&
                ((l = i.prevEndAngle),
                (o =
                  i.prevEndAngle < i.prevStartAngle
                    ? this.fullAngle + i.prevEndAngle - i.prevStartAngle
                    : i.prevEndAngle - i.prevStartAngle)),
                i.i === a.config.series.length - 1 &&
                  (s + d > this.fullAngle
                    ? (i.endAngle = i.endAngle - (s + d))
                    : s + d < this.fullAngle &&
                      (i.endAngle = i.endAngle + (this.fullAngle - (s + d)))),
                s === this.fullAngle && (s = this.fullAngle - 0.01),
                this.animateArc(t, l, d, s, o, i);
            },
          },
          {
            key: 'animateArc',
            value: function (t, i, a, s, o, l) {
              var d,
                u = this,
                p = this.w,
                x = new _(this.ctx),
                v = l.size;
              (isNaN(i) || isNaN(o)) && ((i = a), (o = s), (l.dur = 0));
              var b = s,
                C = a,
                S = i < a ? this.fullAngle + i - a : i - a;
              p.globals.dataChanged &&
                l.shouldSetPrevPaths &&
                l.prevEndAngle &&
                ((d = u.getPiePath({
                  me: u,
                  startAngle: l.prevStartAngle,
                  angle:
                    l.prevEndAngle < l.prevStartAngle
                      ? this.fullAngle + l.prevEndAngle - l.prevStartAngle
                      : l.prevEndAngle - l.prevStartAngle,
                  size: v,
                })),
                t.attr({ d })),
                l.dur !== 0
                  ? t
                      .animate(l.dur, p.globals.easing, l.animBeginArr[l.i])
                      .afterAll(function () {
                        (u.chartType !== 'pie' &&
                          u.chartType !== 'donut' &&
                          u.chartType !== 'polarArea') ||
                          this.animate(
                            p.config.chart.animations.dynamicAnimation.speed
                          ).attr({ 'stroke-width': u.strokeWidth }),
                          l.i === p.config.series.length - 1 &&
                            x.animationCompleted(t);
                      })
                      .during(function (L) {
                        (b = S + (s - S) * L),
                          l.animateStartingPos &&
                            ((b = o + (s - o) * L),
                            (C = i - o + (a - (i - o)) * L)),
                          (d = u.getPiePath({
                            me: u,
                            startAngle: C,
                            angle: b,
                            size: v,
                          })),
                          t.node.setAttribute('data:pathOrig', d),
                          t.attr({ d });
                      })
                  : ((d = u.getPiePath({
                      me: u,
                      startAngle: C,
                      angle: s,
                      size: v,
                    })),
                    l.isTrack || (p.globals.animationEnded = !0),
                    t.node.setAttribute('data:pathOrig', d),
                    t.attr({ d, 'stroke-width': u.strokeWidth }));
            },
          },
          {
            key: 'pieClicked',
            value: function (t) {
              var i,
                a = this.w,
                s = this,
                o =
                  s.sliceSizes[t] +
                  (a.config.plotOptions.pie.expandOnClick ? 4 : 0),
                l = a.globals.dom.Paper.select(
                  '.apexcharts-'
                    .concat(s.chartType.toLowerCase(), '-slice-')
                    .concat(t)
                ).members[0];
              if (l.attr('data:pieClicked') !== 'true') {
                var d = a.globals.dom.baseEl.getElementsByClassName(
                  'apexcharts-pie-area'
                );
                Array.prototype.forEach.call(d, function (v) {
                  v.setAttribute('data:pieClicked', 'false');
                  var b = v.getAttribute('data:pathOrig');
                  b && v.setAttribute('d', b);
                }),
                  l.attr('data:pieClicked', 'true');
                var u = parseInt(l.attr('data:startAngle'), 10),
                  p = parseInt(l.attr('data:angle'), 10);
                (i = s.getPiePath({ me: s, startAngle: u, angle: p, size: o })),
                  p !== 360 && l.plot(i);
              } else {
                l.attr({ 'data:pieClicked': 'false' }),
                  this.revertDataLabelsInner(l.node, this.donutDataLabels);
                var x = l.attr('data:pathOrig');
                l.attr({ d: x });
              }
            },
          },
          {
            key: 'getChangedPath',
            value: function (t, i) {
              var a = '';
              return (
                this.dynamicAnim &&
                  this.w.globals.dataChanged &&
                  (a = this.getPiePath({
                    me: this,
                    startAngle: t,
                    angle: i - t,
                    size: this.size,
                  })),
                a
              );
            },
          },
          {
            key: 'getPiePath',
            value: function (t) {
              var i = t.me,
                a = t.startAngle,
                s = t.angle,
                o = t.size,
                l = a,
                d = (Math.PI * (l - 90)) / 180,
                u = s + a;
              Math.ceil(u) >=
                this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) &&
                (u =
                  this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) -
                  0.01),
                Math.ceil(u) > this.fullAngle && (u -= this.fullAngle);
              var p = (Math.PI * (u - 90)) / 180,
                x = i.centerX + o * Math.cos(d),
                v = i.centerY + o * Math.sin(d),
                b = i.centerX + o * Math.cos(p),
                C = i.centerY + o * Math.sin(p),
                S = E.polarToCartesian(i.centerX, i.centerY, i.donutSize, u),
                L = E.polarToCartesian(i.centerX, i.centerY, i.donutSize, l),
                N = s > 180 ? 1 : 0,
                T = ['M', x, v, 'A', o, o, 0, N, 1, b, C];
              return i.chartType === 'donut'
                ? []
                    .concat(T, [
                      'L',
                      S.x,
                      S.y,
                      'A',
                      i.donutSize,
                      i.donutSize,
                      0,
                      N,
                      0,
                      L.x,
                      L.y,
                      'L',
                      x,
                      v,
                      'z',
                    ])
                    .join(' ')
                : i.chartType === 'pie' || i.chartType === 'polarArea'
                ? [].concat(T, ['L', i.centerX, i.centerY, 'L', x, v]).join(' ')
                : [].concat(T).join(' ');
            },
          },
          {
            key: 'drawPolarElements',
            value: function (t) {
              var i = this.w,
                a = new ii(this.ctx),
                s = new W(this.ctx),
                o = new H(this.ctx),
                l = s.group(),
                d = s.group(),
                u = a.niceScale(
                  0,
                  Math.ceil(this.maxY),
                  i.config.yaxis[0].tickAmount,
                  0,
                  !0
                ),
                p = u.result.reverse(),
                x = u.result.length;
              this.maxY = u.niceMax;
              for (
                var v = i.globals.radialSize, b = v / (x - 1), C = 0;
                C < x - 1;
                C++
              ) {
                var S = s.drawCircle(v);
                if (
                  (S.attr({
                    cx: this.centerX,
                    cy: this.centerY,
                    fill: 'none',
                    'stroke-width':
                      i.config.plotOptions.polarArea.rings.strokeWidth,
                    stroke: i.config.plotOptions.polarArea.rings.strokeColor,
                  }),
                  i.config.yaxis[0].show)
                ) {
                  var L = o.drawYAxisTexts(
                    this.centerX,
                    this.centerY -
                      v +
                      parseInt(i.config.yaxis[0].labels.style.fontSize, 10) / 2,
                    C,
                    p[C]
                  );
                  d.add(L);
                }
                l.add(S), (v -= b);
              }
              this.drawSpokes(t), t.add(l), t.add(d);
            },
          },
          {
            key: 'renderInnerDataLabels',
            value: function (t, i) {
              var a = this.w,
                s = new W(this.ctx),
                o = s.group({
                  class: 'apexcharts-datalabels-group',
                  transform: 'translate('
                    .concat(i.translateX ? i.translateX : 0, ', ')
                    .concat(i.translateY ? i.translateY : 0, ') scale(')
                    .concat(a.config.plotOptions.pie.customScale, ')'),
                }),
                l = t.total.show;
              o.node.style.opacity = i.opacity;
              var d,
                u,
                p = i.centerX,
                x = i.centerY;
              d = t.name.color === void 0 ? a.globals.colors[0] : t.name.color;
              var v = t.name.fontSize,
                b = t.name.fontFamily,
                C = t.name.fontWeight;
              u =
                t.value.color === void 0
                  ? a.config.chart.foreColor
                  : t.value.color;
              var S = t.value.formatter,
                L = '',
                N = '';
              if (
                (l
                  ? ((d = t.total.color),
                    (v = t.total.fontSize),
                    (b = t.total.fontFamily),
                    (C = t.total.fontWeight),
                    (N = t.total.label),
                    (L = t.total.formatter(a)))
                  : a.globals.series.length === 1 &&
                    ((L = S(a.globals.series[0], a)),
                    (N = a.globals.seriesNames[0])),
                N && (N = t.name.formatter(N, t.total.show, a)),
                t.name.show)
              ) {
                var T = s.drawText({
                  x: p,
                  y: x + parseFloat(t.name.offsetY),
                  text: N,
                  textAnchor: 'middle',
                  foreColor: d,
                  fontSize: v,
                  fontWeight: C,
                  fontFamily: b,
                });
                T.node.classList.add('apexcharts-datalabel-label'), o.add(T);
              }
              if (t.value.show) {
                var I = t.name.show
                    ? parseFloat(t.value.offsetY) + 16
                    : t.value.offsetY,
                  h = s.drawText({
                    x: p,
                    y: x + I,
                    text: L,
                    textAnchor: 'middle',
                    foreColor: u,
                    fontWeight: t.value.fontWeight,
                    fontSize: t.value.fontSize,
                    fontFamily: t.value.fontFamily,
                  });
                h.node.classList.add('apexcharts-datalabel-value'), o.add(h);
              }
              return o;
            },
          },
          {
            key: 'printInnerLabels',
            value: function (t, i, a, s) {
              var o,
                l = this.w;
              s
                ? (o =
                    t.name.color === void 0
                      ? l.globals.colors[
                          parseInt(s.parentNode.getAttribute('rel'), 10) - 1
                        ]
                      : t.name.color)
                : l.globals.series.length > 1 &&
                  t.total.show &&
                  (o = t.total.color);
              var d = l.globals.dom.baseEl.querySelector(
                  '.apexcharts-datalabel-label'
                ),
                u = l.globals.dom.baseEl.querySelector(
                  '.apexcharts-datalabel-value'
                );
              (a = (0, t.value.formatter)(a, l)),
                s ||
                  typeof t.total.formatter != 'function' ||
                  (a = t.total.formatter(l));
              var p = i === t.total.label;
              (i = t.name.formatter(i, p, l)),
                d !== null && (d.textContent = i),
                u !== null && (u.textContent = a),
                d !== null && (d.style.fill = o);
            },
          },
          {
            key: 'printDataLabelsInner',
            value: function (t, i) {
              var a = this.w,
                s = t.getAttribute('data:value'),
                o =
                  a.globals.seriesNames[
                    parseInt(t.parentNode.getAttribute('rel'), 10) - 1
                  ];
              a.globals.series.length > 1 && this.printInnerLabels(i, o, s, t);
              var l = a.globals.dom.baseEl.querySelector(
                '.apexcharts-datalabels-group'
              );
              l !== null && (l.style.opacity = 1);
            },
          },
          {
            key: 'drawSpokes',
            value: function (t) {
              var i = this,
                a = this.w,
                s = new W(this.ctx),
                o = a.config.plotOptions.polarArea.spokes;
              if (o.strokeWidth !== 0) {
                for (
                  var l = [], d = 360 / a.globals.series.length, u = 0;
                  u < a.globals.series.length;
                  u++
                )
                  l.push(
                    E.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      a.globals.radialSize,
                      a.config.plotOptions.pie.startAngle + d * u
                    )
                  );
                l.forEach(function (p, x) {
                  var v = s.drawLine(
                    p.x,
                    p.y,
                    i.centerX,
                    i.centerY,
                    Array.isArray(o.connectorColors)
                      ? o.connectorColors[x]
                      : o.connectorColors
                  );
                  t.add(v);
                });
              }
            },
          },
          {
            key: 'revertDataLabelsInner',
            value: function (t, i, a) {
              var s = this,
                o = this.w,
                l = o.globals.dom.baseEl.querySelector(
                  '.apexcharts-datalabels-group'
                ),
                d = !1,
                u = o.globals.dom.baseEl.getElementsByClassName(
                  'apexcharts-pie-area'
                ),
                p = function (b) {
                  var C = b.makeSliceOut,
                    S = b.printLabel;
                  Array.prototype.forEach.call(u, function (L) {
                    L.getAttribute('data:pieClicked') === 'true' &&
                      (C && (d = !0), S && s.printDataLabelsInner(L, i));
                  });
                };
              if (
                (p({ makeSliceOut: !0, printLabel: !1 }),
                i.total.show && o.globals.series.length > 1)
              )
                d && !i.total.showAlways
                  ? p({ makeSliceOut: !1, printLabel: !0 })
                  : this.printInnerLabels(
                      i,
                      i.total.label,
                      i.total.formatter(o)
                    );
              else if ((p({ makeSliceOut: !1, printLabel: !0 }), !d))
                if (
                  o.globals.selectedDataPoints.length &&
                  o.globals.series.length > 1
                )
                  if (o.globals.selectedDataPoints[0].length > 0) {
                    var x = o.globals.selectedDataPoints[0],
                      v = o.globals.dom.baseEl.querySelector(
                        '.apexcharts-'
                          .concat(this.chartType.toLowerCase(), '-slice-')
                          .concat(x)
                      );
                    this.printDataLabelsInner(v, i);
                  } else
                    l &&
                      o.globals.selectedDataPoints.length &&
                      o.globals.selectedDataPoints[0].length === 0 &&
                      (l.style.opacity = 0);
                else l && o.globals.series.length > 1 && (l.style.opacity = 0);
            },
          },
        ]),
        j
      );
    })(),
    te = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animDur = 0);
        var i = this.w;
        (this.graphics = new W(this.ctx)),
          (this.lineColorArr =
            i.globals.stroke.colors !== void 0
              ? i.globals.stroke.colors
              : i.globals.colors),
          (this.defaultSize =
            i.globals.svgHeight < i.globals.svgWidth
              ? i.globals.gridHeight + 1.5 * i.globals.goldenPadding
              : i.globals.gridWidth),
          (this.isLog = i.config.yaxis[0].logarithmic),
          (this.coreUtils = new ae(this.ctx)),
          (this.maxValue = this.isLog
            ? this.coreUtils.getLogVal(i.globals.maxY, 0)
            : i.globals.maxY),
          (this.minValue = this.isLog
            ? this.coreUtils.getLogVal(this.w.globals.minY, 0)
            : i.globals.minY),
          (this.polygons = i.config.plotOptions.radar.polygons),
          (this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0),
          (this.size =
            this.defaultSize / 2.1 -
            this.strokeWidth -
            i.config.chart.dropShadow.blur),
          i.config.xaxis.labels.show &&
            (this.size = this.size - i.globals.xAxisLabelsWidth / 1.75),
          i.config.plotOptions.radar.size !== void 0 &&
            (this.size = i.config.plotOptions.radar.size),
          (this.dataRadiusOfPercent = []),
          (this.dataRadius = []),
          (this.angleArr = []),
          (this.yaxisLabelsTextsPos = []);
      }
      return (
        k(j, [
          {
            key: 'draw',
            value: function (t) {
              var i = this,
                a = this.w,
                s = new je(this.ctx),
                o = [],
                l = new dt(this.ctx);
              t.length &&
                (this.dataPointsLen = t[a.globals.maxValsInArrayIndex].length),
                (this.disAngle = (2 * Math.PI) / this.dataPointsLen);
              var d = a.globals.gridWidth / 2,
                u = a.globals.gridHeight / 2,
                p = d + a.config.plotOptions.radar.offsetX,
                x = u + a.config.plotOptions.radar.offsetY,
                v = this.graphics.group({
                  class: 'apexcharts-radar-series apexcharts-plot-series',
                  transform: 'translate('
                    .concat(p || 0, ', ')
                    .concat(x || 0, ')'),
                }),
                b = [],
                C = null,
                S = null;
              if (
                ((this.yaxisLabels = this.graphics.group({
                  class: 'apexcharts-yaxis',
                })),
                t.forEach(function (N, T) {
                  var I = N.length === a.globals.dataPoints,
                    h = i.graphics.group().attr({
                      class: 'apexcharts-series',
                      'data:longestSeries': I,
                      seriesName: E.escapeString(a.globals.seriesNames[T]),
                      rel: T + 1,
                      'data:realIndex': T,
                    });
                  (i.dataRadiusOfPercent[T] = []),
                    (i.dataRadius[T] = []),
                    (i.angleArr[T] = []),
                    N.forEach(function (re, se) {
                      var me = Math.abs(i.maxValue - i.minValue);
                      (re += Math.abs(i.minValue)),
                        i.isLog && (re = i.coreUtils.getLogVal(re, 0)),
                        (i.dataRadiusOfPercent[T][se] = re / me),
                        (i.dataRadius[T][se] =
                          i.dataRadiusOfPercent[T][se] * i.size),
                        (i.angleArr[T][se] = se * i.disAngle);
                    }),
                    (b = i.getDataPointsPos(i.dataRadius[T], i.angleArr[T]));
                  var y = i.createPaths(b, { x: 0, y: 0 });
                  (C = i.graphics.group({
                    class:
                      'apexcharts-series-markers-wrap apexcharts-element-hidden',
                  })),
                    (S = i.graphics.group({
                      class: 'apexcharts-datalabels',
                      'data:realIndex': T,
                    })),
                    a.globals.delayedElements.push({ el: C.node, index: T });
                  var A = {
                      i: T,
                      realIndex: T,
                      animationDelay: T,
                      initialSpeed: a.config.chart.animations.speed,
                      dataChangeSpeed:
                        a.config.chart.animations.dynamicAnimation.speed,
                      className: 'apexcharts-radar',
                      shouldClipToGrid: !1,
                      bindEventsOnPaths: !1,
                      stroke: a.globals.stroke.colors[T],
                      strokeLineCap: a.config.stroke.lineCap,
                    },
                    P = null;
                  a.globals.previousPaths.length > 0 &&
                    (P = i.getPreviousPath(T));
                  for (var R = 0; R < y.linePathsTo.length; R++) {
                    var O = i.graphics.renderPaths(
                      c(
                        c({}, A),
                        {},
                        {
                          pathFrom: P === null ? y.linePathsFrom[R] : P,
                          pathTo: y.linePathsTo[R],
                          strokeWidth: Array.isArray(i.strokeWidth)
                            ? i.strokeWidth[T]
                            : i.strokeWidth,
                          fill: 'none',
                          drawShadow: !1,
                        }
                      )
                    );
                    h.add(O);
                    var X = s.fillPath({ seriesNumber: T }),
                      G = i.graphics.renderPaths(
                        c(
                          c({}, A),
                          {},
                          {
                            pathFrom: P === null ? y.areaPathsFrom[R] : P,
                            pathTo: y.areaPathsTo[R],
                            strokeWidth: 0,
                            fill: X,
                            drawShadow: !1,
                          }
                        )
                      );
                    if (a.config.chart.dropShadow.enabled) {
                      var q = new Q(i.ctx),
                        ie = a.config.chart.dropShadow;
                      q.dropShadow(
                        G,
                        Object.assign({}, ie, { noUserSpaceOnUse: !0 }),
                        T
                      );
                    }
                    h.add(G);
                  }
                  N.forEach(function (re, se) {
                    var me = new _t(i.ctx).getMarkerConfig({
                        cssClass: 'apexcharts-marker',
                        seriesIndex: T,
                        dataPointIndex: se,
                      }),
                      Se = i.graphics.drawMarker(b[se].x, b[se].y, me);
                    Se.attr('rel', se),
                      Se.attr('j', se),
                      Se.attr('index', T),
                      Se.node.setAttribute('default-marker-size', me.pSize);
                    var Ae = i.graphics.group({
                      class: 'apexcharts-series-markers',
                    });
                    Ae && Ae.add(Se), C.add(Ae), h.add(C);
                    var Ne = a.config.dataLabels;
                    if (Ne.enabled) {
                      var Ze = Ne.formatter(a.globals.series[T][se], {
                        seriesIndex: T,
                        dataPointIndex: se,
                        w: a,
                      });
                      l.plotDataLabelsText({
                        x: b[se].x,
                        y: b[se].y,
                        text: Ze,
                        textAnchor: 'middle',
                        i: T,
                        j: T,
                        parent: S,
                        offsetCorrection: !1,
                        dataLabelsConfig: c({}, Ne),
                      });
                    }
                    h.add(S);
                  }),
                    o.push(h);
                }),
                this.drawPolygons({ parent: v }),
                a.config.xaxis.labels.show)
              ) {
                var L = this.drawXAxisTexts();
                v.add(L);
              }
              return (
                o.forEach(function (N) {
                  v.add(N);
                }),
                v.add(this.yaxisLabels),
                v
              );
            },
          },
          {
            key: 'drawPolygons',
            value: function (t) {
              for (
                var i = this,
                  a = this.w,
                  s = t.parent,
                  o = new H(this.ctx),
                  l = a.globals.yAxisScale[0].result.reverse(),
                  d = l.length,
                  u = [],
                  p = this.size / (d - 1),
                  x = 0;
                x < d;
                x++
              )
                u[x] = p * x;
              u.reverse();
              var v = [],
                b = [];
              u.forEach(function (C, S) {
                var L = E.getPolygonPos(C, i.dataPointsLen),
                  N = '';
                L.forEach(function (T, I) {
                  if (S === 0) {
                    var h = i.graphics.drawLine(
                      T.x,
                      T.y,
                      0,
                      0,
                      Array.isArray(i.polygons.connectorColors)
                        ? i.polygons.connectorColors[I]
                        : i.polygons.connectorColors
                    );
                    b.push(h);
                  }
                  I === 0 && i.yaxisLabelsTextsPos.push({ x: T.x, y: T.y }),
                    (N += T.x + ',' + T.y + ' ');
                }),
                  v.push(N);
              }),
                v.forEach(function (C, S) {
                  var L = i.polygons.strokeColors,
                    N = i.polygons.strokeWidth,
                    T = i.graphics.drawPolygon(
                      C,
                      Array.isArray(L) ? L[S] : L,
                      Array.isArray(N) ? N[S] : N,
                      a.globals.radarPolygons.fill.colors[S]
                    );
                  s.add(T);
                }),
                b.forEach(function (C) {
                  s.add(C);
                }),
                a.config.yaxis[0].show &&
                  this.yaxisLabelsTextsPos.forEach(function (C, S) {
                    var L = o.drawYAxisTexts(C.x, C.y, S, l[S]);
                    i.yaxisLabels.add(L);
                  });
            },
          },
          {
            key: 'drawXAxisTexts',
            value: function () {
              var t = this,
                i = this.w,
                a = i.config.xaxis.labels,
                s = this.graphics.group({ class: 'apexcharts-xaxis' }),
                o = E.getPolygonPos(this.size, this.dataPointsLen);
              return (
                i.globals.labels.forEach(function (l, d) {
                  var u = i.config.xaxis.labels.formatter,
                    p = new dt(t.ctx);
                  if (o[d]) {
                    var x = t.getTextPos(o[d], t.size),
                      v = u(l, { seriesIndex: -1, dataPointIndex: d, w: i });
                    p.plotDataLabelsText({
                      x: x.newX,
                      y: x.newY,
                      text: v,
                      textAnchor: x.textAnchor,
                      i: d,
                      j: d,
                      parent: s,
                      color:
                        Array.isArray(a.style.colors) && a.style.colors[d]
                          ? a.style.colors[d]
                          : '#a8a8a8',
                      dataLabelsConfig: c(
                        {
                          textAnchor: x.textAnchor,
                          dropShadow: { enabled: !1 },
                        },
                        a
                      ),
                      offsetCorrection: !1,
                    });
                  }
                }),
                s
              );
            },
          },
          {
            key: 'createPaths',
            value: function (t, i) {
              var a = this,
                s = [],
                o = [],
                l = [],
                d = [];
              if (t.length) {
                (o = [this.graphics.move(i.x, i.y)]),
                  (d = [this.graphics.move(i.x, i.y)]);
                var u = this.graphics.move(t[0].x, t[0].y),
                  p = this.graphics.move(t[0].x, t[0].y);
                t.forEach(function (x, v) {
                  (u += a.graphics.line(x.x, x.y)),
                    (p += a.graphics.line(x.x, x.y)),
                    v === t.length - 1 && ((u += 'Z'), (p += 'Z'));
                }),
                  s.push(u),
                  l.push(p);
              }
              return {
                linePathsFrom: o,
                linePathsTo: s,
                areaPathsFrom: d,
                areaPathsTo: l,
              };
            },
          },
          {
            key: 'getTextPos',
            value: function (t, i) {
              var a = 'middle',
                s = t.x,
                o = t.y;
              return (
                Math.abs(t.x) >= 10
                  ? t.x > 0
                    ? ((a = 'start'), (s += 10))
                    : t.x < 0 && ((a = 'end'), (s -= 10))
                  : (a = 'middle'),
                Math.abs(t.y) >= i - 10 &&
                  (t.y < 0 ? (o -= 10) : t.y > 0 && (o += 10)),
                { textAnchor: a, newX: s, newY: o }
              );
            },
          },
          {
            key: 'getPreviousPath',
            value: function (t) {
              for (
                var i = this.w, a = null, s = 0;
                s < i.globals.previousPaths.length;
                s++
              ) {
                var o = i.globals.previousPaths[s];
                o.paths.length > 0 &&
                  parseInt(o.realIndex, 10) === parseInt(t, 10) &&
                  i.globals.previousPaths[s].paths[0] !== void 0 &&
                  (a = i.globals.previousPaths[s].paths[0].d);
              }
              return a;
            },
          },
          {
            key: 'getDataPointsPos',
            value: function (t, i) {
              var a =
                arguments.length > 2 && arguments[2] !== void 0
                  ? arguments[2]
                  : this.dataPointsLen;
              (t = t || []), (i = i || []);
              for (var s = [], o = 0; o < a; o++) {
                var l = {};
                (l.x = t[o] * Math.sin(i[o])),
                  (l.y = -t[o] * Math.cos(i[o])),
                  s.push(l);
              }
              return s;
            },
          },
        ]),
        j
      );
    })(),
    le = (function (j) {
      D(i, $);
      var t = K(i);
      function i(a) {
        var s;
        g(this, i),
          ((s = t.call(this, a)).ctx = a),
          (s.w = a.w),
          (s.animBeginArr = [0]),
          (s.animDur = 0);
        var o = s.w;
        return (
          (s.startAngle = o.config.plotOptions.radialBar.startAngle),
          (s.endAngle = o.config.plotOptions.radialBar.endAngle),
          (s.totalAngle = Math.abs(
            o.config.plotOptions.radialBar.endAngle -
              o.config.plotOptions.radialBar.startAngle
          )),
          (s.trackStartAngle = o.config.plotOptions.radialBar.track.startAngle),
          (s.trackEndAngle = o.config.plotOptions.radialBar.track.endAngle),
          (s.donutDataLabels = s.w.config.plotOptions.radialBar.dataLabels),
          (s.radialDataLabels = s.donutDataLabels),
          s.trackStartAngle || (s.trackStartAngle = s.startAngle),
          s.trackEndAngle || (s.trackEndAngle = s.endAngle),
          s.endAngle === 360 && (s.endAngle = 359.99),
          (s.margin = parseInt(
            o.config.plotOptions.radialBar.track.margin,
            10
          )),
          s
        );
      }
      return (
        k(i, [
          {
            key: 'draw',
            value: function (a) {
              var s = this.w,
                o = new W(this.ctx),
                l = o.group({ class: 'apexcharts-radialbar' });
              if (s.globals.noData) return l;
              var d = o.group(),
                u = this.defaultSize / 2,
                p = s.globals.gridWidth / 2,
                x = this.defaultSize / 2.05;
              s.config.chart.sparkline.enabled ||
                (x =
                  x - s.config.stroke.width - s.config.chart.dropShadow.blur);
              var v = s.globals.fill.colors;
              if (s.config.plotOptions.radialBar.track.show) {
                var b = this.drawTracks({
                  size: x,
                  centerX: p,
                  centerY: u,
                  colorArr: v,
                  series: a,
                });
                d.add(b);
              }
              var C = this.drawArcs({
                  size: x,
                  centerX: p,
                  centerY: u,
                  colorArr: v,
                  series: a,
                }),
                S = 360;
              s.config.plotOptions.radialBar.startAngle < 0 &&
                (S = this.totalAngle);
              var L = (360 - S) / 360;
              if (
                ((s.globals.radialSize = x - x * L),
                this.radialDataLabels.value.show)
              ) {
                var N = Math.max(
                  this.radialDataLabels.value.offsetY,
                  this.radialDataLabels.name.offsetY
                );
                s.globals.radialSize += N * L;
              }
              return (
                d.add(C.g),
                s.config.plotOptions.radialBar.hollow.position === 'front' &&
                  (C.g.add(C.elHollow), C.dataLabels && C.g.add(C.dataLabels)),
                l.add(d),
                l
              );
            },
          },
          {
            key: 'drawTracks',
            value: function (a) {
              var s = this.w,
                o = new W(this.ctx),
                l = o.group({ class: 'apexcharts-tracks' }),
                d = new Q(this.ctx),
                u = new je(this.ctx),
                p = this.getStrokeWidth(a);
              a.size = a.size - p / 2;
              for (var x = 0; x < a.series.length; x++) {
                var v = o.group({
                  class: 'apexcharts-radialbar-track apexcharts-track',
                });
                l.add(v),
                  v.attr({ rel: x + 1 }),
                  (a.size = a.size - p - this.margin);
                var b = s.config.plotOptions.radialBar.track,
                  C = u.fillPath({
                    seriesNumber: 0,
                    size: a.size,
                    fillColors: Array.isArray(b.background)
                      ? b.background[x]
                      : b.background,
                    solid: !0,
                  }),
                  S = this.trackStartAngle,
                  L = this.trackEndAngle;
                Math.abs(L) + Math.abs(S) >= 360 &&
                  (L = 360 - Math.abs(this.startAngle) - 0.1);
                var N = o.drawPath({
                  d: '',
                  stroke: C,
                  strokeWidth: (p * parseInt(b.strokeWidth, 10)) / 100,
                  fill: 'none',
                  strokeOpacity: b.opacity,
                  classes: 'apexcharts-radialbar-area',
                });
                if (b.dropShadow.enabled) {
                  var T = b.dropShadow;
                  d.dropShadow(N, T);
                }
                v.add(N),
                  N.attr('id', 'apexcharts-radialbarTrack-' + x),
                  this.animatePaths(N, {
                    centerX: a.centerX,
                    centerY: a.centerY,
                    endAngle: L,
                    startAngle: S,
                    size: a.size,
                    i: x,
                    totalItems: 2,
                    animBeginArr: 0,
                    dur: 0,
                    isTrack: !0,
                    easing: s.globals.easing,
                  });
              }
              return l;
            },
          },
          {
            key: 'drawArcs',
            value: function (a) {
              var s = this.w,
                o = new W(this.ctx),
                l = new je(this.ctx),
                d = new Q(this.ctx),
                u = o.group(),
                p = this.getStrokeWidth(a);
              a.size = a.size - p / 2;
              var x = s.config.plotOptions.radialBar.hollow.background,
                v =
                  a.size -
                  p * a.series.length -
                  this.margin * a.series.length -
                  (p *
                    parseInt(
                      s.config.plotOptions.radialBar.track.strokeWidth,
                      10
                    )) /
                    100 /
                    2,
                b = v - s.config.plotOptions.radialBar.hollow.margin;
              s.config.plotOptions.radialBar.hollow.image !== void 0 &&
                (x = this.drawHollowImage(a, u, v, x));
              var C = this.drawHollow({
                size: b,
                centerX: a.centerX,
                centerY: a.centerY,
                fill: x || 'transparent',
              });
              if (s.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                var S = s.config.plotOptions.radialBar.hollow.dropShadow;
                d.dropShadow(C, S);
              }
              var L = 1;
              !this.radialDataLabels.total.show &&
                s.globals.series.length > 1 &&
                (L = 0);
              var N = null;
              this.radialDataLabels.show &&
                (N = this.renderInnerDataLabels(this.radialDataLabels, {
                  hollowSize: v,
                  centerX: a.centerX,
                  centerY: a.centerY,
                  opacity: L,
                })),
                s.config.plotOptions.radialBar.hollow.position === 'back' &&
                  (u.add(C), N && u.add(N));
              var T = !1;
              s.config.plotOptions.radialBar.inverseOrder && (T = !0);
              for (
                var I = T ? a.series.length - 1 : 0;
                T ? I >= 0 : I < a.series.length;
                T ? I-- : I++
              ) {
                var h = o.group({
                  class: 'apexcharts-series apexcharts-radial-series',
                  seriesName: E.escapeString(s.globals.seriesNames[I]),
                });
                u.add(h),
                  h.attr({ rel: I + 1, 'data:realIndex': I }),
                  this.ctx.series.addCollapsedClassToSeries(h, I),
                  (a.size = a.size - p - this.margin);
                var y = l.fillPath({
                    seriesNumber: I,
                    size: a.size,
                    value: a.series[I],
                  }),
                  A = this.startAngle,
                  P = void 0,
                  R = E.negToZero(a.series[I] > 100 ? 100 : a.series[I]) / 100,
                  O = Math.round(this.totalAngle * R) + this.startAngle,
                  X = void 0;
                s.globals.dataChanged &&
                  ((P = this.startAngle),
                  (X =
                    Math.round(
                      (this.totalAngle *
                        E.negToZero(s.globals.previousPaths[I])) /
                        100
                    ) + P)),
                  Math.abs(O) + Math.abs(A) >= 360 && (O -= 0.01),
                  Math.abs(X) + Math.abs(P) >= 360 && (X -= 0.01);
                var G = O - A,
                  q = Array.isArray(s.config.stroke.dashArray)
                    ? s.config.stroke.dashArray[I]
                    : s.config.stroke.dashArray,
                  ie = o.drawPath({
                    d: '',
                    stroke: y,
                    strokeWidth: p,
                    fill: 'none',
                    fillOpacity: s.config.fill.opacity,
                    classes:
                      'apexcharts-radialbar-area apexcharts-radialbar-slice-' +
                      I,
                    strokeDashArray: q,
                  });
                if (
                  (W.setAttrs(ie.node, {
                    'data:angle': G,
                    'data:value': a.series[I],
                  }),
                  s.config.chart.dropShadow.enabled)
                ) {
                  var re = s.config.chart.dropShadow;
                  d.dropShadow(ie, re, I);
                }
                d.setSelectionFilter(ie, 0, I),
                  this.addListeners(ie, this.radialDataLabels),
                  h.add(ie),
                  ie.attr({ index: 0, j: I });
                var se = 0;
                !this.initialAnim ||
                  s.globals.resized ||
                  s.globals.dataChanged ||
                  (se = s.config.chart.animations.speed),
                  s.globals.dataChanged &&
                    (se = s.config.chart.animations.dynamicAnimation.speed),
                  (this.animDur = se / (1.2 * a.series.length) + this.animDur),
                  this.animBeginArr.push(this.animDur),
                  this.animatePaths(ie, {
                    centerX: a.centerX,
                    centerY: a.centerY,
                    endAngle: O,
                    startAngle: A,
                    prevEndAngle: X,
                    prevStartAngle: P,
                    size: a.size,
                    i: I,
                    totalItems: 2,
                    animBeginArr: this.animBeginArr,
                    dur: se,
                    shouldSetPrevPaths: !0,
                    easing: s.globals.easing,
                  });
              }
              return { g: u, elHollow: C, dataLabels: N };
            },
          },
          {
            key: 'drawHollow',
            value: function (a) {
              var s = new W(this.ctx).drawCircle(2 * a.size);
              return (
                s.attr({
                  class: 'apexcharts-radialbar-hollow',
                  cx: a.centerX,
                  cy: a.centerY,
                  r: a.size,
                  fill: a.fill,
                }),
                s
              );
            },
          },
          {
            key: 'drawHollowImage',
            value: function (a, s, o, l) {
              var d = this.w,
                u = new je(this.ctx),
                p = E.randomId(),
                x = d.config.plotOptions.radialBar.hollow.image;
              if (d.config.plotOptions.radialBar.hollow.imageClipped)
                u.clippedImgArea({
                  width: o,
                  height: o,
                  image: x,
                  patternID: 'pattern'.concat(d.globals.cuid).concat(p),
                }),
                  (l = 'url(#pattern'.concat(d.globals.cuid).concat(p, ')'));
              else {
                var v = d.config.plotOptions.radialBar.hollow.imageWidth,
                  b = d.config.plotOptions.radialBar.hollow.imageHeight;
                if (v === void 0 && b === void 0) {
                  var C = d.globals.dom.Paper.image(x).loaded(function (L) {
                    this.move(
                      a.centerX -
                        L.width / 2 +
                        d.config.plotOptions.radialBar.hollow.imageOffsetX,
                      a.centerY -
                        L.height / 2 +
                        d.config.plotOptions.radialBar.hollow.imageOffsetY
                    );
                  });
                  s.add(C);
                } else {
                  var S = d.globals.dom.Paper.image(x).loaded(function (L) {
                    this.move(
                      a.centerX -
                        v / 2 +
                        d.config.plotOptions.radialBar.hollow.imageOffsetX,
                      a.centerY -
                        b / 2 +
                        d.config.plotOptions.radialBar.hollow.imageOffsetY
                    ),
                      this.size(v, b);
                  });
                  s.add(S);
                }
              }
              return l;
            },
          },
          {
            key: 'getStrokeWidth',
            value: function (a) {
              var s = this.w;
              return (
                (a.size *
                  (100 -
                    parseInt(s.config.plotOptions.radialBar.hollow.size, 10))) /
                  100 /
                  (a.series.length + 1) -
                this.margin
              );
            },
          },
        ]),
        i
      );
    })(),
    ue = (function (j) {
      D(i, pi);
      var t = K(i);
      function i() {
        return g(this, i), t.apply(this, arguments);
      }
      return (
        k(i, [
          {
            key: 'draw',
            value: function (a, s) {
              var o = this.w,
                l = new W(this.ctx);
              (this.rangeBarOptions = this.w.config.plotOptions.rangeBar),
                (this.series = a),
                (this.seriesRangeStart = o.globals.seriesRangeStart),
                (this.seriesRangeEnd = o.globals.seriesRangeEnd),
                this.barHelpers.initVariables(a);
              for (
                var d = l.group({
                    class: 'apexcharts-rangebar-series apexcharts-plot-series',
                  }),
                  u = 0;
                u < a.length;
                u++
              ) {
                var p,
                  x,
                  v,
                  b,
                  C = void 0,
                  S = void 0,
                  L = o.globals.comboCharts ? s[u] : u,
                  N = l.group({
                    class: 'apexcharts-series',
                    seriesName: E.escapeString(o.globals.seriesNames[L]),
                    rel: u + 1,
                    'data:realIndex': L,
                  });
                this.ctx.series.addCollapsedClassToSeries(N, L),
                  a[u].length > 0 && (this.visibleI = this.visibleI + 1);
                var T = 0,
                  I = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = L);
                var h = this.barHelpers.initialPositions();
                (S = h.y),
                  (b = h.zeroW),
                  (C = h.x),
                  (I = h.barWidth),
                  (T = h.barHeight),
                  (p = h.xDivision),
                  (x = h.yDivision),
                  (v = h.zeroH);
                for (
                  var y = l.group({
                      class: 'apexcharts-datalabels',
                      'data:realIndex': L,
                    }),
                    A = l.group({
                      class: 'apexcharts-rangebar-goals-markers',
                      style: 'pointer-events: none',
                    }),
                    P = 0;
                  P < o.globals.dataPoints;
                  P++
                ) {
                  var R,
                    O = this.barHelpers.getStrokeWidth(u, P, L),
                    X = this.seriesRangeStart[u][P],
                    G = this.seriesRangeEnd[u][P],
                    q = null,
                    ie = null,
                    re = null,
                    se = { x: C, y: S, strokeWidth: O, elSeries: N },
                    me = this.seriesLen;
                  if (
                    (o.config.plotOptions.bar.rangeBarGroupRows && (me = 1),
                    o.config.series[u].data[P] === void 0)
                  )
                    break;
                  if (this.isHorizontal) {
                    re = S + T * this.visibleI;
                    var Se = (x - T * me) / 2;
                    if (o.config.series[u].data[P].x) {
                      var Ae = this.detectOverlappingBars({
                        i: u,
                        j: P,
                        barYPosition: re,
                        srty: Se,
                        barHeight: T,
                        yDivision: x,
                        initPositions: h,
                      });
                      (T = Ae.barHeight), (re = Ae.barYPosition);
                    }
                    I = (q = this.drawRangeBarPaths(
                      c(
                        {
                          indexes: { i: u, j: P, realIndex: L },
                          barHeight: T,
                          barYPosition: re,
                          zeroW: b,
                          yDivision: x,
                          y1: X,
                          y2: G,
                        },
                        se
                      )
                    )).barWidth;
                  } else {
                    o.globals.isXNumeric &&
                      (C =
                        (o.globals.seriesX[u][P] - o.globals.minX) /
                          this.xRatio -
                        I / 2),
                      (ie = C + I * this.visibleI);
                    var Ne = (p - I * me) / 2;
                    if (o.config.series[u].data[P].x) {
                      var Ze = this.detectOverlappingBars({
                        i: u,
                        j: P,
                        barXPosition: ie,
                        srtx: Ne,
                        barWidth: I,
                        xDivision: p,
                        initPositions: h,
                      });
                      (I = Ze.barWidth), (ie = Ze.barXPosition);
                    }
                    T = (q = this.drawRangeColumnPaths(
                      c(
                        {
                          indexes: { i: u, j: P, realIndex: L },
                          barWidth: I,
                          barXPosition: ie,
                          zeroH: v,
                          xDivision: p,
                        },
                        se
                      )
                    )).barHeight;
                  }
                  var Ye = this.barHelpers.drawGoalLine({
                    barXPosition: q.barXPosition,
                    barYPosition: re,
                    goalX: q.goalX,
                    goalY: q.goalY,
                    barHeight: T,
                    barWidth: I,
                  });
                  Ye && A.add(Ye), (S = q.y), (C = q.x);
                  var et = this.barHelpers.getPathFillColor(a, u, P, L),
                    Ri = o.globals.stroke.colors[L];
                  this.renderSeries(
                    (M(
                      (R = {
                        realIndex: L,
                        pathFill: et,
                        lineFill: Ri,
                        j: P,
                        i: u,
                        x: C,
                        y: S,
                        y1: X,
                        y2: G,
                        pathFrom: q.pathFrom,
                        pathTo: q.pathTo,
                        strokeWidth: O,
                        elSeries: N,
                        series: a,
                        barHeight: T,
                        barWidth: I,
                        barXPosition: ie,
                        barYPosition: re,
                      }),
                      'barWidth',
                      I
                    ),
                    M(R, 'elDataLabelsWrap', y),
                    M(R, 'elGoalsMarkers', A),
                    M(R, 'visibleSeries', this.visibleI),
                    M(R, 'type', 'rangebar'),
                    R)
                  );
                }
                d.add(N);
              }
              return d;
            },
          },
          {
            key: 'detectOverlappingBars',
            value: function (a) {
              var s = a.i,
                o = a.j,
                l = a.barYPosition,
                d = a.barXPosition,
                u = a.srty,
                p = a.srtx,
                x = a.barHeight,
                v = a.barWidth,
                b = a.yDivision,
                C = a.xDivision,
                S = a.initPositions,
                L = this.w,
                N = [],
                T = L.config.series[s].data[o].rangeName,
                I = L.config.series[s].data[o].x,
                h = Array.isArray(I) ? I.join(' ') : I,
                y = L.globals.labels
                  .map(function (P) {
                    return Array.isArray(P) ? P.join(' ') : P;
                  })
                  .indexOf(h),
                A = L.globals.seriesRange[s].findIndex(function (P) {
                  return P.x === h && P.overlaps.length > 0;
                });
              return (
                this.isHorizontal
                  ? ((l = L.config.plotOptions.bar.rangeBarGroupRows
                      ? u + b * y
                      : u + x * this.visibleI + b * y),
                    A > -1 &&
                      !L.config.plotOptions.bar.rangeBarOverlap &&
                      (N = L.globals.seriesRange[s][A].overlaps).indexOf(T) >
                        -1 &&
                      (l =
                        (x = S.barHeight / N.length) * this.visibleI +
                        (b * (100 - parseInt(this.barOptions.barHeight, 10))) /
                          100 /
                          2 +
                        x * (this.visibleI + N.indexOf(T)) +
                        b * y))
                  : (y > -1 &&
                      (d = L.config.plotOptions.bar.rangeBarGroupRows
                        ? p + C * y
                        : p + v * this.visibleI + C * y),
                    A > -1 &&
                      !L.config.plotOptions.bar.rangeBarOverlap &&
                      (N = L.globals.seriesRange[s][A].overlaps).indexOf(T) >
                        -1 &&
                      (d =
                        (v = S.barWidth / N.length) * this.visibleI +
                        (C * (100 - parseInt(this.barOptions.barWidth, 10))) /
                          100 /
                          2 +
                        v * (this.visibleI + N.indexOf(T)) +
                        C * y)),
                { barYPosition: l, barXPosition: d, barHeight: x, barWidth: v }
              );
            },
          },
          {
            key: 'drawRangeColumnPaths',
            value: function (a) {
              var s = a.indexes,
                o = a.x,
                l = a.xDivision,
                d = a.barWidth,
                u = a.barXPosition,
                p = a.zeroH,
                x = this.w,
                v = s.i,
                b = s.j,
                C = this.yRatio[this.yaxisIndex],
                S = s.realIndex,
                L = this.getRangeValue(S, b),
                N = Math.min(L.start, L.end),
                T = Math.max(L.start, L.end);
              this.series[v][b] === void 0 || this.series[v][b] === null
                ? (N = p)
                : ((N = p - N / C), (T = p - T / C));
              var I = Math.abs(T - N),
                h = this.barHelpers.getColumnPaths({
                  barXPosition: u,
                  barWidth: d,
                  y1: N,
                  y2: T,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  realIndex: s.realIndex,
                  i: S,
                  j: b,
                  w: x,
                });
              return (
                x.globals.isXNumeric || (o += l),
                {
                  pathTo: h.pathTo,
                  pathFrom: h.pathFrom,
                  barHeight: I,
                  x: o,
                  y: T,
                  goalY: this.barHelpers.getGoalValues('y', null, p, v, b),
                  barXPosition: u,
                }
              );
            },
          },
          {
            key: 'drawRangeBarPaths',
            value: function (a) {
              var s = a.indexes,
                o = a.y,
                l = a.y1,
                d = a.y2,
                u = a.yDivision,
                p = a.barHeight,
                x = a.barYPosition,
                v = a.zeroW,
                b = this.w,
                C = v + l / this.invertedYRatio,
                S = v + d / this.invertedYRatio,
                L = Math.abs(S - C),
                N = this.barHelpers.getBarpaths({
                  barYPosition: x,
                  barHeight: p,
                  x1: C,
                  x2: S,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  i: s.realIndex,
                  realIndex: s.realIndex,
                  j: s.j,
                  w: b,
                });
              return (
                b.globals.isXNumeric || (o += u),
                {
                  pathTo: N.pathTo,
                  pathFrom: N.pathFrom,
                  barWidth: L,
                  x: S,
                  goalX: this.barHelpers.getGoalValues(
                    'x',
                    v,
                    null,
                    s.realIndex,
                    s.j
                  ),
                  y: o,
                }
              );
            },
          },
          {
            key: 'getRangeValue',
            value: function (a, s) {
              var o = this.w;
              return {
                start: o.globals.seriesRangeStart[a][s],
                end: o.globals.seriesRangeEnd[a][s],
              };
            },
          },
        ]),
        i
      );
    })(),
    Ce = (function () {
      function j(t) {
        g(this, j), (this.w = t.w), (this.lineCtx = t);
      }
      return (
        k(j, [
          {
            key: 'sameValueSeriesFix',
            value: function (t, i) {
              var a = this.w;
              if (
                (a.config.fill.type === 'gradient' ||
                  a.config.fill.type[t] === 'gradient') &&
                new ae(this.lineCtx.ctx, a).seriesHaveSameValues(t)
              ) {
                var s = i[t].slice();
                (s[s.length - 1] = s[s.length - 1] + 1e-6), (i[t] = s);
              }
              return i;
            },
          },
          {
            key: 'calculatePoints',
            value: function (t) {
              var i = t.series,
                a = t.realIndex,
                s = t.x,
                o = t.y,
                l = t.i,
                d = t.j,
                u = t.prevY,
                p = this.w,
                x = [],
                v = [];
              if (d === 0) {
                var b =
                  this.lineCtx.categoryAxisCorrection +
                  p.config.markers.offsetX;
                p.globals.isXNumeric &&
                  (b =
                    (p.globals.seriesX[a][0] - p.globals.minX) /
                      this.lineCtx.xRatio +
                    p.config.markers.offsetX),
                  x.push(b),
                  v.push(
                    E.isNumber(i[l][0]) ? u + p.config.markers.offsetY : null
                  ),
                  x.push(s + p.config.markers.offsetX),
                  v.push(
                    E.isNumber(i[l][d + 1])
                      ? o + p.config.markers.offsetY
                      : null
                  );
              } else
                x.push(s + p.config.markers.offsetX),
                  v.push(
                    E.isNumber(i[l][d + 1])
                      ? o + p.config.markers.offsetY
                      : null
                  );
              return { x, y: v };
            },
          },
          {
            key: 'checkPreviousPaths',
            value: function (t) {
              for (
                var i = t.pathFromLine,
                  a = t.pathFromArea,
                  s = t.realIndex,
                  o = this.w,
                  l = 0;
                l < o.globals.previousPaths.length;
                l++
              ) {
                var d = o.globals.previousPaths[l];
                (d.type === 'line' || d.type === 'area') &&
                  d.paths.length > 0 &&
                  parseInt(d.realIndex, 10) === parseInt(s, 10) &&
                  (d.type === 'line'
                    ? ((this.lineCtx.appendPathFrom = !1),
                      (i = o.globals.previousPaths[l].paths[0].d))
                    : d.type === 'area' &&
                      ((this.lineCtx.appendPathFrom = !1),
                      (a = o.globals.previousPaths[l].paths[0].d),
                      o.config.stroke.show &&
                        o.globals.previousPaths[l].paths[1] &&
                        (i = o.globals.previousPaths[l].paths[1].d)));
              }
              return { pathFromLine: i, pathFromArea: a };
            },
          },
          {
            key: 'determineFirstPrevY',
            value: function (t) {
              var i,
                a = t.i,
                s = t.series,
                o = t.prevY,
                l = t.lineYPosition,
                d = this.w;
              if (
                ((i = s[a]) === null || i === void 0 ? void 0 : i[0]) !== void 0
              )
                o =
                  (l =
                    d.config.chart.stacked && a > 0
                      ? this.lineCtx.prevSeriesY[a - 1][0]
                      : this.lineCtx.zeroY) -
                  s[a][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] +
                  2 *
                    (this.lineCtx.isReversed
                      ? s[a][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex]
                      : 0);
              else if (d.config.chart.stacked && a > 0 && s[a][0] === void 0) {
                for (var u = a - 1; u >= 0; u--)
                  if (s[u][0] !== null && s[u][0] !== void 0) {
                    o = l = this.lineCtx.prevSeriesY[u][0];
                    break;
                  }
              }
              return { prevY: o, lineYPosition: l };
            },
          },
        ]),
        j
      );
    })(),
    ge = (function () {
      function j(t, i, a) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.xyRatios = i),
          (this.pointsChart =
            !(
              this.w.config.chart.type !== 'bubble' &&
              this.w.config.chart.type !== 'scatter'
            ) || a),
          (this.scatter = new Vt(this.ctx)),
          (this.noNegatives = this.w.globals.minX === Number.MAX_VALUE),
          (this.lineHelpers = new Ce(this)),
          (this.markers = new _t(this.ctx)),
          (this.prevSeriesY = []),
          (this.categoryAxisCorrection = 0),
          (this.yaxisIndex = 0);
      }
      return (
        k(j, [
          {
            key: 'draw',
            value: function (t, i, a, s) {
              var o = this.w,
                l = new W(this.ctx),
                d = o.globals.comboCharts ? i : o.config.chart.type,
                u = l.group({
                  class: 'apexcharts-'.concat(
                    d,
                    '-series apexcharts-plot-series'
                  ),
                }),
                p = new ae(this.ctx, o);
              (this.yRatio = this.xyRatios.yRatio),
                (this.zRatio = this.xyRatios.zRatio),
                (this.xRatio = this.xyRatios.xRatio),
                (this.baseLineY = this.xyRatios.baseLineY),
                (t = p.getLogSeries(t)),
                (this.yRatio = p.getLogYRatios(this.yRatio));
              for (var x = [], v = 0; v < t.length; v++) {
                t = this.lineHelpers.sameValueSeriesFix(v, t);
                var b = o.globals.comboCharts ? a[v] : v;
                this._initSerieVariables(t, v, b);
                var C = [],
                  S = [],
                  L = o.globals.padHorizontal + this.categoryAxisCorrection;
                this.ctx.series.addCollapsedClassToSeries(this.elSeries, b),
                  o.globals.isXNumeric &&
                    o.globals.seriesX.length > 0 &&
                    (L =
                      (o.globals.seriesX[b][0] - o.globals.minX) / this.xRatio),
                  S.push(L);
                var N,
                  T = L,
                  I = void 0,
                  h = T,
                  y = this.zeroY,
                  A = this.zeroY;
                (y = this.lineHelpers.determineFirstPrevY({
                  i: v,
                  series: t,
                  prevY: y,
                  lineYPosition: 0,
                }).prevY),
                  C.push(y),
                  (N = y),
                  d === 'rangeArea' &&
                    (I = A =
                      this.lineHelpers.determineFirstPrevY({
                        i: v,
                        series: s,
                        prevY: A,
                        lineYPosition: 0,
                      }).prevY);
                var P = {
                    type: d,
                    series: t,
                    realIndex: b,
                    i: v,
                    x: L,
                    y: 1,
                    pX: T,
                    pY: N,
                    pathsFrom: this._calculatePathsFrom({
                      type: d,
                      series: t,
                      i: v,
                      realIndex: b,
                      prevX: h,
                      prevY: y,
                      prevY2: A,
                    }),
                    linePaths: [],
                    areaPaths: [],
                    seriesIndex: a,
                    lineYPosition: 0,
                    xArrj: S,
                    yArrj: C,
                    seriesRangeEnd: s,
                  },
                  R = this._iterateOverDataPoints(
                    c(
                      c({}, P),
                      {},
                      {
                        iterations:
                          d === 'rangeArea' ? t[v].length - 1 : void 0,
                        isRangeStart: !0,
                      }
                    )
                  );
                if (d === 'rangeArea') {
                  var O = this._calculatePathsFrom({
                      series: s,
                      i: v,
                      realIndex: b,
                      prevX: h,
                      prevY: A,
                    }),
                    X = this._iterateOverDataPoints(
                      c(
                        c({}, P),
                        {},
                        {
                          series: s,
                          pY: I,
                          pathsFrom: O,
                          iterations: s[v].length - 1,
                          isRangeStart: !1,
                        }
                      )
                    );
                  (R.linePaths[0] = X.linePath + R.linePath),
                    (R.pathFromLine = X.pathFromLine + R.pathFromLine);
                }
                this._handlePaths({ type: d, realIndex: b, i: v, paths: R }),
                  this.elSeries.add(this.elPointsMain),
                  this.elSeries.add(this.elDataLabelsWrap),
                  x.push(this.elSeries);
              }
              if (o.config.chart.stacked)
                for (var G = x.length; G > 0; G--) u.add(x[G - 1]);
              else for (var q = 0; q < x.length; q++) u.add(x[q]);
              return u;
            },
          },
          {
            key: '_initSerieVariables',
            value: function (t, i, a) {
              var s = this.w,
                o = new W(this.ctx);
              (this.xDivision =
                s.globals.gridWidth /
                (s.globals.dataPoints -
                  (s.config.xaxis.tickPlacement === 'on' ? 1 : 0))),
                (this.strokeWidth = Array.isArray(s.config.stroke.width)
                  ? s.config.stroke.width[a]
                  : s.config.stroke.width),
                this.yRatio.length > 1 && (this.yaxisIndex = a),
                (this.isReversed =
                  s.config.yaxis[this.yaxisIndex] &&
                  s.config.yaxis[this.yaxisIndex].reversed),
                (this.zeroY =
                  s.globals.gridHeight -
                  this.baseLineY[this.yaxisIndex] -
                  (this.isReversed ? s.globals.gridHeight : 0) +
                  (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0)),
                (this.areaBottomY = this.zeroY),
                (this.zeroY > s.globals.gridHeight ||
                  s.config.plotOptions.area.fillTo === 'end') &&
                  (this.areaBottomY = s.globals.gridHeight),
                (this.categoryAxisCorrection = this.xDivision / 2),
                (this.elSeries = o.group({
                  class: 'apexcharts-series',
                  seriesName: E.escapeString(s.globals.seriesNames[a]),
                })),
                (this.elPointsMain = o.group({
                  class: 'apexcharts-series-markers-wrap',
                  'data:realIndex': a,
                })),
                (this.elDataLabelsWrap = o.group({
                  class: 'apexcharts-datalabels',
                  'data:realIndex': a,
                }));
              var l = t[i].length === s.globals.dataPoints;
              this.elSeries.attr({
                'data:longestSeries': l,
                rel: i + 1,
                'data:realIndex': a,
              }),
                (this.appendPathFrom = !0);
            },
          },
          {
            key: '_calculatePathsFrom',
            value: function (t) {
              var i,
                a,
                s,
                o,
                l = t.type,
                d = t.series,
                u = t.i,
                p = t.realIndex,
                x = t.prevX,
                v = t.prevY,
                b = t.prevY2,
                C = this.w,
                S = new W(this.ctx);
              if (d[u][0] === null) {
                for (var L = 0; L < d[u].length; L++)
                  if (d[u][L] !== null) {
                    (x = this.xDivision * L),
                      (v = this.zeroY - d[u][L] / this.yRatio[this.yaxisIndex]),
                      (i = S.move(x, v)),
                      (a = S.move(x, this.areaBottomY));
                    break;
                  }
              } else
                (i = S.move(x, v)),
                  l === 'rangeArea' && (i = S.move(x, b) + S.line(x, v)),
                  (a = S.move(x, this.areaBottomY) + S.line(x, v));
              if (
                ((s = S.move(-1, this.zeroY) + S.line(-1, this.zeroY)),
                (o = S.move(-1, this.zeroY) + S.line(-1, this.zeroY)),
                C.globals.previousPaths.length > 0)
              ) {
                var N = this.lineHelpers.checkPreviousPaths({
                  pathFromLine: s,
                  pathFromArea: o,
                  realIndex: p,
                });
                (s = N.pathFromLine), (o = N.pathFromArea);
              }
              return {
                prevX: x,
                prevY: v,
                linePath: i,
                areaPath: a,
                pathFromLine: s,
                pathFromArea: o,
              };
            },
          },
          {
            key: '_handlePaths',
            value: function (t) {
              var i = t.type,
                a = t.realIndex,
                s = t.i,
                o = t.paths,
                l = this.w,
                d = new W(this.ctx),
                u = new je(this.ctx);
              this.prevSeriesY.push(o.yArrj),
                (l.globals.seriesXvalues[a] = o.xArrj),
                (l.globals.seriesYvalues[a] = o.yArrj);
              var p = l.config.forecastDataPoints;
              if (p.count > 0 && i !== 'rangeArea') {
                var x =
                    l.globals.seriesXvalues[a][
                      l.globals.seriesXvalues[a].length - p.count - 1
                    ],
                  v = d.drawRect(
                    x,
                    0,
                    l.globals.gridWidth,
                    l.globals.gridHeight,
                    0
                  );
                l.globals.dom.elForecastMask.appendChild(v.node);
                var b = d.drawRect(0, 0, x, l.globals.gridHeight, 0);
                l.globals.dom.elNonForecastMask.appendChild(b.node);
              }
              this.pointsChart ||
                l.globals.delayedElements.push({
                  el: this.elPointsMain.node,
                  index: a,
                });
              var C = {
                i: s,
                realIndex: a,
                animationDelay: s,
                initialSpeed: l.config.chart.animations.speed,
                dataChangeSpeed:
                  l.config.chart.animations.dynamicAnimation.speed,
                className: 'apexcharts-'.concat(i),
              };
              if (i === 'area')
                for (
                  var S = u.fillPath({ seriesNumber: a }), L = 0;
                  L < o.areaPaths.length;
                  L++
                ) {
                  var N = d.renderPaths(
                    c(
                      c({}, C),
                      {},
                      {
                        pathFrom: o.pathFromArea,
                        pathTo: o.areaPaths[L],
                        stroke: 'none',
                        strokeWidth: 0,
                        strokeLineCap: null,
                        fill: S,
                      }
                    )
                  );
                  this.elSeries.add(N);
                }
              if (l.config.stroke.show && !this.pointsChart) {
                var T = null;
                if (i === 'line') T = u.fillPath({ seriesNumber: a, i: s });
                else if (l.config.stroke.fill.type === 'solid')
                  T = l.globals.stroke.colors[a];
                else {
                  var I = l.config.fill;
                  (l.config.fill = l.config.stroke.fill),
                    (T = u.fillPath({ seriesNumber: a, i: s })),
                    (l.config.fill = I);
                }
                for (var h = 0; h < o.linePaths.length; h++) {
                  var y = T;
                  i === 'rangeArea' && (y = u.fillPath({ seriesNumber: a }));
                  var A = c(
                      c({}, C),
                      {},
                      {
                        pathFrom: o.pathFromLine,
                        pathTo: o.linePaths[h],
                        stroke: T,
                        strokeWidth: this.strokeWidth,
                        strokeLineCap: l.config.stroke.lineCap,
                        fill: i === 'rangeArea' ? y : 'none',
                      }
                    ),
                    P = d.renderPaths(A);
                  if (
                    (this.elSeries.add(P),
                    P.attr('fill-rule', 'evenodd'),
                    p.count > 0 && i !== 'rangeArea')
                  ) {
                    var R = d.renderPaths(A);
                    R.node.setAttribute('stroke-dasharray', p.dashArray),
                      p.strokeWidth &&
                        R.node.setAttribute('stroke-width', p.strokeWidth),
                      this.elSeries.add(R),
                      R.attr(
                        'clip-path',
                        'url(#forecastMask'.concat(l.globals.cuid, ')')
                      ),
                      P.attr(
                        'clip-path',
                        'url(#nonForecastMask'.concat(l.globals.cuid, ')')
                      );
                  }
                }
              }
            },
          },
          {
            key: '_iterateOverDataPoints',
            value: function (t) {
              var i = t.type,
                a = t.series,
                s = t.iterations,
                o = t.realIndex,
                l = t.i,
                d = t.x,
                u = t.y,
                p = t.pX,
                x = t.pY,
                v = t.pathsFrom,
                b = t.linePaths,
                C = t.areaPaths,
                S = t.seriesIndex,
                L = t.lineYPosition,
                N = t.xArrj,
                T = t.yArrj,
                I = t.isRangeStart,
                h = t.seriesRangeEnd,
                y = this.w,
                A = new W(this.ctx),
                P = this.yRatio,
                R = v.prevY,
                O = v.linePath,
                X = v.areaPath,
                G = v.pathFromLine,
                q = v.pathFromArea,
                ie = E.isNumber(y.globals.minYArr[o])
                  ? y.globals.minYArr[o]
                  : y.globals.minY;
              s ||
                (s =
                  y.globals.dataPoints > 1
                    ? y.globals.dataPoints - 1
                    : y.globals.dataPoints);
              for (var re = u, se = 0; se < s; se++) {
                var me = a[l][se + 1] === void 0 || a[l][se + 1] === null;
                if (y.globals.isXNumeric) {
                  var Se = y.globals.seriesX[o][se + 1];
                  y.globals.seriesX[o][se + 1] === void 0 &&
                    (Se = y.globals.seriesX[o][s - 1]),
                    (d = (Se - y.globals.minX) / this.xRatio);
                } else d += this.xDivision;
                y.config.chart.stacked
                  ? l > 0 &&
                    y.globals.collapsedSeries.length <
                      y.config.series.length - 1
                    ? (L =
                        this.prevSeriesY[
                          (function (Ze) {
                            for (
                              var Ye = Ze, et = 0;
                              et < y.globals.series.length;
                              et++
                            )
                              if (
                                y.globals.collapsedSeriesIndices.indexOf(Ze) >
                                -1
                              ) {
                                Ye--;
                                break;
                              }
                            return Ye >= 0 ? Ye : 0;
                          })(l - 1)
                        ][se + 1])
                    : (L = this.zeroY)
                  : (L = this.zeroY),
                  me
                    ? (u =
                        L -
                        ie / P[this.yaxisIndex] +
                        2 * (this.isReversed ? ie / P[this.yaxisIndex] : 0))
                    : ((u =
                        L -
                        a[l][se + 1] / P[this.yaxisIndex] +
                        2 *
                          (this.isReversed
                            ? a[l][se + 1] / P[this.yaxisIndex]
                            : 0)),
                      i === 'rangeArea' &&
                        (re =
                          L -
                          h[l][se + 1] / P[this.yaxisIndex] +
                          2 *
                            (this.isReversed
                              ? h[l][se + 1] / P[this.yaxisIndex]
                              : 0))),
                  N.push(d),
                  T.push(u);
                var Ae = this.lineHelpers.calculatePoints({
                    series: a,
                    x: d,
                    y: u,
                    realIndex: o,
                    i: l,
                    j: se,
                    prevY: R,
                  }),
                  Ne = this._createPaths({
                    type: i,
                    series: a,
                    i: l,
                    realIndex: o,
                    j: se,
                    x: d,
                    y: u,
                    y2: re,
                    pX: p,
                    pY: x,
                    linePath: O,
                    areaPath: X,
                    linePaths: b,
                    areaPaths: C,
                    seriesIndex: S,
                    isRangeStart: I,
                  });
                (C = Ne.areaPaths),
                  (b = Ne.linePaths),
                  (p = Ne.pX),
                  (x = Ne.pY),
                  (X = Ne.areaPath),
                  (O = Ne.linePath),
                  this.appendPathFrom &&
                    ((G += A.line(d, this.zeroY)),
                    (q += A.line(d, this.zeroY))),
                  this.handleNullDataPoints(a, Ae, l, se, o),
                  this._handleMarkersAndLabels({
                    type: i,
                    pointsPos: Ae,
                    i: l,
                    j: se,
                    realIndex: o,
                    isRangeStart: I,
                  });
              }
              return {
                yArrj: T,
                xArrj: N,
                pathFromArea: q,
                areaPaths: C,
                pathFromLine: G,
                linePaths: b,
                linePath: O,
                areaPath: X,
              };
            },
          },
          {
            key: '_handleMarkersAndLabels',
            value: function (t) {
              var i = t.type,
                a = t.pointsPos,
                s = t.isRangeStart,
                o = t.i,
                l = t.j,
                d = t.realIndex,
                u = this.w,
                p = new dt(this.ctx);
              if (this.pointsChart)
                this.scatter.draw(this.elSeries, l, {
                  realIndex: d,
                  pointsPos: a,
                  zRatio: this.zRatio,
                  elParent: this.elPointsMain,
                });
              else {
                u.globals.series[o].length > 1 &&
                  this.elPointsMain.node.classList.add(
                    'apexcharts-element-hidden'
                  );
                var x = this.markers.plotChartMarkers(a, d, l + 1);
                x !== null && this.elPointsMain.add(x);
              }
              var v = p.drawDataLabel({
                type: i,
                isRangeStart: s,
                pos: a,
                i: d,
                j: l + 1,
              });
              v !== null && this.elDataLabelsWrap.add(v);
            },
          },
          {
            key: '_createPaths',
            value: function (t) {
              var i = t.type,
                a = t.series,
                s = t.i,
                o = t.realIndex,
                l = t.j,
                d = t.x,
                u = t.y,
                p = t.y2,
                x = t.pX,
                v = t.pY,
                b = t.linePath,
                C = t.areaPath,
                S = t.linePaths,
                L = t.areaPaths,
                N = t.seriesIndex,
                T = t.isRangeStart,
                I = this.w,
                h = new W(this.ctx),
                y = I.config.stroke.curve,
                A = this.areaBottomY;
              if (
                (Array.isArray(I.config.stroke.curve) &&
                  (y = Array.isArray(N)
                    ? I.config.stroke.curve[N[s]]
                    : I.config.stroke.curve[s]),
                y === 'smooth')
              ) {
                var P = 0.35 * (d - x);
                I.globals.hasNullValues
                  ? (a[s][l] !== null &&
                      (a[s][l + 1] !== null
                        ? ((b =
                            h.move(x, v) +
                            h.curve(x + P, v, d - P, u, d + 1, u)),
                          (C =
                            h.move(x + 1, v) +
                            h.curve(x + P, v, d - P, u, d + 1, u) +
                            h.line(d, A) +
                            h.line(x, A) +
                            'z'))
                        : ((b = h.move(x, v)), (C = h.move(x, v) + 'z'))),
                    S.push(b),
                    L.push(C))
                  : ((b += h.curve(x + P, v, d - P, u, d, u)),
                    (C += h.curve(x + P, v, d - P, u, d, u))),
                  (x = d),
                  (v = u),
                  l === a[s].length - 2 &&
                    ((C = C + h.curve(x, v, d, u, d, A) + h.move(d, u) + 'z'),
                    i === 'rangeArea' && T
                      ? (b = b + h.curve(x, v, d, u, d, p) + h.move(d, p) + 'z')
                      : I.globals.hasNullValues || (S.push(b), L.push(C)));
              } else {
                if (a[s][l + 1] === null) {
                  b += h.move(d, u);
                  var R = I.globals.isXNumeric
                    ? (I.globals.seriesX[o][l] - I.globals.minX) / this.xRatio
                    : d - this.xDivision;
                  C = C + h.line(R, A) + h.move(d, u) + 'z';
                }
                a[s][l] === null && ((b += h.move(d, u)), (C += h.move(d, A))),
                  y === 'stepline'
                    ? ((b = b + h.line(d, null, 'H') + h.line(null, u, 'V')),
                      (C = C + h.line(d, null, 'H') + h.line(null, u, 'V')))
                    : y === 'straight' &&
                      ((b += h.line(d, u)), (C += h.line(d, u))),
                  l === a[s].length - 2 &&
                    ((C = C + h.line(d, A) + h.move(d, u) + 'z'),
                    i === 'rangeArea' && T
                      ? (b = b + h.line(d, p) + h.move(d, p) + 'z')
                      : (S.push(b), L.push(C)));
              }
              return {
                linePaths: S,
                areaPaths: L,
                pX: x,
                pY: v,
                linePath: b,
                areaPath: C,
              };
            },
          },
          {
            key: 'handleNullDataPoints',
            value: function (t, i, a, s, o) {
              var l = this.w;
              if (
                (t[a][s] === null && l.config.markers.showNullDataPoints) ||
                t[a].length === 1
              ) {
                var d = this.markers.plotChartMarkers(
                  i,
                  o,
                  s + 1,
                  this.strokeWidth - l.config.markers.strokeWidth / 2,
                  !0
                );
                d !== null && this.elPointsMain.add(d);
              }
            },
          },
        ]),
        j
      );
    })();
  (window.TreemapSquared = {}),
    (window.TreemapSquared.generate = (function () {
      function j(d, u, p, x) {
        (this.xoffset = d),
          (this.yoffset = u),
          (this.height = x),
          (this.width = p),
          (this.shortestEdge = function () {
            return Math.min(this.height, this.width);
          }),
          (this.getCoordinates = function (v) {
            var b,
              C = [],
              S = this.xoffset,
              L = this.yoffset,
              N = o(v) / this.height,
              T = o(v) / this.width;
            if (this.width >= this.height)
              for (b = 0; b < v.length; b++)
                C.push([S, L, S + N, L + v[b] / N]), (L += v[b] / N);
            else
              for (b = 0; b < v.length; b++)
                C.push([S, L, S + v[b] / T, L + T]), (S += v[b] / T);
            return C;
          }),
          (this.cutArea = function (v) {
            var b;
            if (this.width >= this.height) {
              var C = v / this.height,
                S = this.width - C;
              b = new j(this.xoffset + C, this.yoffset, S, this.height);
            } else {
              var L = v / this.width,
                N = this.height - L;
              b = new j(this.xoffset, this.yoffset + L, this.width, N);
            }
            return b;
          });
      }
      function t(d, u, p, x, v) {
        (x = x === void 0 ? 0 : x), (v = v === void 0 ? 0 : v);
        var b = i(
          (function (C, S) {
            var L,
              N = [],
              T = S / o(C);
            for (L = 0; L < C.length; L++) N[L] = C[L] * T;
            return N;
          })(d, u * p),
          [],
          new j(x, v, u, p),
          []
        );
        return (function (C) {
          var S,
            L,
            N = [];
          for (S = 0; S < C.length; S++)
            for (L = 0; L < C[S].length; L++) N.push(C[S][L]);
          return N;
        })(b);
      }
      function i(d, u, p, x) {
        var v, b, C;
        if (d.length !== 0)
          return (
            (v = p.shortestEdge()),
            (function (S, L, N) {
              var T;
              if (S.length === 0) return !0;
              (T = S.slice()).push(L);
              var I = a(S, N),
                h = a(T, N);
              return I >= h;
            })(u, (b = d[0]), v)
              ? (u.push(b), i(d.slice(1), u, p, x))
              : ((C = p.cutArea(o(u), x)),
                x.push(p.getCoordinates(u)),
                i(d, [], C, x)),
            x
          );
        x.push(p.getCoordinates(u));
      }
      function a(d, u) {
        var p = Math.min.apply(Math, d),
          x = Math.max.apply(Math, d),
          v = o(d);
        return Math.max(
          (Math.pow(u, 2) * x) / Math.pow(v, 2),
          Math.pow(v, 2) / (Math.pow(u, 2) * p)
        );
      }
      function s(d) {
        return d && d.constructor === Array;
      }
      function o(d) {
        var u,
          p = 0;
        for (u = 0; u < d.length; u++) p += d[u];
        return p;
      }
      function l(d) {
        var u,
          p = 0;
        if (s(d[0])) for (u = 0; u < d.length; u++) p += l(d[u]);
        else p = o(d);
        return p;
      }
      return function d(u, p, x, v, b) {
        (v = v === void 0 ? 0 : v), (b = b === void 0 ? 0 : b);
        var C,
          S,
          L = [],
          N = [];
        if (s(u[0])) {
          for (S = 0; S < u.length; S++) L[S] = l(u[S]);
          for (C = t(L, p, x, v, b), S = 0; S < u.length; S++)
            N.push(
              d(u[S], C[S][2] - C[S][0], C[S][3] - C[S][1], C[S][0], C[S][1])
            );
        } else N = t(u, p, x, v, b);
        return N;
      };
    })());
  var be,
    fe,
    ve = (function () {
      function j(t, i) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.strokeWidth = this.w.config.stroke.width),
          (this.helpers = new Da(t)),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.labels = []);
      }
      return (
        k(j, [
          {
            key: 'draw',
            value: function (t) {
              var i = this,
                a = this.w,
                s = new W(this.ctx),
                o = new je(this.ctx),
                l = s.group({ class: 'apexcharts-treemap' });
              if (a.globals.noData) return l;
              var d = [];
              return (
                t.forEach(function (u) {
                  var p = u.map(function (x) {
                    return Math.abs(x);
                  });
                  d.push(p);
                }),
                (this.negRange = this.helpers.checkColorRange()),
                a.config.series.forEach(function (u, p) {
                  u.data.forEach(function (x) {
                    Array.isArray(i.labels[p]) || (i.labels[p] = []),
                      i.labels[p].push(x.x);
                  });
                }),
                window.TreemapSquared.generate(
                  d,
                  a.globals.gridWidth,
                  a.globals.gridHeight
                ).forEach(function (u, p) {
                  var x = s.group({
                    class: 'apexcharts-series apexcharts-treemap-series',
                    seriesName: E.escapeString(a.globals.seriesNames[p]),
                    rel: p + 1,
                    'data:realIndex': p,
                  });
                  if (a.config.chart.dropShadow.enabled) {
                    var v = a.config.chart.dropShadow;
                    new Q(i.ctx).dropShadow(l, v, p);
                  }
                  var b = s.group({ class: 'apexcharts-data-labels' });
                  u.forEach(function (C, S) {
                    var L = C[0],
                      N = C[1],
                      T = C[2],
                      I = C[3],
                      h = s.drawRect(
                        L,
                        N,
                        T - L,
                        I - N,
                        0,
                        '#fff',
                        1,
                        i.strokeWidth,
                        a.config.plotOptions.treemap.useFillColorAsStroke
                          ? A
                          : a.globals.stroke.colors[p]
                      );
                    h.attr({
                      cx: L,
                      cy: N,
                      index: p,
                      i: p,
                      j: S,
                      width: T - L,
                      height: I - N,
                    });
                    var y = i.helpers.getShadeColor(
                        a.config.chart.type,
                        p,
                        S,
                        i.negRange
                      ),
                      A = y.color;
                    a.config.series[p].data[S] !== void 0 &&
                      a.config.series[p].data[S].fillColor &&
                      (A = a.config.series[p].data[S].fillColor);
                    var P = o.fillPath({
                      color: A,
                      seriesNumber: p,
                      dataPointIndex: S,
                    });
                    h.node.classList.add('apexcharts-treemap-rect'),
                      h.attr({ fill: P }),
                      i.helpers.addListeners(h);
                    var R = {
                        x: L + (T - L) / 2,
                        y: N + (I - N) / 2,
                        width: 0,
                        height: 0,
                      },
                      O = { x: L, y: N, width: T - L, height: I - N };
                    if (
                      a.config.chart.animations.enabled &&
                      !a.globals.dataChanged
                    ) {
                      var X = 1;
                      a.globals.resized ||
                        (X = a.config.chart.animations.speed),
                        i.animateTreemap(h, R, O, X);
                    }
                    if (a.globals.dataChanged) {
                      var G = 1;
                      i.dynamicAnim.enabled &&
                        a.globals.shouldAnimate &&
                        ((G = i.dynamicAnim.speed),
                        a.globals.previousPaths[p] &&
                          a.globals.previousPaths[p][S] &&
                          a.globals.previousPaths[p][S].rect &&
                          (R = a.globals.previousPaths[p][S].rect),
                        i.animateTreemap(h, R, O, G));
                    }
                    var q = i.getFontSize(C),
                      ie = a.config.dataLabels.formatter(i.labels[p][S], {
                        value: a.globals.series[p][S],
                        seriesIndex: p,
                        dataPointIndex: S,
                        w: a,
                      }),
                      re = i.helpers.calculateDataLabels({
                        text: ie,
                        x: (L + T) / 2,
                        y: (N + I) / 2 + i.strokeWidth / 2 + q / 3,
                        i: p,
                        j: S,
                        colorProps: y,
                        fontSize: q,
                        series: t,
                      });
                    a.config.dataLabels.enabled &&
                      re &&
                      i.rotateToFitLabel(re, q, ie, L, N, T, I),
                      x.add(h),
                      re !== null && x.add(re);
                  }),
                    x.add(b),
                    l.add(x);
                }),
                l
              );
            },
          },
          {
            key: 'getFontSize',
            value: function (t) {
              var i = this.w,
                a,
                s,
                o,
                l,
                d =
                  (function u(p) {
                    var x,
                      v = 0;
                    if (Array.isArray(p[0]))
                      for (x = 0; x < p.length; x++) v += u(p[x]);
                    else for (x = 0; x < p.length; x++) v += p[x].length;
                    return v;
                  })(this.labels) /
                  (function u(p) {
                    var x,
                      v = 0;
                    if (Array.isArray(p[0]))
                      for (x = 0; x < p.length; x++) v += u(p[x]);
                    else for (x = 0; x < p.length; x++) v += 1;
                    return v;
                  })(this.labels);
              return (
                (a = t[2] - t[0]),
                (s = t[3] - t[1]),
                (o = a * s),
                (l = Math.pow(o, 0.5)),
                Math.min(
                  l / d,
                  parseInt(i.config.dataLabels.style.fontSize, 10)
                )
              );
            },
          },
          {
            key: 'rotateToFitLabel',
            value: function (t, i, a, s, o, l, d) {
              var u = new W(this.ctx),
                p = u.getTextRects(a, i);
              if (
                p.width + this.w.config.stroke.width + 5 > l - s &&
                p.width <= d - o
              ) {
                var x = u.rotateAroundCenter(t.node);
                t.node.setAttribute(
                  'transform',
                  'rotate(-90 '.concat(x.x, ' ').concat(x.y, ')')
                );
              }
            },
          },
          {
            key: 'animateTreemap',
            value: function (t, i, a, s) {
              var o = new _(this.ctx);
              o.animateRect(
                t,
                { x: i.x, y: i.y, width: i.width, height: i.height },
                { x: a.x, y: a.y, width: a.width, height: a.height },
                s,
                function () {
                  o.animationCompleted(t);
                }
              );
            },
          },
        ]),
        j
      );
    })(),
    De = 86400,
    Ut = (function () {
      function j(t) {
        g(this, j),
          (this.ctx = t),
          (this.w = t.w),
          (this.timeScaleArray = []),
          (this.utc = this.w.config.xaxis.labels.datetimeUTC);
      }
      return (
        k(j, [
          {
            key: 'calculateTimeScaleTicks',
            value: function (t, i) {
              var a = this,
                s = this.w;
              if (s.globals.allSeriesCollapsed)
                return (
                  (s.globals.labels = []), (s.globals.timescaleLabels = []), []
                );
              var o = new Ge(this.ctx),
                l = (i - t) / 864e5;
              this.determineInterval(l),
                (s.globals.disableZoomIn = !1),
                (s.globals.disableZoomOut = !1),
                l < 0.00011574074074074075
                  ? (s.globals.disableZoomIn = !0)
                  : l > 5e4 && (s.globals.disableZoomOut = !0);
              var d = o.getTimeUnitsfromTimestamp(t, i, this.utc),
                u = s.globals.gridWidth / l,
                p = u / 24,
                x = p / 60,
                v = x / 60,
                b = Math.floor(24 * l),
                C = Math.floor(1440 * l),
                S = Math.floor(l * De),
                L = Math.floor(l),
                N = Math.floor(l / 30),
                T = Math.floor(l / 365),
                I = {
                  minMillisecond: d.minMillisecond,
                  minSecond: d.minSecond,
                  minMinute: d.minMinute,
                  minHour: d.minHour,
                  minDate: d.minDate,
                  minMonth: d.minMonth,
                  minYear: d.minYear,
                },
                h = {
                  firstVal: I,
                  currentMillisecond: I.minMillisecond,
                  currentSecond: I.minSecond,
                  currentMinute: I.minMinute,
                  currentHour: I.minHour,
                  currentMonthDate: I.minDate,
                  currentDate: I.minDate,
                  currentMonth: I.minMonth,
                  currentYear: I.minYear,
                  daysWidthOnXAxis: u,
                  hoursWidthOnXAxis: p,
                  minutesWidthOnXAxis: x,
                  secondsWidthOnXAxis: v,
                  numberOfSeconds: S,
                  numberOfMinutes: C,
                  numberOfHours: b,
                  numberOfDays: L,
                  numberOfMonths: N,
                  numberOfYears: T,
                };
              switch (this.tickInterval) {
                case 'years':
                  this.generateYearScale(h);
                  break;
                case 'months':
                case 'half_year':
                  this.generateMonthScale(h);
                  break;
                case 'months_days':
                case 'months_fortnight':
                case 'days':
                case 'week_days':
                  this.generateDayScale(h);
                  break;
                case 'hours':
                  this.generateHourScale(h);
                  break;
                case 'minutes_fives':
                case 'minutes':
                  this.generateMinuteScale(h);
                  break;
                case 'seconds_tens':
                case 'seconds_fives':
                case 'seconds':
                  this.generateSecondScale(h);
              }
              var y = this.timeScaleArray.map(function (A) {
                var P = {
                  position: A.position,
                  unit: A.unit,
                  year: A.year,
                  day: A.day ? A.day : 1,
                  hour: A.hour ? A.hour : 0,
                  month: A.month + 1,
                };
                return A.unit === 'month'
                  ? c(c({}, P), {}, { day: 1, value: A.value + 1 })
                  : A.unit === 'day' || A.unit === 'hour'
                  ? c(c({}, P), {}, { value: A.value })
                  : A.unit === 'minute'
                  ? c(c({}, P), {}, { value: A.value, minute: A.value })
                  : A.unit === 'second'
                  ? c(
                      c({}, P),
                      {},
                      { value: A.value, minute: A.minute, second: A.second }
                    )
                  : A;
              });
              return y.filter(function (A) {
                var P = 1,
                  R = Math.ceil(s.globals.gridWidth / 120),
                  O = A.value;
                s.config.xaxis.tickAmount !== void 0 &&
                  (R = s.config.xaxis.tickAmount),
                  y.length > R && (P = Math.floor(y.length / R));
                var X = !1,
                  G = !1;
                switch (a.tickInterval) {
                  case 'years':
                    A.unit === 'year' && (X = !0);
                    break;
                  case 'half_year':
                    (P = 7), A.unit === 'year' && (X = !0);
                    break;
                  case 'months':
                    (P = 1), A.unit === 'year' && (X = !0);
                    break;
                  case 'months_fortnight':
                    (P = 15),
                      (A.unit !== 'year' && A.unit !== 'month') || (X = !0),
                      O === 30 && (G = !0);
                    break;
                  case 'months_days':
                    (P = 10),
                      A.unit === 'month' && (X = !0),
                      O === 30 && (G = !0);
                    break;
                  case 'week_days':
                    (P = 8), A.unit === 'month' && (X = !0);
                    break;
                  case 'days':
                    (P = 1), A.unit === 'month' && (X = !0);
                    break;
                  case 'hours':
                    A.unit === 'day' && (X = !0);
                    break;
                  case 'minutes_fives':
                  case 'seconds_fives':
                    O % 5 != 0 && (G = !0);
                    break;
                  case 'seconds_tens':
                    O % 10 != 0 && (G = !0);
                }
                if (
                  a.tickInterval === 'hours' ||
                  a.tickInterval === 'minutes_fives' ||
                  a.tickInterval === 'seconds_tens' ||
                  a.tickInterval === 'seconds_fives'
                ) {
                  if (!G) return !0;
                } else if ((O % P == 0 || X) && !G) return !0;
              });
            },
          },
          {
            key: 'recalcDimensionsBasedOnFormat',
            value: function (t, i) {
              var a = this.w,
                s = this.formatDates(t),
                o = this.removeOverlappingTS(s);
              (a.globals.timescaleLabels = o.slice()),
                new Tr(this.ctx).plotCoords();
            },
          },
          {
            key: 'determineInterval',
            value: function (t) {
              var i = 24 * t,
                a = 60 * i;
              switch (!0) {
                case t / 365 > 5:
                  this.tickInterval = 'years';
                  break;
                case t > 800:
                  this.tickInterval = 'half_year';
                  break;
                case t > 180:
                  this.tickInterval = 'months';
                  break;
                case t > 90:
                  this.tickInterval = 'months_fortnight';
                  break;
                case t > 60:
                  this.tickInterval = 'months_days';
                  break;
                case t > 30:
                  this.tickInterval = 'week_days';
                  break;
                case t > 2:
                  this.tickInterval = 'days';
                  break;
                case i > 2.4:
                  this.tickInterval = 'hours';
                  break;
                case a > 15:
                  this.tickInterval = 'minutes_fives';
                  break;
                case a > 5:
                  this.tickInterval = 'minutes';
                  break;
                case a > 1:
                  this.tickInterval = 'seconds_tens';
                  break;
                case 60 * a > 20:
                  this.tickInterval = 'seconds_fives';
                  break;
                default:
                  this.tickInterval = 'seconds';
              }
            },
          },
          {
            key: 'generateYearScale',
            value: function (t) {
              var i = t.firstVal,
                a = t.currentMonth,
                s = t.currentYear,
                o = t.daysWidthOnXAxis,
                l = t.numberOfYears,
                d = i.minYear,
                u = 0,
                p = new Ge(this.ctx),
                x = 'year';
              if (i.minDate > 1 || i.minMonth > 0) {
                var v = p.determineRemainingDaysOfYear(
                  i.minYear,
                  i.minMonth,
                  i.minDate
                );
                (u = (p.determineDaysOfYear(i.minYear) - v + 1) * o),
                  (d = i.minYear + 1),
                  this.timeScaleArray.push({
                    position: u,
                    value: d,
                    unit: x,
                    year: d,
                    month: E.monthMod(a + 1),
                  });
              } else
                i.minDate === 1 &&
                  i.minMonth === 0 &&
                  this.timeScaleArray.push({
                    position: u,
                    value: d,
                    unit: x,
                    year: s,
                    month: E.monthMod(a + 1),
                  });
              for (var b = d, C = u, S = 0; S < l; S++)
                b++,
                  (C = p.determineDaysOfYear(b - 1) * o + C),
                  this.timeScaleArray.push({
                    position: C,
                    value: b,
                    unit: x,
                    year: b,
                    month: 1,
                  });
            },
          },
          {
            key: 'generateMonthScale',
            value: function (t) {
              var i = t.firstVal,
                a = t.currentMonthDate,
                s = t.currentMonth,
                o = t.currentYear,
                l = t.daysWidthOnXAxis,
                d = t.numberOfMonths,
                u = s,
                p = 0,
                x = new Ge(this.ctx),
                v = 'month',
                b = 0;
              if (i.minDate > 1) {
                (p = (x.determineDaysOfMonths(s + 1, i.minYear) - a + 1) * l),
                  (u = E.monthMod(s + 1));
                var C = o + b,
                  S = E.monthMod(u),
                  L = u;
                u === 0 && ((v = 'year'), (L = C), (S = 1), (C += b += 1)),
                  this.timeScaleArray.push({
                    position: p,
                    value: L,
                    unit: v,
                    year: C,
                    month: S,
                  });
              } else
                this.timeScaleArray.push({
                  position: p,
                  value: u,
                  unit: v,
                  year: o,
                  month: E.monthMod(s),
                });
              for (var N = u + 1, T = p, I = 0, h = 1; I < d; I++, h++) {
                (N = E.monthMod(N)) === 0
                  ? ((v = 'year'), (b += 1))
                  : (v = 'month');
                var y = this._getYear(o, N, b);
                T = x.determineDaysOfMonths(N, y) * l + T;
                var A = N === 0 ? y : N;
                this.timeScaleArray.push({
                  position: T,
                  value: A,
                  unit: v,
                  year: y,
                  month: N === 0 ? 1 : N,
                }),
                  N++;
              }
            },
          },
          {
            key: 'generateDayScale',
            value: function (t) {
              var i = t.firstVal,
                a = t.currentMonth,
                s = t.currentYear,
                o = t.hoursWidthOnXAxis,
                l = t.numberOfDays,
                d = new Ge(this.ctx),
                u = 'day',
                p = i.minDate + 1,
                x = p,
                v = function (h, y, A) {
                  return (
                    h > d.determineDaysOfMonths(y + 1, A) &&
                      ((x = 1), (u = 'month'), (C = y += 1)),
                    y
                  );
                },
                b = (24 - i.minHour) * o,
                C = p,
                S = v(x, a, s);
              i.minHour === 0 && i.minDate === 1
                ? ((b = 0),
                  (C = E.monthMod(i.minMonth)),
                  (u = 'month'),
                  (x = i.minDate),
                  l++)
                : i.minDate !== 1 &&
                  i.minHour === 0 &&
                  i.minMinute === 0 &&
                  ((b = 0), (p = i.minDate), (C = p), (S = v((x = p), a, s))),
                this.timeScaleArray.push({
                  position: b,
                  value: C,
                  unit: u,
                  year: this._getYear(s, S, 0),
                  month: E.monthMod(S),
                  day: x,
                });
              for (var L = b, N = 0; N < l; N++) {
                (u = 'day'), (S = v((x += 1), S, this._getYear(s, S, 0)));
                var T = this._getYear(s, S, 0);
                L = 24 * o + L;
                var I = x === 1 ? E.monthMod(S) : x;
                this.timeScaleArray.push({
                  position: L,
                  value: I,
                  unit: u,
                  year: T,
                  month: E.monthMod(S),
                  day: I,
                });
              }
            },
          },
          {
            key: 'generateHourScale',
            value: function (t) {
              var i = t.firstVal,
                a = t.currentDate,
                s = t.currentMonth,
                o = t.currentYear,
                l = t.minutesWidthOnXAxis,
                d = t.numberOfHours,
                u = new Ge(this.ctx),
                p = 'hour',
                x = function (P, R) {
                  return (
                    P > u.determineDaysOfMonths(R + 1, o) &&
                      ((N = 1), (R += 1)),
                    { month: R, date: N }
                  );
                },
                v = function (P, R) {
                  return P > u.determineDaysOfMonths(R + 1, o) ? (R += 1) : R;
                },
                b = 60 - (i.minMinute + i.minSecond / 60),
                C = b * l,
                S = i.minHour + 1,
                L = S + 1;
              b === 60 && ((C = 0), (L = (S = i.minHour) + 1));
              var N = a,
                T = v(N, s);
              this.timeScaleArray.push({
                position: C,
                value: S,
                unit: p,
                day: N,
                hour: L,
                year: o,
                month: E.monthMod(T),
              });
              for (var I = C, h = 0; h < d; h++) {
                (p = 'hour'),
                  L >= 24 &&
                    ((L = 0),
                    (p = 'day'),
                    (T = x((N += 1), T).month),
                    (T = v(N, T)));
                var y = this._getYear(o, T, 0);
                I = 60 * l + I;
                var A = L === 0 ? N : L;
                this.timeScaleArray.push({
                  position: I,
                  value: A,
                  unit: p,
                  hour: L,
                  day: N,
                  year: y,
                  month: E.monthMod(T),
                }),
                  L++;
              }
            },
          },
          {
            key: 'generateMinuteScale',
            value: function (t) {
              for (
                var i = t.currentMillisecond,
                  a = t.currentSecond,
                  s = t.currentMinute,
                  o = t.currentHour,
                  l = t.currentDate,
                  d = t.currentMonth,
                  u = t.currentYear,
                  p = t.minutesWidthOnXAxis,
                  x = t.secondsWidthOnXAxis,
                  v = t.numberOfMinutes,
                  b = s + 1,
                  C = l,
                  S = d,
                  L = u,
                  N = o,
                  T = (60 - a - i / 1e3) * x,
                  I = 0;
                I < v;
                I++
              )
                b >= 60 && ((b = 0), (N += 1) === 24 && (N = 0)),
                  this.timeScaleArray.push({
                    position: T,
                    value: b,
                    unit: 'minute',
                    hour: N,
                    minute: b,
                    day: C,
                    year: this._getYear(L, S, 0),
                    month: E.monthMod(S),
                  }),
                  (T += p),
                  b++;
            },
          },
          {
            key: 'generateSecondScale',
            value: function (t) {
              for (
                var i = t.currentMillisecond,
                  a = t.currentSecond,
                  s = t.currentMinute,
                  o = t.currentHour,
                  l = t.currentDate,
                  d = t.currentMonth,
                  u = t.currentYear,
                  p = t.secondsWidthOnXAxis,
                  x = t.numberOfSeconds,
                  v = a + 1,
                  b = s,
                  C = l,
                  S = d,
                  L = u,
                  N = o,
                  T = ((1e3 - i) / 1e3) * p,
                  I = 0;
                I < x;
                I++
              )
                v >= 60 &&
                  ((v = 0), ++b >= 60 && ((b = 0), ++N === 24 && (N = 0))),
                  this.timeScaleArray.push({
                    position: T,
                    value: v,
                    unit: 'second',
                    hour: N,
                    minute: b,
                    second: v,
                    day: C,
                    year: this._getYear(L, S, 0),
                    month: E.monthMod(S),
                  }),
                  (T += p),
                  v++;
            },
          },
          {
            key: 'createRawDateString',
            value: function (t, i) {
              var a = t.year;
              return (
                t.month === 0 && (t.month = 1),
                (a += '-' + ('0' + t.month.toString()).slice(-2)),
                t.unit === 'day'
                  ? (a += t.unit === 'day' ? '-' + ('0' + i).slice(-2) : '-01')
                  : (a += '-' + ('0' + (t.day ? t.day : '1')).slice(-2)),
                t.unit === 'hour'
                  ? (a += t.unit === 'hour' ? 'T' + ('0' + i).slice(-2) : 'T00')
                  : (a += 'T' + ('0' + (t.hour ? t.hour : '0')).slice(-2)),
                t.unit === 'minute'
                  ? (a += ':' + ('0' + i).slice(-2))
                  : (a += ':' + (t.minute ? ('0' + t.minute).slice(-2) : '00')),
                t.unit === 'second'
                  ? (a += ':' + ('0' + i).slice(-2))
                  : (a += ':00'),
                this.utc && (a += '.000Z'),
                a
              );
            },
          },
          {
            key: 'formatDates',
            value: function (t) {
              var i = this,
                a = this.w;
              return t.map(function (s) {
                var o = s.value.toString(),
                  l = new Ge(i.ctx),
                  d = i.createRawDateString(s, o),
                  u = l.getDate(l.parseDate(d));
                if (
                  (i.utc || (u = l.getDate(l.parseDateWithTimezone(d))),
                  a.config.xaxis.labels.format === void 0)
                ) {
                  var p = 'dd MMM',
                    x = a.config.xaxis.labels.datetimeFormatter;
                  s.unit === 'year' && (p = x.year),
                    s.unit === 'month' && (p = x.month),
                    s.unit === 'day' && (p = x.day),
                    s.unit === 'hour' && (p = x.hour),
                    s.unit === 'minute' && (p = x.minute),
                    s.unit === 'second' && (p = x.second),
                    (o = l.formatDate(u, p));
                } else o = l.formatDate(u, a.config.xaxis.labels.format);
                return {
                  dateString: d,
                  position: s.position,
                  value: o,
                  unit: s.unit,
                  year: s.year,
                  month: s.month,
                };
              });
            },
          },
          {
            key: 'removeOverlappingTS',
            value: function (t) {
              var i,
                a = this,
                s = new W(this.ctx),
                o = !1;
              t.length > 0 &&
                t[0].value &&
                t.every(function (u) {
                  return u.value.length === t[0].value.length;
                }) &&
                ((o = !0), (i = s.getTextRects(t[0].value).width));
              var l = 0,
                d = t.map(function (u, p) {
                  if (p > 0 && a.w.config.xaxis.labels.hideOverlappingLabels) {
                    var x = o ? i : s.getTextRects(t[l].value).width,
                      v = t[l].position;
                    return u.position > v + x + 10 ? ((l = p), u) : null;
                  }
                  return u;
                });
              return (d = d.filter(function (u) {
                return u !== null;
              }));
            },
          },
          {
            key: '_getYear',
            value: function (t, i, a) {
              return t + Math.floor(i / 12) + a;
            },
          },
        ]),
        j
      );
    })(),
    vt = (function () {
      function j(t, i) {
        g(this, j), (this.ctx = i), (this.w = i.w), (this.el = t);
      }
      return (
        k(j, [
          {
            key: 'setupElements',
            value: function () {
              var t = this.w.globals,
                i = this.w.config,
                a = i.chart.type;
              (t.axisCharts =
                [
                  'line',
                  'area',
                  'bar',
                  'rangeBar',
                  'rangeArea',
                  'candlestick',
                  'boxPlot',
                  'scatter',
                  'bubble',
                  'radar',
                  'heatmap',
                  'treemap',
                ].indexOf(a) > -1),
                (t.xyCharts =
                  [
                    'line',
                    'area',
                    'bar',
                    'rangeBar',
                    'rangeArea',
                    'candlestick',
                    'boxPlot',
                    'scatter',
                    'bubble',
                  ].indexOf(a) > -1),
                (t.isBarHorizontal =
                  (i.chart.type === 'bar' ||
                    i.chart.type === 'rangeBar' ||
                    i.chart.type === 'boxPlot') &&
                  i.plotOptions.bar.horizontal),
                (t.chartClass = '.apexcharts' + t.chartID),
                (t.dom.baseEl = this.el),
                (t.dom.elWrap = document.createElement('div')),
                W.setAttrs(t.dom.elWrap, {
                  id: t.chartClass.substring(1),
                  class: 'apexcharts-canvas ' + t.chartClass.substring(1),
                }),
                this.el.appendChild(t.dom.elWrap),
                (t.dom.Paper = new window.SVG.Doc(t.dom.elWrap)),
                t.dom.Paper.attr({
                  class: 'apexcharts-svg',
                  'xmlns:data': 'ApexChartsNS',
                  transform: 'translate('
                    .concat(i.chart.offsetX, ', ')
                    .concat(i.chart.offsetY, ')'),
                }),
                (t.dom.Paper.node.style.background = i.chart.background),
                this.setSVGDimensions(),
                (t.dom.elLegendForeign = document.createElementNS(
                  t.SVGNS,
                  'foreignObject'
                )),
                W.setAttrs(t.dom.elLegendForeign, {
                  x: 0,
                  y: 0,
                  width: t.svgWidth,
                  height: t.svgHeight,
                }),
                (t.dom.elLegendWrap = document.createElement('div')),
                t.dom.elLegendWrap.classList.add('apexcharts-legend'),
                t.dom.elLegendWrap.setAttribute(
                  'xmlns',
                  'http://www.w3.org/1999/xhtml'
                ),
                t.dom.elLegendForeign.appendChild(t.dom.elLegendWrap),
                t.dom.Paper.node.appendChild(t.dom.elLegendForeign),
                (t.dom.elGraphical = t.dom.Paper.group().attr({
                  class: 'apexcharts-inner apexcharts-graphical',
                })),
                (t.dom.elDefs = t.dom.Paper.defs()),
                t.dom.Paper.add(t.dom.elGraphical),
                t.dom.elGraphical.add(t.dom.elDefs);
            },
          },
          {
            key: 'plotChartType',
            value: function (t, i) {
              var a = this.w,
                s = a.config,
                o = a.globals,
                l = { series: [], i: [] },
                d = { series: [], i: [] },
                u = { series: [], i: [] },
                p = { series: [], i: [] },
                x = { series: [], i: [] },
                v = { series: [], i: [] },
                b = { series: [], i: [] },
                C = { series: [], i: [] },
                S = { series: [], seriesRangeEnd: [], i: [] };
              o.series.map(function (R, O) {
                var X = 0;
                t[O].type !== void 0
                  ? (t[O].type === 'column' || t[O].type === 'bar'
                      ? (o.series.length > 1 &&
                          s.plotOptions.bar.horizontal &&
                          console.warn(
                            'Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`'
                          ),
                        x.series.push(R),
                        x.i.push(O),
                        X++,
                        (a.globals.columnSeries = x.series))
                      : t[O].type === 'area'
                      ? (d.series.push(R), d.i.push(O), X++)
                      : t[O].type === 'line'
                      ? (l.series.push(R), l.i.push(O), X++)
                      : t[O].type === 'scatter'
                      ? (u.series.push(R), u.i.push(O))
                      : t[O].type === 'bubble'
                      ? (p.series.push(R), p.i.push(O), X++)
                      : t[O].type === 'candlestick'
                      ? (v.series.push(R), v.i.push(O), X++)
                      : t[O].type === 'boxPlot'
                      ? (b.series.push(R), b.i.push(O), X++)
                      : t[O].type === 'rangeBar'
                      ? (C.series.push(R), C.i.push(O), X++)
                      : t[O].type === 'rangeArea'
                      ? (S.series.push(o.seriesRangeStart[O]),
                        S.seriesRangeEnd.push(o.seriesRangeEnd[O]),
                        S.i.push(O),
                        X++)
                      : console.warn(
                          'You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea'
                        ),
                    X > 1 && (o.comboCharts = !0))
                  : (l.series.push(R), l.i.push(O));
              });
              var L = new ge(this.ctx, i),
                N = new kn(this.ctx, i);
              this.ctx.pie = new $(this.ctx);
              var T = new le(this.ctx);
              this.ctx.rangeBar = new ue(this.ctx, i);
              var I = new te(this.ctx),
                h = [];
              if (o.comboCharts) {
                if (
                  (d.series.length > 0 && h.push(L.draw(d.series, 'area', d.i)),
                  x.series.length > 0)
                )
                  if (a.config.chart.stacked) {
                    var y = new Gt(this.ctx, i);
                    h.push(y.draw(x.series, x.i));
                  } else
                    (this.ctx.bar = new pi(this.ctx, i)),
                      h.push(this.ctx.bar.draw(x.series, x.i));
                if (
                  (S.series.length > 0 &&
                    h.push(
                      L.draw(S.series, 'rangeArea', S.i, S.seriesRangeEnd)
                    ),
                  l.series.length > 0 && h.push(L.draw(l.series, 'line', l.i)),
                  v.series.length > 0 &&
                    h.push(N.draw(v.series, 'candlestick', v.i)),
                  b.series.length > 0 &&
                    h.push(N.draw(b.series, 'boxPlot', b.i)),
                  C.series.length > 0 &&
                    h.push(this.ctx.rangeBar.draw(C.series, C.i)),
                  u.series.length > 0)
                ) {
                  var A = new ge(this.ctx, i, !0);
                  h.push(A.draw(u.series, 'scatter', u.i));
                }
                if (p.series.length > 0) {
                  var P = new ge(this.ctx, i, !0);
                  h.push(P.draw(p.series, 'bubble', p.i));
                }
              } else
                switch (s.chart.type) {
                  case 'line':
                    h = L.draw(o.series, 'line');
                    break;
                  case 'area':
                    h = L.draw(o.series, 'area');
                    break;
                  case 'bar':
                    s.chart.stacked
                      ? (h = new Gt(this.ctx, i).draw(o.series))
                      : ((this.ctx.bar = new pi(this.ctx, i)),
                        (h = this.ctx.bar.draw(o.series)));
                    break;
                  case 'candlestick':
                    h = new kn(this.ctx, i).draw(o.series, 'candlestick');
                    break;
                  case 'boxPlot':
                    h = new kn(this.ctx, i).draw(o.series, s.chart.type);
                    break;
                  case 'rangeBar':
                    h = this.ctx.rangeBar.draw(o.series);
                    break;
                  case 'rangeArea':
                    h = L.draw(
                      o.seriesRangeStart,
                      'rangeArea',
                      void 0,
                      o.seriesRangeEnd
                    );
                    break;
                  case 'heatmap':
                    h = new F(this.ctx, i).draw(o.series);
                    break;
                  case 'treemap':
                    h = new ve(this.ctx, i).draw(o.series);
                    break;
                  case 'pie':
                  case 'donut':
                  case 'polarArea':
                    h = this.ctx.pie.draw(o.series);
                    break;
                  case 'radialBar':
                    h = T.draw(o.series);
                    break;
                  case 'radar':
                    h = I.draw(o.series);
                    break;
                  default:
                    h = L.draw(o.series);
                }
              return h;
            },
          },
          {
            key: 'setSVGDimensions',
            value: function () {
              var t = this.w.globals,
                i = this.w.config;
              (t.svgWidth = i.chart.width), (t.svgHeight = i.chart.height);
              var a = E.getDimensions(this.el),
                s = i.chart.width
                  .toString()
                  .split(/[0-9]+/g)
                  .pop();
              s === '%'
                ? E.isNumber(a[0]) &&
                  (a[0].width === 0 &&
                    (a = E.getDimensions(this.el.parentNode)),
                  (t.svgWidth = (a[0] * parseInt(i.chart.width, 10)) / 100))
                : (s !== 'px' && s !== '') ||
                  (t.svgWidth = parseInt(i.chart.width, 10));
              var o = i.chart.height
                .toString()
                .split(/[0-9]+/g)
                .pop();
              if (t.svgHeight !== 'auto' && t.svgHeight !== '')
                if (o === '%') {
                  var l = E.getDimensions(this.el.parentNode);
                  t.svgHeight = (l[1] * parseInt(i.chart.height, 10)) / 100;
                } else t.svgHeight = parseInt(i.chart.height, 10);
              else
                t.axisCharts
                  ? (t.svgHeight = t.svgWidth / 1.61)
                  : (t.svgHeight = t.svgWidth / 1.2);
              if (
                (t.svgWidth < 0 && (t.svgWidth = 0),
                t.svgHeight < 0 && (t.svgHeight = 0),
                W.setAttrs(t.dom.Paper.node, {
                  width: t.svgWidth,
                  height: t.svgHeight,
                }),
                o !== '%')
              ) {
                var d = i.chart.sparkline.enabled
                  ? 0
                  : t.axisCharts
                  ? i.chart.parentHeightOffset
                  : 0;
                t.dom.Paper.node.parentNode.parentNode.style.minHeight =
                  t.svgHeight + d + 'px';
              }
              (t.dom.elWrap.style.width = t.svgWidth + 'px'),
                (t.dom.elWrap.style.height = t.svgHeight + 'px');
            },
          },
          {
            key: 'shiftGraphPosition',
            value: function () {
              var t = this.w.globals,
                i = t.translateY,
                a = { transform: 'translate(' + t.translateX + ', ' + i + ')' };
              W.setAttrs(t.dom.elGraphical.node, a);
            },
          },
          {
            key: 'resizeNonAxisCharts',
            value: function () {
              var t = this.w,
                i = t.globals,
                a = 0,
                s = t.config.chart.sparkline.enabled ? 1 : 15;
              (s += t.config.grid.padding.bottom),
                (t.config.legend.position !== 'top' &&
                  t.config.legend.position !== 'bottom') ||
                  !t.config.legend.show ||
                  t.config.legend.floating ||
                  (a =
                    new ja(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
              var o = t.globals.dom.baseEl.querySelector(
                  '.apexcharts-radialbar, .apexcharts-pie'
                ),
                l = 2.05 * t.globals.radialSize;
              if (
                o &&
                !t.config.chart.sparkline.enabled &&
                t.config.plotOptions.radialBar.startAngle !== 0
              ) {
                var d = E.getBoundingClientRect(o);
                l = d.bottom;
                var u = d.bottom - d.top;
                l = Math.max(2.05 * t.globals.radialSize, u);
              }
              var p = l + i.translateY + a + s;
              i.dom.elLegendForeign &&
                i.dom.elLegendForeign.setAttribute('height', p),
                (t.config.chart.height &&
                  String(t.config.chart.height).indexOf('%') > 0) ||
                  ((i.dom.elWrap.style.height = p + 'px'),
                  W.setAttrs(i.dom.Paper.node, { height: p }),
                  (i.dom.Paper.node.parentNode.parentNode.style.minHeight =
                    p + 'px'));
            },
          },
          {
            key: 'coreCalculations',
            value: function () {
              new vn(this.ctx).init();
            },
          },
          {
            key: 'resetGlobals',
            value: function () {
              var t = this,
                i = function () {
                  return t.w.config.series.map(function (o) {
                    return [];
                  });
                },
                a = new we(),
                s = this.w.globals;
              a.initGlobalVars(s),
                (s.seriesXvalues = i()),
                (s.seriesYvalues = i());
            },
          },
          {
            key: 'isMultipleY',
            value: function () {
              if (
                this.w.config.yaxis.constructor === Array &&
                this.w.config.yaxis.length > 1
              )
                return (this.w.globals.isMultipleYAxis = !0), !0;
            },
          },
          {
            key: 'xySettings',
            value: function () {
              var t = null,
                i = this.w;
              if (i.globals.axisCharts) {
                if (
                  (i.config.xaxis.crosshairs.position === 'back' &&
                    new jr(this.ctx).drawXCrosshairs(),
                  i.config.yaxis[0].crosshairs.position === 'back' &&
                    new jr(this.ctx).drawYCrosshairs(),
                  i.config.xaxis.type === 'datetime' &&
                    i.config.xaxis.labels.formatter === void 0)
                ) {
                  this.ctx.timeScale = new Ut(this.ctx);
                  var a = [];
                  isFinite(i.globals.minX) &&
                  isFinite(i.globals.maxX) &&
                  !i.globals.isBarHorizontal
                    ? (a = this.ctx.timeScale.calculateTimeScaleTicks(
                        i.globals.minX,
                        i.globals.maxX
                      ))
                    : i.globals.isBarHorizontal &&
                      (a = this.ctx.timeScale.calculateTimeScaleTicks(
                        i.globals.minY,
                        i.globals.maxY
                      )),
                    this.ctx.timeScale.recalcDimensionsBasedOnFormat(a);
                }
                t = new ae(this.ctx).getCalculatedRatios();
              }
              return t;
            },
          },
          {
            key: 'updateSourceChart',
            value: function (t) {
              (this.ctx.w.globals.selection = void 0),
                this.ctx.updateHelpers._updateOptions(
                  {
                    chart: {
                      selection: {
                        xaxis: { min: t.w.globals.minX, max: t.w.globals.maxX },
                      },
                    },
                  },
                  !1,
                  !1
                );
            },
          },
          {
            key: 'setupBrushHandler',
            value: function () {
              var t = this,
                i = this.w;
              if (
                i.config.chart.brush.enabled &&
                typeof i.config.chart.events.selection != 'function'
              ) {
                var a = i.config.chart.brush.targets || [
                  i.config.chart.brush.target,
                ];
                a.forEach(function (s) {
                  var o = ApexCharts.getChartByID(s);
                  (o.w.globals.brushSource = t.ctx),
                    typeof o.w.config.chart.events.zoomed != 'function' &&
                      (o.w.config.chart.events.zoomed = function () {
                        t.updateSourceChart(o);
                      }),
                    typeof o.w.config.chart.events.scrolled != 'function' &&
                      (o.w.config.chart.events.scrolled = function () {
                        t.updateSourceChart(o);
                      });
                }),
                  (i.config.chart.events.selection = function (s, o) {
                    a.forEach(function (l) {
                      var d = ApexCharts.getChartByID(l),
                        u = E.clone(i.config.yaxis);
                      if (
                        i.config.chart.brush.autoScaleYaxis &&
                        d.w.globals.series.length === 1
                      ) {
                        var p = new ii(d);
                        u = p.autoScaleY(d, u, o);
                      }
                      var x = d.w.config.yaxis.reduce(function (v, b, C) {
                        return [].concat(V(v), [
                          c(
                            c({}, d.w.config.yaxis[C]),
                            {},
                            { min: u[0].min, max: u[0].max }
                          ),
                        ]);
                      }, []);
                      d.ctx.updateHelpers._updateOptions(
                        {
                          xaxis: { min: o.xaxis.min, max: o.xaxis.max },
                          yaxis: x,
                        },
                        !1,
                        !1,
                        !1,
                        !1
                      );
                    });
                  });
              }
            },
          },
        ]),
        j
      );
    })(),
    or = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: '_updateOptions',
            value: function (t) {
              var i = this,
                a =
                  arguments.length > 1 &&
                  arguments[1] !== void 0 &&
                  arguments[1],
                s =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                o =
                  !(arguments.length > 3 && arguments[3] !== void 0) ||
                  arguments[3],
                l =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4];
              return new Promise(function (d) {
                var u = [i.ctx];
                o && (u = i.ctx.getSyncedCharts()),
                  i.ctx.w.globals.isExecCalled &&
                    ((u = [i.ctx]), (i.ctx.w.globals.isExecCalled = !1)),
                  u.forEach(function (p, x) {
                    var v = p.w;
                    if (
                      ((v.globals.shouldAnimate = s),
                      a ||
                        ((v.globals.resized = !0),
                        (v.globals.dataChanged = !0),
                        s && p.series.getPreviousPaths()),
                      t &&
                        f(t) === 'object' &&
                        ((p.config = new xe(t)),
                        (t = ae.extendArrayProps(p.config, t, v)),
                        p.w.globals.chartID !== i.ctx.w.globals.chartID &&
                          delete t.series,
                        (v.config = E.extend(v.config, t)),
                        l &&
                          ((v.globals.lastXAxis = t.xaxis
                            ? E.clone(t.xaxis)
                            : []),
                          (v.globals.lastYAxis = t.yaxis
                            ? E.clone(t.yaxis)
                            : []),
                          (v.globals.initialConfig = E.extend({}, v.config)),
                          (v.globals.initialSeries = E.clone(v.config.series)),
                          t.series)))
                    ) {
                      for (
                        var b = 0;
                        b < v.globals.collapsedSeriesIndices.length;
                        b++
                      ) {
                        var C =
                          v.config.series[v.globals.collapsedSeriesIndices[b]];
                        v.globals.collapsedSeries[b].data = v.globals.axisCharts
                          ? C.data.slice()
                          : C;
                      }
                      for (
                        var S = 0;
                        S < v.globals.ancillaryCollapsedSeriesIndices.length;
                        S++
                      ) {
                        var L =
                          v.config.series[
                            v.globals.ancillaryCollapsedSeriesIndices[S]
                          ];
                        v.globals.ancillaryCollapsedSeries[S].data = v.globals
                          .axisCharts
                          ? L.data.slice()
                          : L;
                      }
                      p.series.emptyCollapsedSeries(v.config.series);
                    }
                    return p.update(t).then(function () {
                      x === u.length - 1 && d(p);
                    });
                  });
              });
            },
          },
          {
            key: '_updateSeries',
            value: function (t, i) {
              var a = this,
                s =
                  arguments.length > 2 &&
                  arguments[2] !== void 0 &&
                  arguments[2];
              return new Promise(function (o) {
                var l,
                  d = a.w;
                return (
                  (d.globals.shouldAnimate = i),
                  (d.globals.dataChanged = !0),
                  i && a.ctx.series.getPreviousPaths(),
                  d.globals.axisCharts
                    ? ((l = t.map(function (u, p) {
                        return a._extendSeries(u, p);
                      })).length === 0 && (l = [{ data: [] }]),
                      (d.config.series = l))
                    : (d.config.series = t.slice()),
                  s &&
                    ((d.globals.initialConfig.series = E.clone(
                      d.config.series
                    )),
                    (d.globals.initialSeries = E.clone(d.config.series))),
                  a.ctx.update().then(function () {
                    o(a.ctx);
                  })
                );
              });
            },
          },
          {
            key: '_extendSeries',
            value: function (t, i) {
              var a = this.w,
                s = a.config.series[i];
              return c(
                c({}, a.config.series[i]),
                {},
                {
                  name: t.name ? t.name : s && s.name,
                  color: t.color ? t.color : s && s.color,
                  type: t.type ? t.type : s && s.type,
                  data: t.data ? t.data : s && s.data,
                }
              );
            },
          },
          {
            key: 'toggleDataPointSelection',
            value: function (t, i) {
              var a = this.w,
                s = null,
                o = ".apexcharts-series[data\\:realIndex='".concat(t, "']");
              return (
                a.globals.axisCharts
                  ? (s = a.globals.dom.Paper.select(
                      ''
                        .concat(o, " path[j='")
                        .concat(i, "'], ")
                        .concat(o, " circle[j='")
                        .concat(i, "'], ")
                        .concat(o, " rect[j='")
                        .concat(i, "']")
                    ).members[0])
                  : i === void 0 &&
                    ((s = a.globals.dom.Paper.select(
                      ''.concat(o, " path[j='").concat(t, "']")
                    ).members[0]),
                    (a.config.chart.type !== 'pie' &&
                      a.config.chart.type !== 'polarArea' &&
                      a.config.chart.type !== 'donut') ||
                      this.ctx.pie.pieClicked(t)),
                s
                  ? (new W(this.ctx).pathMouseDown(s, null),
                    s.node ? s.node : null)
                  : (console.warn(
                      'toggleDataPointSelection: Element not found'
                    ),
                    null)
              );
            },
          },
          {
            key: 'forceXAxisUpdate',
            value: function (t) {
              var i = this.w;
              if (
                (['min', 'max'].forEach(function (s) {
                  t.xaxis[s] !== void 0 &&
                    ((i.config.xaxis[s] = t.xaxis[s]),
                    (i.globals.lastXAxis[s] = t.xaxis[s]));
                }),
                t.xaxis.categories &&
                  t.xaxis.categories.length &&
                  (i.config.xaxis.categories = t.xaxis.categories),
                i.config.xaxis.convertedCatToNumeric)
              ) {
                var a = new de(t);
                t = a.convertCatToNumericXaxis(t, this.ctx);
              }
              return t;
            },
          },
          {
            key: 'forceYAxisUpdate',
            value: function (t) {
              return (
                t.chart &&
                  t.chart.stacked &&
                  t.chart.stackType === '100%' &&
                  (Array.isArray(t.yaxis)
                    ? t.yaxis.forEach(function (i, a) {
                        (t.yaxis[a].min = 0), (t.yaxis[a].max = 100);
                      })
                    : ((t.yaxis.min = 0), (t.yaxis.max = 100))),
                t
              );
            },
          },
          {
            key: 'revertDefaultAxisMinMax',
            value: function (t) {
              var i = this,
                a = this.w,
                s = a.globals.lastXAxis,
                o = a.globals.lastYAxis;
              t && t.xaxis && (s = t.xaxis),
                t && t.yaxis && (o = t.yaxis),
                (a.config.xaxis.min = s.min),
                (a.config.xaxis.max = s.max);
              var l = function (d) {
                o[d] !== void 0 &&
                  ((a.config.yaxis[d].min = o[d].min),
                  (a.config.yaxis[d].max = o[d].max));
              };
              a.config.yaxis.map(function (d, u) {
                a.globals.zoomed || o[u] !== void 0
                  ? l(u)
                  : i.ctx.opts.yaxis[u] !== void 0 &&
                    ((d.min = i.ctx.opts.yaxis[u].min),
                    (d.max = i.ctx.opts.yaxis[u].max));
              });
            },
          },
        ]),
        j
      );
    })();
  (be = typeof window < 'u' ? window : void 0),
    (fe = function (j, t) {
      var i = ((this !== void 0 ? this : j).SVG = function (h) {
        if (i.supported)
          return (h = new i.Doc(h)), i.parser.draw || i.prepare(), h;
      });
      if (
        ((i.ns = 'http://www.w3.org/2000/svg'),
        (i.xmlns = 'http://www.w3.org/2000/xmlns/'),
        (i.xlink = 'http://www.w3.org/1999/xlink'),
        (i.svgjs = 'http://svgjs.dev'),
        (i.supported = !0),
        !i.supported)
      )
        return !1;
      (i.did = 1e3),
        (i.eid = function (h) {
          return 'Svgjs' + x(h) + i.did++;
        }),
        (i.create = function (h) {
          var y = t.createElementNS(this.ns, h);
          return y.setAttribute('id', this.eid(h)), y;
        }),
        (i.extend = function () {
          var h, y;
          y = (h = [].slice.call(arguments)).pop();
          for (var A = h.length - 1; A >= 0; A--)
            if (h[A]) for (var P in y) h[A].prototype[P] = y[P];
          i.Set && i.Set.inherit && i.Set.inherit();
        }),
        (i.invent = function (h) {
          var y =
            typeof h.create == 'function'
              ? h.create
              : function () {
                  this.constructor.call(this, i.create(h.create));
                };
          return (
            h.inherit && (y.prototype = new h.inherit()),
            h.extend && i.extend(y, h.extend),
            h.construct && i.extend(h.parent || i.Container, h.construct),
            y
          );
        }),
        (i.adopt = function (h) {
          return h
            ? h.instance
              ? h.instance
              : (((y =
                  h.nodeName == 'svg'
                    ? h.parentNode instanceof j.SVGElement
                      ? new i.Nested()
                      : new i.Doc()
                    : h.nodeName == 'linearGradient'
                    ? new i.Gradient('linear')
                    : h.nodeName == 'radialGradient'
                    ? new i.Gradient('radial')
                    : i[x(h.nodeName)]
                    ? new i[x(h.nodeName)]()
                    : new i.Element(h)).type = h.nodeName),
                (y.node = h),
                (h.instance = y),
                y instanceof i.Doc && y.namespace().defs(),
                y.setData(JSON.parse(h.getAttribute('svgjs:data')) || {}),
                y)
            : null;
          var y;
        }),
        (i.prepare = function () {
          var h = t.getElementsByTagName('body')[0],
            y = (h ? new i.Doc(h) : i.adopt(t.documentElement).nested()).size(
              2,
              0
            );
          i.parser = {
            body: h || t.documentElement,
            draw: y.style(
              'opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden'
            ).node,
            poly: y.polyline().node,
            path: y.path().node,
            native: i.create('svg'),
          };
        }),
        (i.parser = { native: i.create('svg') }),
        t.addEventListener(
          'DOMContentLoaded',
          function () {
            i.parser.draw || i.prepare();
          },
          !1
        ),
        (i.regex = {
          numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
          hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
          rgb: /rgb\((\d+),(\d+),(\d+)\)/,
          reference: /#([a-z0-9\-_]+)/i,
          transforms: /\)\s*,?\s*/,
          whitespace: /\s/g,
          isHex: /^#[a-f0-9]{3,6}$/i,
          isRgb: /^rgb\(/,
          isCss: /[^:]+:[^;]+;?/,
          isBlank: /^(\s+)?$/,
          isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
          isPercent: /^-?[\d\.]+%$/,
          isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
          delimiter: /[\s,]+/,
          hyphen: /([^e])\-/gi,
          pathLetters: /[MLHVCSQTAZ]/gi,
          isPathLetter: /[MLHVCSQTAZ]/i,
          numbersWithDots:
            /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
          dots: /\./g,
        }),
        (i.utils = {
          map: function (h, y) {
            for (var A = h.length, P = [], R = 0; R < A; R++) P.push(y(h[R]));
            return P;
          },
          filter: function (h, y) {
            for (var A = h.length, P = [], R = 0; R < A; R++)
              y(h[R]) && P.push(h[R]);
            return P;
          },
          filterSVGElements: function (h) {
            return this.filter(h, function (y) {
              return y instanceof j.SVGElement;
            });
          },
        }),
        (i.defaults = {
          attrs: {
            'fill-opacity': 1,
            'stroke-opacity': 1,
            'stroke-width': 0,
            'stroke-linejoin': 'miter',
            'stroke-linecap': 'butt',
            fill: '#000000',
            stroke: '#000000',
            opacity: 1,
            x: 0,
            y: 0,
            cx: 0,
            cy: 0,
            width: 0,
            height: 0,
            r: 0,
            rx: 0,
            ry: 0,
            offset: 0,
            'stop-opacity': 1,
            'stop-color': '#000000',
            'font-size': 16,
            'font-family': 'Helvetica, Arial, sans-serif',
            'text-anchor': 'start',
          },
        }),
        (i.Color = function (h) {
          var y, A;
          (this.r = 0),
            (this.g = 0),
            (this.b = 0),
            h &&
              (typeof h == 'string'
                ? i.regex.isRgb.test(h)
                  ? ((y = i.regex.rgb.exec(h.replace(i.regex.whitespace, ''))),
                    (this.r = parseInt(y[1])),
                    (this.g = parseInt(y[2])),
                    (this.b = parseInt(y[3])))
                  : i.regex.isHex.test(h) &&
                    ((y = i.regex.hex.exec(
                      (A = h).length == 4
                        ? [
                            '#',
                            A.substring(1, 2),
                            A.substring(1, 2),
                            A.substring(2, 3),
                            A.substring(2, 3),
                            A.substring(3, 4),
                            A.substring(3, 4),
                          ].join('')
                        : A
                    )),
                    (this.r = parseInt(y[1], 16)),
                    (this.g = parseInt(y[2], 16)),
                    (this.b = parseInt(y[3], 16)))
                : f(h) === 'object' &&
                  ((this.r = h.r), (this.g = h.g), (this.b = h.b)));
        }),
        i.extend(i.Color, {
          toString: function () {
            return this.toHex();
          },
          toHex: function () {
            return '#' + v(this.r) + v(this.g) + v(this.b);
          },
          toRgb: function () {
            return 'rgb(' + [this.r, this.g, this.b].join() + ')';
          },
          brightness: function () {
            return (
              (this.r / 255) * 0.3 +
              (this.g / 255) * 0.59 +
              (this.b / 255) * 0.11
            );
          },
          morph: function (h) {
            return (this.destination = new i.Color(h)), this;
          },
          at: function (h) {
            return this.destination
              ? ((h = h < 0 ? 0 : h > 1 ? 1 : h),
                new i.Color({
                  r: ~~(this.r + (this.destination.r - this.r) * h),
                  g: ~~(this.g + (this.destination.g - this.g) * h),
                  b: ~~(this.b + (this.destination.b - this.b) * h),
                }))
              : this;
          },
        }),
        (i.Color.test = function (h) {
          return (h += ''), i.regex.isHex.test(h) || i.regex.isRgb.test(h);
        }),
        (i.Color.isRgb = function (h) {
          return (
            h &&
            typeof h.r == 'number' &&
            typeof h.g == 'number' &&
            typeof h.b == 'number'
          );
        }),
        (i.Color.isColor = function (h) {
          return i.Color.isRgb(h) || i.Color.test(h);
        }),
        (i.Array = function (h, y) {
          (h = (h || []).valueOf()).length == 0 && y && (h = y.valueOf()),
            (this.value = this.parse(h));
        }),
        i.extend(i.Array, {
          toString: function () {
            return this.value.join(' ');
          },
          valueOf: function () {
            return this.value;
          },
          parse: function (h) {
            return (h = h.valueOf()), Array.isArray(h) ? h : this.split(h);
          },
        }),
        (i.PointArray = function (h, y) {
          i.Array.call(this, h, y || [[0, 0]]);
        }),
        (i.PointArray.prototype = new i.Array()),
        (i.PointArray.prototype.constructor = i.PointArray);
      for (
        var a = {
            M: function (h, y, A) {
              return (y.x = A.x = h[0]), (y.y = A.y = h[1]), ['M', y.x, y.y];
            },
            L: function (h, y) {
              return (y.x = h[0]), (y.y = h[1]), ['L', h[0], h[1]];
            },
            H: function (h, y) {
              return (y.x = h[0]), ['H', h[0]];
            },
            V: function (h, y) {
              return (y.y = h[0]), ['V', h[0]];
            },
            C: function (h, y) {
              return (
                (y.x = h[4]),
                (y.y = h[5]),
                ['C', h[0], h[1], h[2], h[3], h[4], h[5]]
              );
            },
            Q: function (h, y) {
              return (y.x = h[2]), (y.y = h[3]), ['Q', h[0], h[1], h[2], h[3]];
            },
            Z: function (h, y, A) {
              return (y.x = A.x), (y.y = A.y), ['Z'];
            },
          },
          s = 'mlhvqtcsaz'.split(''),
          o = 0,
          l = s.length;
        o < l;
        ++o
      )
        a[s[o]] = (function (h) {
          return function (y, A, P) {
            if (h == 'H') y[0] = y[0] + A.x;
            else if (h == 'V') y[0] = y[0] + A.y;
            else if (h == 'A') (y[5] = y[5] + A.x), (y[6] = y[6] + A.y);
            else
              for (var R = 0, O = y.length; R < O; ++R)
                y[R] = y[R] + (R % 2 ? A.y : A.x);
            if (a && typeof a[h] == 'function') return a[h](y, A, P);
          };
        })(s[o].toUpperCase());
      (i.PathArray = function (h, y) {
        i.Array.call(this, h, y || [['M', 0, 0]]);
      }),
        (i.PathArray.prototype = new i.Array()),
        (i.PathArray.prototype.constructor = i.PathArray),
        i.extend(i.PathArray, {
          toString: function () {
            return (function (h) {
              for (var y = 0, A = h.length, P = ''; y < A; y++)
                (P += h[y][0]),
                  h[y][1] != null &&
                    ((P += h[y][1]),
                    h[y][2] != null &&
                      ((P += ' '),
                      (P += h[y][2]),
                      h[y][3] != null &&
                        ((P += ' '),
                        (P += h[y][3]),
                        (P += ' '),
                        (P += h[y][4]),
                        h[y][5] != null &&
                          ((P += ' '),
                          (P += h[y][5]),
                          (P += ' '),
                          (P += h[y][6]),
                          h[y][7] != null && ((P += ' '), (P += h[y][7]))))));
              return P + ' ';
            })(this.value);
          },
          move: function (h, y) {
            var A = this.bbox();
            return A.x, A.y, this;
          },
          at: function (h) {
            if (!this.destination) return this;
            for (
              var y = this.value,
                A = this.destination.value,
                P = [],
                R = new i.PathArray(),
                O = 0,
                X = y.length;
              O < X;
              O++
            ) {
              P[O] = [y[O][0]];
              for (var G = 1, q = y[O].length; G < q; G++)
                P[O][G] = y[O][G] + (A[O][G] - y[O][G]) * h;
              P[O][0] === 'A' &&
                ((P[O][4] = +(P[O][4] != 0)), (P[O][5] = +(P[O][5] != 0)));
            }
            return (R.value = P), R;
          },
          parse: function (h) {
            if (h instanceof i.PathArray) return h.valueOf();
            var y,
              A = {
                M: 2,
                L: 2,
                H: 1,
                V: 1,
                C: 6,
                S: 4,
                Q: 4,
                T: 2,
                A: 7,
                Z: 0,
              };
            h =
              typeof h == 'string'
                ? h
                    .replace(i.regex.numbersWithDots, u)
                    .replace(i.regex.pathLetters, ' $& ')
                    .replace(i.regex.hyphen, '$1 -')
                    .trim()
                    .split(i.regex.delimiter)
                : h.reduce(function (q, ie) {
                    return [].concat.call(q, ie);
                  }, []);
            var P = [],
              R = new i.Point(),
              O = new i.Point(),
              X = 0,
              G = h.length;
            do
              i.regex.isPathLetter.test(h[X])
                ? ((y = h[X]), ++X)
                : y == 'M'
                ? (y = 'L')
                : y == 'm' && (y = 'l'),
                P.push(
                  a[y].call(
                    null,
                    h.slice(X, (X += A[y.toUpperCase()])).map(parseFloat),
                    R,
                    O
                  )
                );
            while (G > X);
            return P;
          },
          bbox: function () {
            return (
              i.parser.draw || i.prepare(),
              i.parser.path.setAttribute('d', this.toString()),
              i.parser.path.getBBox()
            );
          },
        }),
        (i.Number = i.invent({
          create: function (h, y) {
            (this.value = 0),
              (this.unit = y || ''),
              typeof h == 'number'
                ? (this.value = isNaN(h)
                    ? 0
                    : isFinite(h)
                    ? h
                    : h < 0
                    ? -34e37
                    : 34e37)
                : typeof h == 'string'
                ? (y = h.match(i.regex.numberAndUnit)) &&
                  ((this.value = parseFloat(y[1])),
                  y[5] == '%'
                    ? (this.value /= 100)
                    : y[5] == 's' && (this.value *= 1e3),
                  (this.unit = y[5]))
                : h instanceof i.Number &&
                  ((this.value = h.valueOf()), (this.unit = h.unit));
          },
          extend: {
            toString: function () {
              return (
                (this.unit == '%'
                  ? ~~(1e8 * this.value) / 1e6
                  : this.unit == 's'
                  ? this.value / 1e3
                  : this.value) + this.unit
              );
            },
            toJSON: function () {
              return this.toString();
            },
            valueOf: function () {
              return this.value;
            },
            plus: function (h) {
              return (
                (h = new i.Number(h)),
                new i.Number(this + h, this.unit || h.unit)
              );
            },
            minus: function (h) {
              return (
                (h = new i.Number(h)),
                new i.Number(this - h, this.unit || h.unit)
              );
            },
            times: function (h) {
              return (
                (h = new i.Number(h)),
                new i.Number(this * h, this.unit || h.unit)
              );
            },
            divide: function (h) {
              return (
                (h = new i.Number(h)),
                new i.Number(this / h, this.unit || h.unit)
              );
            },
            to: function (h) {
              var y = new i.Number(this);
              return typeof h == 'string' && (y.unit = h), y;
            },
            morph: function (h) {
              return (
                (this.destination = new i.Number(h)),
                h.relative && (this.destination.value += this.value),
                this
              );
            },
            at: function (h) {
              return this.destination
                ? new i.Number(this.destination).minus(this).times(h).plus(this)
                : this;
            },
          },
        })),
        (i.Element = i.invent({
          create: function (h) {
            (this._stroke = i.defaults.attrs.stroke),
              (this._event = null),
              (this.dom = {}),
              (this.node = h) &&
                ((this.type = h.nodeName),
                (this.node.instance = this),
                (this._stroke = h.getAttribute('stroke') || this._stroke));
          },
          extend: {
            x: function (h) {
              return this.attr('x', h);
            },
            y: function (h) {
              return this.attr('y', h);
            },
            cx: function (h) {
              return h == null
                ? this.x() + this.width() / 2
                : this.x(h - this.width() / 2);
            },
            cy: function (h) {
              return h == null
                ? this.y() + this.height() / 2
                : this.y(h - this.height() / 2);
            },
            move: function (h, y) {
              return this.x(h).y(y);
            },
            center: function (h, y) {
              return this.cx(h).cy(y);
            },
            width: function (h) {
              return this.attr('width', h);
            },
            height: function (h) {
              return this.attr('height', h);
            },
            size: function (h, y) {
              var A = b(this, h, y);
              return this.width(new i.Number(A.width)).height(
                new i.Number(A.height)
              );
            },
            clone: function (h) {
              this.writeDataToDom();
              var y = L(this.node.cloneNode(!0));
              return h ? h.add(y) : this.after(y), y;
            },
            remove: function () {
              return this.parent() && this.parent().removeElement(this), this;
            },
            replace: function (h) {
              return this.after(h).remove(), h;
            },
            addTo: function (h) {
              return h.put(this);
            },
            putIn: function (h) {
              return h.add(this);
            },
            id: function (h) {
              return this.attr('id', h);
            },
            show: function () {
              return this.style('display', '');
            },
            hide: function () {
              return this.style('display', 'none');
            },
            visible: function () {
              return this.style('display') != 'none';
            },
            toString: function () {
              return this.attr('id');
            },
            classes: function () {
              var h = this.attr('class');
              return h == null ? [] : h.trim().split(i.regex.delimiter);
            },
            hasClass: function (h) {
              return this.classes().indexOf(h) != -1;
            },
            addClass: function (h) {
              if (!this.hasClass(h)) {
                var y = this.classes();
                y.push(h), this.attr('class', y.join(' '));
              }
              return this;
            },
            removeClass: function (h) {
              return (
                this.hasClass(h) &&
                  this.attr(
                    'class',
                    this.classes()
                      .filter(function (y) {
                        return y != h;
                      })
                      .join(' ')
                  ),
                this
              );
            },
            toggleClass: function (h) {
              return this.hasClass(h) ? this.removeClass(h) : this.addClass(h);
            },
            reference: function (h) {
              return i.get(this.attr(h));
            },
            parent: function (h) {
              var y = this;
              if (!y.node.parentNode) return null;
              if (((y = i.adopt(y.node.parentNode)), !h)) return y;
              for (; y && y.node instanceof j.SVGElement; ) {
                if (typeof h == 'string' ? y.matches(h) : y instanceof h)
                  return y;
                if (
                  !y.node.parentNode ||
                  y.node.parentNode.nodeName == '#document'
                )
                  return null;
                y = i.adopt(y.node.parentNode);
              }
            },
            doc: function () {
              return this instanceof i.Doc ? this : this.parent(i.Doc);
            },
            parents: function (h) {
              var y = [],
                A = this;
              do {
                if (!(A = A.parent(h)) || !A.node) break;
                y.push(A);
              } while (A.parent);
              return y;
            },
            matches: function (h) {
              return (function (y, A) {
                return (
                  y.matches ||
                  y.matchesSelector ||
                  y.msMatchesSelector ||
                  y.mozMatchesSelector ||
                  y.webkitMatchesSelector ||
                  y.oMatchesSelector
                ).call(y, A);
              })(this.node, h);
            },
            native: function () {
              return this.node;
            },
            svg: function (h) {
              var y = t.createElement('svg');
              if (!(h && this instanceof i.Parent))
                return (
                  y.appendChild((h = t.createElement('svg'))),
                  this.writeDataToDom(),
                  h.appendChild(this.node.cloneNode(!0)),
                  y.innerHTML.replace(/^<svg>/, '').replace(/<\/svg>$/, '')
                );
              y.innerHTML =
                '<svg>' +
                h
                  .replace(/\n/, '')
                  .replace(/<([\w:-]+)([^<]+?)\/>/g, '<$1$2></$1>') +
                '</svg>';
              for (var A = 0, P = y.firstChild.childNodes.length; A < P; A++)
                this.node.appendChild(y.firstChild.firstChild);
              return this;
            },
            writeDataToDom: function () {
              return (
                (this.each || this.lines) &&
                  (this.each ? this : this.lines()).each(function () {
                    this.writeDataToDom();
                  }),
                this.node.removeAttribute('svgjs:data'),
                Object.keys(this.dom).length &&
                  this.node.setAttribute(
                    'svgjs:data',
                    JSON.stringify(this.dom)
                  ),
                this
              );
            },
            setData: function (h) {
              return (this.dom = h), this;
            },
            is: function (h) {
              return (function (y, A) {
                return y instanceof A;
              })(this, h);
            },
          },
        })),
        (i.easing = {
          '-': function (h) {
            return h;
          },
          '<>': function (h) {
            return -Math.cos(h * Math.PI) / 2 + 0.5;
          },
          '>': function (h) {
            return Math.sin((h * Math.PI) / 2);
          },
          '<': function (h) {
            return 1 - Math.cos((h * Math.PI) / 2);
          },
        }),
        (i.morph = function (h) {
          return function (y, A) {
            return new i.MorphObj(y, A).at(h);
          };
        }),
        (i.Situation = i.invent({
          create: function (h) {
            (this.init = !1),
              (this.reversed = !1),
              (this.reversing = !1),
              (this.duration = new i.Number(h.duration).valueOf()),
              (this.delay = new i.Number(h.delay).valueOf()),
              (this.start = +new Date() + this.delay),
              (this.finish = this.start + this.duration),
              (this.ease = h.ease),
              (this.loop = 0),
              (this.loops = !1),
              (this.animations = {}),
              (this.attrs = {}),
              (this.styles = {}),
              (this.transforms = []),
              (this.once = {});
          },
        })),
        (i.FX = i.invent({
          create: function (h) {
            (this._target = h),
              (this.situations = []),
              (this.active = !1),
              (this.situation = null),
              (this.paused = !1),
              (this.lastPos = 0),
              (this.pos = 0),
              (this.absPos = 0),
              (this._speed = 1);
          },
          extend: {
            animate: function (h, y, A) {
              f(h) === 'object' &&
                ((y = h.ease), (A = h.delay), (h = h.duration));
              var P = new i.Situation({
                duration: h || 1e3,
                delay: A || 0,
                ease: i.easing[y || '-'] || y,
              });
              return this.queue(P), this;
            },
            target: function (h) {
              return h && h instanceof i.Element
                ? ((this._target = h), this)
                : this._target;
            },
            timeToAbsPos: function (h) {
              return (
                (h - this.situation.start) /
                (this.situation.duration / this._speed)
              );
            },
            absPosToTime: function (h) {
              return (
                (this.situation.duration / this._speed) * h +
                this.situation.start
              );
            },
            startAnimFrame: function () {
              this.stopAnimFrame(),
                (this.animationFrame = j.requestAnimationFrame(
                  function () {
                    this.step();
                  }.bind(this)
                ));
            },
            stopAnimFrame: function () {
              j.cancelAnimationFrame(this.animationFrame);
            },
            start: function () {
              return (
                !this.active &&
                  this.situation &&
                  ((this.active = !0), this.startCurrent()),
                this
              );
            },
            startCurrent: function () {
              return (
                (this.situation.start =
                  +new Date() + this.situation.delay / this._speed),
                (this.situation.finish =
                  this.situation.start + this.situation.duration / this._speed),
                this.initAnimations().step()
              );
            },
            queue: function (h) {
              return (
                (typeof h == 'function' || h instanceof i.Situation) &&
                  this.situations.push(h),
                this.situation || (this.situation = this.situations.shift()),
                this
              );
            },
            dequeue: function () {
              return (
                this.stop(),
                (this.situation = this.situations.shift()),
                this.situation &&
                  (this.situation instanceof i.Situation
                    ? this.start()
                    : this.situation.call(this)),
                this
              );
            },
            initAnimations: function () {
              var h,
                y = this.situation;
              if (y.init) return this;
              for (var A in y.animations) {
                (h = this.target()[A]()),
                  Array.isArray(h) || (h = [h]),
                  Array.isArray(y.animations[A]) ||
                    (y.animations[A] = [y.animations[A]]);
                for (var P = h.length; P--; )
                  y.animations[A][P] instanceof i.Number &&
                    (h[P] = new i.Number(h[P])),
                    (y.animations[A][P] = h[P].morph(y.animations[A][P]));
              }
              for (var A in y.attrs)
                y.attrs[A] = new i.MorphObj(this.target().attr(A), y.attrs[A]);
              for (var A in y.styles)
                y.styles[A] = new i.MorphObj(
                  this.target().style(A),
                  y.styles[A]
                );
              return (
                (y.initialTransformation = this.target().matrixify()),
                (y.init = !0),
                this
              );
            },
            clearQueue: function () {
              return (this.situations = []), this;
            },
            clearCurrent: function () {
              return (this.situation = null), this;
            },
            stop: function (h, y) {
              var A = this.active;
              return (
                (this.active = !1),
                y && this.clearQueue(),
                h &&
                  this.situation &&
                  (!A && this.startCurrent(), this.atEnd()),
                this.stopAnimFrame(),
                this.clearCurrent()
              );
            },
            after: function (h) {
              var y = this.last();
              return (
                this.target().on('finished.fx', function A(P) {
                  P.detail.situation == y &&
                    (h.call(this, y), this.off('finished.fx', A));
                }),
                this._callStart()
              );
            },
            during: function (h) {
              var y = this.last(),
                A = function (P) {
                  P.detail.situation == y &&
                    h.call(
                      this,
                      P.detail.pos,
                      i.morph(P.detail.pos),
                      P.detail.eased,
                      y
                    );
                };
              return (
                this.target().off('during.fx', A).on('during.fx', A),
                this.after(function () {
                  this.off('during.fx', A);
                }),
                this._callStart()
              );
            },
            afterAll: function (h) {
              var y = function A(P) {
                h.call(this), this.off('allfinished.fx', A);
              };
              return (
                this.target().off('allfinished.fx', y).on('allfinished.fx', y),
                this._callStart()
              );
            },
            last: function () {
              return this.situations.length
                ? this.situations[this.situations.length - 1]
                : this.situation;
            },
            add: function (h, y, A) {
              return (this.last()[A || 'animations'][h] = y), this._callStart();
            },
            step: function (h) {
              var y, A, P;
              h || (this.absPos = this.timeToAbsPos(+new Date())),
                this.situation.loops !== !1
                  ? ((y = Math.max(this.absPos, 0)),
                    (A = Math.floor(y)),
                    this.situation.loops === !0 || A < this.situation.loops
                      ? ((this.pos = y - A),
                        (P = this.situation.loop),
                        (this.situation.loop = A))
                      : ((this.absPos = this.situation.loops),
                        (this.pos = 1),
                        (P = this.situation.loop - 1),
                        (this.situation.loop = this.situation.loops)),
                    this.situation.reversing &&
                      (this.situation.reversed =
                        this.situation.reversed !=
                        !!((this.situation.loop - P) % 2)))
                  : ((this.absPos = Math.min(this.absPos, 1)),
                    (this.pos = this.absPos)),
                this.pos < 0 && (this.pos = 0),
                this.situation.reversed && (this.pos = 1 - this.pos);
              var R = this.situation.ease(this.pos);
              for (var O in this.situation.once)
                O > this.lastPos &&
                  O <= R &&
                  (this.situation.once[O].call(this.target(), this.pos, R),
                  delete this.situation.once[O]);
              return (
                this.active &&
                  this.target().fire('during', {
                    pos: this.pos,
                    eased: R,
                    fx: this,
                    situation: this.situation,
                  }),
                this.situation
                  ? (this.eachAt(),
                    (this.pos == 1 && !this.situation.reversed) ||
                    (this.situation.reversed && this.pos == 0)
                      ? (this.stopAnimFrame(),
                        this.target().fire('finished', {
                          fx: this,
                          situation: this.situation,
                        }),
                        this.situations.length ||
                          (this.target().fire('allfinished'),
                          this.situations.length ||
                            (this.target().off('.fx'), (this.active = !1))),
                        this.active ? this.dequeue() : this.clearCurrent())
                      : !this.paused && this.active && this.startAnimFrame(),
                    (this.lastPos = R),
                    this)
                  : this
              );
            },
            eachAt: function () {
              var h,
                y = this,
                A = this.target(),
                P = this.situation;
              for (var R in P.animations)
                (h = [].concat(P.animations[R]).map(function (G) {
                  return typeof G != 'string' && G.at
                    ? G.at(P.ease(y.pos), y.pos)
                    : G;
                })),
                  A[R].apply(A, h);
              for (var R in P.attrs)
                (h = [R].concat(P.attrs[R]).map(function (q) {
                  return typeof q != 'string' && q.at
                    ? q.at(P.ease(y.pos), y.pos)
                    : q;
                })),
                  A.attr.apply(A, h);
              for (var R in P.styles)
                (h = [R].concat(P.styles[R]).map(function (q) {
                  return typeof q != 'string' && q.at
                    ? q.at(P.ease(y.pos), y.pos)
                    : q;
                })),
                  A.style.apply(A, h);
              if (P.transforms.length) {
                (h = P.initialTransformation), (R = 0);
                for (var O = P.transforms.length; R < O; R++) {
                  var X = P.transforms[R];
                  X instanceof i.Matrix
                    ? (h = X.relative
                        ? h.multiply(
                            new i.Matrix().morph(X).at(P.ease(this.pos))
                          )
                        : h.morph(X).at(P.ease(this.pos)))
                    : (X.relative || X.undo(h.extract()),
                      (h = h.multiply(X.at(P.ease(this.pos)))));
                }
                A.matrix(h);
              }
              return this;
            },
            once: function (h, y, A) {
              var P = this.last();
              return A || (h = P.ease(h)), (P.once[h] = y), this;
            },
            _callStart: function () {
              return (
                setTimeout(
                  function () {
                    this.start();
                  }.bind(this),
                  0
                ),
                this
              );
            },
          },
          parent: i.Element,
          construct: {
            animate: function (h, y, A) {
              return (this.fx || (this.fx = new i.FX(this))).animate(h, y, A);
            },
            delay: function (h) {
              return (this.fx || (this.fx = new i.FX(this))).delay(h);
            },
            stop: function (h, y) {
              return this.fx && this.fx.stop(h, y), this;
            },
            finish: function () {
              return this.fx && this.fx.finish(), this;
            },
          },
        })),
        (i.MorphObj = i.invent({
          create: function (h, y) {
            return i.Color.isColor(y)
              ? new i.Color(h).morph(y)
              : i.regex.delimiter.test(h)
              ? i.regex.pathLetters.test(h)
                ? new i.PathArray(h).morph(y)
                : new i.Array(h).morph(y)
              : i.regex.numberAndUnit.test(y)
              ? new i.Number(h).morph(y)
              : ((this.value = h), void (this.destination = y));
          },
          extend: {
            at: function (h, y) {
              return y < 1 ? this.value : this.destination;
            },
            valueOf: function () {
              return this.value;
            },
          },
        })),
        i.extend(i.FX, {
          attr: function (h, y, A) {
            if (f(h) === 'object') for (var P in h) this.attr(P, h[P]);
            else this.add(h, y, 'attrs');
            return this;
          },
          plot: function (h, y, A, P) {
            return arguments.length == 4
              ? this.plot([h, y, A, P])
              : this.add('plot', new (this.target().morphArray)(h));
          },
        }),
        (i.Box = i.invent({
          create: function (h, y, A, P) {
            if (!(f(h) !== 'object' || h instanceof i.Element))
              return i.Box.call(
                this,
                h.left != null ? h.left : h.x,
                h.top != null ? h.top : h.y,
                h.width,
                h.height
              );
            var R;
            arguments.length == 4 &&
              ((this.x = h), (this.y = y), (this.width = A), (this.height = P)),
              (R = this).x == null &&
                ((R.x = 0), (R.y = 0), (R.width = 0), (R.height = 0)),
              (R.w = R.width),
              (R.h = R.height),
              (R.x2 = R.x + R.width),
              (R.y2 = R.y + R.height),
              (R.cx = R.x + R.width / 2),
              (R.cy = R.y + R.height / 2);
          },
        })),
        (i.BBox = i.invent({
          create: function (h) {
            if (
              (i.Box.apply(this, [].slice.call(arguments)),
              h instanceof i.Element)
            ) {
              var y;
              try {
                if (!t.documentElement.contains) {
                  for (var A = h.node; A.parentNode; ) A = A.parentNode;
                  if (A != t) throw new Error('Element not in the dom');
                }
                y = h.node.getBBox();
              } catch {
                if (h instanceof i.Shape) {
                  i.parser.draw || i.prepare();
                  var P = h.clone(i.parser.draw.instance).show();
                  P &&
                    P.node &&
                    typeof P.node.getBBox == 'function' &&
                    (y = P.node.getBBox()),
                    P && typeof P.remove == 'function' && P.remove();
                } else
                  y = {
                    x: h.node.clientLeft,
                    y: h.node.clientTop,
                    width: h.node.clientWidth,
                    height: h.node.clientHeight,
                  };
              }
              i.Box.call(this, y);
            }
          },
          inherit: i.Box,
          parent: i.Element,
          construct: {
            bbox: function () {
              return new i.BBox(this);
            },
          },
        })),
        (i.BBox.prototype.constructor = i.BBox),
        (i.Matrix = i.invent({
          create: function (h) {
            var y = S([1, 0, 0, 1, 0, 0]);
            h =
              h === null
                ? y
                : h instanceof i.Element
                ? h.matrixify()
                : typeof h == 'string'
                ? S(h.split(i.regex.delimiter).map(parseFloat))
                : arguments.length == 6
                ? S([].slice.call(arguments))
                : Array.isArray(h)
                ? S(h)
                : h && f(h) === 'object'
                ? h
                : y;
            for (var A = T.length - 1; A >= 0; --A)
              this[T[A]] = h[T[A]] != null ? h[T[A]] : y[T[A]];
          },
          extend: {
            extract: function () {
              var h = C(this, 0, 1);
              C(this, 1, 0);
              var y = (180 / Math.PI) * Math.atan2(h.y, h.x) - 90;
              return {
                x: this.e,
                y: this.f,
                transformedX:
                  (this.e * Math.cos((y * Math.PI) / 180) +
                    this.f * Math.sin((y * Math.PI) / 180)) /
                  Math.sqrt(this.a * this.a + this.b * this.b),
                transformedY:
                  (this.f * Math.cos((y * Math.PI) / 180) +
                    this.e * Math.sin((-y * Math.PI) / 180)) /
                  Math.sqrt(this.c * this.c + this.d * this.d),
                rotation: y,
                a: this.a,
                b: this.b,
                c: this.c,
                d: this.d,
                e: this.e,
                f: this.f,
                matrix: new i.Matrix(this),
              };
            },
            clone: function () {
              return new i.Matrix(this);
            },
            morph: function (h) {
              return (this.destination = new i.Matrix(h)), this;
            },
            multiply: function (h) {
              return new i.Matrix(
                this.native().multiply(
                  (function (y) {
                    return y instanceof i.Matrix || (y = new i.Matrix(y)), y;
                  })(h).native()
                )
              );
            },
            inverse: function () {
              return new i.Matrix(this.native().inverse());
            },
            translate: function (h, y) {
              return new i.Matrix(this.native().translate(h || 0, y || 0));
            },
            native: function () {
              for (
                var h = i.parser.native.createSVGMatrix(), y = T.length - 1;
                y >= 0;
                y--
              )
                h[T[y]] = this[T[y]];
              return h;
            },
            toString: function () {
              return (
                'matrix(' +
                N(this.a) +
                ',' +
                N(this.b) +
                ',' +
                N(this.c) +
                ',' +
                N(this.d) +
                ',' +
                N(this.e) +
                ',' +
                N(this.f) +
                ')'
              );
            },
          },
          parent: i.Element,
          construct: {
            ctm: function () {
              return new i.Matrix(this.node.getCTM());
            },
            screenCTM: function () {
              if (this instanceof i.Nested) {
                var h = this.rect(1, 1),
                  y = h.node.getScreenCTM();
                return h.remove(), new i.Matrix(y);
              }
              return new i.Matrix(this.node.getScreenCTM());
            },
          },
        })),
        (i.Point = i.invent({
          create: function (h, y) {
            var A;
            (A = Array.isArray(h)
              ? { x: h[0], y: h[1] }
              : f(h) === 'object'
              ? { x: h.x, y: h.y }
              : h != null
              ? { x: h, y: y ?? h }
              : { x: 0, y: 0 }),
              (this.x = A.x),
              (this.y = A.y);
          },
          extend: {
            clone: function () {
              return new i.Point(this);
            },
            morph: function (h, y) {
              return (this.destination = new i.Point(h, y)), this;
            },
          },
        })),
        i.extend(i.Element, {
          point: function (h, y) {
            return new i.Point(h, y).transform(this.screenCTM().inverse());
          },
        }),
        i.extend(i.Element, {
          attr: function (h, y, A) {
            if (h == null) {
              for (
                h = {}, A = (y = this.node.attributes).length - 1;
                A >= 0;
                A--
              )
                h[y[A].nodeName] = i.regex.isNumber.test(y[A].nodeValue)
                  ? parseFloat(y[A].nodeValue)
                  : y[A].nodeValue;
              return h;
            }
            if (f(h) === 'object') for (var P in h) this.attr(P, h[P]);
            else if (y === null) this.node.removeAttribute(h);
            else {
              if (y == null)
                return (y = this.node.getAttribute(h)) == null
                  ? i.defaults.attrs[h]
                  : i.regex.isNumber.test(y)
                  ? parseFloat(y)
                  : y;
              h == 'stroke-width'
                ? this.attr('stroke', parseFloat(y) > 0 ? this._stroke : null)
                : h == 'stroke' && (this._stroke = y),
                (h != 'fill' && h != 'stroke') ||
                  (i.regex.isImage.test(y) &&
                    (y = this.doc().defs().image(y, 0, 0)),
                  y instanceof i.Image &&
                    (y = this.doc()
                      .defs()
                      .pattern(0, 0, function () {
                        this.add(y);
                      }))),
                typeof y == 'number'
                  ? (y = new i.Number(y))
                  : i.Color.isColor(y)
                  ? (y = new i.Color(y))
                  : Array.isArray(y) && (y = new i.Array(y)),
                h == 'leading'
                  ? this.leading && this.leading(y)
                  : typeof A == 'string'
                  ? this.node.setAttributeNS(A, h, y.toString())
                  : this.node.setAttribute(h, y.toString()),
                !this.rebuild ||
                  (h != 'font-size' && h != 'x') ||
                  this.rebuild(h, y);
            }
            return this;
          },
        }),
        i.extend(i.Element, {
          transform: function (h, y) {
            var A;
            return f(h) !== 'object'
              ? ((A = new i.Matrix(this).extract()),
                typeof h == 'string' ? A[h] : A)
              : ((A = new i.Matrix(this)),
                (y = !!y || !!h.relative),
                h.a != null &&
                  (A = y ? A.multiply(new i.Matrix(h)) : new i.Matrix(h)),
                this.attr('transform', A));
          },
        }),
        i.extend(i.Element, {
          untransform: function () {
            return this.attr('transform', null);
          },
          matrixify: function () {
            return (this.attr('transform') || '')
              .split(i.regex.transforms)
              .slice(0, -1)
              .map(function (h) {
                var y = h.trim().split('(');
                return [
                  y[0],
                  y[1].split(i.regex.delimiter).map(function (A) {
                    return parseFloat(A);
                  }),
                ];
              })
              .reduce(function (h, y) {
                return y[0] == 'matrix'
                  ? h.multiply(S(y[1]))
                  : h[y[0]].apply(h, y[1]);
              }, new i.Matrix());
          },
          toParent: function (h) {
            if (this == h) return this;
            var y = this.screenCTM(),
              A = h.screenCTM().inverse();
            return this.addTo(h).untransform().transform(A.multiply(y)), this;
          },
          toDoc: function () {
            return this.toParent(this.doc());
          },
        }),
        (i.Transformation = i.invent({
          create: function (h, y) {
            if (arguments.length > 1 && typeof y != 'boolean')
              return this.constructor.call(this, [].slice.call(arguments));
            if (Array.isArray(h))
              for (var A = 0, P = this.arguments.length; A < P; ++A)
                this[this.arguments[A]] = h[A];
            else if (h && f(h) === 'object')
              for (A = 0, P = this.arguments.length; A < P; ++A)
                this[this.arguments[A]] = h[this.arguments[A]];
            (this.inversed = !1), y === !0 && (this.inversed = !0);
          },
        })),
        (i.Translate = i.invent({
          parent: i.Matrix,
          inherit: i.Transformation,
          create: function (h, y) {
            this.constructor.apply(this, [].slice.call(arguments));
          },
          extend: {
            arguments: ['transformedX', 'transformedY'],
            method: 'translate',
          },
        })),
        i.extend(i.Element, {
          style: function (h, y) {
            if (arguments.length == 0) return this.node.style.cssText || '';
            if (arguments.length < 2)
              if (f(h) === 'object') for (var A in h) this.style(A, h[A]);
              else {
                if (!i.regex.isCss.test(h)) return this.node.style[p(h)];
                for (
                  h = h
                    .split(/\s*;\s*/)
                    .filter(function (P) {
                      return !!P;
                    })
                    .map(function (P) {
                      return P.split(/\s*:\s*/);
                    });
                  (y = h.pop());

                )
                  this.style(y[0], y[1]);
              }
            else
              this.node.style[p(h)] =
                y === null || i.regex.isBlank.test(y) ? '' : y;
            return this;
          },
        }),
        (i.Parent = i.invent({
          create: function (h) {
            this.constructor.call(this, h);
          },
          inherit: i.Element,
          extend: {
            children: function () {
              return i.utils.map(
                i.utils.filterSVGElements(this.node.childNodes),
                function (h) {
                  return i.adopt(h);
                }
              );
            },
            add: function (h, y) {
              return (
                y == null
                  ? this.node.appendChild(h.node)
                  : h.node != this.node.childNodes[y] &&
                    this.node.insertBefore(h.node, this.node.childNodes[y]),
                this
              );
            },
            put: function (h, y) {
              return this.add(h, y), h;
            },
            has: function (h) {
              return this.index(h) >= 0;
            },
            index: function (h) {
              return [].slice.call(this.node.childNodes).indexOf(h.node);
            },
            get: function (h) {
              return i.adopt(this.node.childNodes[h]);
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.node.childNodes.length - 1);
            },
            each: function (h, y) {
              for (var A = this.children(), P = 0, R = A.length; P < R; P++)
                A[P] instanceof i.Element && h.apply(A[P], [P, A]),
                  y && A[P] instanceof i.Container && A[P].each(h, y);
              return this;
            },
            removeElement: function (h) {
              return this.node.removeChild(h.node), this;
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return delete this._defs, this;
            },
            defs: function () {
              return this.doc().defs();
            },
          },
        })),
        i.extend(i.Parent, {
          ungroup: function (h, y) {
            return (
              y === 0 ||
                this instanceof i.Defs ||
                this.node == i.parser.draw ||
                ((h =
                  h || (this instanceof i.Doc ? this : this.parent(i.Parent))),
                (y = y || 1 / 0),
                this.each(function () {
                  return this instanceof i.Defs
                    ? this
                    : this instanceof i.Parent
                    ? this.ungroup(h, y - 1)
                    : this.toParent(h);
                }),
                this.node.firstChild || this.remove()),
              this
            );
          },
          flatten: function (h, y) {
            return this.ungroup(h, y);
          },
        }),
        (i.Container = i.invent({
          create: function (h) {
            this.constructor.call(this, h);
          },
          inherit: i.Parent,
        })),
        (i.ViewBox = i.invent({ parent: i.Container, construct: {} })),
        [
          'click',
          'dblclick',
          'mousedown',
          'mouseup',
          'mouseover',
          'mouseout',
          'mousemove',
          'touchstart',
          'touchmove',
          'touchleave',
          'touchend',
          'touchcancel',
        ].forEach(function (h) {
          i.Element.prototype[h] = function (y) {
            return i.on(this.node, h, y), this;
          };
        }),
        (i.listeners = []),
        (i.handlerMap = []),
        (i.listenerId = 0),
        (i.on = function (h, y, A, P, R) {
          var O = A.bind(P || h.instance || h),
            X = (i.handlerMap.indexOf(h) + 1 || i.handlerMap.push(h)) - 1,
            G = y.split('.')[0],
            q = y.split('.')[1] || '*';
          (i.listeners[X] = i.listeners[X] || {}),
            (i.listeners[X][G] = i.listeners[X][G] || {}),
            (i.listeners[X][G][q] = i.listeners[X][G][q] || {}),
            A._svgjsListenerId || (A._svgjsListenerId = ++i.listenerId),
            (i.listeners[X][G][q][A._svgjsListenerId] = O),
            h.addEventListener(G, O, R || { passive: !0 });
        }),
        (i.off = function (h, y, A) {
          var P = i.handlerMap.indexOf(h),
            R = y && y.split('.')[0],
            O = y && y.split('.')[1],
            X = '';
          if (P != -1)
            if (A) {
              if ((typeof A == 'function' && (A = A._svgjsListenerId), !A))
                return;
              i.listeners[P][R] &&
                i.listeners[P][R][O || '*'] &&
                (h.removeEventListener(R, i.listeners[P][R][O || '*'][A], !1),
                delete i.listeners[P][R][O || '*'][A]);
            } else if (O && R) {
              if (i.listeners[P][R] && i.listeners[P][R][O]) {
                for (var G in i.listeners[P][R][O])
                  i.off(h, [R, O].join('.'), G);
                delete i.listeners[P][R][O];
              }
            } else if (O)
              for (var q in i.listeners[P])
                for (var X in i.listeners[P][q])
                  O === X && i.off(h, [q, O].join('.'));
            else if (R) {
              if (i.listeners[P][R]) {
                for (var X in i.listeners[P][R]) i.off(h, [R, X].join('.'));
                delete i.listeners[P][R];
              }
            } else {
              for (var q in i.listeners[P]) i.off(h, q);
              delete i.listeners[P], delete i.handlerMap[P];
            }
        }),
        i.extend(i.Element, {
          on: function (h, y, A, P) {
            return i.on(this.node, h, y, A, P), this;
          },
          off: function (h, y) {
            return i.off(this.node, h, y), this;
          },
          fire: function (h, y) {
            return (
              h instanceof j.Event
                ? this.node.dispatchEvent(h)
                : this.node.dispatchEvent(
                    (h = new i.CustomEvent(h, { detail: y, cancelable: !0 }))
                  ),
              (this._event = h),
              this
            );
          },
          event: function () {
            return this._event;
          },
        }),
        (i.Defs = i.invent({ create: 'defs', inherit: i.Container })),
        (i.G = i.invent({
          create: 'g',
          inherit: i.Container,
          extend: {
            x: function (h) {
              return h == null
                ? this.transform('x')
                : this.transform({ x: h - this.x() }, !0);
            },
          },
          construct: {
            group: function () {
              return this.put(new i.G());
            },
          },
        })),
        (i.Doc = i.invent({
          create: function (h) {
            h &&
              ((h = typeof h == 'string' ? t.getElementById(h) : h).nodeName ==
              'svg'
                ? this.constructor.call(this, h)
                : (this.constructor.call(this, i.create('svg')),
                  h.appendChild(this.node),
                  this.size('100%', '100%')),
              this.namespace().defs());
          },
          inherit: i.Container,
          extend: {
            namespace: function () {
              return this.attr({ xmlns: i.ns, version: '1.1' })
                .attr('xmlns:xlink', i.xlink, i.xmlns)
                .attr('xmlns:svgjs', i.svgjs, i.xmlns);
            },
            defs: function () {
              var h;
              return (
                this._defs ||
                  ((h = this.node.getElementsByTagName('defs')[0])
                    ? (this._defs = i.adopt(h))
                    : (this._defs = new i.Defs()),
                  this.node.appendChild(this._defs.node)),
                this._defs
              );
            },
            parent: function () {
              return this.node.parentNode &&
                this.node.parentNode.nodeName != '#document'
                ? this.node.parentNode
                : null;
            },
            remove: function () {
              return (
                this.parent() && this.parent().removeChild(this.node), this
              );
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return (
                delete this._defs,
                i.parser.draw &&
                  !i.parser.draw.parentNode &&
                  this.node.appendChild(i.parser.draw),
                this
              );
            },
            clone: function (h) {
              this.writeDataToDom();
              var y = this.node,
                A = L(y.cloneNode(!0));
              return (
                h
                  ? (h.node || h).appendChild(A.node)
                  : y.parentNode.insertBefore(A.node, y.nextSibling),
                A
              );
            },
          },
        })),
        i.extend(i.Element, {}),
        (i.Gradient = i.invent({
          create: function (h) {
            this.constructor.call(this, i.create(h + 'Gradient')),
              (this.type = h);
          },
          inherit: i.Container,
          extend: {
            at: function (h, y, A) {
              return this.put(new i.Stop()).update(h, y, A);
            },
            update: function (h) {
              return (
                this.clear(), typeof h == 'function' && h.call(this, this), this
              );
            },
            fill: function () {
              return 'url(#' + this.id() + ')';
            },
            toString: function () {
              return this.fill();
            },
            attr: function (h, y, A) {
              return (
                h == 'transform' && (h = 'gradientTransform'),
                i.Container.prototype.attr.call(this, h, y, A)
              );
            },
          },
          construct: {
            gradient: function (h, y) {
              return this.defs().gradient(h, y);
            },
          },
        })),
        i.extend(i.Gradient, i.FX, {
          from: function (h, y) {
            return (this._target || this).type == 'radial'
              ? this.attr({ fx: new i.Number(h), fy: new i.Number(y) })
              : this.attr({ x1: new i.Number(h), y1: new i.Number(y) });
          },
          to: function (h, y) {
            return (this._target || this).type == 'radial'
              ? this.attr({ cx: new i.Number(h), cy: new i.Number(y) })
              : this.attr({ x2: new i.Number(h), y2: new i.Number(y) });
          },
        }),
        i.extend(i.Defs, {
          gradient: function (h, y) {
            return this.put(new i.Gradient(h)).update(y);
          },
        }),
        (i.Stop = i.invent({
          create: 'stop',
          inherit: i.Element,
          extend: {
            update: function (h) {
              return (
                (typeof h == 'number' || h instanceof i.Number) &&
                  (h = {
                    offset: arguments[0],
                    color: arguments[1],
                    opacity: arguments[2],
                  }),
                h.opacity != null && this.attr('stop-opacity', h.opacity),
                h.color != null && this.attr('stop-color', h.color),
                h.offset != null && this.attr('offset', new i.Number(h.offset)),
                this
              );
            },
          },
        })),
        (i.Pattern = i.invent({
          create: 'pattern',
          inherit: i.Container,
          extend: {
            fill: function () {
              return 'url(#' + this.id() + ')';
            },
            update: function (h) {
              return (
                this.clear(), typeof h == 'function' && h.call(this, this), this
              );
            },
            toString: function () {
              return this.fill();
            },
            attr: function (h, y, A) {
              return (
                h == 'transform' && (h = 'patternTransform'),
                i.Container.prototype.attr.call(this, h, y, A)
              );
            },
          },
          construct: {
            pattern: function (h, y, A) {
              return this.defs().pattern(h, y, A);
            },
          },
        })),
        i.extend(i.Defs, {
          pattern: function (h, y, A) {
            return this.put(new i.Pattern()).update(A).attr({
              x: 0,
              y: 0,
              width: h,
              height: y,
              patternUnits: 'userSpaceOnUse',
            });
          },
        }),
        (i.Shape = i.invent({
          create: function (h) {
            this.constructor.call(this, h);
          },
          inherit: i.Element,
        })),
        (i.Symbol = i.invent({
          create: 'symbol',
          inherit: i.Container,
          construct: {
            symbol: function () {
              return this.put(new i.Symbol());
            },
          },
        })),
        (i.Use = i.invent({
          create: 'use',
          inherit: i.Shape,
          extend: {
            element: function (h, y) {
              return this.attr('href', (y || '') + '#' + h, i.xlink);
            },
          },
          construct: {
            use: function (h, y) {
              return this.put(new i.Use()).element(h, y);
            },
          },
        })),
        (i.Rect = i.invent({
          create: 'rect',
          inherit: i.Shape,
          construct: {
            rect: function (h, y) {
              return this.put(new i.Rect()).size(h, y);
            },
          },
        })),
        (i.Circle = i.invent({
          create: 'circle',
          inherit: i.Shape,
          construct: {
            circle: function (h) {
              return this.put(new i.Circle())
                .rx(new i.Number(h).divide(2))
                .move(0, 0);
            },
          },
        })),
        i.extend(i.Circle, i.FX, {
          rx: function (h) {
            return this.attr('r', h);
          },
          ry: function (h) {
            return this.rx(h);
          },
        }),
        (i.Ellipse = i.invent({
          create: 'ellipse',
          inherit: i.Shape,
          construct: {
            ellipse: function (h, y) {
              return this.put(new i.Ellipse()).size(h, y).move(0, 0);
            },
          },
        })),
        i.extend(i.Ellipse, i.Rect, i.FX, {
          rx: function (h) {
            return this.attr('rx', h);
          },
          ry: function (h) {
            return this.attr('ry', h);
          },
        }),
        i.extend(i.Circle, i.Ellipse, {
          x: function (h) {
            return h == null ? this.cx() - this.rx() : this.cx(h + this.rx());
          },
          y: function (h) {
            return h == null ? this.cy() - this.ry() : this.cy(h + this.ry());
          },
          cx: function (h) {
            return h == null ? this.attr('cx') : this.attr('cx', h);
          },
          cy: function (h) {
            return h == null ? this.attr('cy') : this.attr('cy', h);
          },
          width: function (h) {
            return h == null
              ? 2 * this.rx()
              : this.rx(new i.Number(h).divide(2));
          },
          height: function (h) {
            return h == null
              ? 2 * this.ry()
              : this.ry(new i.Number(h).divide(2));
          },
          size: function (h, y) {
            var A = b(this, h, y);
            return this.rx(new i.Number(A.width).divide(2)).ry(
              new i.Number(A.height).divide(2)
            );
          },
        }),
        (i.Line = i.invent({
          create: 'line',
          inherit: i.Shape,
          extend: {
            array: function () {
              return new i.PointArray([
                [this.attr('x1'), this.attr('y1')],
                [this.attr('x2'), this.attr('y2')],
              ]);
            },
            plot: function (h, y, A, P) {
              return h == null
                ? this.array()
                : ((h =
                    y !== void 0
                      ? { x1: h, y1: y, x2: A, y2: P }
                      : new i.PointArray(h).toLine()),
                  this.attr(h));
            },
            move: function (h, y) {
              return this.attr(this.array().move(h, y).toLine());
            },
            size: function (h, y) {
              var A = b(this, h, y);
              return this.attr(this.array().size(A.width, A.height).toLine());
            },
          },
          construct: {
            line: function (h, y, A, P) {
              return i.Line.prototype.plot.apply(
                this.put(new i.Line()),
                h != null ? [h, y, A, P] : [0, 0, 0, 0]
              );
            },
          },
        })),
        (i.Polyline = i.invent({
          create: 'polyline',
          inherit: i.Shape,
          construct: {
            polyline: function (h) {
              return this.put(new i.Polyline()).plot(h || new i.PointArray());
            },
          },
        })),
        (i.Polygon = i.invent({
          create: 'polygon',
          inherit: i.Shape,
          construct: {
            polygon: function (h) {
              return this.put(new i.Polygon()).plot(h || new i.PointArray());
            },
          },
        })),
        i.extend(i.Polyline, i.Polygon, {
          array: function () {
            return (
              this._array ||
              (this._array = new i.PointArray(this.attr('points')))
            );
          },
          plot: function (h) {
            return h == null
              ? this.array()
              : this.clear().attr(
                  'points',
                  typeof h == 'string' ? h : (this._array = new i.PointArray(h))
                );
          },
          clear: function () {
            return delete this._array, this;
          },
          move: function (h, y) {
            return this.attr('points', this.array().move(h, y));
          },
          size: function (h, y) {
            var A = b(this, h, y);
            return this.attr('points', this.array().size(A.width, A.height));
          },
        }),
        i.extend(i.Line, i.Polyline, i.Polygon, {
          morphArray: i.PointArray,
          x: function (h) {
            return h == null ? this.bbox().x : this.move(h, this.bbox().y);
          },
          y: function (h) {
            return h == null ? this.bbox().y : this.move(this.bbox().x, h);
          },
          width: function (h) {
            var y = this.bbox();
            return h == null ? y.width : this.size(h, y.height);
          },
          height: function (h) {
            var y = this.bbox();
            return h == null ? y.height : this.size(y.width, h);
          },
        }),
        (i.Path = i.invent({
          create: 'path',
          inherit: i.Shape,
          extend: {
            morphArray: i.PathArray,
            array: function () {
              return (
                this._array || (this._array = new i.PathArray(this.attr('d')))
              );
            },
            plot: function (h) {
              return h == null
                ? this.array()
                : this.clear().attr(
                    'd',
                    typeof h == 'string'
                      ? h
                      : (this._array = new i.PathArray(h))
                  );
            },
            clear: function () {
              return delete this._array, this;
            },
          },
          construct: {
            path: function (h) {
              return this.put(new i.Path()).plot(h || new i.PathArray());
            },
          },
        })),
        (i.Image = i.invent({
          create: 'image',
          inherit: i.Shape,
          extend: {
            load: function (h) {
              if (!h) return this;
              var y = this,
                A = new j.Image();
              return (
                i.on(A, 'load', function () {
                  i.off(A);
                  var P = y.parent(i.Pattern);
                  P !== null &&
                    (y.width() == 0 &&
                      y.height() == 0 &&
                      y.size(A.width, A.height),
                    P &&
                      P.width() == 0 &&
                      P.height() == 0 &&
                      P.size(y.width(), y.height()),
                    typeof y._loaded == 'function' &&
                      y._loaded.call(y, {
                        width: A.width,
                        height: A.height,
                        ratio: A.width / A.height,
                        url: h,
                      }));
                }),
                i.on(A, 'error', function (P) {
                  i.off(A),
                    typeof y._error == 'function' && y._error.call(y, P);
                }),
                this.attr('href', (A.src = this.src = h), i.xlink)
              );
            },
            loaded: function (h) {
              return (this._loaded = h), this;
            },
            error: function (h) {
              return (this._error = h), this;
            },
          },
          construct: {
            image: function (h, y, A) {
              return this.put(new i.Image())
                .load(h)
                .size(y || 0, A || y || 0);
            },
          },
        })),
        (i.Text = i.invent({
          create: function () {
            this.constructor.call(this, i.create('text')),
              (this.dom.leading = new i.Number(1.3)),
              (this._rebuild = !0),
              (this._build = !1),
              this.attr('font-family', i.defaults.attrs['font-family']);
          },
          inherit: i.Shape,
          extend: {
            x: function (h) {
              return h == null ? this.attr('x') : this.attr('x', h);
            },
            text: function (h) {
              if (h === void 0) {
                h = '';
                for (
                  var y = this.node.childNodes, A = 0, P = y.length;
                  A < P;
                  ++A
                )
                  A != 0 &&
                    y[A].nodeType != 3 &&
                    i.adopt(y[A]).dom.newLined == 1 &&
                    (h += `
`),
                    (h += y[A].textContent);
                return h;
              }
              if ((this.clear().build(!0), typeof h == 'function'))
                h.call(this, this);
              else {
                A = 0;
                for (
                  var R = (h = h.split(`
`)).length;
                  A < R;
                  A++
                )
                  this.tspan(h[A]).newLine();
              }
              return this.build(!1).rebuild();
            },
            size: function (h) {
              return this.attr('font-size', h).rebuild();
            },
            leading: function (h) {
              return h == null
                ? this.dom.leading
                : ((this.dom.leading = new i.Number(h)), this.rebuild());
            },
            lines: function () {
              var h = ((this.textPath && this.textPath()) || this).node,
                y = i.utils.map(
                  i.utils.filterSVGElements(h.childNodes),
                  function (A) {
                    return i.adopt(A);
                  }
                );
              return new i.Set(y);
            },
            rebuild: function (h) {
              if (
                (typeof h == 'boolean' && (this._rebuild = h), this._rebuild)
              ) {
                var y = this,
                  A = 0,
                  P = this.dom.leading * new i.Number(this.attr('font-size'));
                this.lines().each(function () {
                  this.dom.newLined &&
                    (y.textPath() || this.attr('x', y.attr('x')),
                    this.text() ==
                    `
`
                      ? (A += P)
                      : (this.attr('dy', P + A), (A = 0)));
                }),
                  this.fire('rebuild');
              }
              return this;
            },
            build: function (h) {
              return (this._build = !!h), this;
            },
            setData: function (h) {
              return (
                (this.dom = h),
                (this.dom.leading = new i.Number(h.leading || 1.3)),
                this
              );
            },
          },
          construct: {
            text: function (h) {
              return this.put(new i.Text()).text(h);
            },
            plain: function (h) {
              return this.put(new i.Text()).plain(h);
            },
          },
        })),
        (i.Tspan = i.invent({
          create: 'tspan',
          inherit: i.Shape,
          extend: {
            text: function (h) {
              return h == null
                ? this.node.textContent +
                    (this.dom.newLined
                      ? `
`
                      : '')
                : (typeof h == 'function' ? h.call(this, this) : this.plain(h),
                  this);
            },
            dx: function (h) {
              return this.attr('dx', h);
            },
            dy: function (h) {
              return this.attr('dy', h);
            },
            newLine: function () {
              var h = this.parent(i.Text);
              return (
                (this.dom.newLined = !0),
                this.dy(h.dom.leading * h.attr('font-size')).attr('x', h.x())
              );
            },
          },
        })),
        i.extend(i.Text, i.Tspan, {
          plain: function (h) {
            return (
              this._build === !1 && this.clear(),
              this.node.appendChild(t.createTextNode(h)),
              this
            );
          },
          tspan: function (h) {
            var y = ((this.textPath && this.textPath()) || this).node,
              A = new i.Tspan();
            return (
              this._build === !1 && this.clear(),
              y.appendChild(A.node),
              A.text(h)
            );
          },
          clear: function () {
            for (
              var h = ((this.textPath && this.textPath()) || this).node;
              h.hasChildNodes();

            )
              h.removeChild(h.lastChild);
            return this;
          },
          length: function () {
            return this.node.getComputedTextLength();
          },
        }),
        (i.TextPath = i.invent({
          create: 'textPath',
          inherit: i.Parent,
          parent: i.Text,
          construct: {
            morphArray: i.PathArray,
            array: function () {
              var h = this.track();
              return h ? h.array() : null;
            },
            plot: function (h) {
              var y = this.track(),
                A = null;
              return y && (A = y.plot(h)), h == null ? A : this;
            },
            track: function () {
              var h = this.textPath();
              if (h) return h.reference('href');
            },
            textPath: function () {
              if (
                this.node.firstChild &&
                this.node.firstChild.nodeName == 'textPath'
              )
                return i.adopt(this.node.firstChild);
            },
          },
        })),
        (i.Nested = i.invent({
          create: function () {
            this.constructor.call(this, i.create('svg')),
              this.style('overflow', 'visible');
          },
          inherit: i.Container,
          construct: {
            nested: function () {
              return this.put(new i.Nested());
            },
          },
        }));
      var d = {
        stroke: [
          'color',
          'width',
          'opacity',
          'linecap',
          'linejoin',
          'miterlimit',
          'dasharray',
          'dashoffset',
        ],
        fill: ['color', 'opacity', 'rule'],
        prefix: function (h, y) {
          return y == 'color' ? h : h + '-' + y;
        },
      };
      function u(h, y, A, P) {
        return A + P.replace(i.regex.dots, ' .');
      }
      function p(h) {
        return h.toLowerCase().replace(/-(.)/g, function (y, A) {
          return A.toUpperCase();
        });
      }
      function x(h) {
        return h.charAt(0).toUpperCase() + h.slice(1);
      }
      function v(h) {
        var y = h.toString(16);
        return y.length == 1 ? '0' + y : y;
      }
      function b(h, y, A) {
        if (y == null || A == null) {
          var P = h.bbox();
          y == null
            ? (y = (P.width / P.height) * A)
            : A == null && (A = (P.height / P.width) * y);
        }
        return { width: y, height: A };
      }
      function C(h, y, A) {
        return { x: y * h.a + A * h.c + 0, y: y * h.b + A * h.d + 0 };
      }
      function S(h) {
        return { a: h[0], b: h[1], c: h[2], d: h[3], e: h[4], f: h[5] };
      }
      function L(h) {
        for (var y = h.childNodes.length - 1; y >= 0; y--)
          h.childNodes[y] instanceof j.SVGElement && L(h.childNodes[y]);
        return i.adopt(h).id(i.eid(h.nodeName));
      }
      function N(h) {
        return Math.abs(h) > 1e-37 ? h : 0;
      }
      ['fill', 'stroke'].forEach(function (h) {
        var y = {};
        (y[h] = function (A) {
          if (A === void 0) return this;
          if (
            typeof A == 'string' ||
            i.Color.isRgb(A) ||
            (A && typeof A.fill == 'function')
          )
            this.attr(h, A);
          else
            for (var P = d[h].length - 1; P >= 0; P--)
              A[d[h][P]] != null && this.attr(d.prefix(h, d[h][P]), A[d[h][P]]);
          return this;
        }),
          i.extend(i.Element, i.FX, y);
      }),
        i.extend(i.Element, i.FX, {
          translate: function (h, y) {
            return this.transform({ x: h, y });
          },
          matrix: function (h) {
            return this.attr(
              'transform',
              new i.Matrix(arguments.length == 6 ? [].slice.call(arguments) : h)
            );
          },
          opacity: function (h) {
            return this.attr('opacity', h);
          },
          dx: function (h) {
            return this.x(
              new i.Number(h).plus(this instanceof i.FX ? 0 : this.x()),
              !0
            );
          },
          dy: function (h) {
            return this.y(
              new i.Number(h).plus(this instanceof i.FX ? 0 : this.y()),
              !0
            );
          },
        }),
        i.extend(i.Path, {
          length: function () {
            return this.node.getTotalLength();
          },
          pointAt: function (h) {
            return this.node.getPointAtLength(h);
          },
        }),
        (i.Set = i.invent({
          create: function (h) {
            Array.isArray(h) ? (this.members = h) : this.clear();
          },
          extend: {
            add: function () {
              for (
                var h = [].slice.call(arguments), y = 0, A = h.length;
                y < A;
                y++
              )
                this.members.push(h[y]);
              return this;
            },
            remove: function (h) {
              var y = this.index(h);
              return y > -1 && this.members.splice(y, 1), this;
            },
            each: function (h) {
              for (var y = 0, A = this.members.length; y < A; y++)
                h.apply(this.members[y], [y, this.members]);
              return this;
            },
            clear: function () {
              return (this.members = []), this;
            },
            length: function () {
              return this.members.length;
            },
            has: function (h) {
              return this.index(h) >= 0;
            },
            index: function (h) {
              return this.members.indexOf(h);
            },
            get: function (h) {
              return this.members[h];
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.members.length - 1);
            },
            valueOf: function () {
              return this.members;
            },
          },
          construct: {
            set: function (h) {
              return new i.Set(h);
            },
          },
        })),
        (i.FX.Set = i.invent({
          create: function (h) {
            this.set = h;
          },
        })),
        (i.Set.inherit = function () {
          var h = [];
          for (var y in i.Shape.prototype)
            typeof i.Shape.prototype[y] == 'function' &&
              typeof i.Set.prototype[y] != 'function' &&
              h.push(y);
          for (var y in (h.forEach(function (P) {
            i.Set.prototype[P] = function () {
              for (var R = 0, O = this.members.length; R < O; R++)
                this.members[R] &&
                  typeof this.members[R][P] == 'function' &&
                  this.members[R][P].apply(this.members[R], arguments);
              return P == 'animate'
                ? this.fx || (this.fx = new i.FX.Set(this))
                : this;
            };
          }),
          (h = []),
          i.FX.prototype))
            typeof i.FX.prototype[y] == 'function' &&
              typeof i.FX.Set.prototype[y] != 'function' &&
              h.push(y);
          h.forEach(function (A) {
            i.FX.Set.prototype[A] = function () {
              for (var P = 0, R = this.set.members.length; P < R; P++)
                this.set.members[P].fx[A].apply(
                  this.set.members[P].fx,
                  arguments
                );
              return this;
            };
          });
        }),
        i.extend(i.Element, {}),
        i.extend(i.Element, {
          remember: function (h, y) {
            if (f(arguments[0]) === 'object')
              for (var A in h) this.remember(A, h[A]);
            else {
              if (arguments.length == 1) return this.memory()[h];
              this.memory()[h] = y;
            }
            return this;
          },
          forget: function () {
            if (arguments.length == 0) this._memory = {};
            else
              for (var h = arguments.length - 1; h >= 0; h--)
                delete this.memory()[arguments[h]];
            return this;
          },
          memory: function () {
            return this._memory || (this._memory = {});
          },
        }),
        (i.get = function (h) {
          var y = t.getElementById(
            (function (A) {
              var P = (A || '').toString().match(i.regex.reference);
              if (P) return P[1];
            })(h) || h
          );
          return i.adopt(y);
        }),
        (i.select = function (h, y) {
          return new i.Set(
            i.utils.map((y || t).querySelectorAll(h), function (A) {
              return i.adopt(A);
            })
          );
        }),
        i.extend(i.Parent, {
          select: function (h) {
            return i.select(h, this.node);
          },
        });
      var T = 'abcdef'.split('');
      if (typeof j.CustomEvent != 'function') {
        var I = function (h, y) {
          y = y || { bubbles: !1, cancelable: !1, detail: void 0 };
          var A = t.createEvent('CustomEvent');
          return A.initCustomEvent(h, y.bubbles, y.cancelable, y.detail), A;
        };
        (I.prototype = j.Event.prototype), (i.CustomEvent = I);
      } else i.CustomEvent = j.CustomEvent;
      return i;
    }),
    f(n) === 'object'
      ? (e.exports = be.document
          ? fe(be, be.document)
          : function (j) {
              return fe(j, j.document);
            })
      : (be.SVG = fe(be, be.document)),
    function () {
      (SVG.Filter = SVG.invent({
        create: 'filter',
        inherit: SVG.Parent,
        extend: {
          source: 'SourceGraphic',
          sourceAlpha: 'SourceAlpha',
          background: 'BackgroundImage',
          backgroundAlpha: 'BackgroundAlpha',
          fill: 'FillPaint',
          stroke: 'StrokePaint',
          autoSetIn: !0,
          put: function (l, d) {
            return (
              this.add(l, d),
              !l.attr('in') && this.autoSetIn && l.attr('in', this.source),
              l.attr('result') || l.attr('result', l),
              l
            );
          },
          blend: function (l, d, u) {
            return this.put(new SVG.BlendEffect(l, d, u));
          },
          colorMatrix: function (l, d) {
            return this.put(new SVG.ColorMatrixEffect(l, d));
          },
          convolveMatrix: function (l) {
            return this.put(new SVG.ConvolveMatrixEffect(l));
          },
          componentTransfer: function (l) {
            return this.put(new SVG.ComponentTransferEffect(l));
          },
          composite: function (l, d, u) {
            return this.put(new SVG.CompositeEffect(l, d, u));
          },
          flood: function (l, d) {
            return this.put(new SVG.FloodEffect(l, d));
          },
          offset: function (l, d) {
            return this.put(new SVG.OffsetEffect(l, d));
          },
          image: function (l) {
            return this.put(new SVG.ImageEffect(l));
          },
          merge: function () {
            var l = [void 0];
            for (var d in arguments) l.push(arguments[d]);
            return this.put(
              new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, l))()
            );
          },
          gaussianBlur: function (l, d) {
            return this.put(new SVG.GaussianBlurEffect(l, d));
          },
          morphology: function (l, d) {
            return this.put(new SVG.MorphologyEffect(l, d));
          },
          diffuseLighting: function (l, d, u) {
            return this.put(new SVG.DiffuseLightingEffect(l, d, u));
          },
          displacementMap: function (l, d, u, p, x) {
            return this.put(new SVG.DisplacementMapEffect(l, d, u, p, x));
          },
          specularLighting: function (l, d, u, p) {
            return this.put(new SVG.SpecularLightingEffect(l, d, u, p));
          },
          tile: function () {
            return this.put(new SVG.TileEffect());
          },
          turbulence: function (l, d, u, p, x) {
            return this.put(new SVG.TurbulenceEffect(l, d, u, p, x));
          },
          toString: function () {
            return 'url(#' + this.attr('id') + ')';
          },
        },
      })),
        SVG.extend(SVG.Defs, {
          filter: function (l) {
            var d = this.put(new SVG.Filter());
            return typeof l == 'function' && l.call(d, d), d;
          },
        }),
        SVG.extend(SVG.Container, {
          filter: function (l) {
            return this.defs().filter(l);
          },
        }),
        SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
          filter: function (l) {
            return (
              (this.filterer =
                l instanceof SVG.Element ? l : this.doc().filter(l)),
              this.doc() &&
                this.filterer.doc() !== this.doc() &&
                this.doc().defs().add(this.filterer),
              this.attr('filter', this.filterer),
              this.filterer
            );
          },
          unfilter: function (l) {
            return (
              this.filterer && l === !0 && this.filterer.remove(),
              delete this.filterer,
              this.attr('filter', null)
            );
          },
        }),
        (SVG.Effect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (l) {
              return l == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr('in') + '"]')
                      .get(0)) ||
                    this.attr('in')
                : this.attr('in', l);
            },
            result: function (l) {
              return l == null ? this.attr('result') : this.attr('result', l);
            },
            toString: function () {
              return this.result();
            },
          },
        })),
        (SVG.ParentEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Parent,
          extend: {
            in: function (l) {
              return l == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr('in') + '"]')
                      .get(0)) ||
                    this.attr('in')
                : this.attr('in', l);
            },
            result: function (l) {
              return l == null ? this.attr('result') : this.attr('result', l);
            },
            toString: function () {
              return this.result();
            },
          },
        }));
      var j = {
        blend: function (l, d) {
          return this.parent() && this.parent().blend(this, l, d);
        },
        colorMatrix: function (l, d) {
          return this.parent() && this.parent().colorMatrix(l, d).in(this);
        },
        convolveMatrix: function (l) {
          return this.parent() && this.parent().convolveMatrix(l).in(this);
        },
        componentTransfer: function (l) {
          return this.parent() && this.parent().componentTransfer(l).in(this);
        },
        composite: function (l, d) {
          return this.parent() && this.parent().composite(this, l, d);
        },
        flood: function (l, d) {
          return this.parent() && this.parent().flood(l, d);
        },
        offset: function (l, d) {
          return this.parent() && this.parent().offset(l, d).in(this);
        },
        image: function (l) {
          return this.parent() && this.parent().image(l);
        },
        merge: function () {
          return (
            this.parent() &&
            this.parent().merge.apply(this.parent(), [this].concat(arguments))
          );
        },
        gaussianBlur: function (l, d) {
          return this.parent() && this.parent().gaussianBlur(l, d).in(this);
        },
        morphology: function (l, d) {
          return this.parent() && this.parent().morphology(l, d).in(this);
        },
        diffuseLighting: function (l, d, u) {
          return (
            this.parent() && this.parent().diffuseLighting(l, d, u).in(this)
          );
        },
        displacementMap: function (l, d, u, p) {
          return (
            this.parent() && this.parent().displacementMap(this, l, d, u, p)
          );
        },
        specularLighting: function (l, d, u, p) {
          return (
            this.parent() && this.parent().specularLighting(l, d, u, p).in(this)
          );
        },
        tile: function () {
          return this.parent() && this.parent().tile().in(this);
        },
        turbulence: function (l, d, u, p, x) {
          return (
            this.parent() && this.parent().turbulence(l, d, u, p, x).in(this)
          );
        },
      };
      SVG.extend(SVG.Effect, j),
        SVG.extend(SVG.ParentEffect, j),
        (SVG.ChildEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (l) {
              this.attr('in', l);
            },
          },
        }));
      var t = {
          blend: function (l, d, u) {
            this.attr({ in: l, in2: d, mode: u || 'normal' });
          },
          colorMatrix: function (l, d) {
            l == 'matrix' && (d = s(d)),
              this.attr({ type: l, values: d === void 0 ? null : d });
          },
          convolveMatrix: function (l) {
            (l = s(l)),
              this.attr({
                order: Math.sqrt(l.split(' ').length),
                kernelMatrix: l,
              });
          },
          composite: function (l, d, u) {
            this.attr({ in: l, in2: d, operator: u });
          },
          flood: function (l, d) {
            this.attr('flood-color', l),
              d != null && this.attr('flood-opacity', d);
          },
          offset: function (l, d) {
            this.attr({ dx: l, dy: d });
          },
          image: function (l) {
            this.attr('href', l, SVG.xlink);
          },
          displacementMap: function (l, d, u, p, x) {
            this.attr({
              in: l,
              in2: d,
              scale: u,
              xChannelSelector: p,
              yChannelSelector: x,
            });
          },
          gaussianBlur: function (l, d) {
            l != null || d != null
              ? this.attr(
                  'stdDeviation',
                  (function (u) {
                    if (!Array.isArray(u)) return u;
                    for (var p = 0, x = u.length, v = []; p < x; p++)
                      v.push(u[p]);
                    return v.join(' ');
                  })(Array.prototype.slice.call(arguments))
                )
              : this.attr('stdDeviation', '0 0');
          },
          morphology: function (l, d) {
            this.attr({ operator: l, radius: d });
          },
          tile: function () {},
          turbulence: function (l, d, u, p, x) {
            this.attr({
              numOctaves: d,
              seed: u,
              stitchTiles: p,
              baseFrequency: l,
              type: x,
            });
          },
        },
        i = {
          merge: function () {
            var l;
            if (arguments[0] instanceof SVG.Set) {
              var d = this;
              arguments[0].each(function (p) {
                this instanceof SVG.MergeNode
                  ? d.put(this)
                  : (this instanceof SVG.Effect ||
                      this instanceof SVG.ParentEffect) &&
                    d.put(new SVG.MergeNode(this));
              });
            } else {
              l = Array.isArray(arguments[0]) ? arguments[0] : arguments;
              for (var u = 0; u < l.length; u++)
                l[u] instanceof SVG.MergeNode
                  ? this.put(l[u])
                  : this.put(new SVG.MergeNode(l[u]));
            }
          },
          componentTransfer: function (l) {
            if (
              ((this.rgb = new SVG.Set()),
              ['r', 'g', 'b', 'a'].forEach(
                function (u) {
                  (this[u] = new SVG['Func' + u.toUpperCase()]('identity')),
                    this.rgb.add(this[u]),
                    this.node.appendChild(this[u].node);
                }.bind(this)
              ),
              l)
            )
              for (var d in (l.rgb &&
                (['r', 'g', 'b'].forEach(
                  function (u) {
                    this[u].attr(l.rgb);
                  }.bind(this)
                ),
                delete l.rgb),
              l))
                this[d].attr(l[d]);
          },
          diffuseLighting: function (l, d, u) {
            this.attr({
              surfaceScale: l,
              diffuseConstant: d,
              kernelUnitLength: u,
            });
          },
          specularLighting: function (l, d, u, p) {
            this.attr({
              surfaceScale: l,
              diffuseConstant: d,
              specularExponent: u,
              kernelUnitLength: p,
            });
          },
        },
        a = {
          distantLight: function (l, d) {
            this.attr({ azimuth: l, elevation: d });
          },
          pointLight: function (l, d, u) {
            this.attr({ x: l, y: d, z: u });
          },
          spotLight: function (l, d, u, p, x, v) {
            this.attr({
              x: l,
              y: d,
              z: u,
              pointsAtX: p,
              pointsAtY: x,
              pointsAtZ: v,
            });
          },
          mergeNode: function (l) {
            this.attr('in', l);
          },
        };
      function s(l) {
        return (
          Array.isArray(l) && (l = new SVG.Array(l)),
          l
            .toString()
            .replace(/^\s+/, '')
            .replace(/\s+$/, '')
            .replace(/\s+/g, ' ')
        );
      }
      function o() {
        var l = function () {};
        for (var d in (typeof arguments[arguments.length - 1] == 'function' &&
          ((l = arguments[arguments.length - 1]),
          Array.prototype.splice.call(arguments, arguments.length - 1, 1)),
        arguments))
          for (var u in arguments[d]) l(arguments[d][u], u, arguments[d]);
      }
      ['r', 'g', 'b', 'a'].forEach(function (l) {
        a['Func' + l.toUpperCase()] = function (d) {
          switch ((this.attr('type', d), d)) {
            case 'table':
              this.attr('tableValues', arguments[1]);
              break;
            case 'linear':
              this.attr('slope', arguments[1]),
                this.attr('intercept', arguments[2]);
              break;
            case 'gamma':
              this.attr('amplitude', arguments[1]),
                this.attr('exponent', arguments[2]),
                this.attr('offset', arguments[2]);
          }
        };
      }),
        o(t, function (l, d) {
          var u = d.charAt(0).toUpperCase() + d.slice(1);
          SVG[u + 'Effect'] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create('fe' + u)),
                l.apply(this, arguments),
                this.result(this.attr('id') + 'Out');
            },
            inherit: SVG.Effect,
            extend: {},
          });
        }),
        o(i, function (l, d) {
          var u = d.charAt(0).toUpperCase() + d.slice(1);
          SVG[u + 'Effect'] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create('fe' + u)),
                l.apply(this, arguments),
                this.result(this.attr('id') + 'Out');
            },
            inherit: SVG.ParentEffect,
            extend: {},
          });
        }),
        o(a, function (l, d) {
          var u = d.charAt(0).toUpperCase() + d.slice(1);
          SVG[u] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create('fe' + u)),
                l.apply(this, arguments);
            },
            inherit: SVG.ChildEffect,
            extend: {},
          });
        }),
        SVG.extend(SVG.MergeEffect, {
          in: function (l) {
            return (
              l instanceof SVG.MergeNode
                ? this.add(l, 0)
                : this.add(new SVG.MergeNode(l), 0),
              this
            );
          },
        }),
        SVG.extend(
          SVG.CompositeEffect,
          SVG.BlendEffect,
          SVG.DisplacementMapEffect,
          {
            in2: function (l) {
              return l == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr('in2') + '"]')
                      .get(0)) ||
                    this.attr('in2')
                : this.attr('in2', l);
            },
          }
        ),
        (SVG.filter = {
          sepiatone: [
            0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172, 0.334,
            0.111, 0, 0, 0, 0, 0, 1, 0,
          ],
        });
    }.call(void 0),
    (function () {
      function j(o, l, d, u, p, x, v) {
        for (
          var b = o.slice(l, d || v),
            C = u.slice(p, x || v),
            S = 0,
            L = { pos: [0, 0], start: [0, 0] },
            N = { pos: [0, 0], start: [0, 0] };
          (b[S] = t.call(L, b[S])),
            (C[S] = t.call(N, C[S])),
            b[S][0] != C[S][0] ||
            b[S][0] == 'M' ||
            (b[S][0] == 'A' && (b[S][4] != C[S][4] || b[S][5] != C[S][5]))
              ? (Array.prototype.splice.apply(
                  b,
                  [S, 1].concat(a.call(L, b[S]))
                ),
                Array.prototype.splice.apply(C, [S, 1].concat(a.call(N, C[S]))))
              : ((b[S] = i.call(L, b[S])), (C[S] = i.call(N, C[S]))),
            !(++S == b.length && S == C.length);

        )
          S == b.length &&
            b.push([
              'C',
              L.pos[0],
              L.pos[1],
              L.pos[0],
              L.pos[1],
              L.pos[0],
              L.pos[1],
            ]),
            S == C.length &&
              C.push([
                'C',
                N.pos[0],
                N.pos[1],
                N.pos[0],
                N.pos[1],
                N.pos[0],
                N.pos[1],
              ]);
        return { start: b, dest: C };
      }
      function t(o) {
        switch (o[0]) {
          case 'z':
          case 'Z':
            (o[0] = 'L'), (o[1] = this.start[0]), (o[2] = this.start[1]);
            break;
          case 'H':
            (o[0] = 'L'), (o[2] = this.pos[1]);
            break;
          case 'V':
            (o[0] = 'L'), (o[2] = o[1]), (o[1] = this.pos[0]);
            break;
          case 'T':
            (o[0] = 'Q'),
              (o[3] = o[1]),
              (o[4] = o[2]),
              (o[1] = this.reflection[1]),
              (o[2] = this.reflection[0]);
            break;
          case 'S':
            (o[0] = 'C'),
              (o[6] = o[4]),
              (o[5] = o[3]),
              (o[4] = o[2]),
              (o[3] = o[1]),
              (o[2] = this.reflection[1]),
              (o[1] = this.reflection[0]);
        }
        return o;
      }
      function i(o) {
        var l = o.length;
        return (
          (this.pos = [o[l - 2], o[l - 1]]),
          'SCQT'.indexOf(o[0]) != -1 &&
            (this.reflection = [
              2 * this.pos[0] - o[l - 4],
              2 * this.pos[1] - o[l - 3],
            ]),
          o
        );
      }
      function a(o) {
        var l = [o];
        switch (o[0]) {
          case 'M':
            return (this.pos = this.start = [o[1], o[2]]), l;
          case 'L':
            (o[5] = o[3] = o[1]),
              (o[6] = o[4] = o[2]),
              (o[1] = this.pos[0]),
              (o[2] = this.pos[1]);
            break;
          case 'Q':
            (o[6] = o[4]),
              (o[5] = o[3]),
              (o[4] = (1 * o[4]) / 3 + (2 * o[2]) / 3),
              (o[3] = (1 * o[3]) / 3 + (2 * o[1]) / 3),
              (o[2] = (1 * this.pos[1]) / 3 + (2 * o[2]) / 3),
              (o[1] = (1 * this.pos[0]) / 3 + (2 * o[1]) / 3);
            break;
          case 'A':
            (l = (function (d, u) {
              var p,
                x,
                v,
                b,
                C,
                S,
                L,
                N,
                T,
                I,
                h,
                y,
                A,
                P,
                R,
                O,
                X,
                G,
                q,
                ie,
                re,
                se,
                me,
                Se,
                Ae,
                Ne,
                Ze = Math.abs(u[1]),
                Ye = Math.abs(u[2]),
                et = u[3] % 360,
                Ri = u[4],
                cr = u[5],
                ko = u[6],
                So = u[7],
                At = new SVG.Point(d),
                ut = new SVG.Point(ko, So),
                bd = [];
              if (Ze === 0 || Ye === 0 || (At.x === ut.x && At.y === ut.y))
                return [['C', At.x, At.y, ut.x, ut.y, ut.x, ut.y]];
              for (
                p = new SVG.Point(
                  (At.x - ut.x) / 2,
                  (At.y - ut.y) / 2
                ).transform(new SVG.Matrix().rotate(et)),
                  (x = (p.x * p.x) / (Ze * Ze) + (p.y * p.y) / (Ye * Ye)) > 1 &&
                    ((Ze *= x = Math.sqrt(x)), (Ye *= x)),
                  v = new SVG.Matrix()
                    .rotate(et)
                    .scale(1 / Ze, 1 / Ye)
                    .rotate(-et),
                  At = At.transform(v),
                  ut = ut.transform(v),
                  b = [ut.x - At.x, ut.y - At.y],
                  S = b[0] * b[0] + b[1] * b[1],
                  C = Math.sqrt(S),
                  b[0] /= C,
                  b[1] /= C,
                  L = S < 4 ? Math.sqrt(1 - S / 4) : 0,
                  Ri === cr && (L *= -1),
                  N = new SVG.Point(
                    (ut.x + At.x) / 2 + L * -b[1],
                    (ut.y + At.y) / 2 + L * b[0]
                  ),
                  T = new SVG.Point(At.x - N.x, At.y - N.y),
                  I = new SVG.Point(ut.x - N.x, ut.y - N.y),
                  h = Math.acos(T.x / Math.sqrt(T.x * T.x + T.y * T.y)),
                  T.y < 0 && (h *= -1),
                  y = Math.acos(I.x / Math.sqrt(I.x * I.x + I.y * I.y)),
                  I.y < 0 && (y *= -1),
                  cr && h > y && (y += 2 * Math.PI),
                  !cr && h < y && (y -= 2 * Math.PI),
                  P = Math.ceil((2 * Math.abs(h - y)) / Math.PI),
                  O = [],
                  X = h,
                  A = (y - h) / P,
                  R = (4 * Math.tan(A / 4)) / 3,
                  re = 0;
                re <= P;
                re++
              )
                (q = Math.cos(X)),
                  (G = Math.sin(X)),
                  (ie = new SVG.Point(N.x + q, N.y + G)),
                  (O[re] = [
                    new SVG.Point(ie.x + R * G, ie.y - R * q),
                    ie,
                    new SVG.Point(ie.x - R * G, ie.y + R * q),
                  ]),
                  (X += A);
              for (
                O[0][0] = O[0][1].clone(),
                  O[O.length - 1][2] = O[O.length - 1][1].clone(),
                  v = new SVG.Matrix().rotate(et).scale(Ze, Ye).rotate(-et),
                  re = 0,
                  se = O.length;
                re < se;
                re++
              )
                (O[re][0] = O[re][0].transform(v)),
                  (O[re][1] = O[re][1].transform(v)),
                  (O[re][2] = O[re][2].transform(v));
              for (re = 1, se = O.length; re < se; re++)
                (me = (ie = O[re - 1][2]).x),
                  (Se = ie.y),
                  (Ae = (ie = O[re][0]).x),
                  (Ne = ie.y),
                  (ko = (ie = O[re][1]).x),
                  (So = ie.y),
                  bd.push(['C', me, Se, Ae, Ne, ko, So]);
              return bd;
            })(this.pos, o)),
              (o = l[0]);
        }
        return (
          (o[0] = 'C'),
          (this.pos = [o[5], o[6]]),
          (this.reflection = [2 * o[5] - o[3], 2 * o[6] - o[4]]),
          l
        );
      }
      function s(o, l) {
        if (l === !1) return !1;
        for (var d = l, u = o.length; d < u; ++d) if (o[d][0] == 'M') return d;
        return !1;
      }
      SVG.extend(SVG.PathArray, {
        morph: function (o) {
          for (
            var l = this.value, d = this.parse(o), u = 0, p = 0, x = !1, v = !1;
            u !== !1 || p !== !1;

          ) {
            var b;
            (x = s(l, u !== !1 && u + 1)),
              (v = s(d, p !== !1 && p + 1)),
              u === !1 &&
                (u =
                  (b = new SVG.PathArray(C.start).bbox()).height == 0 ||
                  b.width == 0
                    ? l.push(l[0]) - 1
                    : l.push(['M', b.x + b.width / 2, b.y + b.height / 2]) - 1),
              p === !1 &&
                (p =
                  (b = new SVG.PathArray(C.dest).bbox()).height == 0 ||
                  b.width == 0
                    ? d.push(d[0]) - 1
                    : d.push(['M', b.x + b.width / 2, b.y + b.height / 2]) - 1);
            var C = j(l, u, x, d, p, v);
            (l = l.slice(0, u).concat(C.start, x === !1 ? [] : l.slice(x))),
              (d = d.slice(0, p).concat(C.dest, v === !1 ? [] : d.slice(v))),
              (u = x !== !1 && u + C.start.length),
              (p = v !== !1 && p + C.dest.length);
          }
          return (
            (this.value = l),
            (this.destination = new SVG.PathArray()),
            (this.destination.value = d),
            this
          );
        },
      });
    })(),
    function () {
      function j(t) {
        t.remember('_draggable', this), (this.el = t);
      }
      (j.prototype.init = function (t, i) {
        var a = this;
        (this.constraint = t),
          (this.value = i),
          this.el.on('mousedown.drag', function (s) {
            a.start(s);
          }),
          this.el.on('touchstart.drag', function (s) {
            a.start(s);
          });
      }),
        (j.prototype.transformPoint = function (t, i) {
          var a =
            ((t = t || window.event).changedTouches && t.changedTouches[0]) ||
            t;
          return (
            (this.p.x = a.clientX - (i || 0)),
            (this.p.y = a.clientY),
            this.p.matrixTransform(this.m)
          );
        }),
        (j.prototype.getBBox = function () {
          var t = this.el.bbox();
          return (
            this.el instanceof SVG.Nested && (t = this.el.rbox()),
            (this.el instanceof SVG.G ||
              this.el instanceof SVG.Use ||
              this.el instanceof SVG.Nested) &&
              ((t.x = this.el.x()), (t.y = this.el.y())),
            t
          );
        }),
        (j.prototype.start = function (t) {
          if (
            (t.type != 'click' &&
              t.type != 'mousedown' &&
              t.type != 'mousemove') ||
            (t.which || t.buttons) == 1
          ) {
            var i = this;
            if (
              (this.el.fire('beforedrag', { event: t, handler: this }),
              !this.el.event().defaultPrevented)
            ) {
              t.preventDefault(),
                t.stopPropagation(),
                (this.parent =
                  this.parent ||
                  this.el.parent(SVG.Nested) ||
                  this.el.parent(SVG.Doc)),
                (this.p = this.parent.node.createSVGPoint()),
                (this.m = this.el.node.getScreenCTM().inverse());
              var a,
                s = this.getBBox();
              if (this.el instanceof SVG.Text)
                switch (
                  ((a = this.el.node.getComputedTextLength()),
                  this.el.attr('text-anchor'))
                ) {
                  case 'middle':
                    a /= 2;
                    break;
                  case 'start':
                    a = 0;
                }
              (this.startPoints = {
                point: this.transformPoint(t, a),
                box: s,
                transform: this.el.transform(),
              }),
                SVG.on(window, 'mousemove.drag', function (o) {
                  i.drag(o);
                }),
                SVG.on(window, 'touchmove.drag', function (o) {
                  i.drag(o);
                }),
                SVG.on(window, 'mouseup.drag', function (o) {
                  i.end(o);
                }),
                SVG.on(window, 'touchend.drag', function (o) {
                  i.end(o);
                }),
                this.el.fire('dragstart', {
                  event: t,
                  p: this.startPoints.point,
                  m: this.m,
                  handler: this,
                });
            }
          }
        }),
        (j.prototype.drag = function (t) {
          var i = this.getBBox(),
            a = this.transformPoint(t),
            s = this.startPoints.box.x + a.x - this.startPoints.point.x,
            o = this.startPoints.box.y + a.y - this.startPoints.point.y,
            l = this.constraint,
            d = a.x - this.startPoints.point.x,
            u = a.y - this.startPoints.point.y;
          if (
            (this.el.fire('dragmove', {
              event: t,
              p: a,
              m: this.m,
              handler: this,
            }),
            this.el.event().defaultPrevented)
          )
            return a;
          if (typeof l == 'function') {
            var p = l.call(this.el, s, o, this.m);
            typeof p == 'boolean' && (p = { x: p, y: p }),
              p.x === !0 ? this.el.x(s) : p.x !== !1 && this.el.x(p.x),
              p.y === !0 ? this.el.y(o) : p.y !== !1 && this.el.y(p.y);
          } else
            typeof l == 'object' &&
              (l.minX != null && s < l.minX
                ? (d = (s = l.minX) - this.startPoints.box.x)
                : l.maxX != null &&
                  s > l.maxX - i.width &&
                  (d = (s = l.maxX - i.width) - this.startPoints.box.x),
              l.minY != null && o < l.minY
                ? (u = (o = l.minY) - this.startPoints.box.y)
                : l.maxY != null &&
                  o > l.maxY - i.height &&
                  (u = (o = l.maxY - i.height) - this.startPoints.box.y),
              l.snapToGrid != null &&
                ((s -= s % l.snapToGrid),
                (o -= o % l.snapToGrid),
                (d -= d % l.snapToGrid),
                (u -= u % l.snapToGrid)),
              this.el instanceof SVG.G
                ? this.el
                    .matrix(this.startPoints.transform)
                    .transform({ x: d, y: u }, !0)
                : this.el.move(s, o));
          return a;
        }),
        (j.prototype.end = function (t) {
          var i = this.drag(t);
          this.el.fire('dragend', { event: t, p: i, m: this.m, handler: this }),
            SVG.off(window, 'mousemove.drag'),
            SVG.off(window, 'touchmove.drag'),
            SVG.off(window, 'mouseup.drag'),
            SVG.off(window, 'touchend.drag');
        }),
        SVG.extend(SVG.Element, {
          draggable: function (t, i) {
            (typeof t != 'function' && typeof t != 'object') ||
              ((i = t), (t = !0));
            var a = this.remember('_draggable') || new j(this);
            return (
              (t = t === void 0 || t)
                ? a.init(i || {}, t)
                : (this.off('mousedown.drag'), this.off('touchstart.drag')),
              this
            );
          },
        });
    }.call(void 0),
    (function () {
      function j(t) {
        (this.el = t),
          t.remember('_selectHandler', this),
          (this.pointSelection = { isSelected: !1 }),
          (this.rectSelection = { isSelected: !1 }),
          (this.pointsList = {
            lt: [0, 0],
            rt: ['width', 0],
            rb: ['width', 'height'],
            lb: [0, 'height'],
            t: ['width', 0],
            r: ['width', 'height'],
            b: ['width', 'height'],
            l: [0, 'height'],
          }),
          (this.pointCoord = function (i, a, s) {
            var o = typeof i != 'string' ? i : a[i];
            return s ? o / 2 : o;
          }),
          (this.pointCoords = function (i, a) {
            var s = this.pointsList[i];
            return {
              x: this.pointCoord(s[0], a, i === 't' || i === 'b'),
              y: this.pointCoord(s[1], a, i === 'r' || i === 'l'),
            };
          });
      }
      (j.prototype.init = function (t, i) {
        var a = this.el.bbox();
        this.options = {};
        var s = this.el.selectize.defaults.points;
        for (var o in this.el.selectize.defaults)
          (this.options[o] = this.el.selectize.defaults[o]),
            i[o] !== void 0 && (this.options[o] = i[o]);
        var l = ['points', 'pointsExclude'];
        for (var o in l) {
          var d = this.options[l[o]];
          typeof d == 'string'
            ? (d = d.length > 0 ? d.split(/\s*,\s*/i) : [])
            : typeof d == 'boolean' && l[o] === 'points' && (d = d ? s : []),
            (this.options[l[o]] = d);
        }
        (this.options.points = [s, this.options.points].reduce(function (u, p) {
          return u.filter(function (x) {
            return p.indexOf(x) > -1;
          });
        })),
          (this.options.points = [
            this.options.points,
            this.options.pointsExclude,
          ].reduce(function (u, p) {
            return u.filter(function (x) {
              return p.indexOf(x) < 0;
            });
          })),
          (this.parent = this.el.parent()),
          (this.nested = this.nested || this.parent.group()),
          this.nested.matrix(new SVG.Matrix(this.el).translate(a.x, a.y)),
          this.options.deepSelect &&
          ['line', 'polyline', 'polygon'].indexOf(this.el.type) !== -1
            ? this.selectPoints(t)
            : this.selectRect(t),
          this.observe(),
          this.cleanup();
      }),
        (j.prototype.selectPoints = function (t) {
          return (
            (this.pointSelection.isSelected = t),
            this.pointSelection.set ||
              ((this.pointSelection.set = this.parent.set()),
              this.drawPoints()),
            this
          );
        }),
        (j.prototype.getPointArray = function () {
          var t = this.el.bbox();
          return this.el
            .array()
            .valueOf()
            .map(function (i) {
              return [i[0] - t.x, i[1] - t.y];
            });
        }),
        (j.prototype.drawPoints = function () {
          for (
            var t = this, i = this.getPointArray(), a = 0, s = i.length;
            a < s;
            ++a
          ) {
            var o = (function (d) {
                return function (u) {
                  (u = u || window.event).preventDefault
                    ? u.preventDefault()
                    : (u.returnValue = !1),
                    u.stopPropagation();
                  var p = u.pageX || u.touches[0].pageX,
                    x = u.pageY || u.touches[0].pageY;
                  t.el.fire('point', { x: p, y: x, i: d, event: u });
                };
              })(a),
              l = this.drawPoint(i[a][0], i[a][1])
                .addClass(this.options.classPoints)
                .addClass(this.options.classPoints + '_point')
                .on('touchstart', o)
                .on('mousedown', o);
            this.pointSelection.set.add(l);
          }
        }),
        (j.prototype.drawPoint = function (t, i) {
          var a = this.options.pointType;
          switch (a) {
            case 'circle':
              return this.drawCircle(t, i);
            case 'rect':
              return this.drawRect(t, i);
            default:
              if (typeof a == 'function') return a.call(this, t, i);
              throw new Error('Unknown ' + a + ' point type!');
          }
        }),
        (j.prototype.drawCircle = function (t, i) {
          return this.nested.circle(this.options.pointSize).center(t, i);
        }),
        (j.prototype.drawRect = function (t, i) {
          return this.nested
            .rect(this.options.pointSize, this.options.pointSize)
            .center(t, i);
        }),
        (j.prototype.updatePointSelection = function () {
          var t = this.getPointArray();
          this.pointSelection.set.each(function (i) {
            (this.cx() === t[i][0] && this.cy() === t[i][1]) ||
              this.center(t[i][0], t[i][1]);
          });
        }),
        (j.prototype.updateRectSelection = function () {
          var t = this,
            i = this.el.bbox();
          if (
            (this.rectSelection.set
              .get(0)
              .attr({ width: i.width, height: i.height }),
            this.options.points.length &&
              this.options.points.map(function (s, o) {
                var l = t.pointCoords(s, i);
                t.rectSelection.set.get(o + 1).center(l.x, l.y);
              }),
            this.options.rotationPoint)
          ) {
            var a = this.rectSelection.set.length();
            this.rectSelection.set.get(a - 1).center(i.width / 2, 20);
          }
        }),
        (j.prototype.selectRect = function (t) {
          var i = this,
            a = this.el.bbox();
          function s(d) {
            return function (u) {
              (u = u || window.event).preventDefault
                ? u.preventDefault()
                : (u.returnValue = !1),
                u.stopPropagation();
              var p = u.pageX || u.touches[0].pageX,
                x = u.pageY || u.touches[0].pageY;
              i.el.fire(d, { x: p, y: x, event: u });
            };
          }
          if (
            ((this.rectSelection.isSelected = t),
            (this.rectSelection.set =
              this.rectSelection.set || this.parent.set()),
            this.rectSelection.set.get(0) ||
              this.rectSelection.set.add(
                this.nested
                  .rect(a.width, a.height)
                  .addClass(this.options.classRect)
              ),
            this.options.points.length &&
              this.rectSelection.set.length() < 2 &&
              (this.options.points.map(function (d, u) {
                var p = i.pointCoords(d, a),
                  x = i
                    .drawPoint(p.x, p.y)
                    .attr('class', i.options.classPoints + '_' + d)
                    .on('mousedown', s(d))
                    .on('touchstart', s(d));
                i.rectSelection.set.add(x);
              }),
              this.rectSelection.set.each(function () {
                this.addClass(i.options.classPoints);
              })),
            this.options.rotationPoint &&
              ((this.options.points && !this.rectSelection.set.get(9)) ||
                (!this.options.points && !this.rectSelection.set.get(1))))
          ) {
            var o = function (d) {
                (d = d || window.event).preventDefault
                  ? d.preventDefault()
                  : (d.returnValue = !1),
                  d.stopPropagation();
                var u = d.pageX || d.touches[0].pageX,
                  p = d.pageY || d.touches[0].pageY;
                i.el.fire('rot', { x: u, y: p, event: d });
              },
              l = this.drawPoint(a.width / 2, 20)
                .attr('class', this.options.classPoints + '_rot')
                .on('touchstart', o)
                .on('mousedown', o);
            this.rectSelection.set.add(l);
          }
        }),
        (j.prototype.handler = function () {
          var t = this.el.bbox();
          this.nested.matrix(new SVG.Matrix(this.el).translate(t.x, t.y)),
            this.rectSelection.isSelected && this.updateRectSelection(),
            this.pointSelection.isSelected && this.updatePointSelection();
        }),
        (j.prototype.observe = function () {
          var t = this;
          if (MutationObserver)
            if (this.rectSelection.isSelected || this.pointSelection.isSelected)
              (this.observerInst =
                this.observerInst ||
                new MutationObserver(function () {
                  t.handler();
                })),
                this.observerInst.observe(this.el.node, { attributes: !0 });
            else
              try {
                this.observerInst.disconnect(), delete this.observerInst;
              } catch {}
          else
            this.el.off('DOMAttrModified.select'),
              (this.rectSelection.isSelected ||
                this.pointSelection.isSelected) &&
                this.el.on('DOMAttrModified.select', function () {
                  t.handler();
                });
        }),
        (j.prototype.cleanup = function () {
          !this.rectSelection.isSelected &&
            this.rectSelection.set &&
            (this.rectSelection.set.each(function () {
              this.remove();
            }),
            this.rectSelection.set.clear(),
            delete this.rectSelection.set),
            !this.pointSelection.isSelected &&
              this.pointSelection.set &&
              (this.pointSelection.set.each(function () {
                this.remove();
              }),
              this.pointSelection.set.clear(),
              delete this.pointSelection.set),
            this.pointSelection.isSelected ||
              this.rectSelection.isSelected ||
              (this.nested.remove(), delete this.nested);
        }),
        SVG.extend(SVG.Element, {
          selectize: function (t, i) {
            return (
              typeof t == 'object' && ((i = t), (t = !0)),
              (this.remember('_selectHandler') || new j(this)).init(
                t === void 0 || t,
                i || {}
              ),
              this
            );
          },
        }),
        (SVG.Element.prototype.selectize.defaults = {
          points: ['lt', 'rt', 'rb', 'lb', 't', 'r', 'b', 'l'],
          pointsExclude: [],
          classRect: 'svg_select_boundingRect',
          classPoints: 'svg_select_points',
          pointSize: 7,
          rotationPoint: !0,
          deepSelect: !1,
          pointType: 'circle',
        });
    })(),
    (function () {
      (function () {
        function j(t) {
          t.remember('_resizeHandler', this),
            (this.el = t),
            (this.parameters = {}),
            (this.lastUpdateCall = null),
            (this.p = t.doc().node.createSVGPoint());
        }
        (j.prototype.transformPoint = function (t, i, a) {
          return (
            (this.p.x = t - (this.offset.x - window.pageXOffset)),
            (this.p.y = i - (this.offset.y - window.pageYOffset)),
            this.p.matrixTransform(a || this.m)
          );
        }),
          (j.prototype._extractPosition = function (t) {
            return {
              x: t.clientX != null ? t.clientX : t.touches[0].clientX,
              y: t.clientY != null ? t.clientY : t.touches[0].clientY,
            };
          }),
          (j.prototype.init = function (t) {
            var i = this;
            if ((this.stop(), t !== 'stop')) {
              for (var a in ((this.options = {}), this.el.resize.defaults))
                (this.options[a] = this.el.resize.defaults[a]),
                  t[a] !== void 0 && (this.options[a] = t[a]);
              this.el.on('lt.resize', function (s) {
                i.resize(s || window.event);
              }),
                this.el.on('rt.resize', function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on('rb.resize', function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on('lb.resize', function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on('t.resize', function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on('r.resize', function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on('b.resize', function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on('l.resize', function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on('rot.resize', function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on('point.resize', function (s) {
                  i.resize(s || window.event);
                }),
                this.update();
            }
          }),
          (j.prototype.stop = function () {
            return (
              this.el.off('lt.resize'),
              this.el.off('rt.resize'),
              this.el.off('rb.resize'),
              this.el.off('lb.resize'),
              this.el.off('t.resize'),
              this.el.off('r.resize'),
              this.el.off('b.resize'),
              this.el.off('l.resize'),
              this.el.off('rot.resize'),
              this.el.off('point.resize'),
              this
            );
          }),
          (j.prototype.resize = function (t) {
            var i = this;
            (this.m = this.el.node.getScreenCTM().inverse()),
              (this.offset = { x: window.pageXOffset, y: window.pageYOffset });
            var a = this._extractPosition(t.detail.event);
            if (
              ((this.parameters = {
                type: this.el.type,
                p: this.transformPoint(a.x, a.y),
                x: t.detail.x,
                y: t.detail.y,
                box: this.el.bbox(),
                rotation: this.el.transform().rotation,
              }),
              this.el.type === 'text' &&
                (this.parameters.fontSize = this.el.attr()['font-size']),
              t.detail.i !== void 0)
            ) {
              var s = this.el.array().valueOf();
              (this.parameters.i = t.detail.i),
                (this.parameters.pointCoords = [
                  s[t.detail.i][0],
                  s[t.detail.i][1],
                ]);
            }
            switch (t.type) {
              case 'lt':
                this.calc = function (o, l) {
                  var d = this.snapToGrid(o, l);
                  if (
                    this.parameters.box.width - d[0] > 0 &&
                    this.parameters.box.height - d[1] > 0
                  ) {
                    if (this.parameters.type === 'text')
                      return (
                        this.el.move(
                          this.parameters.box.x + d[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          'font-size',
                          this.parameters.fontSize - d[0]
                        )
                      );
                    (d = this.checkAspectRatio(d)),
                      this.el
                        .move(
                          this.parameters.box.x + d[0],
                          this.parameters.box.y + d[1]
                        )
                        .size(
                          this.parameters.box.width - d[0],
                          this.parameters.box.height - d[1]
                        );
                  }
                };
                break;
              case 'rt':
                this.calc = function (o, l) {
                  var d = this.snapToGrid(o, l, 2);
                  if (
                    this.parameters.box.width + d[0] > 0 &&
                    this.parameters.box.height - d[1] > 0
                  ) {
                    if (this.parameters.type === 'text')
                      return (
                        this.el.move(
                          this.parameters.box.x - d[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          'font-size',
                          this.parameters.fontSize + d[0]
                        )
                      );
                    (d = this.checkAspectRatio(d, !0)),
                      this.el
                        .move(
                          this.parameters.box.x,
                          this.parameters.box.y + d[1]
                        )
                        .size(
                          this.parameters.box.width + d[0],
                          this.parameters.box.height - d[1]
                        );
                  }
                };
                break;
              case 'rb':
                this.calc = function (o, l) {
                  var d = this.snapToGrid(o, l, 0);
                  if (
                    this.parameters.box.width + d[0] > 0 &&
                    this.parameters.box.height + d[1] > 0
                  ) {
                    if (this.parameters.type === 'text')
                      return (
                        this.el.move(
                          this.parameters.box.x - d[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          'font-size',
                          this.parameters.fontSize + d[0]
                        )
                      );
                    (d = this.checkAspectRatio(d)),
                      this.el
                        .move(this.parameters.box.x, this.parameters.box.y)
                        .size(
                          this.parameters.box.width + d[0],
                          this.parameters.box.height + d[1]
                        );
                  }
                };
                break;
              case 'lb':
                this.calc = function (o, l) {
                  var d = this.snapToGrid(o, l, 1);
                  if (
                    this.parameters.box.width - d[0] > 0 &&
                    this.parameters.box.height + d[1] > 0
                  ) {
                    if (this.parameters.type === 'text')
                      return (
                        this.el.move(
                          this.parameters.box.x + d[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          'font-size',
                          this.parameters.fontSize - d[0]
                        )
                      );
                    (d = this.checkAspectRatio(d, !0)),
                      this.el
                        .move(
                          this.parameters.box.x + d[0],
                          this.parameters.box.y
                        )
                        .size(
                          this.parameters.box.width - d[0],
                          this.parameters.box.height + d[1]
                        );
                  }
                };
                break;
              case 't':
                this.calc = function (o, l) {
                  var d = this.snapToGrid(o, l, 2);
                  if (this.parameters.box.height - d[1] > 0) {
                    if (this.parameters.type === 'text') return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y + d[1])
                      .height(this.parameters.box.height - d[1]);
                  }
                };
                break;
              case 'r':
                this.calc = function (o, l) {
                  var d = this.snapToGrid(o, l, 0);
                  if (this.parameters.box.width + d[0] > 0) {
                    if (this.parameters.type === 'text') return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .width(this.parameters.box.width + d[0]);
                  }
                };
                break;
              case 'b':
                this.calc = function (o, l) {
                  var d = this.snapToGrid(o, l, 0);
                  if (this.parameters.box.height + d[1] > 0) {
                    if (this.parameters.type === 'text') return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .height(this.parameters.box.height + d[1]);
                  }
                };
                break;
              case 'l':
                this.calc = function (o, l) {
                  var d = this.snapToGrid(o, l, 1);
                  if (this.parameters.box.width - d[0] > 0) {
                    if (this.parameters.type === 'text') return;
                    this.el
                      .move(this.parameters.box.x + d[0], this.parameters.box.y)
                      .width(this.parameters.box.width - d[0]);
                  }
                };
                break;
              case 'rot':
                this.calc = function (o, l) {
                  var d = o + this.parameters.p.x,
                    u = l + this.parameters.p.y,
                    p = Math.atan2(
                      this.parameters.p.y -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      this.parameters.p.x -
                        this.parameters.box.x -
                        this.parameters.box.width / 2
                    ),
                    x = Math.atan2(
                      u -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      d - this.parameters.box.x - this.parameters.box.width / 2
                    ),
                    v =
                      this.parameters.rotation +
                      (180 * (x - p)) / Math.PI +
                      this.options.snapToAngle / 2;
                  this.el
                    .center(this.parameters.box.cx, this.parameters.box.cy)
                    .rotate(
                      v - (v % this.options.snapToAngle),
                      this.parameters.box.cx,
                      this.parameters.box.cy
                    );
                };
                break;
              case 'point':
                this.calc = function (o, l) {
                  var d = this.snapToGrid(
                      o,
                      l,
                      this.parameters.pointCoords[0],
                      this.parameters.pointCoords[1]
                    ),
                    u = this.el.array().valueOf();
                  (u[this.parameters.i][0] =
                    this.parameters.pointCoords[0] + d[0]),
                    (u[this.parameters.i][1] =
                      this.parameters.pointCoords[1] + d[1]),
                    this.el.plot(u);
                };
            }
            this.el.fire('resizestart', {
              dx: this.parameters.x,
              dy: this.parameters.y,
              event: t,
            }),
              SVG.on(window, 'touchmove.resize', function (o) {
                i.update(o || window.event);
              }),
              SVG.on(window, 'touchend.resize', function () {
                i.done();
              }),
              SVG.on(window, 'mousemove.resize', function (o) {
                i.update(o || window.event);
              }),
              SVG.on(window, 'mouseup.resize', function () {
                i.done();
              });
          }),
          (j.prototype.update = function (t) {
            if (t) {
              var i = this._extractPosition(t),
                a = this.transformPoint(i.x, i.y),
                s = a.x - this.parameters.p.x,
                o = a.y - this.parameters.p.y;
              (this.lastUpdateCall = [s, o]),
                this.calc(s, o),
                this.el.fire('resizing', { dx: s, dy: o, event: t });
            } else
              this.lastUpdateCall &&
                this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
          }),
          (j.prototype.done = function () {
            (this.lastUpdateCall = null),
              SVG.off(window, 'mousemove.resize'),
              SVG.off(window, 'mouseup.resize'),
              SVG.off(window, 'touchmove.resize'),
              SVG.off(window, 'touchend.resize'),
              this.el.fire('resizedone');
          }),
          (j.prototype.snapToGrid = function (t, i, a, s) {
            var o;
            return (
              s !== void 0
                ? (o = [
                    (a + t) % this.options.snapToGrid,
                    (s + i) % this.options.snapToGrid,
                  ])
                : ((a = a ?? 3),
                  (o = [
                    (this.parameters.box.x +
                      t +
                      (1 & a ? 0 : this.parameters.box.width)) %
                      this.options.snapToGrid,
                    (this.parameters.box.y +
                      i +
                      (2 & a ? 0 : this.parameters.box.height)) %
                      this.options.snapToGrid,
                  ])),
              t < 0 && (o[0] -= this.options.snapToGrid),
              i < 0 && (o[1] -= this.options.snapToGrid),
              (t -=
                Math.abs(o[0]) < this.options.snapToGrid / 2
                  ? o[0]
                  : o[0] -
                    (t < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              (i -=
                Math.abs(o[1]) < this.options.snapToGrid / 2
                  ? o[1]
                  : o[1] -
                    (i < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              this.constraintToBox(t, i, a, s)
            );
          }),
          (j.prototype.constraintToBox = function (t, i, a, s) {
            var o,
              l,
              d = this.options.constraint || {};
            return (
              s !== void 0
                ? ((o = a), (l = s))
                : ((o =
                    this.parameters.box.x +
                    (1 & a ? 0 : this.parameters.box.width)),
                  (l =
                    this.parameters.box.y +
                    (2 & a ? 0 : this.parameters.box.height))),
              d.minX !== void 0 && o + t < d.minX && (t = d.minX - o),
              d.maxX !== void 0 && o + t > d.maxX && (t = d.maxX - o),
              d.minY !== void 0 && l + i < d.minY && (i = d.minY - l),
              d.maxY !== void 0 && l + i > d.maxY && (i = d.maxY - l),
              [t, i]
            );
          }),
          (j.prototype.checkAspectRatio = function (t, i) {
            if (!this.options.saveAspectRatio) return t;
            var a = t.slice(),
              s = this.parameters.box.width / this.parameters.box.height,
              o = this.parameters.box.width + t[0],
              l = this.parameters.box.height - t[1],
              d = o / l;
            return (
              d < s
                ? ((a[1] = o / s - this.parameters.box.height),
                  i && (a[1] = -a[1]))
                : d > s &&
                  ((a[0] = this.parameters.box.width - l * s),
                  i && (a[0] = -a[0])),
              a
            );
          }),
          SVG.extend(SVG.Element, {
            resize: function (t) {
              return (
                (this.remember('_resizeHandler') || new j(this)).init(t || {}),
                this
              );
            },
          }),
          (SVG.Element.prototype.resize.defaults = {
            snapToAngle: 0.1,
            snapToGrid: 1,
            constraint: {},
            saveAspectRatio: !1,
          });
      }).call(this);
    })(),
    window.Apex === void 0 && (window.Apex = {});
  var ki = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'initModules',
            value: function () {
              (this.ctx.publicMethods = [
                'updateOptions',
                'updateSeries',
                'appendData',
                'appendSeries',
                'toggleSeries',
                'showSeries',
                'hideSeries',
                'setLocale',
                'resetSeries',
                'zoomX',
                'toggleDataPointSelection',
                'dataURI',
                'exportToCSV',
                'addXaxisAnnotation',
                'addYaxisAnnotation',
                'addPointAnnotation',
                'clearAnnotations',
                'removeAnnotation',
                'paper',
                'destroy',
              ]),
                (this.ctx.eventList = [
                  'click',
                  'mousedown',
                  'mousemove',
                  'mouseleave',
                  'touchstart',
                  'touchmove',
                  'touchleave',
                  'mouseup',
                  'touchend',
                ]),
                (this.ctx.animations = new _(this.ctx)),
                (this.ctx.axes = new Aa(this.ctx)),
                (this.ctx.core = new vt(this.ctx.el, this.ctx)),
                (this.ctx.config = new xe({})),
                (this.ctx.data = new Wt(this.ctx)),
                (this.ctx.grid = new xn(this.ctx)),
                (this.ctx.graphics = new W(this.ctx)),
                (this.ctx.coreUtils = new ae(this.ctx)),
                (this.ctx.crosshairs = new jr(this.ctx)),
                (this.ctx.events = new Sa(this.ctx)),
                (this.ctx.exports = new Ci(this.ctx)),
                (this.ctx.localization = new mo(this.ctx)),
                (this.ctx.options = new rt()),
                (this.ctx.responsive = new Mr(this.ctx)),
                (this.ctx.series = new Be(this.ctx)),
                (this.ctx.theme = new xo(this.ctx)),
                (this.ctx.formatters = new fi(this.ctx)),
                (this.ctx.titleSubtitle = new vo(this.ctx)),
                (this.ctx.legend = new ja(this.ctx)),
                (this.ctx.toolbar = new wn(this.ctx)),
                (this.ctx.tooltip = new Dr(this.ctx)),
                (this.ctx.dimensions = new Tr(this.ctx)),
                (this.ctx.updateHelpers = new or(this.ctx)),
                (this.ctx.zoomPanSelection = new bo(this.ctx)),
                (this.ctx.w.globals.tooltip = new Dr(this.ctx));
            },
          },
        ]),
        j
      );
    })(),
    Ia = (function () {
      function j(t) {
        g(this, j), (this.ctx = t), (this.w = t.w);
      }
      return (
        k(j, [
          {
            key: 'clear',
            value: function (t) {
              var i = t.isUpdating;
              this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(),
                this.ctx.toolbar && this.ctx.toolbar.destroy(),
                (this.ctx.animations = null),
                (this.ctx.axes = null),
                (this.ctx.annotations = null),
                (this.ctx.core = null),
                (this.ctx.data = null),
                (this.ctx.grid = null),
                (this.ctx.series = null),
                (this.ctx.responsive = null),
                (this.ctx.theme = null),
                (this.ctx.formatters = null),
                (this.ctx.titleSubtitle = null),
                (this.ctx.legend = null),
                (this.ctx.dimensions = null),
                (this.ctx.options = null),
                (this.ctx.crosshairs = null),
                (this.ctx.zoomPanSelection = null),
                (this.ctx.updateHelpers = null),
                (this.ctx.toolbar = null),
                (this.ctx.localization = null),
                (this.ctx.w.globals.tooltip = null),
                this.clearDomElements({ isUpdating: i });
            },
          },
          {
            key: 'killSVG',
            value: function (t) {
              t.each(function (i, a) {
                this.removeClass('*'), this.off(), this.stop();
              }, !0),
                t.ungroup(),
                t.clear();
            },
          },
          {
            key: 'clearDomElements',
            value: function (t) {
              var i = this,
                a = t.isUpdating,
                s = this.w.globals.dom.Paper.node;
              s.parentNode &&
                s.parentNode.parentNode &&
                !a &&
                (s.parentNode.parentNode.style.minHeight = 'unset');
              var o = this.w.globals.dom.baseEl;
              o &&
                this.ctx.eventList.forEach(function (d) {
                  o.removeEventListener(d, i.ctx.events.documentEvent);
                });
              var l = this.w.globals.dom;
              if (this.ctx.el !== null)
                for (; this.ctx.el.firstChild; )
                  this.ctx.el.removeChild(this.ctx.el.firstChild);
              this.killSVG(l.Paper),
                l.Paper.remove(),
                (l.elWrap = null),
                (l.elGraphical = null),
                (l.elLegendWrap = null),
                (l.elLegendForeign = null),
                (l.baseEl = null),
                (l.elGridRect = null),
                (l.elGridRectMask = null),
                (l.elGridRectMarkerMask = null),
                (l.elForecastMask = null),
                (l.elNonForecastMask = null),
                (l.elDefs = null);
            },
          },
        ]),
        j
      );
    })(),
    lr = new WeakMap(),
    Co = (function () {
      function j(t, i) {
        g(this, j),
          (this.opts = i),
          (this.ctx = this),
          (this.w = new Re(i).init()),
          (this.el = t),
          (this.w.globals.cuid = E.randomId()),
          (this.w.globals.chartID = this.w.config.chart.id
            ? E.escapeString(this.w.config.chart.id)
            : this.w.globals.cuid),
          new ki(this).initModules(),
          (this.create = E.bind(this.create, this)),
          (this.windowResizeHandler = this._windowResizeHandler.bind(this)),
          (this.parentResizeHandler = this._parentResizeCallback.bind(this));
      }
      return (
        k(
          j,
          [
            {
              key: 'render',
              value: function () {
                var t = this;
                return new Promise(function (i, a) {
                  if (t.el !== null) {
                    Apex._chartInstances === void 0 &&
                      (Apex._chartInstances = []),
                      t.w.config.chart.id &&
                        Apex._chartInstances.push({
                          id: t.w.globals.chartID,
                          group: t.w.config.chart.group,
                          chart: t,
                        }),
                      t.setLocale(t.w.config.chart.defaultLocale);
                    var s = t.w.config.chart.events.beforeMount;
                    if (
                      (typeof s == 'function' && s(t, t.w),
                      t.events.fireEvent('beforeMount', [t, t.w]),
                      window.addEventListener('resize', t.windowResizeHandler),
                      (function (x, v) {
                        var b = !1;
                        if (x.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                          var C = x.getBoundingClientRect();
                          (x.style.display !== 'none' && C.width !== 0) ||
                            (b = !0);
                        }
                        var S = new ResizeObserver(function (L) {
                          b && v.call(x, L), (b = !0);
                        });
                        x.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                          ? Array.from(x.children).forEach(function (L) {
                              return S.observe(L);
                            })
                          : S.observe(x),
                          lr.set(v, S);
                      })(t.el.parentNode, t.parentResizeHandler),
                      !t.css)
                    ) {
                      var o = t.el.getRootNode && t.el.getRootNode(),
                        l = E.is('ShadowRoot', o),
                        d = t.el.ownerDocument,
                        u = d.getElementById('apexcharts-css');
                      (!l && u) ||
                        ((t.css = document.createElement('style')),
                        (t.css.id = 'apexcharts-css'),
                        (t.css.textContent = `@keyframes opaque {
  0% {
      opacity: 0
  }

  to {
      opacity: 1
  }
}

@keyframes resizeanim {
  0%,to {
      opacity: 0
  }
}

.apexcharts-canvas {
  position: relative;
  user-select: none
}

.apexcharts-canvas ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 6px
}

.apexcharts-canvas ::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0,0,0,.5);
  box-shadow: 0 0 1px rgba(255,255,255,.5);
  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)
}

.apexcharts-inner {
  position: relative
}

.apexcharts-text tspan {
  font-family: inherit
}

.legend-mouseover-inactive {
  transition: .15s ease all;
  opacity: .2
}

.apexcharts-legend-text {
  padding-left: 15px;
  margin-left: -15px;
}

.apexcharts-series-collapsed {
  opacity: 0
}

.apexcharts-tooltip {
  border-radius: 5px;
  box-shadow: 2px 2px 6px -4px #999;
  cursor: default;
  font-size: 14px;
  left: 62px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  white-space: nowrap;
  z-index: 12;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-theme-light {
  border: 1px solid #e3e3e3;
  background: rgba(255,255,255,.96)
}

.apexcharts-tooltip.apexcharts-theme-dark {
  color: #fff;
  background: rgba(30,30,30,.8)
}

.apexcharts-tooltip * {
  font-family: inherit
}

.apexcharts-tooltip-title {
  padding: 6px;
  font-size: 15px;
  margin-bottom: 4px
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {
  background: #eceff1;
  border-bottom: 1px solid #ddd
}

.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
  background: rgba(0,0,0,.7);
  border-bottom: 1px solid #333
}

.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {
  display: inline-block;
  margin-left: 5px;
  font-weight: 600
}

.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {
  display: none
}

.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  padding: 6px 0 5px
}

.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  display: flex
}

.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {
  margin-top: -6px
}

.apexcharts-tooltip-marker {
  width: 12px;
  height: 12px;
  position: relative;
  top: 0;
  margin-right: 10px;
  border-radius: 50%
}

.apexcharts-tooltip-series-group {
  padding: 0 10px;
  display: none;
  text-align: left;
  justify-content: left;
  align-items: center
}

.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {
  opacity: 1
}

.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {
  padding-bottom: 4px
}

.apexcharts-tooltip-series-group-hidden {
  opacity: 0;
  height: 0;
  line-height: 0;
  padding: 0!important
}

.apexcharts-tooltip-y-group {
  padding: 6px 0 5px
}

.apexcharts-custom-tooltip,.apexcharts-tooltip-box {
  padding: 4px 8px
}

.apexcharts-tooltip-boxPlot {
  display: flex;
  flex-direction: column-reverse
}

.apexcharts-tooltip-box>div {
  margin: 4px 0
}

.apexcharts-tooltip-box span.value {
  font-weight: 700
}

.apexcharts-tooltip-rangebar {
  padding: 5px 8px
}

.apexcharts-tooltip-rangebar .category {
  font-weight: 600;
  color: #777
}

.apexcharts-tooltip-rangebar .series-name {
  font-weight: 700;
  display: block;
  margin-bottom: 5px
}

.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {
  opacity: 0;
  pointer-events: none;
  color: #373d3f;
  font-size: 13px;
  text-align: center;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  background: #eceff1;
  border: 1px solid #90a4ae
}

.apexcharts-xaxistooltip {
  padding: 9px 10px;
  transition: .15s ease all
}

.apexcharts-xaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {
  left: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-xaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-left: -6px
}

.apexcharts-xaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-left: -7px
}

.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {
  bottom: 100%
}

.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {
  top: 100%
}

.apexcharts-xaxistooltip-bottom:after {
  border-bottom-color: #eceff1
}

.apexcharts-xaxistooltip-bottom:before {
  border-bottom-color: #90a4ae
}

.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {
  border-bottom-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip-top:after {
  border-top-color: #eceff1
}

.apexcharts-xaxistooltip-top:before {
  border-top-color: #90a4ae
}

.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {
  border-top-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-yaxistooltip {
  padding: 4px 10px
}

.apexcharts-yaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-yaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-top: -6px
}

.apexcharts-yaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -7px
}

.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {
  left: 100%
}

.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {
  right: 100%
}

.apexcharts-yaxistooltip-left:after {
  border-left-color: #eceff1
}

.apexcharts-yaxistooltip-left:before {
  border-left-color: #90a4ae
}

.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {
  border-left-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip-right:after {
  border-right-color: #eceff1
}

.apexcharts-yaxistooltip-right:before {
  border-right-color: #90a4ae
}

.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {
  border-right-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip.apexcharts-active {
  opacity: 1
}

.apexcharts-yaxistooltip-hidden {
  display: none
}

.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {
  pointer-events: none;
  opacity: 0;
  transition: .15s ease all
}

.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-ycrosshairs-hidden {
  opacity: 0
}

.apexcharts-selection-rect {
  cursor: move
}

.svg_select_boundingRect,.svg_select_points_rot {
  pointer-events: none;
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {
  cursor: ew-resize;
  opacity: 1;
  visibility: visible
}

.svg_select_points {
  fill: #efefef;
  stroke: #333;
  rx: 2
}

.apexcharts-svg.apexcharts-zoomable.hovering-zoom {
  cursor: crosshair
}

.apexcharts-svg.apexcharts-zoomable.hovering-pan {
  cursor: move
}

.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  cursor: pointer;
  width: 20px;
  height: 20px;
  line-height: 24px;
  color: #6e8192;
  text-align: center
}

.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {
  fill: #6e8192
}

.apexcharts-selection-icon svg {
  fill: #444;
  transform: scale(.76)
}

.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {
  fill: #f3f4f5
}

.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {
  fill: #008ffb
}

.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {
  fill: #333
}

.apexcharts-menu-icon,.apexcharts-selection-icon {
  position: relative
}

.apexcharts-reset-icon {
  margin-left: 5px
}

.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {
  transform: scale(.85)
}

.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  transform: scale(.7)
}

.apexcharts-zoomout-icon {
  margin-right: 3px
}

.apexcharts-pan-icon {
  transform: scale(.62);
  position: relative;
  left: 1px;
  top: 0
}

.apexcharts-pan-icon svg {
  fill: #fff;
  stroke: #6e8192;
  stroke-width: 2
}

.apexcharts-pan-icon.apexcharts-selected svg {
  stroke: #008ffb
}

.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {
  stroke: #333
}

.apexcharts-toolbar {
  position: absolute;
  z-index: 11;
  max-width: 176px;
  text-align: right;
  border-radius: 3px;
  padding: 0 6px 2px;
  display: flex;
  justify-content: space-between;
  align-items: center
}

.apexcharts-menu {
  background: #fff;
  position: absolute;
  top: 100%;
  border: 1px solid #ddd;
  border-radius: 3px;
  padding: 3px;
  right: 10px;
  opacity: 0;
  min-width: 110px;
  transition: .15s ease all;
  pointer-events: none
}

.apexcharts-menu.apexcharts-menu-open {
  opacity: 1;
  pointer-events: all;
  transition: .15s ease all
}

.apexcharts-menu-item {
  padding: 6px 7px;
  font-size: 12px;
  cursor: pointer
}

.apexcharts-theme-light .apexcharts-menu-item:hover {
  background: #eee
}

.apexcharts-theme-dark .apexcharts-menu {
  background: rgba(0,0,0,.7);
  color: #fff
}

@media screen and (min-width:768px) {
  .apexcharts-canvas:hover .apexcharts-toolbar {
      opacity: 1
  }
}

.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {
  opacity: 0
}

.apexcharts-hidden-element-shown {
  opacity: 1;
  transition: 0.25s ease all;
}
.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {
  cursor: default;
  pointer-events: none
}

.apexcharts-pie-label-delay {
  opacity: 0;
  animation-name: opaque;
  animation-duration: .3s;
  animation-fill-mode: forwards;
  animation-timing-function: ease
}

.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {
  pointer-events: none
}

.apexcharts-marker {
  transition: .15s ease all
}

.resize-triggers {
  animation: 1ms resizeanim;
  visibility: hidden;
  opacity: 0;
  height: 100%;
  width: 100%;
  overflow: hidden
}

.contract-trigger:before,.resize-triggers,.resize-triggers>div {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0
}

.resize-triggers>div {
  height: 100%;
  width: 100%;
  background: #eee;
  overflow: auto
}

.contract-trigger:before {
  overflow: hidden;
  width: 200%;
  height: 200%
}
`),
                        l ? o.prepend(t.css) : d.head.appendChild(t.css));
                    }
                    var p = t.create(t.w.config.series, {});
                    if (!p) return i(t);
                    t.mount(p)
                      .then(function () {
                        typeof t.w.config.chart.events.mounted == 'function' &&
                          t.w.config.chart.events.mounted(t, t.w),
                          t.events.fireEvent('mounted', [t, t.w]),
                          i(p);
                      })
                      .catch(function (x) {
                        a(x);
                      });
                  } else a(new Error('Element not found'));
                });
              },
            },
            {
              key: 'create',
              value: function (t, i) {
                var a = this.w;
                new ki(this).initModules();
                var s = this.w.globals;
                if (
                  ((s.noData = !1),
                  (s.animationEnded = !1),
                  this.responsive.checkResponsiveConfig(i),
                  a.config.xaxis.convertedCatToNumeric &&
                    new de(a.config).convertCatToNumericXaxis(
                      a.config,
                      this.ctx
                    ),
                  this.el === null ||
                    (this.core.setupElements(),
                    a.config.chart.type === 'treemap' &&
                      ((a.config.grid.show = !1),
                      (a.config.yaxis[0].show = !1)),
                    s.svgWidth === 0))
                )
                  return (s.animationEnded = !0), null;
                var o = ae.checkComboSeries(t);
                (s.comboCharts = o.comboCharts),
                  (s.comboBarCount = o.comboBarCount);
                var l = t.every(function (x) {
                  return x.data && x.data.length === 0;
                });
                (t.length === 0 || l) && this.series.handleNoData(),
                  this.events.setupEventHandlers(),
                  this.data.parseData(t),
                  this.theme.init(),
                  new _t(this).setGlobalMarkerSize(),
                  this.formatters.setLabelFormatters(),
                  this.titleSubtitle.draw(),
                  (s.noData &&
                    s.collapsedSeries.length !== s.series.length &&
                    !a.config.legend.showForSingleSeries) ||
                    this.legend.init(),
                  this.series.hasAllSeriesEqualX(),
                  s.axisCharts &&
                    (this.core.coreCalculations(),
                    a.config.xaxis.type !== 'category' &&
                      this.formatters.setLabelFormatters(),
                    (this.ctx.toolbar.minX = a.globals.minX),
                    (this.ctx.toolbar.maxX = a.globals.maxX)),
                  this.formatters.heatmapLabelFormatters(),
                  new ae(this).getLargestMarkerSize(),
                  this.dimensions.plotCoords();
                var d = this.core.xySettings();
                this.grid.createGridMask();
                var u = this.core.plotChartType(t, d),
                  p = new dt(this);
                return (
                  p.bringForward(),
                  a.config.dataLabels.background.enabled &&
                    p.dataLabelsBackground(),
                  this.core.shiftGraphPosition(),
                  {
                    elGraph: u,
                    xyRatios: d,
                    dimensions: {
                      plot: {
                        left: a.globals.translateX,
                        top: a.globals.translateY,
                        width: a.globals.gridWidth,
                        height: a.globals.gridHeight,
                      },
                    },
                  }
                );
              },
            },
            {
              key: 'mount',
              value: function () {
                var t = this,
                  i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  a = this,
                  s = a.w;
                return new Promise(function (o, l) {
                  if (a.el === null)
                    return l(
                      new Error(
                        'Not enough data to display or target element not found'
                      )
                    );
                  (i === null || s.globals.allSeriesCollapsed) &&
                    a.series.handleNoData(),
                    (a.grid = new xn(a));
                  var d = a.grid.drawGrid();
                  if (
                    ((a.annotations = new St(a)),
                    a.annotations.drawImageAnnos(),
                    a.annotations.drawTextAnnos(),
                    s.config.grid.position === 'back' &&
                      d &&
                      s.globals.dom.elGraphical.add(d.el),
                    Array.isArray(i.elGraph))
                  )
                    for (var u = 0; u < i.elGraph.length; u++)
                      s.globals.dom.elGraphical.add(i.elGraph[u]);
                  else s.globals.dom.elGraphical.add(i.elGraph);
                  s.config.grid.position === 'front' &&
                    d &&
                    s.globals.dom.elGraphical.add(d.el),
                    d &&
                      d.elGridBorders &&
                      d.elGridBorders.node &&
                      s.globals.dom.elGraphical.add(d.elGridBorders),
                    s.config.xaxis.crosshairs.position === 'front' &&
                      a.crosshairs.drawXCrosshairs(),
                    s.config.yaxis[0].crosshairs.position === 'front' &&
                      a.crosshairs.drawYCrosshairs(),
                    s.config.chart.type !== 'treemap' &&
                      a.axes.drawAxis(s.config.chart.type, d);
                  var p = new sr(t.ctx, d),
                    x = new bn(t.ctx, d);
                  if (
                    (d !== null &&
                      (p.xAxisLabelCorrections(d.xAxisTickWidth),
                      x.setYAxisTextAlignments(),
                      s.config.yaxis.map(function (b, C) {
                        s.globals.ignoreYAxisIndexes.indexOf(C) === -1 &&
                          x.yAxisTitleRotate(C, b.opposite);
                      })),
                    a.annotations.drawAxesAnnotations(),
                    !s.globals.noData)
                  ) {
                    if (
                      (s.config.tooltip.enabled &&
                        !s.globals.noData &&
                        a.w.globals.tooltip.drawTooltip(i.xyRatios),
                      s.globals.axisCharts &&
                        (s.globals.isXNumeric ||
                          s.config.xaxis.convertedCatToNumeric ||
                          s.globals.isRangeBar))
                    )
                      (s.config.chart.zoom.enabled ||
                        (s.config.chart.selection &&
                          s.config.chart.selection.enabled) ||
                        (s.config.chart.pan && s.config.chart.pan.enabled)) &&
                        a.zoomPanSelection.init({ xyRatios: i.xyRatios });
                    else {
                      var v = s.config.chart.toolbar.tools;
                      [
                        'zoom',
                        'zoomin',
                        'zoomout',
                        'selection',
                        'pan',
                        'reset',
                      ].forEach(function (b) {
                        v[b] = !1;
                      });
                    }
                    s.config.chart.toolbar.show &&
                      !s.globals.allSeriesCollapsed &&
                      a.toolbar.createToolbar();
                  }
                  s.globals.memory.methodsToExec.length > 0 &&
                    s.globals.memory.methodsToExec.forEach(function (b) {
                      b.method(b.params, !1, b.context);
                    }),
                    s.globals.axisCharts ||
                      s.globals.noData ||
                      a.core.resizeNonAxisCharts(),
                    o(a);
                });
              },
            },
            {
              key: 'destroy',
              value: function () {
                var t, i;
                window.removeEventListener('resize', this.windowResizeHandler),
                  this.el.parentNode,
                  (t = this.parentResizeHandler),
                  (i = lr.get(t)) && (i.disconnect(), lr.delete(t));
                var a = this.w.config.chart.id;
                a &&
                  Apex._chartInstances.forEach(function (s, o) {
                    s.id === E.escapeString(a) &&
                      Apex._chartInstances.splice(o, 1);
                  }),
                  new Ia(this.ctx).clear({ isUpdating: !1 });
              },
            },
            {
              key: 'updateOptions',
              value: function (t) {
                var i = this,
                  a =
                    arguments.length > 1 &&
                    arguments[1] !== void 0 &&
                    arguments[1],
                  s =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  o =
                    !(arguments.length > 3 && arguments[3] !== void 0) ||
                    arguments[3],
                  l =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  d = this.w;
                return (
                  (d.globals.selection = void 0),
                  t.series &&
                    (this.series.resetSeries(!1, !0, !1),
                    t.series.length &&
                      t.series[0].data &&
                      (t.series = t.series.map(function (u, p) {
                        return i.updateHelpers._extendSeries(u, p);
                      })),
                    this.updateHelpers.revertDefaultAxisMinMax()),
                  t.xaxis && (t = this.updateHelpers.forceXAxisUpdate(t)),
                  t.yaxis && (t = this.updateHelpers.forceYAxisUpdate(t)),
                  d.globals.collapsedSeriesIndices.length > 0 &&
                    this.series.clearPreviousPaths(),
                  t.theme && (t = this.theme.updateThemeOptions(t)),
                  this.updateHelpers._updateOptions(t, a, s, o, l)
                );
              },
            },
            {
              key: 'updateSeries',
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2];
                return (
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(t, i, a)
                );
              },
            },
            {
              key: 'appendSeries',
              value: function (t) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  s = this.w.config.series.slice();
                return (
                  s.push(t),
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(s, i, a)
                );
              },
            },
            {
              key: 'appendData',
              value: function (t) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a = this;
                (a.w.globals.dataChanged = !0), a.series.getPreviousPaths();
                for (
                  var s = a.w.config.series.slice(), o = 0;
                  o < s.length;
                  o++
                )
                  if (t[o] !== null && t[o] !== void 0)
                    for (var l = 0; l < t[o].data.length; l++)
                      s[o].data.push(t[o].data[l]);
                return (
                  (a.w.config.series = s),
                  i && (a.w.globals.initialSeries = E.clone(a.w.config.series)),
                  this.update()
                );
              },
            },
            {
              key: 'update',
              value: function (t) {
                var i = this;
                return new Promise(function (a, s) {
                  new Ia(i.ctx).clear({ isUpdating: !0 });
                  var o = i.create(i.w.config.series, t);
                  if (!o) return a(i);
                  i.mount(o)
                    .then(function () {
                      typeof i.w.config.chart.events.updated == 'function' &&
                        i.w.config.chart.events.updated(i, i.w),
                        i.events.fireEvent('updated', [i, i.w]),
                        (i.w.globals.isDirty = !0),
                        a(i);
                    })
                    .catch(function (l) {
                      s(l);
                    });
                });
              },
            },
            {
              key: 'getSyncedCharts',
              value: function () {
                var t = this.getGroupedCharts(),
                  i = [this];
                return (
                  t.length &&
                    ((i = []),
                    t.forEach(function (a) {
                      i.push(a);
                    })),
                  i
                );
              },
            },
            {
              key: 'getGroupedCharts',
              value: function () {
                var t = this;
                return Apex._chartInstances
                  .filter(function (i) {
                    if (i.group) return !0;
                  })
                  .map(function (i) {
                    return t.w.config.chart.group === i.group ? i.chart : t;
                  });
              },
            },
            {
              key: 'toggleSeries',
              value: function (t) {
                return this.series.toggleSeries(t);
              },
            },
            {
              key: 'highlightSeriesOnLegendHover',
              value: function (t, i) {
                return this.series.toggleSeriesOnHover(t, i);
              },
            },
            {
              key: 'showSeries',
              value: function (t) {
                this.series.showSeries(t);
              },
            },
            {
              key: 'hideSeries',
              value: function (t) {
                this.series.hideSeries(t);
              },
            },
            {
              key: 'resetSeries',
              value: function () {
                var t =
                    !(arguments.length > 0 && arguments[0] !== void 0) ||
                    arguments[0],
                  i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1];
                this.series.resetSeries(t, i);
              },
            },
            {
              key: 'addEventListener',
              value: function (t, i) {
                this.events.addEventListener(t, i);
              },
            },
            {
              key: 'removeEventListener',
              value: function (t, i) {
                this.events.removeEventListener(t, i);
              },
            },
            {
              key: 'addXaxisAnnotation',
              value: function (t) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  s = this;
                a && (s = a), s.annotations.addXaxisAnnotationExternal(t, i, s);
              },
            },
            {
              key: 'addYaxisAnnotation',
              value: function (t) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  s = this;
                a && (s = a), s.annotations.addYaxisAnnotationExternal(t, i, s);
              },
            },
            {
              key: 'addPointAnnotation',
              value: function (t) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  a =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  s = this;
                a && (s = a), s.annotations.addPointAnnotationExternal(t, i, s);
              },
            },
            {
              key: 'clearAnnotations',
              value: function () {
                var t =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : void 0,
                  i = this;
                t && (i = t), i.annotations.clearAnnotations(i);
              },
            },
            {
              key: 'removeAnnotation',
              value: function (t) {
                var i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : void 0,
                  a = this;
                i && (a = i), a.annotations.removeAnnotation(a, t);
              },
            },
            {
              key: 'getChartArea',
              value: function () {
                return this.w.globals.dom.baseEl.querySelector(
                  '.apexcharts-inner'
                );
              },
            },
            {
              key: 'getSeriesTotalXRange',
              value: function (t, i) {
                return this.coreUtils.getSeriesTotalsXRange(t, i);
              },
            },
            {
              key: 'getHighestValueInSeries',
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new vn(this.ctx).getMinYMaxY(t).highestY;
              },
            },
            {
              key: 'getLowestValueInSeries',
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new vn(this.ctx).getMinYMaxY(t).lowestY;
              },
            },
            {
              key: 'getSeriesTotal',
              value: function () {
                return this.w.globals.seriesTotals;
              },
            },
            {
              key: 'toggleDataPointSelection',
              value: function (t, i) {
                return this.updateHelpers.toggleDataPointSelection(t, i);
              },
            },
            {
              key: 'zoomX',
              value: function (t, i) {
                this.ctx.toolbar.zoomUpdateOptions(t, i);
              },
            },
            {
              key: 'setLocale',
              value: function (t) {
                this.localization.setCurrentLocaleValues(t);
              },
            },
            {
              key: 'dataURI',
              value: function (t) {
                return new Ci(this.ctx).dataURI(t);
              },
            },
            {
              key: 'exportToCSV',
              value: function () {
                var t =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : {};
                return new Ci(this.ctx).exportToCSV(t);
              },
            },
            {
              key: 'paper',
              value: function () {
                return this.w.globals.dom.Paper;
              },
            },
            {
              key: '_parentResizeCallback',
              value: function () {
                this.w.globals.animationEnded &&
                  this.w.config.chart.redrawOnParentResize &&
                  this._windowResize();
              },
            },
            {
              key: '_windowResize',
              value: function () {
                var t = this;
                clearTimeout(this.w.globals.resizeTimer),
                  (this.w.globals.resizeTimer = window.setTimeout(function () {
                    (t.w.globals.resized = !0),
                      (t.w.globals.dataChanged = !1),
                      t.ctx.update();
                  }, 150));
              },
            },
            {
              key: '_windowResizeHandler',
              value: function () {
                var t = this.w.config.chart.redrawOnWindowResize;
                typeof t == 'function' && (t = t()), t && this._windowResize();
              },
            },
          ],
          [
            {
              key: 'getChartByID',
              value: function (t) {
                var i = E.escapeString(t),
                  a = Apex._chartInstances.filter(function (s) {
                    return s.id === i;
                  })[0];
                return a && a.chart;
              },
            },
            {
              key: 'initOnLoad',
              value: function () {
                for (
                  var t = document.querySelectorAll('[data-apexcharts]'), i = 0;
                  i < t.length;
                  i++
                )
                  new j(
                    t[i],
                    JSON.parse(t[i].getAttribute('data-options'))
                  ).render();
              },
            },
            {
              key: 'exec',
              value: function (t, i) {
                var a = this.getChartByID(t);
                if (a) {
                  a.w.globals.isExecCalled = !0;
                  var s = null;
                  if (a.publicMethods.indexOf(i) !== -1) {
                    for (
                      var o = arguments.length,
                        l = new Array(o > 2 ? o - 2 : 0),
                        d = 2;
                      d < o;
                      d++
                    )
                      l[d - 2] = arguments[d];
                    s = a[i].apply(a, l);
                  }
                  return s;
                }
              },
            },
            {
              key: 'merge',
              value: function (t, i) {
                return E.extend(t, i);
              },
            },
          ]
        ),
        j
      );
    })();
  e.exports = Co;
})(dc, dc.exports);
var p2 = dc.exports,
  Qf = { exports: {} },
  g2 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',
  m2 = g2,
  x2 = m2;
function Jf() {}
function ep() {}
ep.resetWarningCache = Jf;
var v2 = function () {
  function e(c, f, g, w, k, M) {
    if (M !== x2) {
      var D = new Error(
        'Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types'
      );
      throw ((D.name = 'Invariant Violation'), D);
    }
  }
  e.isRequired = e;
  function n() {
    return e;
  }
  var r = {
    array: e,
    bigint: e,
    bool: e,
    func: e,
    number: e,
    object: e,
    string: e,
    symbol: e,
    any: e,
    arrayOf: n,
    element: e,
    elementType: e,
    instanceOf: n,
    node: e,
    objectOf: n,
    oneOf: n,
    oneOfType: n,
    shape: n,
    exact: n,
    checkPropTypes: ep,
    resetWarningCache: Jf,
  };
  return (r.PropTypes = r), r;
};
Qf.exports = v2();
var b2 = Qf.exports,
  mn;
Object.defineProperty(Kf, '__esModule', { value: !0 });
var y2 =
    typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
      ? function (e) {
          return typeof e;
        }
      : function (e) {
          return e &&
            typeof Symbol == 'function' &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? 'symbol'
            : typeof e;
        },
  w2 =
    Object.assign ||
    function (e) {
      for (var n = 1; n < arguments.length; n++) {
        var r,
          c = arguments[n];
        for (r in c)
          Object.prototype.hasOwnProperty.call(c, r) && (e[r] = c[r]);
      }
      return e;
    },
  C2 = (function () {
    function e(n, r) {
      for (var c = 0; c < r.length; c++) {
        var f = r[c];
        (f.enumerable = f.enumerable || !1),
          (f.configurable = !0),
          'value' in f && (f.writable = !0),
          Object.defineProperty(n, f.key, f);
      }
    }
    return function (n, r, c) {
      return r && e(n.prototype, r), c && e(n, c), n;
    };
  })(),
  k2 = p2,
  tp = vd(k2),
  ip = ne,
  In = vd(ip),
  S2 = b2,
  Si = vd(S2);
function vd(e) {
  return e && e.__esModule ? e : { default: e };
}
function A2(e, n, r) {
  return (
    n in e
      ? Object.defineProperty(e, n, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[n] = r),
    e
  );
}
function L2(e, n) {
  var r,
    c = {};
  for (r in e)
    0 <= n.indexOf(r) ||
      (Object.prototype.hasOwnProperty.call(e, r) && (c[r] = e[r]));
  return c;
}
function N2(e, n) {
  if (!(e instanceof n))
    throw new TypeError('Cannot call a class as a function');
}
function E2(e, n) {
  if (e) return !n || (typeof n != 'object' && typeof n != 'function') ? e : n;
  throw new ReferenceError(
    "this hasn't been initialised - super() hasn't been called"
  );
}
function j2(e, n) {
  if (typeof n != 'function' && n !== null)
    throw new TypeError(
      'Super expression must either be null or a function, not ' + typeof n
    );
  (e.prototype = Object.create(n && n.prototype, {
    constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 },
  })),
    n &&
      (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : (e.__proto__ = n));
}
window.ApexCharts = tp.default;
var Ku = (function () {
  function e(n) {
    N2(this, e);
    var r = E2(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, n));
    return (
      In.default.createRef
        ? (r.chartRef = In.default.createRef())
        : (r.setRef = function (c) {
            return (r.chartRef = c);
          }),
      (r.chart = null),
      r
    );
  }
  return (
    j2(e, ip.Component),
    C2(e, [
      {
        key: 'render',
        value: function () {
          var n = L2(this.props, []);
          return In.default.createElement(
            'div',
            w2({ ref: In.default.createRef ? this.chartRef : this.setRef }, n)
          );
        },
      },
      {
        key: 'componentDidMount',
        value: function () {
          var n = In.default.createRef ? this.chartRef.current : this.chartRef;
          (this.chart = new tp.default(n, this.getConfig())),
            this.chart.render();
        },
      },
      {
        key: 'getConfig',
        value: function () {
          var g = this.props,
            n = g.type,
            r = g.height,
            c = g.width,
            f = g.series,
            g = g.options;
          return this.extend(g, {
            chart: { type: n, height: r, width: c },
            series: f,
          });
        },
      },
      {
        key: 'isObject',
        value: function (n) {
          return (
            n &&
            (n === void 0 ? 'undefined' : y2(n)) === 'object' &&
            !Array.isArray(n) &&
            n != null
          );
        },
      },
      {
        key: 'extend',
        value: function (n, r) {
          var c = this,
            f =
              (typeof Object.assign != 'function' &&
                (Object.assign = function (g) {
                  if (g == null)
                    throw new TypeError(
                      'Cannot convert undefined or null to object'
                    );
                  for (var w = Object(g), k = 1; k < arguments.length; k++) {
                    var M = arguments[k];
                    if (M != null)
                      for (var D in M) M.hasOwnProperty(D) && (w[D] = M[D]);
                  }
                  return w;
                }),
              Object.assign({}, n));
          return (
            this.isObject(n) &&
              this.isObject(r) &&
              Object.keys(r).forEach(function (g) {
                c.isObject(r[g]) && g in n
                  ? (f[g] = c.extend(n[g], r[g]))
                  : Object.assign(f, A2({}, g, r[g]));
              }),
            f
          );
        },
      },
      {
        key: 'componentDidUpdate',
        value: function (n) {
          if (!this.chart) return null;
          var f = this.props,
            k = f.options,
            r = f.series,
            c = f.height,
            f = f.width,
            g = JSON.stringify(n.options),
            w = JSON.stringify(n.series),
            k = JSON.stringify(k),
            M = JSON.stringify(r);
          (g === k && w === M && c === n.height && f === n.width) ||
            (w !== M && g === k && c === n.height && f === n.width
              ? this.chart.updateSeries(r)
              : this.chart.updateOptions(this.getConfig()));
        },
      },
      {
        key: 'componentWillUnmount',
        value: function () {
          this.chart &&
            typeof this.chart.destroy == 'function' &&
            this.chart.destroy();
        },
      },
    ]),
    e
  );
})();
((mn = Kf.default = Ku).propTypes = {
  type: Si.default.string.isRequired,
  width: Si.default.oneOfType([Si.default.string, Si.default.number]),
  height: Si.default.oneOfType([Si.default.string, Si.default.number]),
  series: Si.default.array.isRequired,
  options: Si.default.object.isRequired,
}),
  (Ku.defaultProps = { type: 'line', width: '100%', height: 'auto' });
const Qu = {
    legend: { show: !0, position: 'top', horizontalAlign: 'left' },
    colors: ['#3C50E0', '#80CAEE', '#FF4560', '#00E396'],
    chart: {
      fontFamily: 'Satoshi, sans-serif',
      height: 335,
      type: 'area',
      dropShadow: {
        enabled: !0,
        color: '#623CEA14',
        top: 10,
        blur: 4,
        left: 0,
        opacity: 0.1,
      },
      toolbar: { show: !1 },
    },
    responsive: [
      { breakpoint: 1024, options: { chart: { height: 300 } } },
      { breakpoint: 1366, options: { chart: { height: 350 } } },
    ],
    stroke: { width: [2, 2, 2, 2], curve: 'smooth' },
    grid: { xaxis: { lines: { show: !0 } }, yaxis: { lines: { show: !0 } } },
    dataLabels: { enabled: !1 },
    markers: {
      size: 4,
      colors: '#fff',
      strokeColors: ['#3056D3', '#80CAEE', '#FF4560', '#00E396'],
      strokeWidth: 3,
      strokeOpacity: 0.9,
      strokeDashArray: 0,
      fillOpacity: 1,
      hover: { sizeOffset: 5 },
    },
    xaxis: {
      type: 'category',
      categories: [],
      axisBorder: { show: !1 },
      axisTicks: { show: !1 },
    },
    yaxis: { title: { style: { fontSize: '0px' } }, min: 0, max: 100 },
  },
  rp = () => {
    const [e, n] = ne.useState({
        series: [
          { name: 'Reading 1', data: [] },
          { name: 'Reading 2', data: [] },
          { name: 'Reading 3', data: [] },
          { name: 'Reading 4', data: [] },
        ],
        categories: [],
      }),
      r = ka.create({ baseURL: 'http://localhost:3000/api' }),
      c = async () => {
        try {
          const w = (await r.get('gasHistory/10')).data;
          console.log('data is', w);
          const k = w.reading1.length,
            M = Array.from({ length: k }, (D, z) => z.toString());
          n({
            series: [
              { name: 'Reading 1', data: w.reading1 },
              { name: 'Reading 2', data: w.reading2 },
              { name: 'Reading 3', data: w.reading3 },
              { name: 'Reading 4', data: w.reading4 },
            ],
            categories: M,
          });
        } catch (f) {
          console.error('Error fetching data:', f);
        }
      };
    return (
      ne.useEffect(() => {
        c();
      }, []),
      m.jsxs('div', {
        className:
          'col-span-12 rounded-sm border border-stroke bg-white px-5 pt-7.5 pb-5 shadow-default dark:border-strokedark dark:bg-boxdark sm:px-7.5 xl:col-span-8',
        children: [
          m.jsx('div', {
            className:
              'flex flex-wrap items-start justify-between gap-3 sm:flex-nowrap',
            children: m.jsx('div', {
              className: 'flex w-full flex-wrap gap-3 sm:gap-5',
            }),
          }),
          m.jsxs('div', {
            children: [
              m.jsx('div', {
                className: 'flex justify-end w-full',
                children: m.jsx('button', {
                  className:
                    'px-3 py-1 bg-blue-500 text-white rounded shadow hover:bg-blue-600',
                  onClick: c,
                  children: 'Refresh',
                }),
              }),
              m.jsx('div', {
                id: 'chartOne',
                className: '-ml-5',
                children: m.jsx(mn, {
                  options: {
                    ...Qu,
                    xaxis: { ...Qu.xaxis, categories: e.categories },
                  },
                  series: e.series,
                  type: 'area',
                  height: 350,
                }),
              }),
            ],
          }),
        ],
      })
    );
  },
  M2 = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Chart' }),
        m.jsx('div', {
          className: 'grid grid-cols-12 gap-4 md:gap-6 2xl:gap-7.5',
          children: m.jsx(rp, {}),
        }),
      ],
    }),
  P2 = () => {
    const [e, n] = ne.useState({ series: [0] }),
      r = ka.create({ baseURL: 'http://localhost:3000/api' }),
      c = async () => {
        try {
          const k = await r.get('gasReading');
          n({ series: [k.data.reading1] });
        } catch (k) {
          throw (console.error('Error fetching data:', k), k);
        }
      };
    ne.useEffect(() => {
      c();
      const k = setInterval(() => {
        c();
      }, 1e3);
      return () => {
        clearInterval(k);
      };
    }, []);
    const g = ((k) => {
        const z = (k - 0) / 100,
          Y = Math.round(255 * z),
          U = Math.round(171 - 171 * z);
        return `rgb(${Y}, ${U}, 0)`;
      })(e.series[0]),
      w = {
        chart: {
          fontFamily: 'Satoshi, sans-serif',
          type: 'radialBar',
          height: 350,
        },
        plotOptions: {
          radialBar: {
            startAngle: -135,
            endAngle: 225,
            hollow: {
              margin: 0,
              size: '70%',
              background: '#fff',
              dropShadow: {
                enabled: !0,
                top: 3,
                left: 0,
                blur: 4,
                opacity: 0.24,
              },
            },
            track: {
              background: '#e7e7e7',
              strokeWidth: '80%',
              margin: 0,
              dropShadow: {
                enabled: !0,
                top: -3,
                left: 0,
                blur: 4,
                opacity: 0.35,
              },
            },
            dataLabels: {
              show: !0,
              name: { offsetY: -10, show: !0, color: '#888', fontSize: '17px' },
              value: {
                formatter: (k) => Math.round(k).toString(),
                color: '#111',
                fontSize: '36px',
                show: !0,
              },
            },
          },
        },
        fill: { type: 'solid', colors: [g] },
        stroke: { lineCap: 'round' },
        labels: ['Percent'],
      };
    return m.jsxs('div', {
      className:
        'sm:px-7.5 col-span-6 rounded-sm border border-stroke bg-white px-5 pb-5 pt-7.5 shadow-default dark:border-strokedark dark:bg-boxdark xl:col-span-5',
      children: [
        m.jsx('div', {
          children: m.jsx('h5', {
            className: 'text-xl font-semibold text-black dark:text-white',
            children: 'Gas Sensor 1',
          }),
        }),
        m.jsx('div', {
          className: 'mb-2',
          children: m.jsx('div', {
            id: 'chartRadial',
            className: 'mx-auto flex justify-center',
            children: m.jsx(mn, {
              options: w,
              series: e.series,
              type: 'radialBar',
            }),
          }),
        }),
        m.jsx('div', {
          className: '-mx-8 flex flex-wrap items-center justify-center gap-y-3',
          children: m.jsx('div', {
            className: 'sm:w-1/2 w-full px-8',
            children: m.jsxs('div', {
              className: 'flex w-full items-center',
              children: [
                m.jsx('span', {
                  className:
                    'mr-2 block h-3 w-full max-w-3 rounded-full bg-primary',
                }),
                m.jsxs('p', {
                  className:
                    'flex w-full justify-between text-sm font-medium text-black dark:text-white',
                  children: [
                    m.jsx('span', { children: 'Value' }),
                    m.jsxs('span', { children: [e.series[0], '%'] }),
                  ],
                }),
              ],
            }),
          }),
        }),
      ],
    });
  },
  T2 = () => {
    const [e, n] = ne.useState({ series: [0] }),
      r = ka.create({ baseURL: 'http://localhost:3000/api' }),
      c = async () => {
        try {
          const k = await r.get('gasReading');
          n({ series: [k.data.reading2] });
        } catch (k) {
          throw (console.error('Error fetching data:', k), k);
        }
      };
    ne.useEffect(() => {
      c();
      const k = setInterval(() => {
        c();
      }, 1e3);
      return () => {
        clearInterval(k);
      };
    }, []);
    const g = ((k) => {
        const z = (k - 0) / 100,
          Y = Math.round(255 * z),
          U = Math.round(171 - 171 * z);
        return `rgb(${Y}, ${U}, 0)`;
      })(e.series[0]),
      w = {
        chart: {
          fontFamily: 'Satoshi, sans-serif',
          type: 'radialBar',
          height: 350,
        },
        plotOptions: {
          radialBar: {
            startAngle: -135,
            endAngle: 225,
            hollow: {
              margin: 0,
              size: '70%',
              background: '#fff',
              dropShadow: {
                enabled: !0,
                top: 3,
                left: 0,
                blur: 4,
                opacity: 0.24,
              },
            },
            track: {
              background: '#e7e7e7',
              strokeWidth: '80%',
              margin: 0,
              dropShadow: {
                enabled: !0,
                top: -3,
                left: 0,
                blur: 4,
                opacity: 0.35,
              },
            },
            dataLabels: {
              show: !0,
              name: { offsetY: -10, show: !0, color: '#888', fontSize: '17px' },
              value: {
                formatter: (k) => Math.round(k).toString(),
                color: '#111',
                fontSize: '36px',
                show: !0,
              },
            },
          },
        },
        fill: { type: 'solid', colors: [g] },
        stroke: { lineCap: 'round' },
        labels: ['Percent'],
      };
    return m.jsxs('div', {
      className:
        'sm:px-7.5 col-span-6 rounded-sm border border-stroke bg-white px-5 pb-5 pt-7.5 shadow-default dark:border-strokedark dark:bg-boxdark xl:col-span-5',
      children: [
        m.jsx('div', {
          children: m.jsx('h5', {
            className: 'text-xl font-semibold text-black dark:text-white',
            children: 'Gas Sensor 2',
          }),
        }),
        m.jsx('div', {
          className: 'mb-2',
          children: m.jsx('div', {
            id: 'chartRadial',
            className: 'mx-auto flex justify-center',
            children: m.jsx(mn, {
              options: w,
              series: e.series,
              type: 'radialBar',
            }),
          }),
        }),
        m.jsx('div', {
          className: '-mx-8 flex flex-wrap items-center justify-center gap-y-3',
          children: m.jsx('div', {
            className: 'sm:w-1/2 w-full px-8',
            children: m.jsxs('div', {
              className: 'flex w-full items-center',
              children: [
                m.jsx('span', {
                  className:
                    'mr-2 block h-3 w-full max-w-3 rounded-full bg-primary',
                }),
                m.jsxs('p', {
                  className:
                    'flex w-full justify-between text-sm font-medium text-black dark:text-white',
                  children: [
                    m.jsx('span', { children: 'Value' }),
                    m.jsxs('span', { children: [e.series[0], '%'] }),
                  ],
                }),
              ],
            }),
          }),
        }),
      ],
    });
  },
  D2 = () => {
    const [e, n] = ne.useState({ series: [0] }),
      r = ka.create({ baseURL: 'http://localhost:3000/api' }),
      c = async () => {
        try {
          const k = await r.get('gasReading');
          n({ series: [k.data.reading3] });
        } catch (k) {
          throw (console.error('Error fetching data:', k), k);
        }
      };
    ne.useEffect(() => {
      c();
      const k = setInterval(() => {
        c();
      }, 1e3);
      return () => {
        clearInterval(k);
      };
    }, []);
    const g = ((k) => {
        const z = (k - 0) / 100,
          Y = Math.round(255 * z),
          U = Math.round(171 - 171 * z);
        return `rgb(${Y}, ${U}, 0)`;
      })(e.series[0]),
      w = {
        chart: {
          fontFamily: 'Satoshi, sans-serif',
          type: 'radialBar',
          height: 350,
        },
        plotOptions: {
          radialBar: {
            startAngle: -135,
            endAngle: 225,
            hollow: {
              margin: 0,
              size: '70%',
              background: '#fff',
              dropShadow: {
                enabled: !0,
                top: 3,
                left: 0,
                blur: 4,
                opacity: 0.24,
              },
            },
            track: {
              background: '#e7e7e7',
              strokeWidth: '80%',
              margin: 0,
              dropShadow: {
                enabled: !0,
                top: -3,
                left: 0,
                blur: 4,
                opacity: 0.35,
              },
            },
            dataLabels: {
              show: !0,
              name: { offsetY: -10, show: !0, color: '#888', fontSize: '17px' },
              value: {
                formatter: (k) => Math.round(k).toString(),
                color: '#111',
                fontSize: '36px',
                show: !0,
              },
            },
          },
        },
        fill: { type: 'solid', colors: [g] },
        stroke: { lineCap: 'round' },
        labels: ['Percent'],
      };
    return m.jsxs('div', {
      className:
        'sm:px-7.5 col-span-6 rounded-sm border border-stroke bg-white px-5 pb-5 pt-7.5 shadow-default dark:border-strokedark dark:bg-boxdark xl:col-span-5',
      children: [
        m.jsx('div', {
          children: m.jsx('h5', {
            className: 'text-xl font-semibold text-black dark:text-white',
            children: 'Gas Sensor 3',
          }),
        }),
        m.jsx('div', {
          className: 'mb-2',
          children: m.jsx('div', {
            id: 'chartRadial',
            className: 'mx-auto flex justify-center',
            children: m.jsx(mn, {
              options: w,
              series: e.series,
              type: 'radialBar',
            }),
          }),
        }),
        m.jsx('div', {
          className: '-mx-8 flex flex-wrap items-center justify-center gap-y-3',
          children: m.jsx('div', {
            className: 'sm:w-1/2 w-full px-8',
            children: m.jsxs('div', {
              className: 'flex w-full items-center',
              children: [
                m.jsx('span', {
                  className:
                    'mr-2 block h-3 w-full max-w-3 rounded-full bg-primary',
                }),
                m.jsxs('p', {
                  className:
                    'flex w-full justify-between text-sm font-medium text-black dark:text-white',
                  children: [
                    m.jsx('span', { children: 'Value' }),
                    m.jsxs('span', { children: [e.series[0], '%'] }),
                  ],
                }),
              ],
            }),
          }),
        }),
      ],
    });
  },
  I2 = () => {
    const [e, n] = ne.useState({ series: [0] }),
      r = ka.create({ baseURL: 'http://localhost:3000/api' }),
      c = async () => {
        try {
          const k = await r.get('gasReading');
          n({ series: [k.data.reading4] });
        } catch (k) {
          throw (console.error('Error fetching data:', k), k);
        }
      };
    ne.useEffect(() => {
      c();
      const k = setInterval(() => {
        c();
      }, 1e3);
      return () => {
        clearInterval(k);
      };
    }, []);
    const g = ((k) => {
        const z = (k - 0) / 100,
          Y = Math.round(255 * z),
          U = Math.round(171 - 171 * z);
        return `rgb(${Y}, ${U}, 0)`;
      })(e.series[0]),
      w = {
        chart: {
          fontFamily: 'Satoshi, sans-serif',
          type: 'radialBar',
          height: 350,
        },
        plotOptions: {
          radialBar: {
            startAngle: -135,
            endAngle: 225,
            hollow: {
              margin: 0,
              size: '70%',
              background: '#fff',
              dropShadow: {
                enabled: !0,
                top: 3,
                left: 0,
                blur: 4,
                opacity: 0.24,
              },
            },
            track: {
              background: '#e7e7e7',
              strokeWidth: '80%',
              margin: 0,
              dropShadow: {
                enabled: !0,
                top: -3,
                left: 0,
                blur: 4,
                opacity: 0.35,
              },
            },
            dataLabels: {
              show: !0,
              name: { offsetY: -10, show: !0, color: '#888', fontSize: '17px' },
              value: {
                formatter: (k) => Math.round(k).toString(),
                color: '#111',
                fontSize: '36px',
                show: !0,
              },
            },
          },
        },
        fill: { type: 'solid', colors: [g] },
        stroke: { lineCap: 'round' },
        labels: ['Percent'],
      };
    return m.jsxs('div', {
      className:
        'sm:px-7.5 col-span-6 rounded-sm border border-stroke bg-white px-5 pb-5 pt-7.5 shadow-default dark:border-strokedark dark:bg-boxdark xl:col-span-5',
      children: [
        m.jsx('div', {
          children: m.jsx('h5', {
            className: 'text-xl font-semibold text-black dark:text-white',
            children: 'Gas Sensor 4',
          }),
        }),
        m.jsx('div', {
          className: 'mb-2',
          children: m.jsx('div', {
            id: 'chartRadial',
            className: 'mx-auto flex justify-center',
            children: m.jsx(mn, {
              options: w,
              series: e.series,
              type: 'radialBar',
            }),
          }),
        }),
        m.jsx('div', {
          className: '-mx-8 flex flex-wrap items-center justify-center gap-y-3',
          children: m.jsx('div', {
            className: 'sm:w-1/2 w-full px-8',
            children: m.jsxs('div', {
              className: 'flex w-full items-center',
              children: [
                m.jsx('span', {
                  className:
                    'mr-2 block h-3 w-full max-w-3 rounded-full bg-primary',
                }),
                m.jsxs('p', {
                  className:
                    'flex w-full justify-between text-sm font-medium text-black dark:text-white',
                  children: [
                    m.jsx('span', { children: 'Value' }),
                    m.jsxs('span', { children: [e.series[0], '%'] }),
                  ],
                }),
              ],
            }),
          }),
        }),
      ],
    });
  },
  R2 = () =>
    m.jsx(m.Fragment, {
      children: m.jsxs('div', {
        className:
          'mt-4 grid grid-cols-12 gap-4 md:mt-6 md:gap-6 2xl:mt-7.5 2xl:gap-7.5',
        children: [
          m.jsx(P2, {}),
          m.jsx(T2, {}),
          m.jsx(D2, {}),
          m.jsx(I2, {}),
          m.jsx('div', { className: 'col-span-12 xl:col-span-8' }),
        ],
      }),
    }),
  O2 = () => {
    const [e, n] = ne.useState(!1);
    return m.jsx('div', {
      children: m.jsxs('label', {
        htmlFor: 'checkboxLabelFive',
        className: 'flex cursor-pointer select-none items-center',
        children: [
          m.jsxs('div', {
            className: 'relative',
            children: [
              m.jsx('input', {
                type: 'checkbox',
                id: 'checkboxLabelFive',
                className: 'sr-only',
                onChange: () => {
                  n(!e);
                },
              }),
              m.jsx('div', {
                className: `box mr-4 flex h-5 w-5 items-center justify-center rounded-full border border-primary ${
                  e && '!border-4'
                }`,
                children: m.jsx('span', {
                  className:
                    'h-2.5 w-2.5 rounded-full bg-white dark:bg-transparent',
                }),
              }),
            ],
          }),
          'Checkbox Text',
        ],
      }),
    });
  },
  F2 = () => {
    const [e, n] = ne.useState(!1);
    return m.jsx('div', {
      children: m.jsxs('label', {
        htmlFor: 'checkboxLabelFour',
        className: 'flex cursor-pointer select-none items-center',
        children: [
          m.jsxs('div', {
            className: 'relative',
            children: [
              m.jsx('input', {
                type: 'checkbox',
                id: 'checkboxLabelFour',
                className: 'sr-only',
                onChange: () => {
                  n(!e);
                },
              }),
              m.jsx('div', {
                className: `mr-4 flex h-5 w-5 items-center justify-center rounded-full border ${
                  e && 'border-primary'
                }`,
                children: m.jsx('span', {
                  className: `h-2.5 w-2.5 rounded-full bg-transparent ${
                    e && '!bg-primary'
                  }`,
                  children: ' ',
                }),
              }),
            ],
          }),
          'Checkbox Text',
        ],
      }),
    });
  },
  z2 = () => {
    const [e, n] = ne.useState(!1);
    return m.jsx('div', {
      children: m.jsxs('label', {
        htmlFor: 'checkboxLabelOne',
        className: 'flex cursor-pointer select-none items-center',
        children: [
          m.jsxs('div', {
            className: 'relative',
            children: [
              m.jsx('input', {
                type: 'checkbox',
                id: 'checkboxLabelOne',
                className: 'sr-only',
                onChange: () => {
                  n(!e);
                },
              }),
              m.jsx('div', {
                className: `mr-4 flex h-5 w-5 items-center justify-center rounded border ${
                  e && 'border-primary bg-gray dark:bg-transparent'
                }`,
                children: m.jsx('span', {
                  className: `h-2.5 w-2.5 rounded-sm ${e && 'bg-primary'}`,
                }),
              }),
            ],
          }),
          'Checkbox Text',
        ],
      }),
    });
  },
  H2 = () => {
    const [e, n] = ne.useState(!1);
    return m.jsx('div', {
      children: m.jsxs('label', {
        htmlFor: 'checkboxLabelThree',
        className: 'flex cursor-pointer select-none items-center',
        children: [
          m.jsxs('div', {
            className: 'relative',
            children: [
              m.jsx('input', {
                type: 'checkbox',
                id: 'checkboxLabelThree',
                className: 'sr-only',
                onChange: () => {
                  n(!e);
                },
              }),
              m.jsx('div', {
                className: `box mr-4 flex h-5 w-5 items-center justify-center rounded border ${
                  e && 'border-primary bg-gray dark:bg-transparent'
                }`,
                children: m.jsx('span', {
                  className: `text-primary opacity-0 ${e && '!opacity-100'}`,
                  children: m.jsx('svg', {
                    className: 'h-3.5 w-3.5 stroke-current',
                    fill: 'none',
                    viewBox: '0 0 24 24',
                    xmlns: 'http://www.w3.org/2000/svg',
                    children: m.jsx('path', {
                      strokeLinecap: 'round',
                      strokeLinejoin: 'round',
                      strokeWidth: '2',
                      d: 'M6 18L18 6M6 6l12 12',
                    }),
                  }),
                }),
              }),
            ],
          }),
          'Checkbox Text',
        ],
      }),
    });
  },
  B2 = () => {
    const [e, n] = ne.useState(!1);
    return m.jsx('div', {
      children: m.jsxs('label', {
        htmlFor: 'checkboxLabelTwo',
        className: 'flex cursor-pointer select-none items-center',
        children: [
          m.jsxs('div', {
            className: 'relative',
            children: [
              m.jsx('input', {
                type: 'checkbox',
                id: 'checkboxLabelTwo',
                className: 'sr-only',
                onChange: () => {
                  n(!e);
                },
              }),
              m.jsx('div', {
                className: `mr-4 flex h-5 w-5 items-center justify-center rounded border ${
                  e && 'border-primary bg-gray dark:bg-transparent'
                }`,
                children: m.jsx('span', {
                  className: `opacity-0 ${e && '!opacity-100'}`,
                  children: m.jsx('svg', {
                    width: '11',
                    height: '8',
                    viewBox: '0 0 11 8',
                    fill: 'none',
                    xmlns: 'http://www.w3.org/2000/svg',
                    children: m.jsx('path', {
                      d: 'M10.0915 0.951972L10.0867 0.946075L10.0813 0.940568C9.90076 0.753564 9.61034 0.753146 9.42927 0.939309L4.16201 6.22962L1.58507 3.63469C1.40401 3.44841 1.11351 3.44879 0.932892 3.63584C0.755703 3.81933 0.755703 4.10875 0.932892 4.29224L0.932878 4.29225L0.934851 4.29424L3.58046 6.95832C3.73676 7.11955 3.94983 7.2 4.1473 7.2C4.36196 7.2 4.55963 7.11773 4.71406 6.9584L10.0468 1.60234C10.2436 1.4199 10.2421 1.1339 10.0915 0.951972ZM4.2327 6.30081L4.2317 6.2998C4.23206 6.30015 4.23237 6.30049 4.23269 6.30082L4.2327 6.30081Z',
                      fill: '#3056D3',
                      stroke: '#3056D3',
                      strokeWidth: '0.4',
                    }),
                  }),
                }),
              }),
            ],
          }),
          'Checkbox Text',
        ],
      }),
    });
  },
  Y2 = () => {
    const [e, n] = ne.useState(!1);
    return m.jsx('div', {
      children: m.jsx('label', {
        htmlFor: 'toggle4',
        className: 'flex cursor-pointer select-none items-center',
        children: m.jsxs('div', {
          className: 'relative',
          children: [
            m.jsx('input', {
              type: 'checkbox',
              id: 'toggle4',
              className: 'sr-only',
              onChange: () => {
                n(!e);
              },
            }),
            m.jsx('div', { className: 'block h-8 w-14 rounded-full bg-black' }),
            m.jsx('div', {
              className: `absolute left-1 top-1 flex h-6 w-6 items-center justify-center rounded-full bg-white transition ${
                e && '!right-1 !translate-x-full'
              }`,
            }),
          ],
        }),
      }),
    });
  },
  X2 = () => {
    const [e, n] = ne.useState(!1);
    return m.jsx('div', {
      children: m.jsx('label', {
        htmlFor: 'toggle1',
        className: 'flex cursor-pointer select-none items-center',
        children: m.jsxs('div', {
          className: 'relative',
          children: [
            m.jsx('input', {
              type: 'checkbox',
              id: 'toggle1',
              className: 'sr-only',
              onChange: () => {
                n(!e);
              },
            }),
            m.jsx('div', {
              className:
                'block h-8 w-14 rounded-full bg-meta-9 dark:bg-[#5A616B]',
            }),
            m.jsx('div', {
              className: `absolute left-1 top-1 h-6 w-6 rounded-full bg-white transition ${
                e && '!right-1 !translate-x-full !bg-primary dark:!bg-white'
              }`,
            }),
          ],
        }),
      }),
    });
  },
  _2 = () => {
    const [e, n] = ne.useState(!1);
    return m.jsx('div', {
      children: m.jsx('label', {
        htmlFor: 'toggle3',
        className: 'flex cursor-pointer select-none items-center',
        children: m.jsxs('div', {
          className: 'relative',
          children: [
            m.jsx('input', {
              type: 'checkbox',
              id: 'toggle3',
              className: 'sr-only',
              onChange: () => {
                n(!e);
              },
            }),
            m.jsx('div', {
              className:
                'block h-8 w-14 rounded-full bg-meta-9 dark:bg-[#5A616B]',
            }),
            m.jsxs('div', {
              className: `dot absolute left-1 top-1 flex h-6 w-6 items-center justify-center rounded-full bg-white transition ${
                e && '!right-1 !translate-x-full !bg-primary dark:!bg-white'
              }`,
              children: [
                m.jsx('span', {
                  className: `hidden ${e && '!block'}`,
                  children: m.jsx('svg', {
                    className: 'fill-white dark:fill-black',
                    width: '11',
                    height: '8',
                    viewBox: '0 0 11 8',
                    fill: 'none',
                    xmlns: 'http://www.w3.org/2000/svg',
                    children: m.jsx('path', {
                      d: 'M10.0915 0.951972L10.0867 0.946075L10.0813 0.940568C9.90076 0.753564 9.61034 0.753146 9.42927 0.939309L4.16201 6.22962L1.58507 3.63469C1.40401 3.44841 1.11351 3.44879 0.932892 3.63584C0.755703 3.81933 0.755703 4.10875 0.932892 4.29224L0.932878 4.29225L0.934851 4.29424L3.58046 6.95832C3.73676 7.11955 3.94983 7.2 4.1473 7.2C4.36196 7.2 4.55963 7.11773 4.71406 6.9584L10.0468 1.60234C10.2436 1.4199 10.2421 1.1339 10.0915 0.951972ZM4.2327 6.30081L4.2317 6.2998C4.23206 6.30015 4.23237 6.30049 4.23269 6.30082L4.2327 6.30081Z',
                      fill: '',
                      stroke: '',
                      strokeWidth: '0.4',
                    }),
                  }),
                }),
                m.jsx('span', {
                  className: `${e && 'hidden'}`,
                  children: m.jsx('svg', {
                    className: 'h-4 w-4 stroke-current',
                    fill: 'none',
                    viewBox: '0 0 24 24',
                    xmlns: 'http://www.w3.org/2000/svg',
                    children: m.jsx('path', {
                      strokeLinecap: 'round',
                      strokeLinejoin: 'round',
                      strokeWidth: '2',
                      d: 'M6 18L18 6M6 6l12 12',
                    }),
                  }),
                }),
              ],
            }),
          ],
        }),
      }),
    });
  },
  V2 = () => {
    const [e, n] = ne.useState(!1);
    return m.jsx('div', {
      'x-data': '{ switcherToggle: false }',
      children: m.jsx('label', {
        htmlFor: 'toggle2',
        className: 'flex cursor-pointer select-none items-center',
        children: m.jsxs('div', {
          className: 'relative',
          children: [
            m.jsx('input', {
              id: 'toggle2',
              type: 'checkbox',
              className: 'sr-only',
              onChange: () => {
                n(!e);
              },
            }),
            m.jsx('div', {
              className:
                'h-5 w-14 rounded-full bg-meta-9 shadow-inner dark:bg-[#5A616B]',
            }),
            m.jsx('div', {
              className: `dot absolute left-0 -top-1 h-7 w-7 rounded-full bg-white shadow-switch-1 transition ${
                e && '!right-0 !translate-x-full !bg-primary dark:!bg-white'
              }`,
            }),
          ],
        }),
      }),
    });
  };
var il = [
    'onChange',
    'onClose',
    'onDayCreate',
    'onDestroy',
    'onKeyDown',
    'onMonthChange',
    'onOpen',
    'onParseConfig',
    'onReady',
    'onValueUpdate',
    'onYearChange',
    'onPreCalendarPosition',
  ],
  en = {
    _disable: [],
    allowInput: !1,
    allowInvalidPreload: !1,
    altFormat: 'F j, Y',
    altInput: !1,
    altInputClass: 'form-control input',
    animate:
      typeof window == 'object' &&
      window.navigator.userAgent.indexOf('MSIE') === -1,
    ariaDateFormat: 'F j, Y',
    autoFillDefaultTime: !0,
    clickOpens: !0,
    closeOnSelect: !0,
    conjunction: ', ',
    dateFormat: 'Y-m-d',
    defaultHour: 12,
    defaultMinute: 0,
    defaultSeconds: 0,
    disable: [],
    disableMobile: !1,
    enableSeconds: !1,
    enableTime: !1,
    errorHandler: function (e) {
      return typeof console < 'u' && console.warn(e);
    },
    getWeek: function (e) {
      var n = new Date(e.getTime());
      n.setHours(0, 0, 0, 0),
        n.setDate(n.getDate() + 3 - ((n.getDay() + 6) % 7));
      var r = new Date(n.getFullYear(), 0, 4);
      return (
        1 +
        Math.round(
          ((n.getTime() - r.getTime()) / 864e5 - 3 + ((r.getDay() + 6) % 7)) / 7
        )
      );
    },
    hourIncrement: 1,
    ignoredFocusElements: [],
    inline: !1,
    locale: 'default',
    minuteIncrement: 5,
    mode: 'single',
    monthSelectorType: 'dropdown',
    nextArrow:
      "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",
    noCalendar: !1,
    now: new Date(),
    onChange: [],
    onClose: [],
    onDayCreate: [],
    onDestroy: [],
    onKeyDown: [],
    onMonthChange: [],
    onOpen: [],
    onParseConfig: [],
    onReady: [],
    onValueUpdate: [],
    onYearChange: [],
    onPreCalendarPosition: [],
    plugins: [],
    position: 'auto',
    positionElement: void 0,
    prevArrow:
      "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
    shorthandCurrentMonth: !1,
    showMonths: 1,
    static: !1,
    time_24hr: !1,
    weekNumbers: !1,
    wrap: !1,
  },
  ga = {
    weekdays: {
      shorthand: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
      longhand: [
        'Sunday',
        'Monday',
        'Tuesday',
        'Wednesday',
        'Thursday',
        'Friday',
        'Saturday',
      ],
    },
    months: {
      shorthand: [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec',
      ],
      longhand: [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December',
      ],
    },
    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
    firstDayOfWeek: 0,
    ordinal: function (e) {
      var n = e % 100;
      if (n > 3 && n < 21) return 'th';
      switch (n % 10) {
        case 1:
          return 'st';
        case 2:
          return 'nd';
        case 3:
          return 'rd';
        default:
          return 'th';
      }
    },
    rangeSeparator: ' to ',
    weekAbbreviation: 'Wk',
    scrollTitle: 'Scroll to increment',
    toggleTitle: 'Click to toggle',
    amPM: ['AM', 'PM'],
    yearAriaLabel: 'Year',
    monthAriaLabel: 'Month',
    hourAriaLabel: 'Hour',
    minuteAriaLabel: 'Minute',
    time_24hr: !1,
  },
  Lt = function (e, n) {
    return n === void 0 && (n = 2), ('000' + e).slice(n * -1);
  },
  $t = function (e) {
    return e === !0 ? 1 : 0;
  };
function Ju(e, n) {
  var r;
  return function () {
    var c = this,
      f = arguments;
    clearTimeout(r),
      (r = setTimeout(function () {
        return e.apply(c, f);
      }, n));
  };
}
var rl = function (e) {
  return e instanceof Array ? e : [e];
};
function bt(e, n, r) {
  if (r === !0) return e.classList.add(n);
  e.classList.remove(n);
}
function Me(e, n, r) {
  var c = window.document.createElement(e);
  return (
    (n = n || ''),
    (r = r || ''),
    (c.className = n),
    r !== void 0 && (c.textContent = r),
    c
  );
}
function Qa(e) {
  for (; e.firstChild; ) e.removeChild(e.firstChild);
}
function np(e, n) {
  if (n(e)) return e;
  if (e.parentNode) return np(e.parentNode, n);
}
function Ja(e, n) {
  var r = Me('div', 'numInputWrapper'),
    c = Me('input', 'numInput ' + e),
    f = Me('span', 'arrowUp'),
    g = Me('span', 'arrowDown');
  if (
    (navigator.userAgent.indexOf('MSIE 9.0') === -1
      ? (c.type = 'number')
      : ((c.type = 'text'), (c.pattern = '\\d*')),
    n !== void 0)
  )
    for (var w in n) c.setAttribute(w, n[w]);
  return r.appendChild(c), r.appendChild(f), r.appendChild(g), r;
}
function Dt(e) {
  try {
    if (typeof e.composedPath == 'function') {
      var n = e.composedPath();
      return n[0];
    }
    return e.target;
  } catch {
    return e.target;
  }
}
var nl = function () {},
  Ws = function (e, n, r) {
    return r.months[n ? 'shorthand' : 'longhand'][e];
  },
  W2 = {
    D: nl,
    F: function (e, n, r) {
      e.setMonth(r.months.longhand.indexOf(n));
    },
    G: function (e, n) {
      e.setHours((e.getHours() >= 12 ? 12 : 0) + parseFloat(n));
    },
    H: function (e, n) {
      e.setHours(parseFloat(n));
    },
    J: function (e, n) {
      e.setDate(parseFloat(n));
    },
    K: function (e, n, r) {
      e.setHours(
        (e.getHours() % 12) + 12 * $t(new RegExp(r.amPM[1], 'i').test(n))
      );
    },
    M: function (e, n, r) {
      e.setMonth(r.months.shorthand.indexOf(n));
    },
    S: function (e, n) {
      e.setSeconds(parseFloat(n));
    },
    U: function (e, n) {
      return new Date(parseFloat(n) * 1e3);
    },
    W: function (e, n, r) {
      var c = parseInt(n),
        f = new Date(e.getFullYear(), 0, 2 + (c - 1) * 7, 0, 0, 0, 0);
      return f.setDate(f.getDate() - f.getDay() + r.firstDayOfWeek), f;
    },
    Y: function (e, n) {
      e.setFullYear(parseFloat(n));
    },
    Z: function (e, n) {
      return new Date(n);
    },
    d: function (e, n) {
      e.setDate(parseFloat(n));
    },
    h: function (e, n) {
      e.setHours((e.getHours() >= 12 ? 12 : 0) + parseFloat(n));
    },
    i: function (e, n) {
      e.setMinutes(parseFloat(n));
    },
    j: function (e, n) {
      e.setDate(parseFloat(n));
    },
    l: nl,
    m: function (e, n) {
      e.setMonth(parseFloat(n) - 1);
    },
    n: function (e, n) {
      e.setMonth(parseFloat(n) - 1);
    },
    s: function (e, n) {
      e.setSeconds(parseFloat(n));
    },
    u: function (e, n) {
      return new Date(parseFloat(n));
    },
    w: nl,
    y: function (e, n) {
      e.setFullYear(2e3 + parseFloat(n));
    },
  },
  hr = {
    D: '',
    F: '',
    G: '(\\d\\d|\\d)',
    H: '(\\d\\d|\\d)',
    J: '(\\d\\d|\\d)\\w+',
    K: '',
    M: '',
    S: '(\\d\\d|\\d)',
    U: '(.+)',
    W: '(\\d\\d|\\d)',
    Y: '(\\d{4})',
    Z: '(.+)',
    d: '(\\d\\d|\\d)',
    h: '(\\d\\d|\\d)',
    i: '(\\d\\d|\\d)',
    j: '(\\d\\d|\\d)',
    l: '',
    m: '(\\d\\d|\\d)',
    n: '(\\d\\d|\\d)',
    s: '(\\d\\d|\\d)',
    u: '(.+)',
    w: '(\\d\\d|\\d)',
    y: '(\\d{2})',
  },
  Zn = {
    Z: function (e) {
      return e.toISOString();
    },
    D: function (e, n, r) {
      return n.weekdays.shorthand[Zn.w(e, n, r)];
    },
    F: function (e, n, r) {
      return Ws(Zn.n(e, n, r) - 1, !1, n);
    },
    G: function (e, n, r) {
      return Lt(Zn.h(e, n, r));
    },
    H: function (e) {
      return Lt(e.getHours());
    },
    J: function (e, n) {
      return n.ordinal !== void 0
        ? e.getDate() + n.ordinal(e.getDate())
        : e.getDate();
    },
    K: function (e, n) {
      return n.amPM[$t(e.getHours() > 11)];
    },
    M: function (e, n) {
      return Ws(e.getMonth(), !0, n);
    },
    S: function (e) {
      return Lt(e.getSeconds());
    },
    U: function (e) {
      return e.getTime() / 1e3;
    },
    W: function (e, n, r) {
      return r.getWeek(e);
    },
    Y: function (e) {
      return Lt(e.getFullYear(), 4);
    },
    d: function (e) {
      return Lt(e.getDate());
    },
    h: function (e) {
      return e.getHours() % 12 ? e.getHours() % 12 : 12;
    },
    i: function (e) {
      return Lt(e.getMinutes());
    },
    j: function (e) {
      return e.getDate();
    },
    l: function (e, n) {
      return n.weekdays.longhand[e.getDay()];
    },
    m: function (e) {
      return Lt(e.getMonth() + 1);
    },
    n: function (e) {
      return e.getMonth() + 1;
    },
    s: function (e) {
      return e.getSeconds();
    },
    u: function (e) {
      return e.getTime();
    },
    w: function (e) {
      return e.getDay();
    },
    y: function (e) {
      return String(e.getFullYear()).substring(2);
    },
  },
  ap = function (e) {
    var n = e.config,
      r = n === void 0 ? en : n,
      c = e.l10n,
      f = c === void 0 ? ga : c,
      g = e.isMobile,
      w = g === void 0 ? !1 : g;
    return function (k, M, D) {
      var z = D || f;
      return r.formatDate !== void 0 && !w
        ? r.formatDate(k, M, z)
        : M.split('')
            .map(function (Y, U, K) {
              return Zn[Y] && K[U - 1] !== '\\'
                ? Zn[Y](k, z, r)
                : Y !== '\\'
                ? Y
                : '';
            })
            .join('');
    };
  },
  uc = function (e) {
    var n = e.config,
      r = n === void 0 ? en : n,
      c = e.l10n,
      f = c === void 0 ? ga : c;
    return function (g, w, k, M) {
      if (!(g !== 0 && !g)) {
        var D = M || f,
          z,
          Y = g;
        if (g instanceof Date) z = new Date(g.getTime());
        else if (typeof g != 'string' && g.toFixed !== void 0) z = new Date(g);
        else if (typeof g == 'string') {
          var U = w || (r || en).dateFormat,
            K = String(g).trim();
          if (K === 'today') (z = new Date()), (k = !0);
          else if (r && r.parseDate) z = r.parseDate(g, U);
          else if (/Z$/.test(K) || /GMT$/.test(K)) z = new Date(g);
          else {
            for (
              var Z = void 0, V = [], ee = 0, B = 0, E = '';
              ee < U.length;
              ee++
            ) {
              var _ = U[ee],
                Q = _ === '\\',
                W = U[ee - 1] === '\\' || Q;
              if (hr[_] && !W) {
                E += hr[_];
                var ae = new RegExp(E).exec(g);
                ae &&
                  (Z = !0) &&
                  V[_ !== 'Y' ? 'push' : 'unshift']({
                    fn: W2[_],
                    val: ae[++B],
                  });
              } else Q || (E += '.');
            }
            (z =
              !r || !r.noCalendar
                ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)
                : new Date(new Date().setHours(0, 0, 0, 0))),
              V.forEach(function (ce) {
                var he = ce.fn,
                  Te = ce.val;
                return (z = he(z, Te, D) || z);
              }),
              (z = Z ? z : void 0);
          }
        }
        if (!(z instanceof Date && !isNaN(z.getTime()))) {
          r.errorHandler(new Error('Invalid date provided: ' + Y));
          return;
        }
        return k === !0 && z.setHours(0, 0, 0, 0), z;
      }
    };
  };
function Rt(e, n, r) {
  return (
    r === void 0 && (r = !0),
    r !== !1
      ? new Date(e.getTime()).setHours(0, 0, 0, 0) -
        new Date(n.getTime()).setHours(0, 0, 0, 0)
      : e.getTime() - n.getTime()
  );
}
var G2 = function (e, n, r) {
    return e > Math.min(n, r) && e < Math.max(n, r);
  },
  al = function (e, n, r) {
    return e * 3600 + n * 60 + r;
  },
  U2 = function (e) {
    var n = Math.floor(e / 3600),
      r = (e - n * 3600) / 60;
    return [n, r, e - n * 3600 - r * 60];
  },
  Z2 = { DAY: 864e5 };
function sl(e) {
  var n = e.defaultHour,
    r = e.defaultMinute,
    c = e.defaultSeconds;
  if (e.minDate !== void 0) {
    var f = e.minDate.getHours(),
      g = e.minDate.getMinutes(),
      w = e.minDate.getSeconds();
    n < f && (n = f),
      n === f && r < g && (r = g),
      n === f && r === g && c < w && (c = e.minDate.getSeconds());
  }
  if (e.maxDate !== void 0) {
    var k = e.maxDate.getHours(),
      M = e.maxDate.getMinutes();
    (n = Math.min(n, k)),
      n === k && (r = Math.min(M, r)),
      n === k && r === M && (c = e.maxDate.getSeconds());
  }
  return { hours: n, minutes: r, seconds: c };
}
typeof Object.assign != 'function' &&
  (Object.assign = function (e) {
    for (var n = [], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];
    if (!e) throw TypeError('Cannot convert undefined or null to object');
    for (
      var c = function (k) {
          k &&
            Object.keys(k).forEach(function (M) {
              return (e[M] = k[M]);
            });
        },
        f = 0,
        g = n;
      f < g.length;
      f++
    ) {
      var w = g[f];
      c(w);
    }
    return e;
  });
var pt =
    (globalThis && globalThis.__assign) ||
    function () {
      return (
        (pt =
          Object.assign ||
          function (e) {
            for (var n, r = 1, c = arguments.length; r < c; r++) {
              n = arguments[r];
              for (var f in n)
                Object.prototype.hasOwnProperty.call(n, f) && (e[f] = n[f]);
            }
            return e;
          }),
        pt.apply(this, arguments)
      );
    },
  eh =
    (globalThis && globalThis.__spreadArrays) ||
    function () {
      for (var e = 0, n = 0, r = arguments.length; n < r; n++)
        e += arguments[n].length;
      for (var c = Array(e), f = 0, n = 0; n < r; n++)
        for (var g = arguments[n], w = 0, k = g.length; w < k; w++, f++)
          c[f] = g[w];
      return c;
    },
  $2 = 300;
function q2(e, n) {
  var r = { config: pt(pt({}, en), $e.defaultConfig), l10n: ga };
  (r.parseDate = uc({ config: r.config, l10n: r.l10n })),
    (r._handlers = []),
    (r.pluginElements = []),
    (r.loadedPlugins = []),
    (r._bind = V),
    (r._setHoursFromDate = U),
    (r._positionCalendar = Mr),
    (r.changeMonth = Re),
    (r.changeYear = Wt),
    (r.clear = je),
    (r.close = _t),
    (r.onMouseOver = ii),
    (r._createElement = Me),
    (r.createDay = ae),
    (r.destroy = Vt),
    (r.isEnabled = xt),
    (r.jumpToDate = E),
    (r.updateValue = Gt),
    (r.open = bn),
    (r.redraw = La),
    (r.set = Tr),
    (r.setDate = ja),
    (r.toggle = yo);
  function c() {
    r.utils = {
      getDaysInMonth: function (F, H) {
        return (
          F === void 0 && (F = r.currentMonth),
          H === void 0 && (H = r.currentYear),
          F === 1 && ((H % 4 === 0 && H % 100 !== 0) || H % 400 === 0)
            ? 29
            : r.l10n.daysInMonth[F]
        );
      },
    };
  }
  function f() {
    (r.element = r.input = e),
      (r.isOpen = !1),
      mo(),
      jr(),
      Ma(),
      bo(),
      c(),
      r.isMobile || W(),
      B(),
      (r.selectedDates.length || r.config.noCalendar) &&
        (r.config.enableTime &&
          U(r.config.noCalendar ? r.latestSelectedDateObj : void 0),
        Gt(!1)),
      k();
    var F = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    !r.isMobile && F && Mr(), Fe('onReady');
  }
  function g() {
    var F;
    return (
      ((F = r.calendarContainer) === null || F === void 0
        ? void 0
        : F.getRootNode()
      ).activeElement || document.activeElement
    );
  }
  function w(F) {
    return F.bind(r);
  }
  function k() {
    var F = r.config;
    (F.weekNumbers === !1 && F.showMonths === 1) ||
      (F.noCalendar !== !0 &&
        window.requestAnimationFrame(function () {
          if (
            (r.calendarContainer !== void 0 &&
              ((r.calendarContainer.style.visibility = 'hidden'),
              (r.calendarContainer.style.display = 'block')),
            r.daysContainer !== void 0)
          ) {
            var H = (r.days.offsetWidth + 1) * F.showMonths;
            (r.daysContainer.style.width = H + 'px'),
              (r.calendarContainer.style.width =
                H +
                (r.weekWrapper !== void 0 ? r.weekWrapper.offsetWidth : 0) +
                'px'),
              r.calendarContainer.style.removeProperty('visibility'),
              r.calendarContainer.style.removeProperty('display');
          }
        }));
  }
  function M(F) {
    if (r.selectedDates.length === 0) {
      var H =
          r.config.minDate === void 0 || Rt(new Date(), r.config.minDate) >= 0
            ? new Date()
            : new Date(r.config.minDate.getTime()),
        $ = sl(r.config);
      H.setHours($.hours, $.minutes, $.seconds, H.getMilliseconds()),
        (r.selectedDates = [H]),
        (r.latestSelectedDateObj = H);
    }
    F !== void 0 && F.type !== 'blur' && Da(F);
    var te = r._input.value;
    Y(), Gt(), r._input.value !== te && r._debouncedChange();
  }
  function D(F, H) {
    return (F % 12) + 12 * $t(H === r.l10n.amPM[1]);
  }
  function z(F) {
    switch (F % 24) {
      case 0:
      case 12:
        return 12;
      default:
        return F % 12;
    }
  }
  function Y() {
    if (!(r.hourElement === void 0 || r.minuteElement === void 0)) {
      var F = (parseInt(r.hourElement.value.slice(-2), 10) || 0) % 24,
        H = (parseInt(r.minuteElement.value, 10) || 0) % 60,
        $ =
          r.secondElement !== void 0
            ? (parseInt(r.secondElement.value, 10) || 0) % 60
            : 0;
      r.amPM !== void 0 && (F = D(F, r.amPM.textContent));
      var te =
          r.config.minTime !== void 0 ||
          (r.config.minDate &&
            r.minDateHasTime &&
            r.latestSelectedDateObj &&
            Rt(r.latestSelectedDateObj, r.config.minDate, !0) === 0),
        le =
          r.config.maxTime !== void 0 ||
          (r.config.maxDate &&
            r.maxDateHasTime &&
            r.latestSelectedDateObj &&
            Rt(r.latestSelectedDateObj, r.config.maxDate, !0) === 0);
      if (
        r.config.maxTime !== void 0 &&
        r.config.minTime !== void 0 &&
        r.config.minTime > r.config.maxTime
      ) {
        var ue = al(
            r.config.minTime.getHours(),
            r.config.minTime.getMinutes(),
            r.config.minTime.getSeconds()
          ),
          Ce = al(
            r.config.maxTime.getHours(),
            r.config.maxTime.getMinutes(),
            r.config.maxTime.getSeconds()
          ),
          ge = al(F, H, $);
        if (ge > Ce && ge < ue) {
          var be = U2(ue);
          (F = be[0]), (H = be[1]), ($ = be[2]);
        }
      } else {
        if (le) {
          var fe =
            r.config.maxTime !== void 0 ? r.config.maxTime : r.config.maxDate;
          (F = Math.min(F, fe.getHours())),
            F === fe.getHours() && (H = Math.min(H, fe.getMinutes())),
            H === fe.getMinutes() && ($ = Math.min($, fe.getSeconds()));
        }
        if (te) {
          var ve =
            r.config.minTime !== void 0 ? r.config.minTime : r.config.minDate;
          (F = Math.max(F, ve.getHours())),
            F === ve.getHours() && H < ve.getMinutes() && (H = ve.getMinutes()),
            H === ve.getMinutes() && ($ = Math.max($, ve.getSeconds()));
        }
      }
      K(F, H, $);
    }
  }
  function U(F) {
    var H = F || r.latestSelectedDateObj;
    H && H instanceof Date && K(H.getHours(), H.getMinutes(), H.getSeconds());
  }
  function K(F, H, $) {
    r.latestSelectedDateObj !== void 0 &&
      r.latestSelectedDateObj.setHours(F % 24, H, $ || 0, 0),
      !(!r.hourElement || !r.minuteElement || r.isMobile) &&
        ((r.hourElement.value = Lt(
          r.config.time_24hr ? F : ((12 + F) % 12) + 12 * $t(F % 12 === 0)
        )),
        (r.minuteElement.value = Lt(H)),
        r.amPM !== void 0 && (r.amPM.textContent = r.l10n.amPM[$t(F >= 12)]),
        r.secondElement !== void 0 && (r.secondElement.value = Lt($)));
  }
  function Z(F) {
    var H = Dt(F),
      $ = parseInt(H.value) + (F.delta || 0);
    ($ / 1e3 > 1 || (F.key === 'Enter' && !/[^\d]/.test($.toString()))) &&
      Wt($);
  }
  function V(F, H, $, te) {
    if (H instanceof Array)
      return H.forEach(function (le) {
        return V(F, le, $, te);
      });
    if (F instanceof Array)
      return F.forEach(function (le) {
        return V(le, H, $, te);
      });
    F.addEventListener(H, $, te),
      r._handlers.push({
        remove: function () {
          return F.removeEventListener(H, $, te);
        },
      });
  }
  function ee() {
    Fe('onChange');
  }
  function B() {
    if (
      (r.config.wrap &&
        ['open', 'close', 'toggle', 'clear'].forEach(function ($) {
          Array.prototype.forEach.call(
            r.element.querySelectorAll('[data-' + $ + ']'),
            function (te) {
              return V(te, 'click', r[$]);
            }
          );
        }),
      r.isMobile)
    ) {
      Ta();
      return;
    }
    var F = Ju(vn, 50);
    if (
      ((r._debouncedChange = Ju(ee, $2)),
      r.daysContainer &&
        !/iPhone|iPad|iPod/i.test(navigator.userAgent) &&
        V(r.daysContainer, 'mouseover', function ($) {
          r.config.mode === 'range' && ii(Dt($));
        }),
      V(r._input, 'keydown', xn),
      r.calendarContainer !== void 0 && V(r.calendarContainer, 'keydown', xn),
      !r.config.inline && !r.config.static && V(window, 'resize', F),
      window.ontouchstart !== void 0
        ? V(window.document, 'touchstart', Be)
        : V(window.document, 'mousedown', Be),
      V(window.document, 'focus', Be, { capture: !0 }),
      r.config.clickOpens === !0 &&
        (V(r._input, 'focus', r.open), V(r._input, 'click', r.open)),
      r.daysContainer !== void 0 &&
        (V(r.monthNav, 'click', kn),
        V(r.monthNav, ['keyup', 'increment'], Z),
        V(r.daysContainer, 'click', Na)),
      r.timeContainer !== void 0 &&
        r.minuteElement !== void 0 &&
        r.hourElement !== void 0)
    ) {
      var H = function ($) {
        return Dt($).select();
      };
      V(r.timeContainer, ['increment'], M),
        V(r.timeContainer, 'blur', M, { capture: !0 }),
        V(r.timeContainer, 'click', _),
        V([r.hourElement, r.minuteElement], ['focus', 'click'], H),
        r.secondElement !== void 0 &&
          V(r.secondElement, 'focus', function () {
            return r.secondElement && r.secondElement.select();
          }),
        r.amPM !== void 0 &&
          V(r.amPM, 'click', function ($) {
            M($);
          });
    }
    r.config.allowInput && V(r._input, 'blur', sr);
  }
  function E(F, H) {
    var $ =
        F !== void 0
          ? r.parseDate(F)
          : r.latestSelectedDateObj ||
            (r.config.minDate && r.config.minDate > r.now
              ? r.config.minDate
              : r.config.maxDate && r.config.maxDate < r.now
              ? r.config.maxDate
              : r.now),
      te = r.currentYear,
      le = r.currentMonth;
    try {
      $ !== void 0 &&
        ((r.currentYear = $.getFullYear()), (r.currentMonth = $.getMonth()));
    } catch (ue) {
      (ue.message = 'Invalid date supplied: ' + $), r.config.errorHandler(ue);
    }
    H && r.currentYear !== te && (Fe('onYearChange'), St()),
      H &&
        (r.currentYear !== te || r.currentMonth !== le) &&
        Fe('onMonthChange'),
      r.redraw();
  }
  function _(F) {
    var H = Dt(F);
    ~H.className.indexOf('arrow') &&
      Q(F, H.classList.contains('arrowUp') ? 1 : -1);
  }
  function Q(F, H, $) {
    var te = F && Dt(F),
      le = $ || (te && te.parentNode && te.parentNode.firstChild),
      ue = Cn('increment');
    (ue.delta = H), le && le.dispatchEvent(ue);
  }
  function W() {
    var F = window.document.createDocumentFragment();
    if (
      ((r.calendarContainer = Me('div', 'flatpickr-calendar')),
      (r.calendarContainer.tabIndex = -1),
      !r.config.noCalendar)
    ) {
      if (
        (F.appendChild(yi()),
        (r.innerContainer = Me('div', 'flatpickr-innerContainer')),
        r.config.weekNumbers)
      ) {
        var H = we(),
          $ = H.weekWrapper,
          te = H.weekNumbers;
        r.innerContainer.appendChild($),
          (r.weekNumbers = te),
          (r.weekWrapper = $);
      }
      (r.rContainer = Me('div', 'flatpickr-rContainer')),
        r.rContainer.appendChild(de()),
        r.daysContainer ||
          ((r.daysContainer = Me('div', 'flatpickr-days')),
          (r.daysContainer.tabIndex = -1)),
        rt(),
        r.rContainer.appendChild(r.daysContainer),
        r.innerContainer.appendChild(r.rContainer),
        F.appendChild(r.innerContainer);
    }
    r.config.enableTime && F.appendChild(wi()),
      bt(r.calendarContainer, 'rangeMode', r.config.mode === 'range'),
      bt(r.calendarContainer, 'animate', r.config.animate === !0),
      bt(r.calendarContainer, 'multiMonth', r.config.showMonths > 1),
      r.calendarContainer.appendChild(F);
    var le =
      r.config.appendTo !== void 0 && r.config.appendTo.nodeType !== void 0;
    if (
      (r.config.inline || r.config.static) &&
      (r.calendarContainer.classList.add(r.config.inline ? 'inline' : 'static'),
      r.config.inline &&
        (!le && r.element.parentNode
          ? r.element.parentNode.insertBefore(
              r.calendarContainer,
              r._input.nextSibling
            )
          : r.config.appendTo !== void 0 &&
            r.config.appendTo.appendChild(r.calendarContainer)),
      r.config.static)
    ) {
      var ue = Me('div', 'flatpickr-wrapper');
      r.element.parentNode && r.element.parentNode.insertBefore(ue, r.element),
        ue.appendChild(r.element),
        r.altInput && ue.appendChild(r.altInput),
        ue.appendChild(r.calendarContainer);
    }
    !r.config.static &&
      !r.config.inline &&
      (r.config.appendTo !== void 0
        ? r.config.appendTo
        : window.document.body
      ).appendChild(r.calendarContainer);
  }
  function ae(F, H, $, te) {
    var le = xt(H, !0),
      ue = Me('span', F, H.getDate().toString());
    return (
      (ue.dateObj = H),
      (ue.$i = te),
      ue.setAttribute('aria-label', r.formatDate(H, r.config.ariaDateFormat)),
      F.indexOf('hidden') === -1 &&
        Rt(H, r.now) === 0 &&
        ((r.todayDateElem = ue),
        ue.classList.add('today'),
        ue.setAttribute('aria-current', 'date')),
      le
        ? ((ue.tabIndex = -1),
          Dr(H) &&
            (ue.classList.add('selected'),
            (r.selectedDateElem = ue),
            r.config.mode === 'range' &&
              (bt(
                ue,
                'startRange',
                r.selectedDates[0] && Rt(H, r.selectedDates[0], !0) === 0
              ),
              bt(
                ue,
                'endRange',
                r.selectedDates[1] && Rt(H, r.selectedDates[1], !0) === 0
              ),
              F === 'nextMonthDay' && ue.classList.add('inRange'))))
        : ue.classList.add('flatpickr-disabled'),
      r.config.mode === 'range' &&
        wo(H) &&
        !Dr(H) &&
        ue.classList.add('inRange'),
      r.weekNumbers &&
        r.config.showMonths === 1 &&
        F !== 'prevMonthDay' &&
        te % 7 === 6 &&
        r.weekNumbers.insertAdjacentHTML(
          'beforeend',
          "<span class='flatpickr-day'>" + r.config.getWeek(H) + '</span>'
        ),
      Fe('onDayCreate', ue),
      ue
    );
  }
  function ce(F) {
    F.focus(), r.config.mode === 'range' && ii(F);
  }
  function he(F) {
    for (
      var H = F > 0 ? 0 : r.config.showMonths - 1,
        $ = F > 0 ? r.config.showMonths : -1,
        te = H;
      te != $;
      te += F
    )
      for (
        var le = r.daysContainer.children[te],
          ue = F > 0 ? 0 : le.children.length - 1,
          Ce = F > 0 ? le.children.length : -1,
          ge = ue;
        ge != Ce;
        ge += F
      ) {
        var be = le.children[ge];
        if (be.className.indexOf('hidden') === -1 && xt(be.dateObj)) return be;
      }
  }
  function Te(F, H) {
    for (
      var $ =
          F.className.indexOf('Month') === -1
            ? F.dateObj.getMonth()
            : r.currentMonth,
        te = H > 0 ? r.config.showMonths : -1,
        le = H > 0 ? 1 : -1,
        ue = $ - r.currentMonth;
      ue != te;
      ue += le
    )
      for (
        var Ce = r.daysContainer.children[ue],
          ge =
            $ - r.currentMonth === ue
              ? F.$i + H
              : H < 0
              ? Ce.children.length - 1
              : 0,
          be = Ce.children.length,
          fe = ge;
        fe >= 0 && fe < be && fe != (H > 0 ? be : -1);
        fe += le
      ) {
        var ve = Ce.children[fe];
        if (
          ve.className.indexOf('hidden') === -1 &&
          xt(ve.dateObj) &&
          Math.abs(F.$i - fe) >= Math.abs(H)
        )
          return ce(ve);
      }
    r.changeMonth(le), ye(he(le), 0);
  }
  function ye(F, H) {
    var $ = g(),
      te = Ci($ || document.body),
      le =
        F !== void 0
          ? F
          : te
          ? $
          : r.selectedDateElem !== void 0 && Ci(r.selectedDateElem)
          ? r.selectedDateElem
          : r.todayDateElem !== void 0 && Ci(r.todayDateElem)
          ? r.todayDateElem
          : he(H > 0 ? 1 : -1);
    le === void 0 ? r._input.focus() : te ? Te(le, H) : ce(le);
  }
  function ct(F, H) {
    for (
      var $ = (new Date(F, H, 1).getDay() - r.l10n.firstDayOfWeek + 7) % 7,
        te = r.utils.getDaysInMonth((H - 1 + 12) % 12, F),
        le = r.utils.getDaysInMonth(H, F),
        ue = window.document.createDocumentFragment(),
        Ce = r.config.showMonths > 1,
        ge = Ce ? 'prevMonthDay hidden' : 'prevMonthDay',
        be = Ce ? 'nextMonthDay hidden' : 'nextMonthDay',
        fe = te + 1 - $,
        ve = 0;
      fe <= te;
      fe++, ve++
    )
      ue.appendChild(ae('flatpickr-day ' + ge, new Date(F, H - 1, fe), fe, ve));
    for (fe = 1; fe <= le; fe++, ve++)
      ue.appendChild(ae('flatpickr-day', new Date(F, H, fe), fe, ve));
    for (
      var De = le + 1;
      De <= 42 - $ && (r.config.showMonths === 1 || ve % 7 !== 0);
      De++, ve++
    )
      ue.appendChild(
        ae('flatpickr-day ' + be, new Date(F, H + 1, De % le), De, ve)
      );
    var Ut = Me('div', 'dayContainer');
    return Ut.appendChild(ue), Ut;
  }
  function rt() {
    if (r.daysContainer !== void 0) {
      Qa(r.daysContainer), r.weekNumbers && Qa(r.weekNumbers);
      for (
        var F = document.createDocumentFragment(), H = 0;
        H < r.config.showMonths;
        H++
      ) {
        var $ = new Date(r.currentYear, r.currentMonth, 1);
        $.setMonth(r.currentMonth + H),
          F.appendChild(ct($.getFullYear(), $.getMonth()));
      }
      r.daysContainer.appendChild(F),
        (r.days = r.daysContainer.firstChild),
        r.config.mode === 'range' && r.selectedDates.length === 1 && ii();
    }
  }
  function St() {
    if (
      !(r.config.showMonths > 1 || r.config.monthSelectorType !== 'dropdown')
    ) {
      var F = function (te) {
        return r.config.minDate !== void 0 &&
          r.currentYear === r.config.minDate.getFullYear() &&
          te < r.config.minDate.getMonth()
          ? !1
          : !(
              r.config.maxDate !== void 0 &&
              r.currentYear === r.config.maxDate.getFullYear() &&
              te > r.config.maxDate.getMonth()
            );
      };
      (r.monthsDropdownContainer.tabIndex = -1),
        (r.monthsDropdownContainer.innerHTML = '');
      for (var H = 0; H < 12; H++)
        if (F(H)) {
          var $ = Me('option', 'flatpickr-monthDropdown-month');
          ($.value = new Date(r.currentYear, H).getMonth().toString()),
            ($.textContent = Ws(H, r.config.shorthandCurrentMonth, r.l10n)),
            ($.tabIndex = -1),
            r.currentMonth === H && ($.selected = !0),
            r.monthsDropdownContainer.appendChild($);
        }
    }
  }
  function Ge() {
    var F = Me('div', 'flatpickr-month'),
      H = window.document.createDocumentFragment(),
      $;
    r.config.showMonths > 1 || r.config.monthSelectorType === 'static'
      ? ($ = Me('span', 'cur-month'))
      : ((r.monthsDropdownContainer = Me(
          'select',
          'flatpickr-monthDropdown-months'
        )),
        r.monthsDropdownContainer.setAttribute(
          'aria-label',
          r.l10n.monthAriaLabel
        ),
        V(r.monthsDropdownContainer, 'change', function (Ce) {
          var ge = Dt(Ce),
            be = parseInt(ge.value, 10);
          r.changeMonth(be - r.currentMonth), Fe('onMonthChange');
        }),
        St(),
        ($ = r.monthsDropdownContainer));
    var te = Ja('cur-year', { tabindex: '-1' }),
      le = te.getElementsByTagName('input')[0];
    le.setAttribute('aria-label', r.l10n.yearAriaLabel),
      r.config.minDate &&
        le.setAttribute('min', r.config.minDate.getFullYear().toString()),
      r.config.maxDate &&
        (le.setAttribute('max', r.config.maxDate.getFullYear().toString()),
        (le.disabled =
          !!r.config.minDate &&
          r.config.minDate.getFullYear() === r.config.maxDate.getFullYear()));
    var ue = Me('div', 'flatpickr-current-month');
    return (
      ue.appendChild($),
      ue.appendChild(te),
      H.appendChild(ue),
      F.appendChild(H),
      { container: F, yearElement: le, monthElement: $ }
    );
  }
  function fi() {
    Qa(r.monthNav),
      r.monthNav.appendChild(r.prevMonthNav),
      r.config.showMonths && ((r.yearElements = []), (r.monthElements = []));
    for (var F = r.config.showMonths; F--; ) {
      var H = Ge();
      r.yearElements.push(H.yearElement),
        r.monthElements.push(H.monthElement),
        r.monthNav.appendChild(H.container);
    }
    r.monthNav.appendChild(r.nextMonthNav);
  }
  function yi() {
    return (
      (r.monthNav = Me('div', 'flatpickr-months')),
      (r.yearElements = []),
      (r.monthElements = []),
      (r.prevMonthNav = Me('span', 'flatpickr-prev-month')),
      (r.prevMonthNav.innerHTML = r.config.prevArrow),
      (r.nextMonthNav = Me('span', 'flatpickr-next-month')),
      (r.nextMonthNav.innerHTML = r.config.nextArrow),
      fi(),
      Object.defineProperty(r, '_hidePrevMonthArrow', {
        get: function () {
          return r.__hidePrevMonthArrow;
        },
        set: function (F) {
          r.__hidePrevMonthArrow !== F &&
            (bt(r.prevMonthNav, 'flatpickr-disabled', F),
            (r.__hidePrevMonthArrow = F));
        },
      }),
      Object.defineProperty(r, '_hideNextMonthArrow', {
        get: function () {
          return r.__hideNextMonthArrow;
        },
        set: function (F) {
          r.__hideNextMonthArrow !== F &&
            (bt(r.nextMonthNav, 'flatpickr-disabled', F),
            (r.__hideNextMonthArrow = F));
        },
      }),
      (r.currentYearElement = r.yearElements[0]),
      Ir(),
      r.monthNav
    );
  }
  function wi() {
    r.calendarContainer.classList.add('hasTime'),
      r.config.noCalendar && r.calendarContainer.classList.add('noCalendar');
    var F = sl(r.config);
    (r.timeContainer = Me('div', 'flatpickr-time')),
      (r.timeContainer.tabIndex = -1);
    var H = Me('span', 'flatpickr-time-separator', ':'),
      $ = Ja('flatpickr-hour', { 'aria-label': r.l10n.hourAriaLabel });
    r.hourElement = $.getElementsByTagName('input')[0];
    var te = Ja('flatpickr-minute', { 'aria-label': r.l10n.minuteAriaLabel });
    if (
      ((r.minuteElement = te.getElementsByTagName('input')[0]),
      (r.hourElement.tabIndex = r.minuteElement.tabIndex = -1),
      (r.hourElement.value = Lt(
        r.latestSelectedDateObj
          ? r.latestSelectedDateObj.getHours()
          : r.config.time_24hr
          ? F.hours
          : z(F.hours)
      )),
      (r.minuteElement.value = Lt(
        r.latestSelectedDateObj
          ? r.latestSelectedDateObj.getMinutes()
          : F.minutes
      )),
      r.hourElement.setAttribute('step', r.config.hourIncrement.toString()),
      r.minuteElement.setAttribute('step', r.config.minuteIncrement.toString()),
      r.hourElement.setAttribute('min', r.config.time_24hr ? '0' : '1'),
      r.hourElement.setAttribute('max', r.config.time_24hr ? '23' : '12'),
      r.hourElement.setAttribute('maxlength', '2'),
      r.minuteElement.setAttribute('min', '0'),
      r.minuteElement.setAttribute('max', '59'),
      r.minuteElement.setAttribute('maxlength', '2'),
      r.timeContainer.appendChild($),
      r.timeContainer.appendChild(H),
      r.timeContainer.appendChild(te),
      r.config.time_24hr && r.timeContainer.classList.add('time24hr'),
      r.config.enableSeconds)
    ) {
      r.timeContainer.classList.add('hasSeconds');
      var le = Ja('flatpickr-second');
      (r.secondElement = le.getElementsByTagName('input')[0]),
        (r.secondElement.value = Lt(
          r.latestSelectedDateObj
            ? r.latestSelectedDateObj.getSeconds()
            : F.seconds
        )),
        r.secondElement.setAttribute(
          'step',
          r.minuteElement.getAttribute('step')
        ),
        r.secondElement.setAttribute('min', '0'),
        r.secondElement.setAttribute('max', '59'),
        r.secondElement.setAttribute('maxlength', '2'),
        r.timeContainer.appendChild(
          Me('span', 'flatpickr-time-separator', ':')
        ),
        r.timeContainer.appendChild(le);
    }
    return (
      r.config.time_24hr ||
        ((r.amPM = Me(
          'span',
          'flatpickr-am-pm',
          r.l10n.amPM[
            $t(
              (r.latestSelectedDateObj
                ? r.hourElement.value
                : r.config.defaultHour) > 11
            )
          ]
        )),
        (r.amPM.title = r.l10n.toggleTitle),
        (r.amPM.tabIndex = -1),
        r.timeContainer.appendChild(r.amPM)),
      r.timeContainer
    );
  }
  function de() {
    r.weekdayContainer
      ? Qa(r.weekdayContainer)
      : (r.weekdayContainer = Me('div', 'flatpickr-weekdays'));
    for (var F = r.config.showMonths; F--; ) {
      var H = Me('div', 'flatpickr-weekdaycontainer');
      r.weekdayContainer.appendChild(H);
    }
    return xe(), r.weekdayContainer;
  }
  function xe() {
    if (r.weekdayContainer) {
      var F = r.l10n.firstDayOfWeek,
        H = eh(r.l10n.weekdays.shorthand);
      F > 0 && F < H.length && (H = eh(H.splice(F, H.length), H.splice(0, F)));
      for (var $ = r.config.showMonths; $--; )
        r.weekdayContainer.children[$].innerHTML =
          `
      <span class='flatpickr-weekday'>
        ` +
          H.join("</span><span class='flatpickr-weekday'>") +
          `
      </span>
      `;
    }
  }
  function we() {
    r.calendarContainer.classList.add('hasWeeks');
    var F = Me('div', 'flatpickr-weekwrapper');
    F.appendChild(Me('span', 'flatpickr-weekday', r.l10n.weekAbbreviation));
    var H = Me('div', 'flatpickr-weeks');
    return F.appendChild(H), { weekWrapper: F, weekNumbers: H };
  }
  function Re(F, H) {
    H === void 0 && (H = !0);
    var $ = H ? F : F - r.currentMonth;
    ($ < 0 && r._hidePrevMonthArrow === !0) ||
      ($ > 0 && r._hideNextMonthArrow === !0) ||
      ((r.currentMonth += $),
      (r.currentMonth < 0 || r.currentMonth > 11) &&
        ((r.currentYear += r.currentMonth > 11 ? 1 : -1),
        (r.currentMonth = (r.currentMonth + 12) % 12),
        Fe('onYearChange'),
        St()),
      rt(),
      Fe('onMonthChange'),
      Ir());
  }
  function je(F, H) {
    if (
      (F === void 0 && (F = !0),
      H === void 0 && (H = !0),
      (r.input.value = ''),
      r.altInput !== void 0 && (r.altInput.value = ''),
      r.mobileInput !== void 0 && (r.mobileInput.value = ''),
      (r.selectedDates = []),
      (r.latestSelectedDateObj = void 0),
      H === !0 &&
        ((r.currentYear = r._initialDate.getFullYear()),
        (r.currentMonth = r._initialDate.getMonth())),
      r.config.enableTime === !0)
    ) {
      var $ = sl(r.config),
        te = $.hours,
        le = $.minutes,
        ue = $.seconds;
      K(te, le, ue);
    }
    r.redraw(), F && Fe('onChange');
  }
  function _t() {
    (r.isOpen = !1),
      r.isMobile ||
        (r.calendarContainer !== void 0 &&
          r.calendarContainer.classList.remove('open'),
        r._input !== void 0 && r._input.classList.remove('active')),
      Fe('onClose');
  }
  function Vt() {
    r.config !== void 0 && Fe('onDestroy');
    for (var F = r._handlers.length; F--; ) r._handlers[F].remove();
    if (((r._handlers = []), r.mobileInput))
      r.mobileInput.parentNode &&
        r.mobileInput.parentNode.removeChild(r.mobileInput),
        (r.mobileInput = void 0);
    else if (r.calendarContainer && r.calendarContainer.parentNode)
      if (r.config.static && r.calendarContainer.parentNode) {
        var H = r.calendarContainer.parentNode;
        if ((H.lastChild && H.removeChild(H.lastChild), H.parentNode)) {
          for (; H.firstChild; ) H.parentNode.insertBefore(H.firstChild, H);
          H.parentNode.removeChild(H);
        }
      } else r.calendarContainer.parentNode.removeChild(r.calendarContainer);
    r.altInput &&
      ((r.input.type = 'text'),
      r.altInput.parentNode && r.altInput.parentNode.removeChild(r.altInput),
      delete r.altInput),
      r.input &&
        ((r.input.type = r.input._type),
        r.input.classList.remove('flatpickr-input'),
        r.input.removeAttribute('readonly')),
      [
        '_showTimeInput',
        'latestSelectedDateObj',
        '_hideNextMonthArrow',
        '_hidePrevMonthArrow',
        '__hideNextMonthArrow',
        '__hidePrevMonthArrow',
        'isMobile',
        'isOpen',
        'selectedDateElem',
        'minDateHasTime',
        'maxDateHasTime',
        'days',
        'daysContainer',
        '_input',
        '_positionElement',
        'innerContainer',
        'rContainer',
        'monthNav',
        'todayDateElem',
        'calendarContainer',
        'weekdayContainer',
        'prevMonthNav',
        'nextMonthNav',
        'monthsDropdownContainer',
        'currentMonthElement',
        'currentYearElement',
        'navigationCurrentMonth',
        'selectedDateElem',
        'config',
      ].forEach(function ($) {
        try {
          delete r[$];
        } catch {}
      });
  }
  function dt(F) {
    return r.calendarContainer.contains(F);
  }
  function Be(F) {
    if (r.isOpen && !r.config.inline) {
      var H = Dt(F),
        $ = dt(H),
        te =
          H === r.input ||
          H === r.altInput ||
          r.element.contains(H) ||
          (F.path &&
            F.path.indexOf &&
            (~F.path.indexOf(r.input) || ~F.path.indexOf(r.altInput))),
        le = !te && !$ && !dt(F.relatedTarget),
        ue = !r.config.ignoredFocusElements.some(function (Ce) {
          return Ce.contains(H);
        });
      le &&
        ue &&
        (r.config.allowInput &&
          r.setDate(
            r._input.value,
            !1,
            r.config.altInput ? r.config.altFormat : r.config.dateFormat
          ),
        r.timeContainer !== void 0 &&
          r.minuteElement !== void 0 &&
          r.hourElement !== void 0 &&
          r.input.value !== '' &&
          r.input.value !== void 0 &&
          M(),
        r.close(),
        r.config &&
          r.config.mode === 'range' &&
          r.selectedDates.length === 1 &&
          r.clear(!1));
    }
  }
  function Wt(F) {
    if (
      !(
        !F ||
        (r.config.minDate && F < r.config.minDate.getFullYear()) ||
        (r.config.maxDate && F > r.config.maxDate.getFullYear())
      )
    ) {
      var H = F,
        $ = r.currentYear !== H;
      (r.currentYear = H || r.currentYear),
        r.config.maxDate && r.currentYear === r.config.maxDate.getFullYear()
          ? (r.currentMonth = Math.min(
              r.config.maxDate.getMonth(),
              r.currentMonth
            ))
          : r.config.minDate &&
            r.currentYear === r.config.minDate.getFullYear() &&
            (r.currentMonth = Math.max(
              r.config.minDate.getMonth(),
              r.currentMonth
            )),
        $ && (r.redraw(), Fe('onYearChange'), St());
    }
  }
  function xt(F, H) {
    var $;
    H === void 0 && (H = !0);
    var te = r.parseDate(F, void 0, H);
    if (
      (r.config.minDate &&
        te &&
        Rt(te, r.config.minDate, H !== void 0 ? H : !r.minDateHasTime) < 0) ||
      (r.config.maxDate &&
        te &&
        Rt(te, r.config.maxDate, H !== void 0 ? H : !r.maxDateHasTime) > 0)
    )
      return !1;
    if (!r.config.enable && r.config.disable.length === 0) return !0;
    if (te === void 0) return !1;
    for (
      var le = !!r.config.enable,
        ue =
          ($ = r.config.enable) !== null && $ !== void 0 ? $ : r.config.disable,
        Ce = 0,
        ge = void 0;
      Ce < ue.length;
      Ce++
    ) {
      if (((ge = ue[Ce]), typeof ge == 'function' && ge(te))) return le;
      if (ge instanceof Date && te !== void 0 && ge.getTime() === te.getTime())
        return le;
      if (typeof ge == 'string') {
        var be = r.parseDate(ge, void 0, !0);
        return be && be.getTime() === te.getTime() ? le : !le;
      } else if (
        typeof ge == 'object' &&
        te !== void 0 &&
        ge.from &&
        ge.to &&
        te.getTime() >= ge.from.getTime() &&
        te.getTime() <= ge.to.getTime()
      )
        return le;
    }
    return !le;
  }
  function Ci(F) {
    return r.daysContainer !== void 0
      ? F.className.indexOf('hidden') === -1 &&
          F.className.indexOf('flatpickr-disabled') === -1 &&
          r.daysContainer.contains(F)
      : !1;
  }
  function sr(F) {
    var H = F.target === r._input,
      $ = r._input.value.trimEnd() !== pi();
    H &&
      $ &&
      !(F.relatedTarget && dt(F.relatedTarget)) &&
      r.setDate(
        r._input.value,
        !0,
        F.target === r.altInput ? r.config.altFormat : r.config.dateFormat
      );
  }
  function xn(F) {
    var H = Dt(F),
      $ = r.config.wrap ? e.contains(H) : H === r._input,
      te = r.config.allowInput,
      le = r.isOpen && (!te || !$),
      ue = r.config.inline && $ && !te;
    if (F.keyCode === 13 && $) {
      if (te)
        return (
          r.setDate(
            r._input.value,
            !0,
            H === r.altInput ? r.config.altFormat : r.config.dateFormat
          ),
          r.close(),
          H.blur()
        );
      r.open();
    } else if (dt(H) || le || ue) {
      var Ce = !!r.timeContainer && r.timeContainer.contains(H);
      switch (F.keyCode) {
        case 13:
          Ce ? (F.preventDefault(), M(), yn()) : Na(F);
          break;
        case 27:
          F.preventDefault(), yn();
          break;
        case 8:
        case 46:
          $ && !r.config.allowInput && (F.preventDefault(), r.clear());
          break;
        case 37:
        case 39:
          if (!Ce && !$) {
            F.preventDefault();
            var ge = g();
            if (r.daysContainer !== void 0 && (te === !1 || (ge && Ci(ge)))) {
              var be = F.keyCode === 39 ? 1 : -1;
              F.ctrlKey
                ? (F.stopPropagation(), Re(be), ye(he(1), 0))
                : ye(void 0, be);
            }
          } else r.hourElement && r.hourElement.focus();
          break;
        case 38:
        case 40:
          F.preventDefault();
          var fe = F.keyCode === 40 ? 1 : -1;
          (r.daysContainer && H.$i !== void 0) ||
          H === r.input ||
          H === r.altInput
            ? F.ctrlKey
              ? (F.stopPropagation(), Wt(r.currentYear - fe), ye(he(1), 0))
              : Ce || ye(void 0, fe * 7)
            : H === r.currentYearElement
            ? Wt(r.currentYear - fe)
            : r.config.enableTime &&
              (!Ce && r.hourElement && r.hourElement.focus(),
              M(F),
              r._debouncedChange());
          break;
        case 9:
          if (Ce) {
            var ve = [r.hourElement, r.minuteElement, r.secondElement, r.amPM]
                .concat(r.pluginElements)
                .filter(function (vt) {
                  return vt;
                }),
              De = ve.indexOf(H);
            if (De !== -1) {
              var Ut = ve[De + (F.shiftKey ? -1 : 1)];
              F.preventDefault(), (Ut || r._input).focus();
            }
          } else
            !r.config.noCalendar &&
              r.daysContainer &&
              r.daysContainer.contains(H) &&
              F.shiftKey &&
              (F.preventDefault(), r._input.focus());
          break;
      }
    }
    if (r.amPM !== void 0 && H === r.amPM)
      switch (F.key) {
        case r.l10n.amPM[0].charAt(0):
        case r.l10n.amPM[0].charAt(0).toLowerCase():
          (r.amPM.textContent = r.l10n.amPM[0]), Y(), Gt();
          break;
        case r.l10n.amPM[1].charAt(0):
        case r.l10n.amPM[1].charAt(0).toLowerCase():
          (r.amPM.textContent = r.l10n.amPM[1]), Y(), Gt();
          break;
      }
    ($ || dt(H)) && Fe('onKeyDown', F);
  }
  function ii(F, H) {
    if (
      (H === void 0 && (H = 'flatpickr-day'),
      !(
        r.selectedDates.length !== 1 ||
        (F &&
          (!F.classList.contains(H) ||
            F.classList.contains('flatpickr-disabled')))
      ))
    ) {
      for (
        var $ = F
            ? F.dateObj.getTime()
            : r.days.firstElementChild.dateObj.getTime(),
          te = r.parseDate(r.selectedDates[0], void 0, !0).getTime(),
          le = Math.min($, r.selectedDates[0].getTime()),
          ue = Math.max($, r.selectedDates[0].getTime()),
          Ce = !1,
          ge = 0,
          be = 0,
          fe = le;
        fe < ue;
        fe += Z2.DAY
      )
        xt(new Date(fe), !0) ||
          ((Ce = Ce || (fe > le && fe < ue)),
          fe < te && (!ge || fe > ge)
            ? (ge = fe)
            : fe > te && (!be || fe < be) && (be = fe));
      var ve = Array.from(
        r.rContainer.querySelectorAll(
          '*:nth-child(-n+' + r.config.showMonths + ') > .' + H
        )
      );
      ve.forEach(function (De) {
        var Ut = De.dateObj,
          vt = Ut.getTime(),
          or = (ge > 0 && vt < ge) || (be > 0 && vt > be);
        if (or) {
          De.classList.add('notAllowed'),
            ['inRange', 'startRange', 'endRange'].forEach(function (ki) {
              De.classList.remove(ki);
            });
          return;
        } else if (Ce && !or) return;
        ['startRange', 'inRange', 'endRange', 'notAllowed'].forEach(function (
          ki
        ) {
          De.classList.remove(ki);
        }),
          F !== void 0 &&
            (F.classList.add(
              $ <= r.selectedDates[0].getTime() ? 'startRange' : 'endRange'
            ),
            te < $ && vt === te
              ? De.classList.add('startRange')
              : te > $ && vt === te && De.classList.add('endRange'),
            vt >= ge &&
              (be === 0 || vt <= be) &&
              G2(vt, te, $) &&
              De.classList.add('inRange'));
      });
    }
  }
  function vn() {
    r.isOpen && !r.config.static && !r.config.inline && Mr();
  }
  function bn(F, H) {
    if ((H === void 0 && (H = r._positionElement), r.isMobile === !0)) {
      if (F) {
        F.preventDefault();
        var $ = Dt(F);
        $ && $.blur();
      }
      r.mobileInput !== void 0 &&
        (r.mobileInput.focus(), r.mobileInput.click()),
        Fe('onOpen');
      return;
    } else if (r._input.disabled || r.config.inline) return;
    var te = r.isOpen;
    (r.isOpen = !0),
      te ||
        (r.calendarContainer.classList.add('open'),
        r._input.classList.add('active'),
        Fe('onOpen'),
        Mr(H)),
      r.config.enableTime === !0 &&
        r.config.noCalendar === !0 &&
        r.config.allowInput === !1 &&
        (F === void 0 || !r.timeContainer.contains(F.relatedTarget)) &&
        setTimeout(function () {
          return r.hourElement.select();
        }, 50);
  }
  function Sa(F) {
    return function (H) {
      var $ = (r.config['_' + F + 'Date'] = r.parseDate(
          H,
          r.config.dateFormat
        )),
        te = r.config['_' + (F === 'min' ? 'max' : 'min') + 'Date'];
      $ !== void 0 &&
        (r[F === 'min' ? 'minDateHasTime' : 'maxDateHasTime'] =
          $.getHours() > 0 || $.getMinutes() > 0 || $.getSeconds() > 0),
        r.selectedDates &&
          ((r.selectedDates = r.selectedDates.filter(function (le) {
            return xt(le);
          })),
          !r.selectedDates.length && F === 'min' && U($),
          Gt()),
        r.daysContainer &&
          (La(),
          $ !== void 0
            ? (r.currentYearElement[F] = $.getFullYear().toString())
            : r.currentYearElement.removeAttribute(F),
          (r.currentYearElement.disabled =
            !!te && $ !== void 0 && te.getFullYear() === $.getFullYear()));
    };
  }
  function mo() {
    var F = [
        'wrap',
        'weekNumbers',
        'allowInput',
        'allowInvalidPreload',
        'clickOpens',
        'time_24hr',
        'enableTime',
        'noCalendar',
        'altInput',
        'shorthandCurrentMonth',
        'inline',
        'static',
        'enableSeconds',
        'disableMobile',
      ],
      H = pt(pt({}, JSON.parse(JSON.stringify(e.dataset || {}))), n),
      $ = {};
    (r.config.parseDate = H.parseDate),
      (r.config.formatDate = H.formatDate),
      Object.defineProperty(r.config, 'enable', {
        get: function () {
          return r.config._enable;
        },
        set: function (ve) {
          r.config._enable = wn(ve);
        },
      }),
      Object.defineProperty(r.config, 'disable', {
        get: function () {
          return r.config._disable;
        },
        set: function (ve) {
          r.config._disable = wn(ve);
        },
      });
    var te = H.mode === 'time';
    if (!H.dateFormat && (H.enableTime || te)) {
      var le = $e.defaultConfig.dateFormat || en.dateFormat;
      $.dateFormat =
        H.noCalendar || te
          ? 'H:i' + (H.enableSeconds ? ':S' : '')
          : le + ' H:i' + (H.enableSeconds ? ':S' : '');
    }
    if (H.altInput && (H.enableTime || te) && !H.altFormat) {
      var ue = $e.defaultConfig.altFormat || en.altFormat;
      $.altFormat =
        H.noCalendar || te
          ? 'h:i' + (H.enableSeconds ? ':S K' : ' K')
          : ue + (' h:i' + (H.enableSeconds ? ':S' : '') + ' K');
    }
    Object.defineProperty(r.config, 'minDate', {
      get: function () {
        return r.config._minDate;
      },
      set: Sa('min'),
    }),
      Object.defineProperty(r.config, 'maxDate', {
        get: function () {
          return r.config._maxDate;
        },
        set: Sa('max'),
      });
    var Ce = function (ve) {
      return function (De) {
        r.config[ve === 'min' ? '_minTime' : '_maxTime'] = r.parseDate(
          De,
          'H:i:S'
        );
      };
    };
    Object.defineProperty(r.config, 'minTime', {
      get: function () {
        return r.config._minTime;
      },
      set: Ce('min'),
    }),
      Object.defineProperty(r.config, 'maxTime', {
        get: function () {
          return r.config._maxTime;
        },
        set: Ce('max'),
      }),
      H.mode === 'time' &&
        ((r.config.noCalendar = !0), (r.config.enableTime = !0)),
      Object.assign(r.config, $, H);
    for (var ge = 0; ge < F.length; ge++)
      r.config[F[ge]] = r.config[F[ge]] === !0 || r.config[F[ge]] === 'true';
    il
      .filter(function (ve) {
        return r.config[ve] !== void 0;
      })
      .forEach(function (ve) {
        r.config[ve] = rl(r.config[ve] || []).map(w);
      }),
      (r.isMobile =
        !r.config.disableMobile &&
        !r.config.inline &&
        r.config.mode === 'single' &&
        !r.config.disable.length &&
        !r.config.enable &&
        !r.config.weekNumbers &&
        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
          navigator.userAgent
        ));
    for (var ge = 0; ge < r.config.plugins.length; ge++) {
      var be = r.config.plugins[ge](r) || {};
      for (var fe in be)
        il.indexOf(fe) > -1
          ? (r.config[fe] = rl(be[fe]).map(w).concat(r.config[fe]))
          : typeof H[fe] > 'u' && (r.config[fe] = be[fe]);
    }
    H.altInputClass ||
      (r.config.altInputClass = Aa().className + ' ' + r.config.altInputClass),
      Fe('onParseConfig');
  }
  function Aa() {
    return r.config.wrap ? e.querySelector('[data-input]') : e;
  }
  function jr() {
    typeof r.config.locale != 'object' &&
      typeof $e.l10ns[r.config.locale] > 'u' &&
      r.config.errorHandler(
        new Error('flatpickr: invalid locale ' + r.config.locale)
      ),
      (r.l10n = pt(
        pt({}, $e.l10ns.default),
        typeof r.config.locale == 'object'
          ? r.config.locale
          : r.config.locale !== 'default'
          ? $e.l10ns[r.config.locale]
          : void 0
      )),
      (hr.D = '(' + r.l10n.weekdays.shorthand.join('|') + ')'),
      (hr.l = '(' + r.l10n.weekdays.longhand.join('|') + ')'),
      (hr.M = '(' + r.l10n.months.shorthand.join('|') + ')'),
      (hr.F = '(' + r.l10n.months.longhand.join('|') + ')'),
      (hr.K =
        '(' +
        r.l10n.amPM[0] +
        '|' +
        r.l10n.amPM[1] +
        '|' +
        r.l10n.amPM[0].toLowerCase() +
        '|' +
        r.l10n.amPM[1].toLowerCase() +
        ')');
    var F = pt(pt({}, n), JSON.parse(JSON.stringify(e.dataset || {})));
    F.time_24hr === void 0 &&
      $e.defaultConfig.time_24hr === void 0 &&
      (r.config.time_24hr = r.l10n.time_24hr),
      (r.formatDate = ap(r)),
      (r.parseDate = uc({ config: r.config, l10n: r.l10n }));
  }
  function Mr(F) {
    if (typeof r.config.position == 'function')
      return void r.config.position(r, F);
    if (r.calendarContainer !== void 0) {
      Fe('onPreCalendarPosition');
      var H = F || r._positionElement,
        $ = Array.prototype.reduce.call(
          r.calendarContainer.children,
          function (o, l) {
            return o + l.offsetHeight;
          },
          0
        ),
        te = r.calendarContainer.offsetWidth,
        le = r.config.position.split(' '),
        ue = le[0],
        Ce = le.length > 1 ? le[1] : null,
        ge = H.getBoundingClientRect(),
        be = window.innerHeight - ge.bottom,
        fe = ue === 'above' || (ue !== 'below' && be < $ && ge.top > $),
        ve = window.pageYOffset + ge.top + (fe ? -$ - 2 : H.offsetHeight + 2);
      if (
        (bt(r.calendarContainer, 'arrowTop', !fe),
        bt(r.calendarContainer, 'arrowBottom', fe),
        !r.config.inline)
      ) {
        var De = window.pageXOffset + ge.left,
          Ut = !1,
          vt = !1;
        Ce === 'center'
          ? ((De -= (te - ge.width) / 2), (Ut = !0))
          : Ce === 'right' && ((De -= te - ge.width), (vt = !0)),
          bt(r.calendarContainer, 'arrowLeft', !Ut && !vt),
          bt(r.calendarContainer, 'arrowCenter', Ut),
          bt(r.calendarContainer, 'arrowRight', vt);
        var or =
            window.document.body.offsetWidth - (window.pageXOffset + ge.right),
          ki = De + te > window.document.body.offsetWidth,
          Ia = or + te > window.document.body.offsetWidth;
        if ((bt(r.calendarContainer, 'rightMost', ki), !r.config.static))
          if (((r.calendarContainer.style.top = ve + 'px'), !ki))
            (r.calendarContainer.style.left = De + 'px'),
              (r.calendarContainer.style.right = 'auto');
          else if (!Ia)
            (r.calendarContainer.style.left = 'auto'),
              (r.calendarContainer.style.right = or + 'px');
          else {
            var lr = xo();
            if (lr === void 0) return;
            var Co = window.document.body.offsetWidth,
              j = Math.max(0, Co / 2 - te / 2),
              t = '.flatpickr-calendar.centerMost:before',
              i = '.flatpickr-calendar.centerMost:after',
              a = lr.cssRules.length,
              s = '{left:' + ge.left + 'px;right:auto;}';
            bt(r.calendarContainer, 'rightMost', !1),
              bt(r.calendarContainer, 'centerMost', !0),
              lr.insertRule(t + ',' + i + s, a),
              (r.calendarContainer.style.left = j + 'px'),
              (r.calendarContainer.style.right = 'auto');
          }
      }
    }
  }
  function xo() {
    for (var F = null, H = 0; H < document.styleSheets.length; H++) {
      var $ = document.styleSheets[H];
      if ($.cssRules) {
        try {
          $.cssRules;
        } catch {
          continue;
        }
        F = $;
        break;
      }
    }
    return F ?? vo();
  }
  function vo() {
    var F = document.createElement('style');
    return document.head.appendChild(F), F.sheet;
  }
  function La() {
    r.config.noCalendar || r.isMobile || (St(), Ir(), rt());
  }
  function yn() {
    r._input.focus(),
      window.navigator.userAgent.indexOf('MSIE') !== -1 ||
      navigator.msMaxTouchPoints !== void 0
        ? setTimeout(r.close, 0)
        : r.close();
  }
  function Na(F) {
    F.preventDefault(), F.stopPropagation();
    var H = function (ve) {
        return (
          ve.classList &&
          ve.classList.contains('flatpickr-day') &&
          !ve.classList.contains('flatpickr-disabled') &&
          !ve.classList.contains('notAllowed')
        );
      },
      $ = np(Dt(F), H);
    if ($ !== void 0) {
      var te = $,
        le = (r.latestSelectedDateObj = new Date(te.dateObj.getTime())),
        ue =
          (le.getMonth() < r.currentMonth ||
            le.getMonth() > r.currentMonth + r.config.showMonths - 1) &&
          r.config.mode !== 'range';
      if (((r.selectedDateElem = te), r.config.mode === 'single'))
        r.selectedDates = [le];
      else if (r.config.mode === 'multiple') {
        var Ce = Dr(le);
        Ce ? r.selectedDates.splice(parseInt(Ce), 1) : r.selectedDates.push(le);
      } else
        r.config.mode === 'range' &&
          (r.selectedDates.length === 2 && r.clear(!1, !1),
          (r.latestSelectedDateObj = le),
          r.selectedDates.push(le),
          Rt(le, r.selectedDates[0], !0) !== 0 &&
            r.selectedDates.sort(function (ve, De) {
              return ve.getTime() - De.getTime();
            }));
      if ((Y(), ue)) {
        var ge = r.currentYear !== le.getFullYear();
        (r.currentYear = le.getFullYear()),
          (r.currentMonth = le.getMonth()),
          ge && (Fe('onYearChange'), St()),
          Fe('onMonthChange');
      }
      if (
        (Ir(),
        rt(),
        Gt(),
        !ue && r.config.mode !== 'range' && r.config.showMonths === 1
          ? ce(te)
          : r.selectedDateElem !== void 0 &&
            r.hourElement === void 0 &&
            r.selectedDateElem &&
            r.selectedDateElem.focus(),
        r.hourElement !== void 0 &&
          r.hourElement !== void 0 &&
          r.hourElement.focus(),
        r.config.closeOnSelect)
      ) {
        var be = r.config.mode === 'single' && !r.config.enableTime,
          fe =
            r.config.mode === 'range' &&
            r.selectedDates.length === 2 &&
            !r.config.enableTime;
        (be || fe) && yn();
      }
      ee();
    }
  }
  var Pr = {
    locale: [jr, xe],
    showMonths: [fi, k, de],
    minDate: [E],
    maxDate: [E],
    positionElement: [Pa],
    clickOpens: [
      function () {
        r.config.clickOpens === !0
          ? (V(r._input, 'focus', r.open), V(r._input, 'click', r.open))
          : (r._input.removeEventListener('focus', r.open),
            r._input.removeEventListener('click', r.open));
      },
    ],
  };
  function Tr(F, H) {
    if (F !== null && typeof F == 'object') {
      Object.assign(r.config, F);
      for (var $ in F)
        Pr[$] !== void 0 &&
          Pr[$].forEach(function (te) {
            return te();
          });
    } else
      (r.config[F] = H),
        Pr[F] !== void 0
          ? Pr[F].forEach(function (te) {
              return te();
            })
          : il.indexOf(F) > -1 && (r.config[F] = rl(H));
    r.redraw(), Gt(!0);
  }
  function Ea(F, H) {
    var $ = [];
    if (F instanceof Array)
      $ = F.map(function (te) {
        return r.parseDate(te, H);
      });
    else if (F instanceof Date || typeof F == 'number') $ = [r.parseDate(F, H)];
    else if (typeof F == 'string')
      switch (r.config.mode) {
        case 'single':
        case 'time':
          $ = [r.parseDate(F, H)];
          break;
        case 'multiple':
          $ = F.split(r.config.conjunction).map(function (te) {
            return r.parseDate(te, H);
          });
          break;
        case 'range':
          $ = F.split(r.l10n.rangeSeparator).map(function (te) {
            return r.parseDate(te, H);
          });
          break;
      }
    else
      r.config.errorHandler(
        new Error('Invalid date supplied: ' + JSON.stringify(F))
      );
    (r.selectedDates = r.config.allowInvalidPreload
      ? $
      : $.filter(function (te) {
          return te instanceof Date && xt(te, !1);
        })),
      r.config.mode === 'range' &&
        r.selectedDates.sort(function (te, le) {
          return te.getTime() - le.getTime();
        });
  }
  function ja(F, H, $) {
    if (
      (H === void 0 && (H = !1),
      $ === void 0 && ($ = r.config.dateFormat),
      (F !== 0 && !F) || (F instanceof Array && F.length === 0))
    )
      return r.clear(H);
    Ea(F, $),
      (r.latestSelectedDateObj = r.selectedDates[r.selectedDates.length - 1]),
      r.redraw(),
      E(void 0, H),
      U(),
      r.selectedDates.length === 0 && r.clear(!1),
      Gt(H),
      H && Fe('onChange');
  }
  function wn(F) {
    return F.slice()
      .map(function (H) {
        return typeof H == 'string' || typeof H == 'number' || H instanceof Date
          ? r.parseDate(H, void 0, !0)
          : H && typeof H == 'object' && H.from && H.to
          ? { from: r.parseDate(H.from, void 0), to: r.parseDate(H.to, void 0) }
          : H;
      })
      .filter(function (H) {
        return H;
      });
  }
  function bo() {
    (r.selectedDates = []), (r.now = r.parseDate(r.config.now) || new Date());
    var F =
      r.config.defaultDate ||
      ((r.input.nodeName === 'INPUT' || r.input.nodeName === 'TEXTAREA') &&
      r.input.placeholder &&
      r.input.value === r.input.placeholder
        ? null
        : r.input.value);
    F && Ea(F, r.config.dateFormat),
      (r._initialDate =
        r.selectedDates.length > 0
          ? r.selectedDates[0]
          : r.config.minDate && r.config.minDate.getTime() > r.now.getTime()
          ? r.config.minDate
          : r.config.maxDate && r.config.maxDate.getTime() < r.now.getTime()
          ? r.config.maxDate
          : r.now),
      (r.currentYear = r._initialDate.getFullYear()),
      (r.currentMonth = r._initialDate.getMonth()),
      r.selectedDates.length > 0 &&
        (r.latestSelectedDateObj = r.selectedDates[0]),
      r.config.minTime !== void 0 &&
        (r.config.minTime = r.parseDate(r.config.minTime, 'H:i')),
      r.config.maxTime !== void 0 &&
        (r.config.maxTime = r.parseDate(r.config.maxTime, 'H:i')),
      (r.minDateHasTime =
        !!r.config.minDate &&
        (r.config.minDate.getHours() > 0 ||
          r.config.minDate.getMinutes() > 0 ||
          r.config.minDate.getSeconds() > 0)),
      (r.maxDateHasTime =
        !!r.config.maxDate &&
        (r.config.maxDate.getHours() > 0 ||
          r.config.maxDate.getMinutes() > 0 ||
          r.config.maxDate.getSeconds() > 0));
  }
  function Ma() {
    if (((r.input = Aa()), !r.input)) {
      r.config.errorHandler(new Error('Invalid input element specified'));
      return;
    }
    (r.input._type = r.input.type),
      (r.input.type = 'text'),
      r.input.classList.add('flatpickr-input'),
      (r._input = r.input),
      r.config.altInput &&
        ((r.altInput = Me(r.input.nodeName, r.config.altInputClass)),
        (r._input = r.altInput),
        (r.altInput.placeholder = r.input.placeholder),
        (r.altInput.disabled = r.input.disabled),
        (r.altInput.required = r.input.required),
        (r.altInput.tabIndex = r.input.tabIndex),
        (r.altInput.type = 'text'),
        r.input.setAttribute('type', 'hidden'),
        !r.config.static &&
          r.input.parentNode &&
          r.input.parentNode.insertBefore(r.altInput, r.input.nextSibling)),
      r.config.allowInput || r._input.setAttribute('readonly', 'readonly'),
      Pa();
  }
  function Pa() {
    r._positionElement = r.config.positionElement || r._input;
  }
  function Ta() {
    var F = r.config.enableTime
      ? r.config.noCalendar
        ? 'time'
        : 'datetime-local'
      : 'date';
    (r.mobileInput = Me('input', r.input.className + ' flatpickr-mobile')),
      (r.mobileInput.tabIndex = 1),
      (r.mobileInput.type = F),
      (r.mobileInput.disabled = r.input.disabled),
      (r.mobileInput.required = r.input.required),
      (r.mobileInput.placeholder = r.input.placeholder),
      (r.mobileFormatStr =
        F === 'datetime-local'
          ? 'Y-m-d\\TH:i:S'
          : F === 'date'
          ? 'Y-m-d'
          : 'H:i:S'),
      r.selectedDates.length > 0 &&
        (r.mobileInput.defaultValue = r.mobileInput.value =
          r.formatDate(r.selectedDates[0], r.mobileFormatStr)),
      r.config.minDate &&
        (r.mobileInput.min = r.formatDate(r.config.minDate, 'Y-m-d')),
      r.config.maxDate &&
        (r.mobileInput.max = r.formatDate(r.config.maxDate, 'Y-m-d')),
      r.input.getAttribute('step') &&
        (r.mobileInput.step = String(r.input.getAttribute('step'))),
      (r.input.type = 'hidden'),
      r.altInput !== void 0 && (r.altInput.type = 'hidden');
    try {
      r.input.parentNode &&
        r.input.parentNode.insertBefore(r.mobileInput, r.input.nextSibling);
    } catch {}
    V(r.mobileInput, 'change', function (H) {
      r.setDate(Dt(H).value, !1, r.mobileFormatStr),
        Fe('onChange'),
        Fe('onClose');
    });
  }
  function yo(F) {
    if (r.isOpen === !0) return r.close();
    r.open(F);
  }
  function Fe(F, H) {
    if (r.config !== void 0) {
      var $ = r.config[F];
      if ($ !== void 0 && $.length > 0)
        for (var te = 0; $[te] && te < $.length; te++)
          $[te](r.selectedDates, r.input.value, r, H);
      F === 'onChange' &&
        (r.input.dispatchEvent(Cn('change')),
        r.input.dispatchEvent(Cn('input')));
    }
  }
  function Cn(F) {
    var H = document.createEvent('Event');
    return H.initEvent(F, !0, !0), H;
  }
  function Dr(F) {
    for (var H = 0; H < r.selectedDates.length; H++) {
      var $ = r.selectedDates[H];
      if ($ instanceof Date && Rt($, F) === 0) return '' + H;
    }
    return !1;
  }
  function wo(F) {
    return r.config.mode !== 'range' || r.selectedDates.length < 2
      ? !1
      : Rt(F, r.selectedDates[0]) >= 0 && Rt(F, r.selectedDates[1]) <= 0;
  }
  function Ir() {
    r.config.noCalendar ||
      r.isMobile ||
      !r.monthNav ||
      (r.yearElements.forEach(function (F, H) {
        var $ = new Date(r.currentYear, r.currentMonth, 1);
        $.setMonth(r.currentMonth + H),
          r.config.showMonths > 1 || r.config.monthSelectorType === 'static'
            ? (r.monthElements[H].textContent =
                Ws($.getMonth(), r.config.shorthandCurrentMonth, r.l10n) + ' ')
            : (r.monthsDropdownContainer.value = $.getMonth().toString()),
          (F.value = $.getFullYear().toString());
      }),
      (r._hidePrevMonthArrow =
        r.config.minDate !== void 0 &&
        (r.currentYear === r.config.minDate.getFullYear()
          ? r.currentMonth <= r.config.minDate.getMonth()
          : r.currentYear < r.config.minDate.getFullYear())),
      (r._hideNextMonthArrow =
        r.config.maxDate !== void 0 &&
        (r.currentYear === r.config.maxDate.getFullYear()
          ? r.currentMonth + 1 > r.config.maxDate.getMonth()
          : r.currentYear > r.config.maxDate.getFullYear())));
  }
  function pi(F) {
    var H = F || (r.config.altInput ? r.config.altFormat : r.config.dateFormat);
    return r.selectedDates
      .map(function ($) {
        return r.formatDate($, H);
      })
      .filter(function ($, te, le) {
        return (
          r.config.mode !== 'range' ||
          r.config.enableTime ||
          le.indexOf($) === te
        );
      })
      .join(
        r.config.mode !== 'range' ? r.config.conjunction : r.l10n.rangeSeparator
      );
  }
  function Gt(F) {
    F === void 0 && (F = !0),
      r.mobileInput !== void 0 &&
        r.mobileFormatStr &&
        (r.mobileInput.value =
          r.latestSelectedDateObj !== void 0
            ? r.formatDate(r.latestSelectedDateObj, r.mobileFormatStr)
            : ''),
      (r.input.value = pi(r.config.dateFormat)),
      r.altInput !== void 0 && (r.altInput.value = pi(r.config.altFormat)),
      F !== !1 && Fe('onValueUpdate');
  }
  function kn(F) {
    var H = Dt(F),
      $ = r.prevMonthNav.contains(H),
      te = r.nextMonthNav.contains(H);
    $ || te
      ? Re($ ? -1 : 1)
      : r.yearElements.indexOf(H) >= 0
      ? H.select()
      : H.classList.contains('arrowUp')
      ? r.changeYear(r.currentYear + 1)
      : H.classList.contains('arrowDown') && r.changeYear(r.currentYear - 1);
  }
  function Da(F) {
    F.preventDefault();
    var H = F.type === 'keydown',
      $ = Dt(F),
      te = $;
    r.amPM !== void 0 &&
      $ === r.amPM &&
      (r.amPM.textContent =
        r.l10n.amPM[$t(r.amPM.textContent === r.l10n.amPM[0])]);
    var le = parseFloat(te.getAttribute('min')),
      ue = parseFloat(te.getAttribute('max')),
      Ce = parseFloat(te.getAttribute('step')),
      ge = parseInt(te.value, 10),
      be = F.delta || (H ? (F.which === 38 ? 1 : -1) : 0),
      fe = ge + Ce * be;
    if (typeof te.value < 'u' && te.value.length === 2) {
      var ve = te === r.hourElement,
        De = te === r.minuteElement;
      fe < le
        ? ((fe = ue + fe + $t(!ve) + ($t(ve) && $t(!r.amPM))),
          De && Q(void 0, -1, r.hourElement))
        : fe > ue &&
          ((fe = te === r.hourElement ? fe - ue - $t(!r.amPM) : le),
          De && Q(void 0, 1, r.hourElement)),
        r.amPM &&
          ve &&
          (Ce === 1 ? fe + ge === 23 : Math.abs(fe - ge) > Ce) &&
          (r.amPM.textContent =
            r.l10n.amPM[$t(r.amPM.textContent === r.l10n.amPM[0])]),
        (te.value = Lt(fe));
    }
  }
  return f(), r;
}
function tn(e, n) {
  for (
    var r = Array.prototype.slice.call(e).filter(function (w) {
        return w instanceof HTMLElement;
      }),
      c = [],
      f = 0;
    f < r.length;
    f++
  ) {
    var g = r[f];
    try {
      if (g.getAttribute('data-fp-omit') !== null) continue;
      g._flatpickr !== void 0 &&
        (g._flatpickr.destroy(), (g._flatpickr = void 0)),
        (g._flatpickr = q2(g, n || {})),
        c.push(g._flatpickr);
    } catch (w) {
      console.error(w);
    }
  }
  return c.length === 1 ? c[0] : c;
}
typeof HTMLElement < 'u' &&
  typeof HTMLCollection < 'u' &&
  typeof NodeList < 'u' &&
  ((HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr =
    function (e) {
      return tn(this, e);
    }),
  (HTMLElement.prototype.flatpickr = function (e) {
    return tn([this], e);
  }));
var $e = function (e, n) {
  return typeof e == 'string'
    ? tn(window.document.querySelectorAll(e), n)
    : e instanceof Node
    ? tn([e], n)
    : tn(e, n);
};
$e.defaultConfig = {};
$e.l10ns = { en: pt({}, ga), default: pt({}, ga) };
$e.localize = function (e) {
  $e.l10ns.default = pt(pt({}, $e.l10ns.default), e);
};
$e.setDefaults = function (e) {
  $e.defaultConfig = pt(pt({}, $e.defaultConfig), e);
};
$e.parseDate = uc({});
$e.formatDate = ap({});
$e.compareDates = Rt;
typeof jQuery < 'u' &&
  typeof jQuery.fn < 'u' &&
  (jQuery.fn.flatpickr = function (e) {
    return tn(this, e);
  });
Date.prototype.fp_incr = function (e) {
  return new Date(
    this.getFullYear(),
    this.getMonth(),
    this.getDate() + (typeof e == 'string' ? parseInt(e, 10) : e)
  );
};
typeof window < 'u' && (window.flatpickr = $e);
const K2 = () => (
    ne.useEffect(() => {
      $e('.form-datepicker', {
        mode: 'single',
        static: !0,
        monthSelectorType: 'static',
        dateFormat: 'M j, Y',
        prevArrow:
          '<svg className="fill-current" width="7" height="11" viewBox="0 0 7 11"><path d="M5.4 10.8l1.4-1.4-4-4 4-4L5.4 0 0 5.4z" /></svg>',
        nextArrow:
          '<svg className="fill-current" width="7" height="11" viewBox="0 0 7 11"><path d="M1.4 10.8L0 9.4l4-4-4-4L1.4 0l5.4 5.4z" /></svg>',
      });
    }, []),
    m.jsxs('div', {
      children: [
        m.jsx('label', {
          className:
            'mb-3 block text-sm font-medium text-black dark:text-white',
          children: 'Date picker',
        }),
        m.jsxs('div', {
          className: 'relative',
          children: [
            m.jsx('input', {
              className:
                'form-datepicker w-full rounded border-[1.5px] border-stroke bg-transparent px-5 py-3 font-normal outline-none transition focus:border-primary active:border-primary dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary',
              placeholder: 'mm/dd/yyyy',
              'data-class': 'flatpickr-right',
            }),
            m.jsx('div', {
              className:
                'pointer-events-none absolute inset-0 left-auto right-5 flex items-center',
              children: m.jsx('svg', {
                width: '18',
                height: '18',
                viewBox: '0 0 18 18',
                fill: 'none',
                xmlns: 'http://www.w3.org/2000/svg',
                children: m.jsx('path', {
                  d: 'M15.7504 2.9812H14.2879V2.36245C14.2879 2.02495 14.0066 1.71558 13.641 1.71558C13.2754 1.71558 12.9941 1.99683 12.9941 2.36245V2.9812H4.97852V2.36245C4.97852 2.02495 4.69727 1.71558 4.33164 1.71558C3.96602 1.71558 3.68477 1.99683 3.68477 2.36245V2.9812H2.25039C1.29414 2.9812 0.478516 3.7687 0.478516 4.75308V14.5406C0.478516 15.4968 1.26602 16.3125 2.25039 16.3125H15.7504C16.7066 16.3125 17.5223 15.525 17.5223 14.5406V4.72495C17.5223 3.7687 16.7066 2.9812 15.7504 2.9812ZM1.77227 8.21245H4.16289V10.9968H1.77227V8.21245ZM5.42852 8.21245H8.38164V10.9968H5.42852V8.21245ZM8.38164 12.2625V15.0187H5.42852V12.2625H8.38164V12.2625ZM9.64727 12.2625H12.6004V15.0187H9.64727V12.2625ZM9.64727 10.9968V8.21245H12.6004V10.9968H9.64727ZM13.8379 8.21245H16.2285V10.9968H13.8379V8.21245ZM2.25039 4.24683H3.71289V4.83745C3.71289 5.17495 3.99414 5.48433 4.35977 5.48433C4.72539 5.48433 5.00664 5.20308 5.00664 4.83745V4.24683H13.0504V4.83745C13.0504 5.17495 13.3316 5.48433 13.6973 5.48433C14.0629 5.48433 14.3441 5.20308 14.3441 4.83745V4.24683H15.7504C16.0316 4.24683 16.2566 4.47183 16.2566 4.75308V6.94683H1.77227V4.75308C1.77227 4.47183 1.96914 4.24683 2.25039 4.24683ZM1.77227 14.5125V12.2343H4.16289V14.9906H2.25039C1.96914 15.0187 1.77227 14.7937 1.77227 14.5125ZM15.7504 15.0187H13.8379V12.2625H16.2285V14.5406C16.2566 14.7937 16.0316 15.0187 15.7504 15.0187Z',
                  fill: '#64748B',
                }),
              }),
            }),
          ],
        }),
      ],
    })
  ),
  Q2 = () => (
    ne.useEffect(() => {
      $e('.form-datepicker', {
        mode: 'single',
        static: !0,
        monthSelectorType: 'static',
        dateFormat: 'M j, Y',
        prevArrow:
          '<svg className="fill-current" width="7" height="11" viewBox="0 0 7 11"><path d="M5.4 10.8l1.4-1.4-4-4 4-4L5.4 0 0 5.4z" /></svg>',
        nextArrow:
          '<svg className="fill-current" width="7" height="11" viewBox="0 0 7 11"><path d="M1.4 10.8L0 9.4l4-4-4-4L1.4 0l5.4 5.4z" /></svg>',
      });
    }, []),
    m.jsxs('div', {
      children: [
        m.jsx('label', {
          className:
            'mb-3 block text-sm font-medium text-black dark:text-white',
          children: 'Select date',
        }),
        m.jsxs('div', {
          className: 'relative',
          children: [
            m.jsx('input', {
              className:
                'form-datepicker w-full rounded border-[1.5px] border-stroke bg-transparent px-5 py-3 font-normal outline-none transition focus:border-primary active:border-primary dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary',
              placeholder: 'mm/dd/yyyy',
              'data-class': 'flatpickr-right',
            }),
            m.jsx('div', {
              className:
                'pointer-events-none absolute inset-0 left-auto right-5 flex items-center',
              children: m.jsx('svg', {
                width: '18',
                height: '18',
                viewBox: '0 0 18 18',
                fill: 'none',
                xmlns: 'http://www.w3.org/2000/svg',
                children: m.jsx('path', {
                  d: 'M9.0002 12.8249C8.83145 12.8249 8.69082 12.7687 8.5502 12.6562L2.08145 6.2999C1.82832 6.04678 1.82832 5.65303 2.08145 5.3999C2.33457 5.14678 2.72832 5.14678 2.98145 5.3999L9.0002 11.278L15.0189 5.34365C15.2721 5.09053 15.6658 5.09053 15.9189 5.34365C16.1721 5.59678 16.1721 5.99053 15.9189 6.24365L9.45019 12.5999C9.30957 12.7405 9.16895 12.8249 9.0002 12.8249Z',
                  fill: '#64748B',
                }),
              }),
            }),
          ],
        }),
      ],
    })
  ),
  J2 = () => {
    const [e, n] = ne.useState(''),
      [r, c] = ne.useState(!1),
      f = () => {
        c(!0);
      };
    return m.jsxs('div', {
      children: [
        m.jsx('label', {
          className: 'mb-3 block text-black dark:text-white',
          children: 'Select Country',
        }),
        m.jsxs('div', {
          className: 'relative z-20 bg-white dark:bg-form-input',
          children: [
            m.jsx('span', {
              className: 'absolute top-1/2 left-4 z-30 -translate-y-1/2',
              children: m.jsx('svg', {
                width: '20',
                height: '20',
                viewBox: '0 0 20 20',
                fill: 'none',
                xmlns: 'http://www.w3.org/2000/svg',
                children: m.jsxs('g', {
                  opacity: '0.8',
                  children: [
                    m.jsx('path', {
                      fillRule: 'evenodd',
                      clipRule: 'evenodd',
                      d: 'M10.0007 2.50065C5.85852 2.50065 2.50065 5.85852 2.50065 10.0007C2.50065 14.1428 5.85852 17.5007 10.0007 17.5007C14.1428 17.5007 17.5007 14.1428 17.5007 10.0007C17.5007 5.85852 14.1428 2.50065 10.0007 2.50065ZM0.833984 10.0007C0.833984 4.93804 4.93804 0.833984 10.0007 0.833984C15.0633 0.833984 19.1673 4.93804 19.1673 10.0007C19.1673 15.0633 15.0633 19.1673 10.0007 19.1673C4.93804 19.1673 0.833984 15.0633 0.833984 10.0007Z',
                      fill: '#637381',
                    }),
                    m.jsx('path', {
                      fillRule: 'evenodd',
                      clipRule: 'evenodd',
                      d: 'M0.833984 9.99935C0.833984 9.53911 1.20708 9.16602 1.66732 9.16602H18.334C18.7942 9.16602 19.1673 9.53911 19.1673 9.99935C19.1673 10.4596 18.7942 10.8327 18.334 10.8327H1.66732C1.20708 10.8327 0.833984 10.4596 0.833984 9.99935Z',
                      fill: '#637381',
                    }),
                    m.jsx('path', {
                      fillRule: 'evenodd',
                      clipRule: 'evenodd',
                      d: 'M7.50084 10.0008C7.55796 12.5632 8.4392 15.0301 10.0006 17.0418C11.5621 15.0301 12.4433 12.5632 12.5005 10.0008C12.4433 7.43845 11.5621 4.97153 10.0007 2.95982C8.4392 4.97153 7.55796 7.43845 7.50084 10.0008ZM10.0007 1.66749L9.38536 1.10547C7.16473 3.53658 5.90275 6.69153 5.83417 9.98346C5.83392 9.99503 5.83392 10.0066 5.83417 10.0182C5.90275 13.3101 7.16473 16.4651 9.38536 18.8962C9.54325 19.069 9.76655 19.1675 10.0007 19.1675C10.2348 19.1675 10.4581 19.069 10.6159 18.8962C12.8366 16.4651 14.0986 13.3101 14.1671 10.0182C14.1674 10.0066 14.1674 9.99503 14.1671 9.98346C14.0986 6.69153 12.8366 3.53658 10.6159 1.10547L10.0007 1.66749Z',
                      fill: '#637381',
                    }),
                  ],
                }),
              }),
            }),
            m.jsxs('select', {
              value: e,
              onChange: (g) => {
                n(g.target.value), f();
              },
              className: `relative z-20 w-full appearance-none rounded border border-stroke bg-transparent py-3 px-12 outline-none transition focus:border-primary active:border-primary dark:border-form-strokedark dark:bg-form-input ${
                r ? 'text-black dark:text-white' : ''
              }`,
              children: [
                m.jsx('option', {
                  value: '',
                  disabled: !0,
                  className: 'text-body dark:text-bodydark',
                  children: 'Select Country',
                }),
                m.jsx('option', {
                  value: 'USA',
                  className: 'text-body dark:text-bodydark',
                  children: 'USA',
                }),
                m.jsx('option', {
                  value: 'UK',
                  className: 'text-body dark:text-bodydark',
                  children: 'UK',
                }),
                m.jsx('option', {
                  value: 'Canada',
                  className: 'text-body dark:text-bodydark',
                  children: 'Canada',
                }),
              ],
            }),
            m.jsx('span', {
              className: 'absolute top-1/2 right-4 z-10 -translate-y-1/2',
              children: m.jsx('svg', {
                width: '24',
                height: '24',
                viewBox: '0 0 24 24',
                fill: 'none',
                xmlns: 'http://www.w3.org/2000/svg',
                children: m.jsx('g', {
                  opacity: '0.8',
                  children: m.jsx('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M5.29289 8.29289C5.68342 7.90237 6.31658 7.90237 6.70711 8.29289L12 13.5858L17.2929 8.29289C17.6834 7.90237 18.3166 7.90237 18.7071 8.29289C19.0976 8.68342 19.0976 9.31658 18.7071 9.70711L12.7071 15.7071C12.3166 16.0976 11.6834 16.0976 11.2929 15.7071L5.29289 9.70711C4.90237 9.31658 4.90237 8.68342 5.29289 8.29289Z',
                    fill: '#637381',
                  }),
                }),
              }),
            }),
          ],
        }),
      ],
    });
  },
  ev = ({ id: e }) => {
    const [n, r] = ne.useState([]),
      [c, f] = ne.useState([]),
      [g, w] = ne.useState(!1),
      k = ne.useRef(null),
      M = ne.useRef(null);
    ne.useEffect(() => {
      (() => {
        const V = document.getElementById(e);
        if (V) {
          const ee = [];
          for (let B = 0; B < V.options.length; B++)
            ee.push({
              value: V.options[B].value,
              text: V.options[B].innerText,
              selected: V.options[B].hasAttribute('selected'),
            });
          r(ee);
        }
      })();
    }, [e]);
    const D = () => {
        w(!0);
      },
      z = () => g === !0,
      Y = (Z, V) => {
        const ee = [...n];
        ee[Z].selected
          ? c.indexOf(Z) !== -1 &&
            ((ee[Z].selected = !1), f(c.filter((E) => E !== Z)))
          : ((ee[Z].selected = !0),
            (ee[Z].element = V.currentTarget),
            f([...c, Z])),
          r(ee);
      },
      U = (Z) => {
        const V = [...n];
        c.indexOf(Z) !== -1 &&
          ((V[Z].selected = !1), f(c.filter((B) => B !== Z)), r(V));
      },
      K = () => c.map((Z) => n[Z].value);
    return (
      ne.useEffect(() => {
        const Z = ({ target: V }) => {
          k.current &&
            (!g || k.current.contains(V) || M.current.contains(V) || w(!1));
        };
        return (
          document.addEventListener('click', Z),
          () => document.removeEventListener('click', Z)
        );
      }),
      m.jsxs('div', {
        className: 'relative z-50',
        children: [
          m.jsx('label', {
            className:
              'mb-3 block text-sm font-medium text-black dark:text-white',
            children: 'Multiselect Dropdown',
          }),
          m.jsxs('div', {
            children: [
              m.jsxs('select', {
                className: 'hidden',
                id: e,
                children: [
                  m.jsx('option', { value: '1', children: 'Option 2' }),
                  m.jsx('option', { value: '2', children: 'Option 3' }),
                  m.jsx('option', { value: '3', children: 'Option 4' }),
                  m.jsx('option', { value: '4', children: 'Option 5' }),
                ],
              }),
              m.jsxs('div', {
                className: 'flex flex-col items-center',
                children: [
                  m.jsx('input', {
                    name: 'values',
                    type: 'hidden',
                    defaultValue: K(),
                  }),
                  m.jsx('div', {
                    className: 'relative z-20 inline-block w-full',
                    children: m.jsxs('div', {
                      className: 'relative flex flex-col items-center',
                      children: [
                        m.jsx('div', {
                          ref: M,
                          onClick: D,
                          className: 'w-full',
                          children: m.jsxs('div', {
                            className:
                              'mb-2 flex rounded border border-stroke py-2 pl-3 pr-3 outline-none transition focus:border-primary active:border-primary dark:border-form-strokedark dark:bg-form-input',
                            children: [
                              m.jsxs('div', {
                                className: 'flex flex-auto flex-wrap gap-3',
                                children: [
                                  c.map((Z) =>
                                    m.jsxs(
                                      'div',
                                      {
                                        className:
                                          'my-1.5 flex items-center justify-center rounded border-[.5px] border-stroke bg-gray px-2.5 py-1.5 text-sm font-medium dark:border-strokedark dark:bg-white/30',
                                        children: [
                                          m.jsx('div', {
                                            className:
                                              'max-w-full flex-initial',
                                            children: n[Z].text,
                                          }),
                                          m.jsx('div', {
                                            className:
                                              'flex flex-auto flex-row-reverse',
                                            children: m.jsx('div', {
                                              onClick: () => U(Z),
                                              className:
                                                'cursor-pointer pl-2 hover:text-danger',
                                              children: m.jsx('svg', {
                                                className: 'fill-current',
                                                role: 'button',
                                                width: '12',
                                                height: '12',
                                                viewBox: '0 0 12 12',
                                                fill: 'none',
                                                xmlns:
                                                  'http://www.w3.org/2000/svg',
                                                children: m.jsx('path', {
                                                  fillRule: 'evenodd',
                                                  clipRule: 'evenodd',
                                                  d: 'M9.35355 3.35355C9.54882 3.15829 9.54882 2.84171 9.35355 2.64645C9.15829 2.45118 8.84171 2.45118 8.64645 2.64645L6 5.29289L3.35355 2.64645C3.15829 2.45118 2.84171 2.45118 2.64645 2.64645C2.45118 2.84171 2.45118 3.15829 2.64645 3.35355L5.29289 6L2.64645 8.64645C2.45118 8.84171 2.45118 9.15829 2.64645 9.35355C2.84171 9.54882 3.15829 9.54882 3.35355 9.35355L6 6.70711L8.64645 9.35355C8.84171 9.54882 9.15829 9.54882 9.35355 9.35355C9.54882 9.15829 9.54882 8.84171 9.35355 8.64645L6.70711 6L9.35355 3.35355Z',
                                                  fill: 'currentColor',
                                                }),
                                              }),
                                            }),
                                          }),
                                        ],
                                      },
                                      Z
                                    )
                                  ),
                                  c.length === 0 &&
                                    m.jsx('div', {
                                      className: 'flex-1',
                                      children: m.jsx('input', {
                                        placeholder: 'Select an option',
                                        className:
                                          'h-full w-full appearance-none bg-transparent p-1 px-2 outline-none',
                                        defaultValue: K(),
                                      }),
                                    }),
                                ],
                              }),
                              m.jsx('div', {
                                className:
                                  'flex w-8 items-center py-1 pl-1 pr-1',
                                children: m.jsx('button', {
                                  type: 'button',
                                  onClick: D,
                                  className:
                                    'h-6 w-6 cursor-pointer outline-none focus:outline-none',
                                  children: m.jsx('svg', {
                                    width: '24',
                                    height: '24',
                                    viewBox: '0 0 24 24',
                                    fill: 'none',
                                    xmlns: 'http://www.w3.org/2000/svg',
                                    children: m.jsx('g', {
                                      opacity: '0.8',
                                      children: m.jsx('path', {
                                        fillRule: 'evenodd',
                                        clipRule: 'evenodd',
                                        d: 'M5.29289 8.29289C5.68342 7.90237 6.31658 7.90237 6.70711 8.29289L12 13.5858L17.2929 8.29289C17.6834 7.90237 18.3166 7.90237 18.7071 8.29289C19.0976 8.68342 19.0976 9.31658 18.7071 9.70711L12.7071 15.7071C12.3166 16.0976 11.6834 16.0976 11.2929 15.7071L5.29289 9.70711C4.90237 9.31658 4.90237 8.68342 5.29289 8.29289Z',
                                        fill: '#637381',
                                      }),
                                    }),
                                  }),
                                }),
                              }),
                            ],
                          }),
                        }),
                        m.jsx('div', {
                          className: 'w-full px-4',
                          children: m.jsx('div', {
                            className: `max-h-select absolute top-full left-0 z-40 w-full overflow-y-auto rounded bg-white shadow dark:bg-form-input ${
                              z() ? '' : 'hidden'
                            }`,
                            ref: k,
                            onFocus: () => w(!0),
                            onBlur: () => w(!1),
                            children: m.jsx('div', {
                              className: 'flex w-full flex-col',
                              children: n.map((Z, V) =>
                                m.jsx(
                                  'div',
                                  {
                                    children: m.jsx('div', {
                                      className:
                                        'w-full cursor-pointer rounded-t border-b border-stroke hover:bg-primary/5 dark:border-form-strokedark',
                                      onClick: (ee) => Y(V, ee),
                                      children: m.jsx('div', {
                                        className: `relative flex w-full items-center border-l-2 border-transparent p-2 pl-2 ${
                                          Z.selected ? 'border-primary' : ''
                                        }`,
                                        children: m.jsx('div', {
                                          className: 'flex w-full items-center',
                                          children: m.jsx('div', {
                                            className: 'mx-2 leading-6',
                                            children: Z.text,
                                          }),
                                        }),
                                      }),
                                    }),
                                  },
                                  V
                                )
                              ),
                            }),
                          }),
                        }),
                      ],
                    }),
                  }),
                ],
              }),
            ],
          }),
        ],
      })
    );
  },
  tv = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Form Elements' }),
        m.jsxs('div', {
          className: 'grid grid-cols-1 gap-9 sm:grid-cols-2',
          children: [
            m.jsxs('div', {
              className: 'flex flex-col gap-9',
              children: [
                m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Input Fields',
                      }),
                    }),
                    m.jsxs('div', {
                      className: 'flex flex-col gap-5.5 p-6.5',
                      children: [
                        m.jsxs('div', {
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-3 block text-black dark:text-white',
                              children: 'Default Input',
                            }),
                            m.jsx('input', {
                              type: 'text',
                              placeholder: 'Default Input',
                              className:
                                'w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-3 block text-black dark:text-white',
                              children: 'Active Input',
                            }),
                            m.jsx('input', {
                              type: 'text',
                              placeholder: 'Active Input',
                              className:
                                'w-full rounded-lg border-[1.5px] border-primary bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:bg-form-input dark:text-white',
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-3 block font-medium text-black dark:text-white',
                              children: 'Disabled label',
                            }),
                            m.jsx('input', {
                              type: 'text',
                              placeholder: 'Disabled label',
                              disabled: !0,
                              className:
                                'w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary dark:disabled:bg-black',
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Toggle switch input',
                      }),
                    }),
                    m.jsxs('div', {
                      className: 'flex flex-col gap-5.5 p-6.5',
                      children: [
                        m.jsx(X2, {}),
                        m.jsx(V2, {}),
                        m.jsx(_2, {}),
                        m.jsx(Y2, {}),
                      ],
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Time and date',
                      }),
                    }),
                    m.jsxs('div', {
                      className: 'flex flex-col gap-5.5 p-6.5',
                      children: [m.jsx(K2, {}), m.jsx(Q2, {})],
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'File upload',
                      }),
                    }),
                    m.jsxs('div', {
                      className: 'flex flex-col gap-5.5 p-6.5',
                      children: [
                        m.jsxs('div', {
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-3 block text-black dark:text-white',
                              children: 'Attach file',
                            }),
                            m.jsx('input', {
                              type: 'file',
                              className:
                                'w-full cursor-pointer rounded-lg border-[1.5px] border-stroke bg-transparent outline-none transition file:mr-5 file:border-collapse file:cursor-pointer file:border-0 file:border-r file:border-solid file:border-stroke file:bg-whiter file:py-3 file:px-5 file:hover:bg-primary file:hover:bg-opacity-10 focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:file:border-form-strokedark dark:file:bg-white/30 dark:file:text-white dark:focus:border-primary',
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-3 block text-black dark:text-white',
                              children: 'Attach file',
                            }),
                            m.jsx('input', {
                              type: 'file',
                              className:
                                'w-full rounded-md border border-stroke p-3 outline-none transition file:mr-4 file:rounded file:border-[0.5px] file:border-stroke file:bg-[#EEEEEE] file:py-1 file:px-2.5 file:text-sm focus:border-primary file:focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:file:border-strokedark dark:file:bg-white/30 dark:file:text-white',
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
            m.jsxs('div', {
              className: 'flex flex-col gap-9',
              children: [
                m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Textarea Fields',
                      }),
                    }),
                    m.jsxs('div', {
                      className: 'flex flex-col gap-5.5 p-6.5',
                      children: [
                        m.jsxs('div', {
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-3 block text-black dark:text-white',
                              children: 'Default textarea',
                            }),
                            m.jsx('textarea', {
                              rows: 6,
                              placeholder: 'Default textarea',
                              className:
                                'w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-3 block text-black dark:text-white',
                              children: 'Active textarea',
                            }),
                            m.jsx('textarea', {
                              rows: 6,
                              placeholder: 'Active textarea',
                              className:
                                'w-full rounded-lg border-[1.5px] border-primary bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:bg-form-input dark:text-white',
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-3 block text-black dark:text-white',
                              children: 'Disabled textarea',
                            }),
                            m.jsx('textarea', {
                              rows: 6,
                              disabled: !0,
                              placeholder: 'Disabled textarea',
                              className:
                                'w-full rounded-lg border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary dark:disabled:bg-black',
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Checkbox and radio',
                      }),
                    }),
                    m.jsxs('div', {
                      className: 'flex flex-col gap-5.5 p-6.5',
                      children: [
                        m.jsx(z2, {}),
                        m.jsx(B2, {}),
                        m.jsx(H2, {}),
                        m.jsx(F2, {}),
                        m.jsx(O2, {}),
                      ],
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Select input',
                      }),
                    }),
                    m.jsxs('div', {
                      className: 'flex flex-col gap-5.5 p-6.5',
                      children: [
                        m.jsx(J2, {}),
                        m.jsx(ev, { id: 'multiSelect' }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
      ],
    }),
  iv = () => {
    const [e, n] = ne.useState(''),
      [r, c] = ne.useState(!1),
      f = () => {
        c(!0);
      };
    return m.jsxs('div', {
      className: 'mb-4.5',
      children: [
        m.jsxs('label', {
          className: 'mb-2.5 block text-black dark:text-white',
          children: [' ', 'Subject', ' '],
        }),
        m.jsxs('div', {
          className: 'relative z-20 bg-transparent dark:bg-form-input',
          children: [
            m.jsxs('select', {
              value: e,
              onChange: (g) => {
                n(g.target.value), f();
              },
              className: `relative z-20 w-full appearance-none rounded border border-stroke bg-transparent py-3 px-5 outline-none transition focus:border-primary active:border-primary dark:border-form-strokedark dark:bg-form-input dark:focus:border-primary ${
                r ? 'text-black dark:text-white' : ''
              }`,
              children: [
                m.jsx('option', {
                  value: '',
                  disabled: !0,
                  className: 'text-body dark:text-bodydark',
                  children: 'Select your subject',
                }),
                m.jsx('option', {
                  value: 'USA',
                  className: 'text-body dark:text-bodydark',
                  children: 'USA',
                }),
                m.jsx('option', {
                  value: 'UK',
                  className: 'text-body dark:text-bodydark',
                  children: 'UK',
                }),
                m.jsx('option', {
                  value: 'Canada',
                  className: 'text-body dark:text-bodydark',
                  children: 'Canada',
                }),
              ],
            }),
            m.jsx('span', {
              className: 'absolute top-1/2 right-4 z-30 -translate-y-1/2',
              children: m.jsx('svg', {
                className: 'fill-current',
                width: '24',
                height: '24',
                viewBox: '0 0 24 24',
                fill: 'none',
                xmlns: 'http://www.w3.org/2000/svg',
                children: m.jsx('g', {
                  opacity: '0.8',
                  children: m.jsx('path', {
                    fillRule: 'evenodd',
                    clipRule: 'evenodd',
                    d: 'M5.29289 8.29289C5.68342 7.90237 6.31658 7.90237 6.70711 8.29289L12 13.5858L17.2929 8.29289C17.6834 7.90237 18.3166 7.90237 18.7071 8.29289C19.0976 8.68342 19.0976 9.31658 18.7071 9.70711L12.7071 15.7071C12.3166 16.0976 11.6834 16.0976 11.2929 15.7071L5.29289 9.70711C4.90237 9.31658 4.90237 8.68342 5.29289 8.29289Z',
                    fill: '',
                  }),
                }),
              }),
            }),
          ],
        }),
      ],
    });
  },
  rv = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Form Layout' }),
        m.jsxs('div', {
          className: 'grid grid-cols-1 gap-9 sm:grid-cols-2',
          children: [
            m.jsx('div', {
              className: 'flex flex-col gap-9',
              children: m.jsxs('div', {
                className:
                  'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                children: [
                  m.jsx('div', {
                    className:
                      'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                    children: m.jsx('h3', {
                      className: 'font-medium text-black dark:text-white',
                      children: 'Contact Form',
                    }),
                  }),
                  m.jsx('form', {
                    action: '#',
                    children: m.jsxs('div', {
                      className: 'p-6.5',
                      children: [
                        m.jsxs('div', {
                          className: 'mb-4.5 flex flex-col gap-6 xl:flex-row',
                          children: [
                            m.jsxs('div', {
                              className: 'w-full xl:w-1/2',
                              children: [
                                m.jsx('label', {
                                  className:
                                    'mb-2.5 block text-black dark:text-white',
                                  children: 'First name',
                                }),
                                m.jsx('input', {
                                  type: 'text',
                                  placeholder: 'Enter your first name',
                                  className:
                                    'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                                }),
                              ],
                            }),
                            m.jsxs('div', {
                              className: 'w-full xl:w-1/2',
                              children: [
                                m.jsx('label', {
                                  className:
                                    'mb-2.5 block text-black dark:text-white',
                                  children: 'Last name',
                                }),
                                m.jsx('input', {
                                  type: 'text',
                                  placeholder: 'Enter your last name',
                                  className:
                                    'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                                }),
                              ],
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          className: 'mb-4.5',
                          children: [
                            m.jsxs('label', {
                              className:
                                'mb-2.5 block text-black dark:text-white',
                              children: [
                                'Email ',
                                m.jsx('span', {
                                  className: 'text-meta-1',
                                  children: '*',
                                }),
                              ],
                            }),
                            m.jsx('input', {
                              type: 'email',
                              placeholder: 'Enter your email address',
                              className:
                                'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                            }),
                          ],
                        }),
                        m.jsxs('div', {
                          className: 'mb-4.5',
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-2.5 block text-black dark:text-white',
                              children: 'Subject',
                            }),
                            m.jsx('input', {
                              type: 'text',
                              placeholder: 'Select subject',
                              className:
                                'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                            }),
                          ],
                        }),
                        m.jsx(iv, {}),
                        m.jsxs('div', {
                          className: 'mb-6',
                          children: [
                            m.jsx('label', {
                              className:
                                'mb-2.5 block text-black dark:text-white',
                              children: 'Message',
                            }),
                            m.jsx('textarea', {
                              rows: 6,
                              placeholder: 'Type your message',
                              className:
                                'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                            }),
                          ],
                        }),
                        m.jsx('button', {
                          className:
                            'flex w-full justify-center rounded bg-primary p-3 font-medium text-gray hover:bg-opacity-90',
                          children: 'Send Message',
                        }),
                      ],
                    }),
                  }),
                ],
              }),
            }),
            m.jsxs('div', {
              className: 'flex flex-col gap-9',
              children: [
                m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Sign In Form',
                      }),
                    }),
                    m.jsx('form', {
                      action: '#',
                      children: m.jsxs('div', {
                        className: 'p-6.5',
                        children: [
                          m.jsxs('div', {
                            className: 'mb-4.5',
                            children: [
                              m.jsx('label', {
                                className:
                                  'mb-2.5 block text-black dark:text-white',
                                children: 'Email',
                              }),
                              m.jsx('input', {
                                type: 'email',
                                placeholder: 'Enter your email address',
                                className:
                                  'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            children: [
                              m.jsx('label', {
                                className:
                                  'mb-2.5 block text-black dark:text-white',
                                children: 'Password',
                              }),
                              m.jsx('input', {
                                type: 'password',
                                placeholder: 'Enter password',
                                className:
                                  'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            className:
                              'mt-5 mb-5.5 flex items-center justify-between',
                            children: [
                              m.jsxs('label', {
                                htmlFor: 'formCheckbox',
                                className: 'flex cursor-pointer',
                                children: [
                                  m.jsxs('div', {
                                    className: 'relative pt-0.5',
                                    children: [
                                      m.jsx('input', {
                                        type: 'checkbox',
                                        id: 'formCheckbox',
                                        className: 'taskCheckbox sr-only',
                                      }),
                                      m.jsx('div', {
                                        className:
                                          'box mr-3 flex h-5 w-5 items-center justify-center rounded border border-stroke dark:border-strokedark',
                                        children: m.jsx('span', {
                                          className: 'text-white opacity-0',
                                          children: m.jsx('svg', {
                                            className: 'fill-current',
                                            width: '10',
                                            height: '7',
                                            viewBox: '0 0 10 7',
                                            fill: 'none',
                                            xmlns: 'http://www.w3.org/2000/svg',
                                            children: m.jsx('path', {
                                              fillRule: 'evenodd',
                                              clipRule: 'evenodd',
                                              d: 'M9.70685 0.292804C9.89455 0.480344 10 0.734667 10 0.999847C10 1.26503 9.89455 1.51935 9.70685 1.70689L4.70059 6.7072C4.51283 6.89468 4.2582 7 3.9927 7C3.72721 7 3.47258 6.89468 3.28482 6.7072L0.281063 3.70701C0.0986771 3.5184 -0.00224342 3.26578 3.785e-05 3.00357C0.00231912 2.74136 0.10762 2.49053 0.29326 2.30511C0.4789 2.11969 0.730026 2.01451 0.992551 2.01224C1.25508 2.00996 1.50799 2.11076 1.69683 2.29293L3.9927 4.58607L8.29108 0.292804C8.47884 0.105322 8.73347 0 8.99896 0C9.26446 0 9.51908 0.105322 9.70685 0.292804Z',
                                              fill: '',
                                            }),
                                          }),
                                        }),
                                      }),
                                    ],
                                  }),
                                  m.jsx('p', { children: 'Remember me' }),
                                ],
                              }),
                              m.jsx(Pe, {
                                to: '#',
                                className:
                                  'text-sm text-primary hover:underline',
                                children: 'Forget password?',
                              }),
                            ],
                          }),
                          m.jsx('button', {
                            className:
                              'flex w-full justify-center rounded bg-primary p-3 font-medium text-gray hover:bg-opacity-90',
                            children: 'Sign In',
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-6.5 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Sign Up Form',
                      }),
                    }),
                    m.jsx('form', {
                      action: '#',
                      children: m.jsxs('div', {
                        className: 'p-6.5',
                        children: [
                          m.jsxs('div', {
                            className: 'mb-4.5',
                            children: [
                              m.jsx('label', {
                                className:
                                  'mb-2.5 block text-black dark:text-white',
                                children: 'Name',
                              }),
                              m.jsx('input', {
                                type: 'text',
                                placeholder: 'Enter your full name',
                                className:
                                  'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            className: 'mb-4.5',
                            children: [
                              m.jsx('label', {
                                className:
                                  'mb-2.5 block text-black dark:text-white',
                                children: 'Email',
                              }),
                              m.jsx('input', {
                                type: 'email',
                                placeholder: 'Enter your email address',
                                className:
                                  'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            className: 'mb-4.5',
                            children: [
                              m.jsx('label', {
                                className:
                                  'mb-2.5 block text-black dark:text-white',
                                children: 'Password',
                              }),
                              m.jsx('input', {
                                type: 'password',
                                placeholder: 'Enter password',
                                className:
                                  'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            className: 'mb-5.5',
                            children: [
                              m.jsx('label', {
                                className:
                                  'mb-2.5 block text-black dark:text-white',
                                children: 'Re-type Password',
                              }),
                              m.jsx('input', {
                                type: 'password',
                                placeholder: 'Re-enter password',
                                className:
                                  'w-full rounded border-[1.5px] border-stroke bg-transparent py-3 px-5 text-black outline-none transition focus:border-primary active:border-primary disabled:cursor-default disabled:bg-whiter dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary',
                              }),
                            ],
                          }),
                          m.jsx('button', {
                            className:
                              'flex w-full justify-center rounded bg-primary p-3 font-medium text-gray hover:bg-opacity-90',
                            children: 'Sign Up',
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
      ],
    }),
  nv = './gas-sensor-dashborad-react/assets/cover-01-e8bbef04.png',
  av = './gas-sensor-dashborad-react/assets/myIcon-96a5a7b7.jpg',
  sv = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Profile' }),
        m.jsxs('div', {
          className:
            'overflow-hidden rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
          children: [
            m.jsx('div', {
              className: 'relative z-20 h-35 md:h-65',
              children: m.jsx('img', {
                src: nv,
                alt: 'profile cover',
                className:
                  'h-full w-full rounded-tl-sm rounded-tr-sm object-cover object-center',
              }),
            }),
            m.jsxs('div', {
              className: 'px-4 pb-6 text-center lg:pb-8 xl:pb-11.5',
              children: [
                m.jsx('div', {
                  className:
                    'relative z-30 mx-auto -mt-22 h-30 w-full max-w-30 rounded-full bg-white/20 p-1 backdrop-blur sm:h-44 sm:max-w-44 sm:p-3',
                  children: m.jsx('div', {
                    className: 'relative drop-shadow-2',
                    children: m.jsx('img', {
                      src: av,
                      alt: 'profile',
                      className: 'h-full w-full rounded-full object-cover',
                    }),
                  }),
                }),
                m.jsxs('div', {
                  className: 'mt-4',
                  children: [
                    m.jsx('h3', {
                      className:
                        'mb-1.5 text-2xl font-semibold text-black dark:text-white',
                      children: 'Lee Ka Yuk',
                    }),
                    m.jsxs('div', {
                      className: 'mx-auto max-w-180',
                      children: [
                        m.jsx('h4', {
                          className: 'font-semibold text-black dark:text-white',
                          children: 'About Me',
                        }),
                        m.jsx('p', {
                          className: 'mt-4.5',
                          children:
                            "I am Ka Yuk Lee, a dedicated and detail-oriented individual pursuing a Bachelor's degree in Electronic Engineering at The Chinese University of Hong Kong. With hands-on experience as a part-time software engineer, I have developed both frontend and backend functionalities for IoT devices, collaborating with major hospitals and enhancing project efficiency. This is the demo website that I develop by using react and nodeJs. My technical skills include strong problem-solving abilities and excellent communication skills, proven through my roles in both technical and customer-facing environments. I am passionate about technology and eager to contribute to innovative projects in a dynamic team setting.",
                        }),
                      ],
                    }),
                    m.jsxs('div', {
                      className: 'mt-6.5',
                      children: [
                        m.jsx('h4', {
                          className:
                            'mb-3.5 font-medium text-black dark:text-white',
                          children: 'Programming Languages',
                        }),
                        m.jsx('p', {
                          className: 'mt-4.5',
                          children:
                            'NodeJs, React, MySQL, Python, Express.Js, VueJs, Linux, JavaScript, C/C++, Matlab, Arduino, Solid work, Pads logic',
                        }),
                        m.jsx('br', {}),
                        m.jsx('h4', {
                          className:
                            'mb-3.5 font-medium text-black dark:text-white',
                          children: 'Skills',
                        }),
                        m.jsx('p', {
                          className: 'mt-4.5',
                          children: 'photoshop, lightroom',
                        }),
                        m.jsx('br', {}),
                        m.jsx('h4', {
                          className:
                            'mb-3.5 font-medium text-black dark:text-white',
                          children: 'Contact',
                        }),
                        m.jsx('p', {
                          className: 'mt-4.5',
                          children: '+852 62223701, leekayuk@gmail.com',
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
      ],
    }),
  ov = '/gas-sensor-dashboard-react/react/dist/assets/user-03-3c4ef32c.png',
  lv = () =>
    m.jsx(m.Fragment, {
      children: m.jsxs('div', {
        className: 'mx-auto max-w-270',
        children: [
          m.jsx(ui, { pageName: 'Settings' }),
          m.jsxs('div', {
            className: 'grid grid-cols-5 gap-8',
            children: [
              m.jsx('div', {
                className: 'col-span-5 xl:col-span-3',
                children: m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-7 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Personal Information',
                      }),
                    }),
                    m.jsx('div', {
                      className: 'p-7',
                      children: m.jsxs('form', {
                        action: '#',
                        children: [
                          m.jsxs('div', {
                            className:
                              'mb-5.5 flex flex-col gap-5.5 sm:flex-row',
                            children: [
                              m.jsxs('div', {
                                className: 'w-full sm:w-1/2',
                                children: [
                                  m.jsx('label', {
                                    className:
                                      'mb-3 block text-sm font-medium text-black dark:text-white',
                                    htmlFor: 'fullName',
                                    children: 'Full Name',
                                  }),
                                  m.jsxs('div', {
                                    className: 'relative',
                                    children: [
                                      m.jsx('span', {
                                        className: 'absolute left-4.5 top-4',
                                        children: m.jsx('svg', {
                                          className: 'fill-current',
                                          width: '20',
                                          height: '20',
                                          viewBox: '0 0 20 20',
                                          fill: 'none',
                                          xmlns: 'http://www.w3.org/2000/svg',
                                          children: m.jsxs('g', {
                                            opacity: '0.8',
                                            children: [
                                              m.jsx('path', {
                                                fillRule: 'evenodd',
                                                clipRule: 'evenodd',
                                                d: 'M3.72039 12.887C4.50179 12.1056 5.5616 11.6666 6.66667 11.6666H13.3333C14.4384 11.6666 15.4982 12.1056 16.2796 12.887C17.061 13.6684 17.5 14.7282 17.5 15.8333V17.5C17.5 17.9602 17.1269 18.3333 16.6667 18.3333C16.2064 18.3333 15.8333 17.9602 15.8333 17.5V15.8333C15.8333 15.1703 15.5699 14.5344 15.1011 14.0655C14.6323 13.5967 13.9964 13.3333 13.3333 13.3333H6.66667C6.00363 13.3333 5.36774 13.5967 4.8989 14.0655C4.43006 14.5344 4.16667 15.1703 4.16667 15.8333V17.5C4.16667 17.9602 3.79357 18.3333 3.33333 18.3333C2.8731 18.3333 2.5 17.9602 2.5 17.5V15.8333C2.5 14.7282 2.93899 13.6684 3.72039 12.887Z',
                                                fill: '',
                                              }),
                                              m.jsx('path', {
                                                fillRule: 'evenodd',
                                                clipRule: 'evenodd',
                                                d: 'M9.99967 3.33329C8.61896 3.33329 7.49967 4.45258 7.49967 5.83329C7.49967 7.214 8.61896 8.33329 9.99967 8.33329C11.3804 8.33329 12.4997 7.214 12.4997 5.83329C12.4997 4.45258 11.3804 3.33329 9.99967 3.33329ZM5.83301 5.83329C5.83301 3.53211 7.69849 1.66663 9.99967 1.66663C12.3009 1.66663 14.1663 3.53211 14.1663 5.83329C14.1663 8.13448 12.3009 9.99996 9.99967 9.99996C7.69849 9.99996 5.83301 8.13448 5.83301 5.83329Z',
                                                fill: '',
                                              }),
                                            ],
                                          }),
                                        }),
                                      }),
                                      m.jsx('input', {
                                        className:
                                          'w-full rounded border border-stroke bg-gray py-3 pl-11.5 pr-4.5 text-black focus:border-primary focus-visible:outline-none dark:border-strokedark dark:bg-meta-4 dark:text-white dark:focus:border-primary',
                                        type: 'text',
                                        name: 'fullName',
                                        id: 'fullName',
                                        placeholder: 'Devid Jhon',
                                        defaultValue: 'Devid Jhon',
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              m.jsxs('div', {
                                className: 'w-full sm:w-1/2',
                                children: [
                                  m.jsx('label', {
                                    className:
                                      'mb-3 block text-sm font-medium text-black dark:text-white',
                                    htmlFor: 'phoneNumber',
                                    children: 'Phone Number',
                                  }),
                                  m.jsx('input', {
                                    className:
                                      'w-full rounded border border-stroke bg-gray py-3 px-4.5 text-black focus:border-primary focus-visible:outline-none dark:border-strokedark dark:bg-meta-4 dark:text-white dark:focus:border-primary',
                                    type: 'text',
                                    name: 'phoneNumber',
                                    id: 'phoneNumber',
                                    placeholder: '+990 3343 7865',
                                    defaultValue: '+990 3343 7865',
                                  }),
                                ],
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            className: 'mb-5.5',
                            children: [
                              m.jsx('label', {
                                className:
                                  'mb-3 block text-sm font-medium text-black dark:text-white',
                                htmlFor: 'emailAddress',
                                children: 'Email Address',
                              }),
                              m.jsxs('div', {
                                className: 'relative',
                                children: [
                                  m.jsx('span', {
                                    className: 'absolute left-4.5 top-4',
                                    children: m.jsx('svg', {
                                      className: 'fill-current',
                                      width: '20',
                                      height: '20',
                                      viewBox: '0 0 20 20',
                                      fill: 'none',
                                      xmlns: 'http://www.w3.org/2000/svg',
                                      children: m.jsxs('g', {
                                        opacity: '0.8',
                                        children: [
                                          m.jsx('path', {
                                            fillRule: 'evenodd',
                                            clipRule: 'evenodd',
                                            d: 'M3.33301 4.16667C2.87658 4.16667 2.49967 4.54357 2.49967 5V15C2.49967 15.4564 2.87658 15.8333 3.33301 15.8333H16.6663C17.1228 15.8333 17.4997 15.4564 17.4997 15V5C17.4997 4.54357 17.1228 4.16667 16.6663 4.16667H3.33301ZM0.833008 5C0.833008 3.6231 1.9561 2.5 3.33301 2.5H16.6663C18.0432 2.5 19.1663 3.6231 19.1663 5V15C19.1663 16.3769 18.0432 17.5 16.6663 17.5H3.33301C1.9561 17.5 0.833008 16.3769 0.833008 15V5Z',
                                            fill: '',
                                          }),
                                          m.jsx('path', {
                                            fillRule: 'evenodd',
                                            clipRule: 'evenodd',
                                            d: 'M0.983719 4.52215C1.24765 4.1451 1.76726 4.05341 2.1443 4.31734L9.99975 9.81615L17.8552 4.31734C18.2322 4.05341 18.7518 4.1451 19.0158 4.52215C19.2797 4.89919 19.188 5.4188 18.811 5.68272L10.4776 11.5161C10.1907 11.7169 9.80879 11.7169 9.52186 11.5161L1.18853 5.68272C0.811486 5.4188 0.719791 4.89919 0.983719 4.52215Z',
                                            fill: '',
                                          }),
                                        ],
                                      }),
                                    }),
                                  }),
                                  m.jsx('input', {
                                    className:
                                      'w-full rounded border border-stroke bg-gray py-3 pl-11.5 pr-4.5 text-black focus:border-primary focus-visible:outline-none dark:border-strokedark dark:bg-meta-4 dark:text-white dark:focus:border-primary',
                                    type: 'email',
                                    name: 'emailAddress',
                                    id: 'emailAddress',
                                    placeholder: 'devidjond45@gmail.com',
                                    defaultValue: 'devidjond45@gmail.com',
                                  }),
                                ],
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            className: 'mb-5.5',
                            children: [
                              m.jsx('label', {
                                className:
                                  'mb-3 block text-sm font-medium text-black dark:text-white',
                                htmlFor: 'Username',
                                children: 'Username',
                              }),
                              m.jsx('input', {
                                className:
                                  'w-full rounded border border-stroke bg-gray py-3 px-4.5 text-black focus:border-primary focus-visible:outline-none dark:border-strokedark dark:bg-meta-4 dark:text-white dark:focus:border-primary',
                                type: 'text',
                                name: 'Username',
                                id: 'Username',
                                placeholder: 'devidjhon24',
                                defaultValue: 'devidjhon24',
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            className: 'mb-5.5',
                            children: [
                              m.jsx('label', {
                                className:
                                  'mb-3 block text-sm font-medium text-black dark:text-white',
                                htmlFor: 'Username',
                                children: 'BIO',
                              }),
                              m.jsxs('div', {
                                className: 'relative',
                                children: [
                                  m.jsx('span', {
                                    className: 'absolute left-4.5 top-4',
                                    children: m.jsxs('svg', {
                                      className: 'fill-current',
                                      width: '20',
                                      height: '20',
                                      viewBox: '0 0 20 20',
                                      fill: 'none',
                                      xmlns: 'http://www.w3.org/2000/svg',
                                      children: [
                                        m.jsxs('g', {
                                          opacity: '0.8',
                                          clipPath: 'url(#clip0_88_10224)',
                                          children: [
                                            m.jsx('path', {
                                              fillRule: 'evenodd',
                                              clipRule: 'evenodd',
                                              d: 'M1.56524 3.23223C2.03408 2.76339 2.66997 2.5 3.33301 2.5H9.16634C9.62658 2.5 9.99967 2.8731 9.99967 3.33333C9.99967 3.79357 9.62658 4.16667 9.16634 4.16667H3.33301C3.11199 4.16667 2.90003 4.25446 2.74375 4.41074C2.58747 4.56702 2.49967 4.77899 2.49967 5V16.6667C2.49967 16.8877 2.58747 17.0996 2.74375 17.2559C2.90003 17.4122 3.11199 17.5 3.33301 17.5H14.9997C15.2207 17.5 15.4326 17.4122 15.5889 17.2559C15.7452 17.0996 15.833 16.8877 15.833 16.6667V10.8333C15.833 10.3731 16.2061 10 16.6663 10C17.1266 10 17.4997 10.3731 17.4997 10.8333V16.6667C17.4997 17.3297 17.2363 17.9656 16.7674 18.4344C16.2986 18.9033 15.6627 19.1667 14.9997 19.1667H3.33301C2.66997 19.1667 2.03408 18.9033 1.56524 18.4344C1.0964 17.9656 0.833008 17.3297 0.833008 16.6667V5C0.833008 4.33696 1.0964 3.70107 1.56524 3.23223Z',
                                              fill: '',
                                            }),
                                            m.jsx('path', {
                                              fillRule: 'evenodd',
                                              clipRule: 'evenodd',
                                              d: 'M16.6664 2.39884C16.4185 2.39884 16.1809 2.49729 16.0056 2.67253L8.25216 10.426L7.81167 12.188L9.57365 11.7475L17.3271 3.99402C17.5023 3.81878 17.6008 3.5811 17.6008 3.33328C17.6008 3.08545 17.5023 2.84777 17.3271 2.67253C17.1519 2.49729 16.9142 2.39884 16.6664 2.39884ZM14.8271 1.49402C15.3149 1.00622 15.9765 0.732178 16.6664 0.732178C17.3562 0.732178 18.0178 1.00622 18.5056 1.49402C18.9934 1.98182 19.2675 2.64342 19.2675 3.33328C19.2675 4.02313 18.9934 4.68473 18.5056 5.17253L10.5889 13.0892C10.4821 13.196 10.3483 13.2718 10.2018 13.3084L6.86847 14.1417C6.58449 14.2127 6.28409 14.1295 6.0771 13.9225C5.87012 13.7156 5.78691 13.4151 5.85791 13.1312L6.69124 9.79783C6.72787 9.65131 6.80364 9.51749 6.91044 9.41069L14.8271 1.49402Z',
                                              fill: '',
                                            }),
                                          ],
                                        }),
                                        m.jsx('defs', {
                                          children: m.jsx('clipPath', {
                                            id: 'clip0_88_10224',
                                            children: m.jsx('rect', {
                                              width: '20',
                                              height: '20',
                                              fill: 'white',
                                            }),
                                          }),
                                        }),
                                      ],
                                    }),
                                  }),
                                  m.jsx('textarea', {
                                    className:
                                      'w-full rounded border border-stroke bg-gray py-3 pl-11.5 pr-4.5 text-black focus:border-primary focus-visible:outline-none dark:border-strokedark dark:bg-meta-4 dark:text-white dark:focus:border-primary',
                                    name: 'bio',
                                    id: 'bio',
                                    rows: 6,
                                    placeholder: 'Write your bio here',
                                    defaultValue:
                                      'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque posuere fermentum urna, eu condimentum mauris tempus ut. Donec fermentum blandit aliquet.',
                                  }),
                                ],
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            className: 'flex justify-end gap-4.5',
                            children: [
                              m.jsx('button', {
                                className:
                                  'flex justify-center rounded border border-stroke py-2 px-6 font-medium text-black hover:shadow-1 dark:border-strokedark dark:text-white',
                                type: 'submit',
                                children: 'Cancel',
                              }),
                              m.jsx('button', {
                                className:
                                  'flex justify-center rounded bg-primary py-2 px-6 font-medium text-gray hover:bg-opacity-90',
                                type: 'submit',
                                children: 'Save',
                              }),
                            ],
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
              }),
              m.jsx('div', {
                className: 'col-span-5 xl:col-span-2',
                children: m.jsxs('div', {
                  className:
                    'rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
                  children: [
                    m.jsx('div', {
                      className:
                        'border-b border-stroke py-4 px-7 dark:border-strokedark',
                      children: m.jsx('h3', {
                        className: 'font-medium text-black dark:text-white',
                        children: 'Your Photo',
                      }),
                    }),
                    m.jsx('div', {
                      className: 'p-7',
                      children: m.jsxs('form', {
                        action: '#',
                        children: [
                          m.jsxs('div', {
                            className: 'mb-4 flex items-center gap-3',
                            children: [
                              m.jsx('div', {
                                className: 'h-14 w-14 rounded-full',
                                children: m.jsx('img', {
                                  src: ov,
                                  alt: 'User',
                                }),
                              }),
                              m.jsxs('div', {
                                children: [
                                  m.jsx('span', {
                                    className:
                                      'mb-1.5 text-black dark:text-white',
                                    children: 'Edit your photo',
                                  }),
                                  m.jsxs('span', {
                                    className: 'flex gap-2.5',
                                    children: [
                                      m.jsx('button', {
                                        className: 'text-sm hover:text-primary',
                                        children: 'Delete',
                                      }),
                                      m.jsx('button', {
                                        className: 'text-sm hover:text-primary',
                                        children: 'Update',
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            id: 'FileUpload',
                            className:
                              'relative mb-5.5 block w-full cursor-pointer appearance-none rounded border border-dashed border-primary bg-gray py-4 px-4 dark:bg-meta-4 sm:py-7.5',
                            children: [
                              m.jsx('input', {
                                type: 'file',
                                accept: 'image/*',
                                className:
                                  'absolute inset-0 z-50 m-0 h-full w-full cursor-pointer p-0 opacity-0 outline-none',
                              }),
                              m.jsxs('div', {
                                className:
                                  'flex flex-col items-center justify-center space-y-3',
                                children: [
                                  m.jsx('span', {
                                    className:
                                      'flex h-10 w-10 items-center justify-center rounded-full border border-stroke bg-white dark:border-strokedark dark:bg-boxdark',
                                    children: m.jsxs('svg', {
                                      width: '16',
                                      height: '16',
                                      viewBox: '0 0 16 16',
                                      fill: 'none',
                                      xmlns: 'http://www.w3.org/2000/svg',
                                      children: [
                                        m.jsx('path', {
                                          fillRule: 'evenodd',
                                          clipRule: 'evenodd',
                                          d: 'M1.99967 9.33337C2.36786 9.33337 2.66634 9.63185 2.66634 10V12.6667C2.66634 12.8435 2.73658 13.0131 2.8616 13.1381C2.98663 13.2631 3.1562 13.3334 3.33301 13.3334H12.6663C12.8431 13.3334 13.0127 13.2631 13.1377 13.1381C13.2628 13.0131 13.333 12.8435 13.333 12.6667V10C13.333 9.63185 13.6315 9.33337 13.9997 9.33337C14.3679 9.33337 14.6663 9.63185 14.6663 10V12.6667C14.6663 13.1971 14.4556 13.7058 14.0806 14.0809C13.7055 14.456 13.1968 14.6667 12.6663 14.6667H3.33301C2.80257 14.6667 2.29387 14.456 1.91879 14.0809C1.54372 13.7058 1.33301 13.1971 1.33301 12.6667V10C1.33301 9.63185 1.63148 9.33337 1.99967 9.33337Z',
                                          fill: '#3C50E0',
                                        }),
                                        m.jsx('path', {
                                          fillRule: 'evenodd',
                                          clipRule: 'evenodd',
                                          d: 'M7.5286 1.52864C7.78894 1.26829 8.21106 1.26829 8.4714 1.52864L11.8047 4.86197C12.0651 5.12232 12.0651 5.54443 11.8047 5.80478C11.5444 6.06513 11.1223 6.06513 10.8619 5.80478L8 2.94285L5.13807 5.80478C4.87772 6.06513 4.45561 6.06513 4.19526 5.80478C3.93491 5.54443 3.93491 5.12232 4.19526 4.86197L7.5286 1.52864Z',
                                          fill: '#3C50E0',
                                        }),
                                        m.jsx('path', {
                                          fillRule: 'evenodd',
                                          clipRule: 'evenodd',
                                          d: 'M7.99967 1.33337C8.36786 1.33337 8.66634 1.63185 8.66634 2.00004V10C8.66634 10.3682 8.36786 10.6667 7.99967 10.6667C7.63148 10.6667 7.33301 10.3682 7.33301 10V2.00004C7.33301 1.63185 7.63148 1.33337 7.99967 1.33337Z',
                                          fill: '#3C50E0',
                                        }),
                                      ],
                                    }),
                                  }),
                                  m.jsxs('p', {
                                    children: [
                                      m.jsx('span', {
                                        className: 'text-primary',
                                        children: 'Click to upload',
                                      }),
                                      ' or drag and drop',
                                    ],
                                  }),
                                  m.jsx('p', {
                                    className: 'mt-1.5',
                                    children: 'SVG, PNG, JPG or GIF',
                                  }),
                                  m.jsx('p', {
                                    children: '(max, 800 X 800px)',
                                  }),
                                ],
                              }),
                            ],
                          }),
                          m.jsxs('div', {
                            className: 'flex justify-end gap-4.5',
                            children: [
                              m.jsx('button', {
                                className:
                                  'flex justify-center rounded border border-stroke py-2 px-6 font-medium text-black hover:shadow-1 dark:border-strokedark dark:text-white',
                                type: 'submit',
                                children: 'Cancel',
                              }),
                              m.jsx('button', {
                                className:
                                  'flex justify-center rounded bg-primary py-2 px-6 font-medium text-gray hover:bg-opacity-90',
                                type: 'submit',
                                children: 'Save',
                              }),
                            ],
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
              }),
            ],
          }),
        ],
      }),
    }),
  cv = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Tables' }),
        m.jsx('div', {
          className: 'flex flex-col gap-10',
          children: m.jsx(rp, {}),
        }),
      ],
    }),
  dv = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Alerts' }),
        m.jsx('div', {
          className:
            'rounded-sm border border-stroke bg-white p-4 shadow-default dark:border-strokedark dark:bg-boxdark md:p-6 xl:p-9',
          children: m.jsxs('div', {
            className: 'flex flex-col gap-7.5',
            children: [
              m.jsxs('div', {
                className:
                  'flex w-full border-l-6 border-warning bg-warning bg-opacity-[15%] px-7 py-8 shadow-md dark:bg-[#1B1B24] dark:bg-opacity-30 md:p-9',
                children: [
                  m.jsx('div', {
                    className:
                      'mr-5 flex h-9 w-9 items-center justify-center rounded-lg bg-warning bg-opacity-30',
                    children: m.jsx('svg', {
                      width: '19',
                      height: '16',
                      viewBox: '0 0 19 16',
                      fill: 'none',
                      xmlns: 'http://www.w3.org/2000/svg',
                      children: m.jsx('path', {
                        d: 'M1.50493 16H17.5023C18.6204 16 19.3413 14.9018 18.8354 13.9735L10.8367 0.770573C10.2852 -0.256858 8.70677 -0.256858 8.15528 0.770573L0.156617 13.9735C-0.334072 14.8998 0.386764 16 1.50493 16ZM10.7585 12.9298C10.7585 13.6155 10.2223 14.1433 9.45583 14.1433C8.6894 14.1433 8.15311 13.6155 8.15311 12.9298V12.9015C8.15311 12.2159 8.6894 11.688 9.45583 11.688C10.2223 11.688 10.7585 12.2159 10.7585 12.9015V12.9298ZM8.75236 4.01062H10.2548C10.6674 4.01062 10.9127 4.33826 10.8671 4.75288L10.2071 10.1186C10.1615 10.5049 9.88572 10.7455 9.50142 10.7455C9.11929 10.7455 8.84138 10.5028 8.79579 10.1186L8.13574 4.75288C8.09449 4.33826 8.33984 4.01062 8.75236 4.01062Z',
                        fill: '#FBBF24',
                      }),
                    }),
                  }),
                  m.jsxs('div', {
                    className: 'w-full',
                    children: [
                      m.jsx('h5', {
                        className: 'mb-3 text-lg font-semibold text-[#9D5425]',
                        children: 'Attention needed',
                      }),
                      m.jsx('p', {
                        className: 'leading-relaxed text-[#D0915C]',
                        children:
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when",
                      }),
                    ],
                  }),
                ],
              }),
              m.jsxs('div', {
                className:
                  'flex w-full border-l-6 border-[#34D399] bg-[#34D399] bg-opacity-[15%] px-7 py-8 shadow-md dark:bg-[#1B1B24] dark:bg-opacity-30 md:p-9',
                children: [
                  m.jsx('div', {
                    className:
                      'mr-5 flex h-9 w-full max-w-[36px] items-center justify-center rounded-lg bg-[#34D399]',
                    children: m.jsx('svg', {
                      width: '16',
                      height: '12',
                      viewBox: '0 0 16 12',
                      fill: 'none',
                      xmlns: 'http://www.w3.org/2000/svg',
                      children: m.jsx('path', {
                        d: 'M15.2984 0.826822L15.2868 0.811827L15.2741 0.797751C14.9173 0.401867 14.3238 0.400754 13.9657 0.794406L5.91888 9.45376L2.05667 5.2868C1.69856 4.89287 1.10487 4.89389 0.747996 5.28987C0.417335 5.65675 0.417335 6.22337 0.747996 6.59026L0.747959 6.59029L0.752701 6.59541L4.86742 11.0348C5.14445 11.3405 5.52858 11.5 5.89581 11.5C6.29242 11.5 6.65178 11.3355 6.92401 11.035L15.2162 2.11161C15.5833 1.74452 15.576 1.18615 15.2984 0.826822Z',
                        fill: 'white',
                        stroke: 'white',
                      }),
                    }),
                  }),
                  m.jsxs('div', {
                    className: 'w-full',
                    children: [
                      m.jsx('h5', {
                        className:
                          'mb-3 text-lg font-semibold text-black dark:text-[#34D399] ',
                        children: 'Message Sent Successfully',
                      }),
                      m.jsx('p', {
                        className: 'text-base leading-relaxed text-body',
                        children:
                          'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',
                      }),
                    ],
                  }),
                ],
              }),
              m.jsxs('div', {
                className:
                  'flex w-full border-l-6 border-[#F87171] bg-[#F87171] bg-opacity-[15%] px-7 py-8 shadow-md dark:bg-[#1B1B24] dark:bg-opacity-30 md:p-9',
                children: [
                  m.jsx('div', {
                    className:
                      'mr-5 flex h-9 w-full max-w-[36px] items-center justify-center rounded-lg bg-[#F87171]',
                    children: m.jsx('svg', {
                      width: '13',
                      height: '13',
                      viewBox: '0 0 13 13',
                      fill: 'none',
                      xmlns: 'http://www.w3.org/2000/svg',
                      children: m.jsx('path', {
                        d: 'M6.4917 7.65579L11.106 12.2645C11.2545 12.4128 11.4715 12.5 11.6738 12.5C11.8762 12.5 12.0931 12.4128 12.2416 12.2645C12.5621 11.9445 12.5623 11.4317 12.2423 11.1114C12.2422 11.1113 12.2422 11.1113 12.2422 11.1113C12.242 11.1111 12.2418 11.1109 12.2416 11.1107L7.64539 6.50351L12.2589 1.91221L12.2595 1.91158C12.5802 1.59132 12.5802 1.07805 12.2595 0.757793C11.9393 0.437994 11.4268 0.437869 11.1064 0.757418C11.1063 0.757543 11.1062 0.757668 11.106 0.757793L6.49234 5.34931L1.89459 0.740581L1.89396 0.739942C1.57364 0.420019 1.0608 0.420019 0.740487 0.739944C0.42005 1.05999 0.419837 1.57279 0.73985 1.89309L6.4917 7.65579ZM6.4917 7.65579L1.89459 12.2639L1.89395 12.2645C1.74546 12.4128 1.52854 12.5 1.32616 12.5C1.12377 12.5 0.906853 12.4128 0.758361 12.2645L1.1117 11.9108L0.758358 12.2645C0.437984 11.9445 0.437708 11.4319 0.757539 11.1116C0.757812 11.1113 0.758086 11.111 0.75836 11.1107L5.33864 6.50287L0.740487 1.89373L6.4917 7.65579Z',
                        fill: '#ffffff',
                        stroke: '#ffffff',
                      }),
                    }),
                  }),
                  m.jsxs('div', {
                    className: 'w-full',
                    children: [
                      m.jsx('h5', {
                        className: 'mb-3 font-semibold text-[#B45454]',
                        children: 'There were 1 errors with your submission',
                      }),
                      m.jsx('ul', {
                        children: m.jsx('li', {
                          className: 'leading-relaxed text-[#CD5D5D]',
                          children:
                            'Lorem Ipsum is simply dummy text of the printing',
                        }),
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
        }),
      ],
    }),
  uv = () =>
    m.jsxs(m.Fragment, {
      children: [
        m.jsx(ui, { pageName: 'Buttons' }),
        m.jsxs('div', {
          className:
            'mb-10 rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
          children: [
            m.jsx('div', {
              className:
                'border-b border-stroke px-7 py-4 dark:border-strokedark',
              children: m.jsx('h3', {
                className: 'font-medium text-black dark:text-white',
                children: 'Normal Button',
              }),
            }),
            m.jsxs('div', {
              className: 'p-4 md:p-6 xl:p-9',
              children: [
                m.jsxs('div', {
                  className: 'mb-7.5 flex flex-wrap gap-5 xl:gap-20',
                  children: [
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center bg-primary py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center rounded-md bg-primary py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center rounded-full bg-primary py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center rounded-md border border-primary py-4 px-10 text-center font-medium text-primary hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className: 'mb-7.5 flex flex-wrap gap-5 xl:gap-20',
                  children: [
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center bg-meta-3 py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center rounded-md bg-meta-3 py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center rounded-full bg-meta-3 py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center rounded-md border border-meta-3 py-4 px-10 text-center font-medium text-meta-3 hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className: 'flex flex-wrap gap-5 xl:gap-20',
                  children: [
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center bg-black py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center rounded-md bg-black py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center rounded-full bg-black py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                    m.jsx(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center rounded-md border border-black py-4 px-10 text-center font-medium text-black hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: 'Button',
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
        m.jsxs('div', {
          className:
            'mb-10 rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark',
          children: [
            m.jsx('div', {
              className:
                'border-b border-stroke px-7 py-4 dark:border-strokedark',
              children: m.jsx('h3', {
                className: 'font-medium text-black dark:text-white',
                children: 'Button With Icon',
              }),
            }),
            m.jsxs('div', {
              className: 'p-4 md:p-6 xl:p-9',
              children: [
                m.jsxs('div', {
                  className: 'mb-7.5 flex flex-wrap gap-5 xl:gap-7.5',
                  children: [
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 bg-primary py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('path', {
                                d: 'M17.8125 16.6656H2.1875C1.69022 16.6656 1.21331 16.4681 0.861675 16.1164C0.510044 15.7648 0.3125 15.2879 0.3125 14.7906V5.20935C0.3125 4.71207 0.510044 4.23516 0.861675 3.88353C1.21331 3.53189 1.69022 3.33435 2.1875 3.33435H17.8125C18.3098 3.33435 18.7867 3.53189 19.1383 3.88353C19.49 4.23516 19.6875 4.71207 19.6875 5.20935V14.7906C19.6875 15.2879 19.49 15.7648 19.1383 16.1164C18.7867 16.4681 18.3098 16.6656 17.8125 16.6656ZM2.1875 4.58435C2.02174 4.58435 1.86277 4.6502 1.74556 4.76741C1.62835 4.88462 1.5625 5.04359 1.5625 5.20935V14.7906C1.5625 14.9564 1.62835 15.1153 1.74556 15.2325C1.86277 15.3498 2.02174 15.4156 2.1875 15.4156H17.8125C17.9783 15.4156 18.1372 15.3498 18.2544 15.2325C18.3717 15.1153 18.4375 14.9564 18.4375 14.7906V5.20935C18.4375 5.04359 18.3717 4.88462 18.2544 4.76741C18.1372 4.6502 17.9783 4.58435 17.8125 4.58435H2.1875Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M9.9996 10.6438C9.63227 10.6437 9.2721 10.5421 8.95898 10.35L0.887102 5.45001C0.744548 5.36381 0.642073 5.22452 0.602222 5.06277C0.58249 4.98268 0.578725 4.89948 0.591144 4.81794C0.603563 4.73639 0.631922 4.65809 0.674602 4.58751C0.717281 4.51692 0.773446 4.45543 0.839888 4.40655C0.906331 4.35767 0.981751 4.32236 1.06184 4.30263C1.22359 4.26277 1.39455 4.28881 1.5371 4.37501L9.60898 9.28126C9.7271 9.35331 9.8628 9.39143 10.0012 9.39143C10.1395 9.39143 10.2752 9.35331 10.3934 9.28126L18.4621 4.37501C18.5323 4.33233 18.6102 4.30389 18.6913 4.29131C18.7725 4.27873 18.8554 4.28227 18.9352 4.30171C19.015 4.32115 19.0901 4.35612 19.1564 4.40462C19.2227 4.45312 19.2788 4.51421 19.3215 4.58438C19.3642 4.65456 19.3926 4.73245 19.4052 4.81362C19.4177 4.89478 19.4142 4.97763 19.3948 5.05743C19.3753 5.13723 19.3404 5.21242 19.2919 5.27871C19.2434 5.34499 19.1823 5.40108 19.1121 5.44376L11.0402 10.35C10.7271 10.5421 10.3669 10.6437 9.9996 10.6438Z',
                                fill: '',
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 bg-meta-3 py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('path', {
                                d: 'M17.8125 16.6656H2.1875C1.69022 16.6656 1.21331 16.4681 0.861675 16.1164C0.510044 15.7648 0.3125 15.2879 0.3125 14.7906V5.20935C0.3125 4.71207 0.510044 4.23516 0.861675 3.88353C1.21331 3.53189 1.69022 3.33435 2.1875 3.33435H17.8125C18.3098 3.33435 18.7867 3.53189 19.1383 3.88353C19.49 4.23516 19.6875 4.71207 19.6875 5.20935V14.7906C19.6875 15.2879 19.49 15.7648 19.1383 16.1164C18.7867 16.4681 18.3098 16.6656 17.8125 16.6656ZM2.1875 4.58435C2.02174 4.58435 1.86277 4.6502 1.74556 4.76741C1.62835 4.88462 1.5625 5.04359 1.5625 5.20935V14.7906C1.5625 14.9564 1.62835 15.1153 1.74556 15.2325C1.86277 15.3498 2.02174 15.4156 2.1875 15.4156H17.8125C17.9783 15.4156 18.1372 15.3498 18.2544 15.2325C18.3717 15.1153 18.4375 14.9564 18.4375 14.7906V5.20935C18.4375 5.04359 18.3717 4.88462 18.2544 4.76741C18.1372 4.6502 17.9783 4.58435 17.8125 4.58435H2.1875Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M9.9996 10.6438C9.63227 10.6437 9.2721 10.5421 8.95898 10.35L0.887102 5.45001C0.744548 5.36381 0.642073 5.22452 0.602222 5.06277C0.58249 4.98268 0.578725 4.89948 0.591144 4.81794C0.603563 4.73639 0.631922 4.65809 0.674602 4.58751C0.717281 4.51692 0.773446 4.45543 0.839888 4.40655C0.906331 4.35767 0.981751 4.32236 1.06184 4.30263C1.22359 4.26277 1.39455 4.28881 1.5371 4.37501L9.60898 9.28126C9.7271 9.35331 9.8628 9.39143 10.0012 9.39143C10.1395 9.39143 10.2752 9.35331 10.3934 9.28126L18.4621 4.37501C18.5323 4.33233 18.6102 4.30389 18.6913 4.29131C18.7725 4.27873 18.8554 4.28227 18.9352 4.30171C19.015 4.32115 19.0901 4.35612 19.1564 4.40462C19.2227 4.45312 19.2788 4.51421 19.3215 4.58438C19.3642 4.65456 19.3926 4.73245 19.4052 4.81362C19.4177 4.89478 19.4142 4.97763 19.3948 5.05743C19.3753 5.13723 19.3404 5.21242 19.2919 5.27871C19.2434 5.34499 19.1823 5.40108 19.1121 5.44376L11.0402 10.35C10.7271 10.5421 10.3669 10.6437 9.9996 10.6438Z',
                                fill: '',
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 bg-black py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('path', {
                                d: 'M17.8125 16.6656H2.1875C1.69022 16.6656 1.21331 16.4681 0.861675 16.1164C0.510044 15.7648 0.3125 15.2879 0.3125 14.7906V5.20935C0.3125 4.71207 0.510044 4.23516 0.861675 3.88353C1.21331 3.53189 1.69022 3.33435 2.1875 3.33435H17.8125C18.3098 3.33435 18.7867 3.53189 19.1383 3.88353C19.49 4.23516 19.6875 4.71207 19.6875 5.20935V14.7906C19.6875 15.2879 19.49 15.7648 19.1383 16.1164C18.7867 16.4681 18.3098 16.6656 17.8125 16.6656ZM2.1875 4.58435C2.02174 4.58435 1.86277 4.6502 1.74556 4.76741C1.62835 4.88462 1.5625 5.04359 1.5625 5.20935V14.7906C1.5625 14.9564 1.62835 15.1153 1.74556 15.2325C1.86277 15.3498 2.02174 15.4156 2.1875 15.4156H17.8125C17.9783 15.4156 18.1372 15.3498 18.2544 15.2325C18.3717 15.1153 18.4375 14.9564 18.4375 14.7906V5.20935C18.4375 5.04359 18.3717 4.88462 18.2544 4.76741C18.1372 4.6502 17.9783 4.58435 17.8125 4.58435H2.1875Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M9.9996 10.6438C9.63227 10.6437 9.2721 10.5421 8.95898 10.35L0.887102 5.45001C0.744548 5.36381 0.642073 5.22452 0.602222 5.06277C0.58249 4.98268 0.578725 4.89948 0.591144 4.81794C0.603563 4.73639 0.631922 4.65809 0.674602 4.58751C0.717281 4.51692 0.773446 4.45543 0.839888 4.40655C0.906331 4.35767 0.981751 4.32236 1.06184 4.30263C1.22359 4.26277 1.39455 4.28881 1.5371 4.37501L9.60898 9.28126C9.7271 9.35331 9.8628 9.39143 10.0012 9.39143C10.1395 9.39143 10.2752 9.35331 10.3934 9.28126L18.4621 4.37501C18.5323 4.33233 18.6102 4.30389 18.6913 4.29131C18.7725 4.27873 18.8554 4.28227 18.9352 4.30171C19.015 4.32115 19.0901 4.35612 19.1564 4.40462C19.2227 4.45312 19.2788 4.51421 19.3215 4.58438C19.3642 4.65456 19.3926 4.73245 19.4052 4.81362C19.4177 4.89478 19.4142 4.97763 19.3948 5.05743C19.3753 5.13723 19.3404 5.21242 19.2919 5.27871C19.2434 5.34499 19.1823 5.40108 19.1121 5.44376L11.0402 10.35C10.7271 10.5421 10.3669 10.6437 9.9996 10.6438Z',
                                fill: '',
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 border border-primary py-4 px-10 text-center font-medium text-primary hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('path', {
                                d: 'M17.8125 16.6656H2.1875C1.69022 16.6656 1.21331 16.4681 0.861675 16.1164C0.510044 15.7648 0.3125 15.2879 0.3125 14.7906V5.20935C0.3125 4.71207 0.510044 4.23516 0.861675 3.88353C1.21331 3.53189 1.69022 3.33435 2.1875 3.33435H17.8125C18.3098 3.33435 18.7867 3.53189 19.1383 3.88353C19.49 4.23516 19.6875 4.71207 19.6875 5.20935V14.7906C19.6875 15.2879 19.49 15.7648 19.1383 16.1164C18.7867 16.4681 18.3098 16.6656 17.8125 16.6656ZM2.1875 4.58435C2.02174 4.58435 1.86277 4.6502 1.74556 4.76741C1.62835 4.88462 1.5625 5.04359 1.5625 5.20935V14.7906C1.5625 14.9564 1.62835 15.1153 1.74556 15.2325C1.86277 15.3498 2.02174 15.4156 2.1875 15.4156H17.8125C17.9783 15.4156 18.1372 15.3498 18.2544 15.2325C18.3717 15.1153 18.4375 14.9564 18.4375 14.7906V5.20935C18.4375 5.04359 18.3717 4.88462 18.2544 4.76741C18.1372 4.6502 17.9783 4.58435 17.8125 4.58435H2.1875Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M9.9996 10.6438C9.63227 10.6437 9.2721 10.5421 8.95898 10.35L0.887102 5.45001C0.744548 5.36381 0.642073 5.22452 0.602222 5.06277C0.58249 4.98268 0.578725 4.89948 0.591144 4.81794C0.603563 4.73639 0.631922 4.65809 0.674602 4.58751C0.717281 4.51692 0.773446 4.45543 0.839888 4.40655C0.906331 4.35767 0.981751 4.32236 1.06184 4.30263C1.22359 4.26277 1.39455 4.28881 1.5371 4.37501L9.60898 9.28126C9.7271 9.35331 9.8628 9.39143 10.0012 9.39143C10.1395 9.39143 10.2752 9.35331 10.3934 9.28126L18.4621 4.37501C18.5323 4.33233 18.6102 4.30389 18.6913 4.29131C18.7725 4.27873 18.8554 4.28227 18.9352 4.30171C19.015 4.32115 19.0901 4.35612 19.1564 4.40462C19.2227 4.45312 19.2788 4.51421 19.3215 4.58438C19.3642 4.65456 19.3926 4.73245 19.4052 4.81362C19.4177 4.89478 19.4142 4.97763 19.3948 5.05743C19.3753 5.13723 19.3404 5.21242 19.2919 5.27871C19.2434 5.34499 19.1823 5.40108 19.1121 5.44376L11.0402 10.35C10.7271 10.5421 10.3669 10.6437 9.9996 10.6438Z',
                                fill: '',
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className: 'mb-7.5 flex flex-wrap gap-5 xl:gap-7.5',
                  children: [
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 rounded-md bg-primary py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('path', {
                                d: 'M18.0758 0.849976H16.0695C15.819 0.851233 15.5774 0.942521 15.3886 1.10717C15.1999 1.27183 15.0766 1.49887 15.0414 1.74685L14.4789 5.80935H13.3976V3.4031C13.3952 3.1654 13.3002 2.93802 13.1327 2.76935C12.9652 2.60068 12.7384 2.50403 12.5008 2.49998H10.082C10.0553 2.27763 9.94981 2.07221 9.78472 1.92089C9.61964 1.76956 9.40584 1.68233 9.18202 1.67498H6.45389C6.32885 1.67815 6.20571 1.70632 6.09172 1.75782C5.97773 1.80932 5.8752 1.8831 5.79017 1.97484C5.70513 2.06657 5.63932 2.17439 5.59659 2.29195C5.55387 2.40951 5.5351 2.53443 5.54139 2.65935V3.32498H3.15077C2.91396 3.32162 2.68544 3.41207 2.51507 3.57659C2.3447 3.7411 2.24632 3.96632 2.24139 4.2031V5.81248C2.0999 5.81539 1.96078 5.84937 1.83387 5.91201C1.70697 5.97466 1.59538 6.06443 1.50702 6.17498C1.41616 6.29094 1.35267 6.42593 1.32128 6.56986C1.2899 6.7138 1.29143 6.86297 1.32577 7.00623C1.32443 7.02182 1.32443 7.0375 1.32577 7.0531L3.23827 12.9375C3.29323 13.1432 3.4153 13.3247 3.58513 13.4532C3.75496 13.5818 3.96282 13.6499 4.17577 13.6468H13.3883C13.7379 13.6464 14.0756 13.5197 14.3391 13.29C14.6027 13.0603 14.7744 12.7431 14.8226 12.3968L16.2508 2.09998H18.0726C18.2384 2.09998 18.3974 2.03413 18.5146 1.91692C18.6318 1.79971 18.6976 1.64074 18.6976 1.47498C18.6976 1.30922 18.6318 1.15024 18.5146 1.03303C18.3974 0.915824 18.2384 0.849976 18.0726 0.849976H18.0758ZM12.1383 5.79373H10.0945V3.74998H12.1476L12.1383 5.79373ZM6.79139 2.9156H8.84452V3.39998V5.7906H6.79139V2.9156ZM3.49139 4.5656H5.54139V5.79373H3.49139V4.5656ZM13.5851 12.225C13.579 12.2727 13.5556 12.3166 13.5193 12.3483C13.4831 12.38 13.4364 12.3972 13.3883 12.3968H4.37577L2.65389 7.04998H14.3039L13.5851 12.225Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M5.31172 15.1125C4.9118 15.1094 4.51997 15.2252 4.18594 15.4451C3.85191 15.665 3.59073 15.9792 3.43553 16.3478C3.28034 16.7164 3.23813 17.1228 3.31425 17.5154C3.39037 17.908 3.58139 18.2692 3.86309 18.5531C4.14478 18.837 4.50445 19.0308 4.89647 19.11C5.28849 19.1891 5.6952 19.1501 6.06499 18.9978C6.43477 18.8454 6.75099 18.5867 6.97351 18.2544C7.19603 17.9221 7.31483 17.5312 7.31485 17.1312C7.31608 16.8671 7.26522 16.6053 7.16518 16.3608C7.06515 16.1164 6.91789 15.894 6.73184 15.7065C6.5458 15.519 6.3246 15.3701 6.08092 15.2681C5.83725 15.1662 5.57586 15.1133 5.31172 15.1125ZM5.31172 17.9C5.15905 17.9031 5.00891 17.8607 4.88045 17.7781C4.75199 17.6955 4.65103 17.5766 4.59045 17.4364C4.52986 17.2962 4.51239 17.1412 4.54026 16.9911C4.56814 16.8409 4.64009 16.7025 4.74695 16.5934C4.85382 16.4843 4.99075 16.4096 5.14028 16.3786C5.28981 16.3477 5.44518 16.3619 5.58656 16.4196C5.72794 16.4773 5.84894 16.5758 5.93412 16.7026C6.0193 16.8293 6.06481 16.9785 6.06484 17.1312C6.06651 17.3329 5.9882 17.5271 5.84705 17.6712C5.70589 17.8152 5.51341 17.8975 5.31172 17.9Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M12.9504 15.1125C12.5505 15.1094 12.1586 15.2252 11.8246 15.4451C11.4906 15.665 11.2294 15.9792 11.0742 16.3478C10.919 16.7164 10.8768 17.1228 10.9529 17.5154C11.029 17.908 11.2201 18.2692 11.5018 18.5531C11.7835 18.837 12.1431 19.0308 12.5351 19.11C12.9272 19.1891 13.3339 19.1501 13.7037 18.9978C14.0734 18.8454 14.3897 18.5867 14.6122 18.2544C14.8347 17.9221 14.9535 17.5312 14.9535 17.1312C14.9552 16.598 14.7452 16.086 14.3696 15.7075C13.994 15.329 13.4836 15.115 12.9504 15.1125ZM12.9504 17.9C12.7977 17.9031 12.6476 17.8607 12.5191 17.7781C12.3907 17.6955 12.2897 17.5766 12.2291 17.4364C12.1685 17.2962 12.1511 17.1412 12.1789 16.9911C12.2068 16.8409 12.2788 16.7025 12.3856 16.5934C12.4925 16.4843 12.6294 16.4096 12.779 16.3786C12.9285 16.3477 13.0838 16.3619 13.2252 16.4196C13.3666 16.4773 13.4876 16.5758 13.5728 16.7026C13.658 16.8293 13.7035 16.9785 13.7035 17.1312C13.7052 17.3329 13.6269 17.5271 13.4857 17.6712C13.3446 17.8152 13.1521 17.8975 12.9504 17.9Z',
                                fill: '',
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 rounded-md bg-meta-3 py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('path', {
                                d: 'M18.0758 0.849976H16.0695C15.819 0.851233 15.5774 0.942521 15.3886 1.10717C15.1999 1.27183 15.0766 1.49887 15.0414 1.74685L14.4789 5.80935H13.3976V3.4031C13.3952 3.1654 13.3002 2.93802 13.1327 2.76935C12.9652 2.60068 12.7384 2.50403 12.5008 2.49998H10.082C10.0553 2.27763 9.94981 2.07221 9.78472 1.92089C9.61964 1.76956 9.40584 1.68233 9.18202 1.67498H6.45389C6.32885 1.67815 6.20571 1.70632 6.09172 1.75782C5.97773 1.80932 5.8752 1.8831 5.79017 1.97484C5.70513 2.06657 5.63932 2.17439 5.59659 2.29195C5.55387 2.40951 5.5351 2.53443 5.54139 2.65935V3.32498H3.15077C2.91396 3.32162 2.68544 3.41207 2.51507 3.57659C2.3447 3.7411 2.24632 3.96632 2.24139 4.2031V5.81248C2.0999 5.81539 1.96078 5.84937 1.83387 5.91201C1.70697 5.97466 1.59538 6.06443 1.50702 6.17498C1.41616 6.29094 1.35267 6.42593 1.32128 6.56986C1.2899 6.7138 1.29143 6.86297 1.32577 7.00623C1.32443 7.02182 1.32443 7.0375 1.32577 7.0531L3.23827 12.9375C3.29323 13.1432 3.4153 13.3247 3.58513 13.4532C3.75496 13.5818 3.96282 13.6499 4.17577 13.6468H13.3883C13.7379 13.6464 14.0756 13.5197 14.3391 13.29C14.6027 13.0603 14.7744 12.7431 14.8226 12.3968L16.2508 2.09998H18.0726C18.2384 2.09998 18.3974 2.03413 18.5146 1.91692C18.6318 1.79971 18.6976 1.64074 18.6976 1.47498C18.6976 1.30922 18.6318 1.15024 18.5146 1.03303C18.3974 0.915824 18.2384 0.849976 18.0726 0.849976H18.0758ZM12.1383 5.79373H10.0945V3.74998H12.1476L12.1383 5.79373ZM6.79139 2.9156H8.84452V3.39998V5.7906H6.79139V2.9156ZM3.49139 4.5656H5.54139V5.79373H3.49139V4.5656ZM13.5851 12.225C13.579 12.2727 13.5556 12.3166 13.5193 12.3483C13.4831 12.38 13.4364 12.3972 13.3883 12.3968H4.37577L2.65389 7.04998H14.3039L13.5851 12.225Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M5.31172 15.1125C4.9118 15.1094 4.51997 15.2252 4.18594 15.4451C3.85191 15.665 3.59073 15.9792 3.43553 16.3478C3.28034 16.7164 3.23813 17.1228 3.31425 17.5154C3.39037 17.908 3.58139 18.2692 3.86309 18.5531C4.14478 18.837 4.50445 19.0308 4.89647 19.11C5.28849 19.1891 5.6952 19.1501 6.06499 18.9978C6.43477 18.8454 6.75099 18.5867 6.97351 18.2544C7.19603 17.9221 7.31483 17.5312 7.31485 17.1312C7.31608 16.8671 7.26522 16.6053 7.16518 16.3608C7.06515 16.1164 6.91789 15.894 6.73184 15.7065C6.5458 15.519 6.3246 15.3701 6.08092 15.2681C5.83725 15.1662 5.57586 15.1133 5.31172 15.1125ZM5.31172 17.9C5.15905 17.9031 5.00891 17.8607 4.88045 17.7781C4.75199 17.6955 4.65103 17.5766 4.59045 17.4364C4.52986 17.2962 4.51239 17.1412 4.54026 16.9911C4.56814 16.8409 4.64009 16.7025 4.74695 16.5934C4.85382 16.4843 4.99075 16.4096 5.14028 16.3786C5.28981 16.3477 5.44518 16.3619 5.58656 16.4196C5.72794 16.4773 5.84894 16.5758 5.93412 16.7026C6.0193 16.8293 6.06481 16.9785 6.06484 17.1312C6.06651 17.3329 5.9882 17.5271 5.84705 17.6712C5.70589 17.8152 5.51341 17.8975 5.31172 17.9Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M12.9504 15.1125C12.5505 15.1094 12.1586 15.2252 11.8246 15.4451C11.4906 15.665 11.2294 15.9792 11.0742 16.3478C10.919 16.7164 10.8768 17.1228 10.9529 17.5154C11.029 17.908 11.2201 18.2692 11.5018 18.5531C11.7835 18.837 12.1431 19.0308 12.5351 19.11C12.9272 19.1891 13.3339 19.1501 13.7037 18.9978C14.0734 18.8454 14.3897 18.5867 14.6122 18.2544C14.8347 17.9221 14.9535 17.5312 14.9535 17.1312C14.9552 16.598 14.7452 16.086 14.3696 15.7075C13.994 15.329 13.4836 15.115 12.9504 15.1125ZM12.9504 17.9C12.7977 17.9031 12.6476 17.8607 12.5191 17.7781C12.3907 17.6955 12.2897 17.5766 12.2291 17.4364C12.1685 17.2962 12.1511 17.1412 12.1789 16.9911C12.2068 16.8409 12.2788 16.7025 12.3856 16.5934C12.4925 16.4843 12.6294 16.4096 12.779 16.3786C12.9285 16.3477 13.0838 16.3619 13.2252 16.4196C13.3666 16.4773 13.4876 16.5758 13.5728 16.7026C13.658 16.8293 13.7035 16.9785 13.7035 17.1312C13.7052 17.3329 13.6269 17.5271 13.4857 17.6712C13.3446 17.8152 13.1521 17.8975 12.9504 17.9Z',
                                fill: '',
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 rounded-md bg-black py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('path', {
                                d: 'M18.0758 0.849976H16.0695C15.819 0.851233 15.5774 0.942521 15.3886 1.10717C15.1999 1.27183 15.0766 1.49887 15.0414 1.74685L14.4789 5.80935H13.3976V3.4031C13.3952 3.1654 13.3002 2.93802 13.1327 2.76935C12.9652 2.60068 12.7384 2.50403 12.5008 2.49998H10.082C10.0553 2.27763 9.94981 2.07221 9.78472 1.92089C9.61964 1.76956 9.40584 1.68233 9.18202 1.67498H6.45389C6.32885 1.67815 6.20571 1.70632 6.09172 1.75782C5.97773 1.80932 5.8752 1.8831 5.79017 1.97484C5.70513 2.06657 5.63932 2.17439 5.59659 2.29195C5.55387 2.40951 5.5351 2.53443 5.54139 2.65935V3.32498H3.15077C2.91396 3.32162 2.68544 3.41207 2.51507 3.57659C2.3447 3.7411 2.24632 3.96632 2.24139 4.2031V5.81248C2.0999 5.81539 1.96078 5.84937 1.83387 5.91201C1.70697 5.97466 1.59538 6.06443 1.50702 6.17498C1.41616 6.29094 1.35267 6.42593 1.32128 6.56986C1.2899 6.7138 1.29143 6.86297 1.32577 7.00623C1.32443 7.02182 1.32443 7.0375 1.32577 7.0531L3.23827 12.9375C3.29323 13.1432 3.4153 13.3247 3.58513 13.4532C3.75496 13.5818 3.96282 13.6499 4.17577 13.6468H13.3883C13.7379 13.6464 14.0756 13.5197 14.3391 13.29C14.6027 13.0603 14.7744 12.7431 14.8226 12.3968L16.2508 2.09998H18.0726C18.2384 2.09998 18.3974 2.03413 18.5146 1.91692C18.6318 1.79971 18.6976 1.64074 18.6976 1.47498C18.6976 1.30922 18.6318 1.15024 18.5146 1.03303C18.3974 0.915824 18.2384 0.849976 18.0726 0.849976H18.0758ZM12.1383 5.79373H10.0945V3.74998H12.1476L12.1383 5.79373ZM6.79139 2.9156H8.84452V3.39998V5.7906H6.79139V2.9156ZM3.49139 4.5656H5.54139V5.79373H3.49139V4.5656ZM13.5851 12.225C13.579 12.2727 13.5556 12.3166 13.5193 12.3483C13.4831 12.38 13.4364 12.3972 13.3883 12.3968H4.37577L2.65389 7.04998H14.3039L13.5851 12.225Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M5.31172 15.1125C4.9118 15.1094 4.51997 15.2252 4.18594 15.4451C3.85191 15.665 3.59073 15.9792 3.43553 16.3478C3.28034 16.7164 3.23813 17.1228 3.31425 17.5154C3.39037 17.908 3.58139 18.2692 3.86309 18.5531C4.14478 18.837 4.50445 19.0308 4.89647 19.11C5.28849 19.1891 5.6952 19.1501 6.06499 18.9978C6.43477 18.8454 6.75099 18.5867 6.97351 18.2544C7.19603 17.9221 7.31483 17.5312 7.31485 17.1312C7.31608 16.8671 7.26522 16.6053 7.16518 16.3608C7.06515 16.1164 6.91789 15.894 6.73184 15.7065C6.5458 15.519 6.3246 15.3701 6.08092 15.2681C5.83725 15.1662 5.57586 15.1133 5.31172 15.1125ZM5.31172 17.9C5.15905 17.9031 5.00891 17.8607 4.88045 17.7781C4.75199 17.6955 4.65103 17.5766 4.59045 17.4364C4.52986 17.2962 4.51239 17.1412 4.54026 16.9911C4.56814 16.8409 4.64009 16.7025 4.74695 16.5934C4.85382 16.4843 4.99075 16.4096 5.14028 16.3786C5.28981 16.3477 5.44518 16.3619 5.58656 16.4196C5.72794 16.4773 5.84894 16.5758 5.93412 16.7026C6.0193 16.8293 6.06481 16.9785 6.06484 17.1312C6.06651 17.3329 5.9882 17.5271 5.84705 17.6712C5.70589 17.8152 5.51341 17.8975 5.31172 17.9Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M12.9504 15.1125C12.5505 15.1094 12.1586 15.2252 11.8246 15.4451C11.4906 15.665 11.2294 15.9792 11.0742 16.3478C10.919 16.7164 10.8768 17.1228 10.9529 17.5154C11.029 17.908 11.2201 18.2692 11.5018 18.5531C11.7835 18.837 12.1431 19.0308 12.5351 19.11C12.9272 19.1891 13.3339 19.1501 13.7037 18.9978C14.0734 18.8454 14.3897 18.5867 14.6122 18.2544C14.8347 17.9221 14.9535 17.5312 14.9535 17.1312C14.9552 16.598 14.7452 16.086 14.3696 15.7075C13.994 15.329 13.4836 15.115 12.9504 15.1125ZM12.9504 17.9C12.7977 17.9031 12.6476 17.8607 12.5191 17.7781C12.3907 17.6955 12.2897 17.5766 12.2291 17.4364C12.1685 17.2962 12.1511 17.1412 12.1789 16.9911C12.2068 16.8409 12.2788 16.7025 12.3856 16.5934C12.4925 16.4843 12.6294 16.4096 12.779 16.3786C12.9285 16.3477 13.0838 16.3619 13.2252 16.4196C13.3666 16.4773 13.4876 16.5758 13.5728 16.7026C13.658 16.8293 13.7035 16.9785 13.7035 17.1312C13.7052 17.3329 13.6269 17.5271 13.4857 17.6712C13.3446 17.8152 13.1521 17.8975 12.9504 17.9Z',
                                fill: '',
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 rounded-md border border-primary py-4 px-10 text-center font-medium text-primary hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('path', {
                                d: 'M18.0758 0.849976H16.0695C15.819 0.851233 15.5774 0.942521 15.3886 1.10717C15.1999 1.27183 15.0766 1.49887 15.0414 1.74685L14.4789 5.80935H13.3976V3.4031C13.3952 3.1654 13.3002 2.93802 13.1327 2.76935C12.9652 2.60068 12.7384 2.50403 12.5008 2.49998H10.082C10.0553 2.27763 9.94981 2.07221 9.78472 1.92089C9.61964 1.76956 9.40584 1.68233 9.18202 1.67498H6.45389C6.32885 1.67815 6.20571 1.70632 6.09172 1.75782C5.97773 1.80932 5.8752 1.8831 5.79017 1.97484C5.70513 2.06657 5.63932 2.17439 5.59659 2.29195C5.55387 2.40951 5.5351 2.53443 5.54139 2.65935V3.32498H3.15077C2.91396 3.32162 2.68544 3.41207 2.51507 3.57659C2.3447 3.7411 2.24632 3.96632 2.24139 4.2031V5.81248C2.0999 5.81539 1.96078 5.84937 1.83387 5.91201C1.70697 5.97466 1.59538 6.06443 1.50702 6.17498C1.41616 6.29094 1.35267 6.42593 1.32128 6.56986C1.2899 6.7138 1.29143 6.86297 1.32577 7.00623C1.32443 7.02182 1.32443 7.0375 1.32577 7.0531L3.23827 12.9375C3.29323 13.1432 3.4153 13.3247 3.58513 13.4532C3.75496 13.5818 3.96282 13.6499 4.17577 13.6468H13.3883C13.7379 13.6464 14.0756 13.5197 14.3391 13.29C14.6027 13.0603 14.7744 12.7431 14.8226 12.3968L16.2508 2.09998H18.0726C18.2384 2.09998 18.3974 2.03413 18.5146 1.91692C18.6318 1.79971 18.6976 1.64074 18.6976 1.47498C18.6976 1.30922 18.6318 1.15024 18.5146 1.03303C18.3974 0.915824 18.2384 0.849976 18.0726 0.849976H18.0758ZM12.1383 5.79373H10.0945V3.74998H12.1476L12.1383 5.79373ZM6.79139 2.9156H8.84452V3.39998V5.7906H6.79139V2.9156ZM3.49139 4.5656H5.54139V5.79373H3.49139V4.5656ZM13.5851 12.225C13.579 12.2727 13.5556 12.3166 13.5193 12.3483C13.4831 12.38 13.4364 12.3972 13.3883 12.3968H4.37577L2.65389 7.04998H14.3039L13.5851 12.225Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M5.31172 15.1125C4.9118 15.1094 4.51997 15.2252 4.18594 15.4451C3.85191 15.665 3.59073 15.9792 3.43553 16.3478C3.28034 16.7164 3.23813 17.1228 3.31425 17.5154C3.39037 17.908 3.58139 18.2692 3.86309 18.5531C4.14478 18.837 4.50445 19.0308 4.89647 19.11C5.28849 19.1891 5.6952 19.1501 6.06499 18.9978C6.43477 18.8454 6.75099 18.5867 6.97351 18.2544C7.19603 17.9221 7.31483 17.5312 7.31485 17.1312C7.31608 16.8671 7.26522 16.6053 7.16518 16.3608C7.06515 16.1164 6.91789 15.894 6.73184 15.7065C6.5458 15.519 6.3246 15.3701 6.08092 15.2681C5.83725 15.1662 5.57586 15.1133 5.31172 15.1125ZM5.31172 17.9C5.15905 17.9031 5.00891 17.8607 4.88045 17.7781C4.75199 17.6955 4.65103 17.5766 4.59045 17.4364C4.52986 17.2962 4.51239 17.1412 4.54026 16.9911C4.56814 16.8409 4.64009 16.7025 4.74695 16.5934C4.85382 16.4843 4.99075 16.4096 5.14028 16.3786C5.28981 16.3477 5.44518 16.3619 5.58656 16.4196C5.72794 16.4773 5.84894 16.5758 5.93412 16.7026C6.0193 16.8293 6.06481 16.9785 6.06484 17.1312C6.06651 17.3329 5.9882 17.5271 5.84705 17.6712C5.70589 17.8152 5.51341 17.8975 5.31172 17.9Z',
                                fill: '',
                              }),
                              m.jsx('path', {
                                d: 'M12.9504 15.1125C12.5505 15.1094 12.1586 15.2252 11.8246 15.4451C11.4906 15.665 11.2294 15.9792 11.0742 16.3478C10.919 16.7164 10.8768 17.1228 10.9529 17.5154C11.029 17.908 11.2201 18.2692 11.5018 18.5531C11.7835 18.837 12.1431 19.0308 12.5351 19.11C12.9272 19.1891 13.3339 19.1501 13.7037 18.9978C14.0734 18.8454 14.3897 18.5867 14.6122 18.2544C14.8347 17.9221 14.9535 17.5312 14.9535 17.1312C14.9552 16.598 14.7452 16.086 14.3696 15.7075C13.994 15.329 13.4836 15.115 12.9504 15.1125ZM12.9504 17.9C12.7977 17.9031 12.6476 17.8607 12.5191 17.7781C12.3907 17.6955 12.2897 17.5766 12.2291 17.4364C12.1685 17.2962 12.1511 17.1412 12.1789 16.9911C12.2068 16.8409 12.2788 16.7025 12.3856 16.5934C12.4925 16.4843 12.6294 16.4096 12.779 16.3786C12.9285 16.3477 13.0838 16.3619 13.2252 16.4196C13.3666 16.4773 13.4876 16.5758 13.5728 16.7026C13.658 16.8293 13.7035 16.9785 13.7035 17.1312C13.7052 17.3329 13.6269 17.5271 13.4857 17.6712C13.3446 17.8152 13.1521 17.8975 12.9504 17.9Z',
                                fill: '',
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                  ],
                }),
                m.jsxs('div', {
                  className: 'flex flex-wrap gap-5 xl:gap-7.5',
                  children: [
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 rounded-full bg-primary py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('g', {
                                clipPath: 'url(#clip0_182_46495)',
                                children: m.jsx('path', {
                                  d: 'M18.875 11.4375C18.3125 10.8438 17.5625 10.5312 16.75 10.5312C16.125 10.5312 15.5625 10.7188 15.0625 11.0938C15 11.125 14.9688 11.1562 14.9062 11.2188C14.8438 11.1875 14.8125 11.125 14.75 11.0938C14.25 10.7188 13.6875 10.5312 13.0625 10.5312C12.9062 10.5312 12.7812 10.5312 12.6562 10.5625C11.7188 9.5 10.5625 8.75 9.3125 8.40625C10.625 7.75 11.5312 6.40625 11.5312 4.875C11.5312 2.6875 9.75 0.9375 7.59375 0.9375C5.40625 0.9375 3.65625 2.71875 3.65625 4.875C3.65625 6.4375 4.5625 7.78125 5.875 8.40625C4.5625 8.78125 3.40625 9.53125 2.4375 10.6562C1.125 12.2188 0.375 14.4062 0.3125 16.7812C0.3125 17.0312 0.4375 17.25 0.65625 17.3438C1.5 17.75 4.4375 19.0938 7.59375 19.0938C9.28125 19.0938 10.8438 18.8125 10.9062 18.8125C11.25 18.75 11.4688 18.4375 11.4062 18.0938C11.3438 17.75 11.0312 17.5312 10.6875 17.5938C10.6875 17.5938 9.15625 17.875 7.59375 17.875C5.0625 17.8438 2.65625 16.875 1.5625 16.375C1.65625 14.4375 2.3125 12.7187 3.375 11.4375C4.46875 10.125 5.96875 9.40625 7.59375 9.40625C9.03125 9.40625 10.375 10 11.4375 11.0312C11.2812 11.1562 11.125 11.2812 11 11.4062C10.4688 11.9688 10.1875 12.75 10.1875 13.5938C10.1875 14.4375 10.5 15.2188 11.1562 16C11.6875 16.6562 12.4375 17.2812 13.2812 18L13.3125 18.0312C13.5937 18.25 13.9062 18.5312 14.2188 18.8125C14.4062 19 14.6875 19.0938 14.9375 19.0938C15.1875 19.0938 15.4687 19 15.6562 18.8125C16 18.5312 16.3125 18.25 16.5938 18C17.4375 17.2812 18.1875 16.6562 18.7188 16C19.375 15.2188 19.6875 14.4375 19.6875 13.5938C19.6875 12.7812 19.4062 12.0312 18.875 11.4375ZM4.875 4.875C4.875 3.375 6.09375 2.1875 7.5625 2.1875C9.0625 2.1875 10.25 3.40625 10.25 4.875C10.25 6.375 9.03125 7.5625 7.5625 7.5625C6.09375 7.5625 4.875 6.34375 4.875 4.875ZM17.75 15.2188C17.2812 15.7812 16.5938 16.375 15.7812 17.0625C15.5312 17.2812 15.2188 17.5312 14.9062 17.7812C14.625 17.5312 14.3438 17.2812 14.0938 17.0938L14.0625 17.0625C13.25 16.375 12.5625 15.7812 12.0938 15.2188C11.625 14.6562 11.4062 14.1562 11.4062 13.625C11.4062 13.0937 11.5938 12.625 11.9062 12.2812C12.2188 11.9375 12.6563 11.75 13.0938 11.75C13.4375 11.75 13.75 11.8438 14 12.0625C14.125 12.1562 14.2188 12.25 14.3125 12.375C14.5938 12.7188 15.1875 12.7188 15.5 12.375C15.5938 12.25 15.7187 12.1562 15.8125 12.0625C16.0937 11.8438 16.4062 11.75 16.7188 11.75C17.1875 11.75 17.5938 11.9375 17.9062 12.2812C18.2188 12.625 18.4062 13.0937 18.4062 13.625C18.4375 14.1875 18.2188 14.6562 17.75 15.2188Z',
                                  fill: '',
                                }),
                              }),
                              m.jsx('defs', {
                                children: m.jsx('clipPath', {
                                  id: 'clip0_182_46495',
                                  children: m.jsx('rect', {
                                    width: '20',
                                    height: '20',
                                    fill: 'white',
                                  }),
                                }),
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 rounded-full bg-meta-3 py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('g', {
                                clipPath: 'url(#clip0_182_46495)',
                                children: m.jsx('path', {
                                  d: 'M18.875 11.4375C18.3125 10.8438 17.5625 10.5312 16.75 10.5312C16.125 10.5312 15.5625 10.7188 15.0625 11.0938C15 11.125 14.9688 11.1562 14.9062 11.2188C14.8438 11.1875 14.8125 11.125 14.75 11.0938C14.25 10.7188 13.6875 10.5312 13.0625 10.5312C12.9062 10.5312 12.7812 10.5312 12.6562 10.5625C11.7188 9.5 10.5625 8.75 9.3125 8.40625C10.625 7.75 11.5312 6.40625 11.5312 4.875C11.5312 2.6875 9.75 0.9375 7.59375 0.9375C5.40625 0.9375 3.65625 2.71875 3.65625 4.875C3.65625 6.4375 4.5625 7.78125 5.875 8.40625C4.5625 8.78125 3.40625 9.53125 2.4375 10.6562C1.125 12.2188 0.375 14.4062 0.3125 16.7812C0.3125 17.0312 0.4375 17.25 0.65625 17.3438C1.5 17.75 4.4375 19.0938 7.59375 19.0938C9.28125 19.0938 10.8438 18.8125 10.9062 18.8125C11.25 18.75 11.4688 18.4375 11.4062 18.0938C11.3438 17.75 11.0312 17.5312 10.6875 17.5938C10.6875 17.5938 9.15625 17.875 7.59375 17.875C5.0625 17.8438 2.65625 16.875 1.5625 16.375C1.65625 14.4375 2.3125 12.7187 3.375 11.4375C4.46875 10.125 5.96875 9.40625 7.59375 9.40625C9.03125 9.40625 10.375 10 11.4375 11.0312C11.2812 11.1562 11.125 11.2812 11 11.4062C10.4688 11.9688 10.1875 12.75 10.1875 13.5938C10.1875 14.4375 10.5 15.2188 11.1562 16C11.6875 16.6562 12.4375 17.2812 13.2812 18L13.3125 18.0312C13.5937 18.25 13.9062 18.5312 14.2188 18.8125C14.4062 19 14.6875 19.0938 14.9375 19.0938C15.1875 19.0938 15.4687 19 15.6562 18.8125C16 18.5312 16.3125 18.25 16.5938 18C17.4375 17.2812 18.1875 16.6562 18.7188 16C19.375 15.2188 19.6875 14.4375 19.6875 13.5938C19.6875 12.7812 19.4062 12.0312 18.875 11.4375ZM4.875 4.875C4.875 3.375 6.09375 2.1875 7.5625 2.1875C9.0625 2.1875 10.25 3.40625 10.25 4.875C10.25 6.375 9.03125 7.5625 7.5625 7.5625C6.09375 7.5625 4.875 6.34375 4.875 4.875ZM17.75 15.2188C17.2812 15.7812 16.5938 16.375 15.7812 17.0625C15.5312 17.2812 15.2188 17.5312 14.9062 17.7812C14.625 17.5312 14.3438 17.2812 14.0938 17.0938L14.0625 17.0625C13.25 16.375 12.5625 15.7812 12.0938 15.2188C11.625 14.6562 11.4062 14.1562 11.4062 13.625C11.4062 13.0937 11.5938 12.625 11.9062 12.2812C12.2188 11.9375 12.6563 11.75 13.0938 11.75C13.4375 11.75 13.75 11.8438 14 12.0625C14.125 12.1562 14.2188 12.25 14.3125 12.375C14.5938 12.7188 15.1875 12.7188 15.5 12.375C15.5938 12.25 15.7187 12.1562 15.8125 12.0625C16.0937 11.8438 16.4062 11.75 16.7188 11.75C17.1875 11.75 17.5938 11.9375 17.9062 12.2812C18.2188 12.625 18.4062 13.0937 18.4062 13.625C18.4375 14.1875 18.2188 14.6562 17.75 15.2188Z',
                                  fill: '',
                                }),
                              }),
                              m.jsx('defs', {
                                children: m.jsx('clipPath', {
                                  id: 'clip0_182_46495',
                                  children: m.jsx('rect', {
                                    width: '20',
                                    height: '20',
                                    fill: 'white',
                                  }),
                                }),
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 rounded-full bg-black py-4 px-10 text-center font-medium text-white hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('g', {
                                clipPath: 'url(#clip0_182_46495)',
                                children: m.jsx('path', {
                                  d: 'M18.875 11.4375C18.3125 10.8438 17.5625 10.5312 16.75 10.5312C16.125 10.5312 15.5625 10.7188 15.0625 11.0938C15 11.125 14.9688 11.1562 14.9062 11.2188C14.8438 11.1875 14.8125 11.125 14.75 11.0938C14.25 10.7188 13.6875 10.5312 13.0625 10.5312C12.9062 10.5312 12.7812 10.5312 12.6562 10.5625C11.7188 9.5 10.5625 8.75 9.3125 8.40625C10.625 7.75 11.5312 6.40625 11.5312 4.875C11.5312 2.6875 9.75 0.9375 7.59375 0.9375C5.40625 0.9375 3.65625 2.71875 3.65625 4.875C3.65625 6.4375 4.5625 7.78125 5.875 8.40625C4.5625 8.78125 3.40625 9.53125 2.4375 10.6562C1.125 12.2188 0.375 14.4062 0.3125 16.7812C0.3125 17.0312 0.4375 17.25 0.65625 17.3438C1.5 17.75 4.4375 19.0938 7.59375 19.0938C9.28125 19.0938 10.8438 18.8125 10.9062 18.8125C11.25 18.75 11.4688 18.4375 11.4062 18.0938C11.3438 17.75 11.0312 17.5312 10.6875 17.5938C10.6875 17.5938 9.15625 17.875 7.59375 17.875C5.0625 17.8438 2.65625 16.875 1.5625 16.375C1.65625 14.4375 2.3125 12.7187 3.375 11.4375C4.46875 10.125 5.96875 9.40625 7.59375 9.40625C9.03125 9.40625 10.375 10 11.4375 11.0312C11.2812 11.1562 11.125 11.2812 11 11.4062C10.4688 11.9688 10.1875 12.75 10.1875 13.5938C10.1875 14.4375 10.5 15.2188 11.1562 16C11.6875 16.6562 12.4375 17.2812 13.2812 18L13.3125 18.0312C13.5937 18.25 13.9062 18.5312 14.2188 18.8125C14.4062 19 14.6875 19.0938 14.9375 19.0938C15.1875 19.0938 15.4687 19 15.6562 18.8125C16 18.5312 16.3125 18.25 16.5938 18C17.4375 17.2812 18.1875 16.6562 18.7188 16C19.375 15.2188 19.6875 14.4375 19.6875 13.5938C19.6875 12.7812 19.4062 12.0312 18.875 11.4375ZM4.875 4.875C4.875 3.375 6.09375 2.1875 7.5625 2.1875C9.0625 2.1875 10.25 3.40625 10.25 4.875C10.25 6.375 9.03125 7.5625 7.5625 7.5625C6.09375 7.5625 4.875 6.34375 4.875 4.875ZM17.75 15.2188C17.2812 15.7812 16.5938 16.375 15.7812 17.0625C15.5312 17.2812 15.2188 17.5312 14.9062 17.7812C14.625 17.5312 14.3438 17.2812 14.0938 17.0938L14.0625 17.0625C13.25 16.375 12.5625 15.7812 12.0938 15.2188C11.625 14.6562 11.4062 14.1562 11.4062 13.625C11.4062 13.0937 11.5938 12.625 11.9062 12.2812C12.2188 11.9375 12.6563 11.75 13.0938 11.75C13.4375 11.75 13.75 11.8438 14 12.0625C14.125 12.1562 14.2188 12.25 14.3125 12.375C14.5938 12.7188 15.1875 12.7188 15.5 12.375C15.5938 12.25 15.7187 12.1562 15.8125 12.0625C16.0937 11.8438 16.4062 11.75 16.7188 11.75C17.1875 11.75 17.5938 11.9375 17.9062 12.2812C18.2188 12.625 18.4062 13.0937 18.4062 13.625C18.4375 14.1875 18.2188 14.6562 17.75 15.2188Z',
                                  fill: '',
                                }),
                              }),
                              m.jsx('defs', {
                                children: m.jsx('clipPath', {
                                  id: 'clip0_182_46495',
                                  children: m.jsx('rect', {
                                    width: '20',
                                    height: '20',
                                    fill: 'white',
                                  }),
                                }),
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                    m.jsxs(Pe, {
                      to: '#',
                      className:
                        'inline-flex items-center justify-center gap-2.5 rounded-full border border-primary py-4 px-10 text-center font-medium text-primary hover:bg-opacity-90 lg:px-8 xl:px-10',
                      children: [
                        m.jsx('span', {
                          children: m.jsxs('svg', {
                            className: 'fill-current',
                            width: '20',
                            height: '20',
                            viewBox: '0 0 20 20',
                            fill: 'none',
                            xmlns: 'http://www.w3.org/2000/svg',
                            children: [
                              m.jsx('g', {
                                clipPath: 'url(#clip0_182_46495)',
                                children: m.jsx('path', {
                                  d: 'M18.875 11.4375C18.3125 10.8438 17.5625 10.5312 16.75 10.5312C16.125 10.5312 15.5625 10.7188 15.0625 11.0938C15 11.125 14.9688 11.1562 14.9062 11.2188C14.8438 11.1875 14.8125 11.125 14.75 11.0938C14.25 10.7188 13.6875 10.5312 13.0625 10.5312C12.9062 10.5312 12.7812 10.5312 12.6562 10.5625C11.7188 9.5 10.5625 8.75 9.3125 8.40625C10.625 7.75 11.5312 6.40625 11.5312 4.875C11.5312 2.6875 9.75 0.9375 7.59375 0.9375C5.40625 0.9375 3.65625 2.71875 3.65625 4.875C3.65625 6.4375 4.5625 7.78125 5.875 8.40625C4.5625 8.78125 3.40625 9.53125 2.4375 10.6562C1.125 12.2188 0.375 14.4062 0.3125 16.7812C0.3125 17.0312 0.4375 17.25 0.65625 17.3438C1.5 17.75 4.4375 19.0938 7.59375 19.0938C9.28125 19.0938 10.8438 18.8125 10.9062 18.8125C11.25 18.75 11.4688 18.4375 11.4062 18.0938C11.3438 17.75 11.0312 17.5312 10.6875 17.5938C10.6875 17.5938 9.15625 17.875 7.59375 17.875C5.0625 17.8438 2.65625 16.875 1.5625 16.375C1.65625 14.4375 2.3125 12.7187 3.375 11.4375C4.46875 10.125 5.96875 9.40625 7.59375 9.40625C9.03125 9.40625 10.375 10 11.4375 11.0312C11.2812 11.1562 11.125 11.2812 11 11.4062C10.4688 11.9688 10.1875 12.75 10.1875 13.5938C10.1875 14.4375 10.5 15.2188 11.1562 16C11.6875 16.6562 12.4375 17.2812 13.2812 18L13.3125 18.0312C13.5937 18.25 13.9062 18.5312 14.2188 18.8125C14.4062 19 14.6875 19.0938 14.9375 19.0938C15.1875 19.0938 15.4687 19 15.6562 18.8125C16 18.5312 16.3125 18.25 16.5938 18C17.4375 17.2812 18.1875 16.6562 18.7188 16C19.375 15.2188 19.6875 14.4375 19.6875 13.5938C19.6875 12.7812 19.4062 12.0312 18.875 11.4375ZM4.875 4.875C4.875 3.375 6.09375 2.1875 7.5625 2.1875C9.0625 2.1875 10.25 3.40625 10.25 4.875C10.25 6.375 9.03125 7.5625 7.5625 7.5625C6.09375 7.5625 4.875 6.34375 4.875 4.875ZM17.75 15.2188C17.2812 15.7812 16.5938 16.375 15.7812 17.0625C15.5312 17.2812 15.2188 17.5312 14.9062 17.7812C14.625 17.5312 14.3438 17.2812 14.0938 17.0938L14.0625 17.0625C13.25 16.375 12.5625 15.7812 12.0938 15.2188C11.625 14.6562 11.4062 14.1562 11.4062 13.625C11.4062 13.0937 11.5938 12.625 11.9062 12.2812C12.2188 11.9375 12.6563 11.75 13.0938 11.75C13.4375 11.75 13.75 11.8438 14 12.0625C14.125 12.1562 14.2188 12.25 14.3125 12.375C14.5938 12.7188 15.1875 12.7188 15.5 12.375C15.5938 12.25 15.7187 12.1562 15.8125 12.0625C16.0937 11.8438 16.4062 11.75 16.7188 11.75C17.1875 11.75 17.5938 11.9375 17.9062 12.2812C18.2188 12.625 18.4062 13.0937 18.4062 13.625C18.4375 14.1875 18.2188 14.6562 17.75 15.2188Z',
                                  fill: '',
                                }),
                              }),
                              m.jsx('defs', {
                                children: m.jsx('clipPath', {
                                  id: 'clip0_182_46495',
                                  children: m.jsx('rect', {
                                    width: '20',
                                    height: '20',
                                    fill: 'white',
                                  }),
                                }),
                              }),
                            ],
                          }),
                        }),
                        'Button With Icon',
                      ],
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
      ],
    });
function hv(e, n) {
  const [r, c] = ne.useState(() => {
    try {
      const f = window.localStorage.getItem(e);
      return f ? JSON.parse(f) : n;
    } catch (f) {
      return console.log(f), n;
    }
  });
  return (
    ne.useEffect(() => {
      try {
        const f = typeof r == 'function' ? r(r) : r;
        window.localStorage.setItem(e, JSON.stringify(f));
      } catch (f) {
        console.log(f);
      }
    }, [e, r]),
    [r, c]
  );
}
const fv = () => {
    const [e, n] = hv('color-theme', 'light');
    return (
      ne.useEffect(() => {
        const r = 'dark',
          c = window.document.body.classList;
        e === 'dark' ? c.add(r) : c.remove(r);
      }, [e]),
      [e, n]
    );
  },
  pv = () => {
    const [e, n] = fv();
    return m.jsx('li', {
      children: m.jsxs('label', {
        className: `relative m-0 block h-7.5 w-14 rounded-full ${
          e === 'dark' ? 'bg-primary' : 'bg-stroke'
        }`,
        children: [
          m.jsx('input', {
            type: 'checkbox',
            onChange: () => {
              typeof n == 'function' && n(e === 'light' ? 'dark' : 'light');
            },
            className:
              'dur absolute top-0 z-50 m-0 h-full w-full cursor-pointer opacity-0',
          }),
          m.jsxs('span', {
            className: `absolute top-1/2 left-[3px] flex h-6 w-6 -translate-y-1/2 translate-x-0 items-center justify-center rounded-full bg-white shadow-switcher duration-75 ease-linear ${
              e === 'dark' && '!right-[3px] !translate-x-full'
            }`,
            children: [
              m.jsx('span', {
                className: 'dark:hidden',
                children: m.jsxs('svg', {
                  width: '16',
                  height: '16',
                  viewBox: '0 0 16 16',
                  fill: 'none',
                  xmlns: 'http://www.w3.org/2000/svg',
                  children: [
                    m.jsx('path', {
                      d: 'M7.99992 12.6666C10.5772 12.6666 12.6666 10.5772 12.6666 7.99992C12.6666 5.42259 10.5772 3.33325 7.99992 3.33325C5.42259 3.33325 3.33325 5.42259 3.33325 7.99992C3.33325 10.5772 5.42259 12.6666 7.99992 12.6666Z',
                      fill: '#969AA1',
                    }),
                    m.jsx('path', {
                      d: 'M8.00008 15.3067C7.63341 15.3067 7.33342 15.0334 7.33342 14.6667V14.6134C7.33342 14.2467 7.63341 13.9467 8.00008 13.9467C8.36675 13.9467 8.66675 14.2467 8.66675 14.6134C8.66675 14.9801 8.36675 15.3067 8.00008 15.3067ZM12.7601 13.4267C12.5867 13.4267 12.4201 13.3601 12.2867 13.2334L12.2001 13.1467C11.9401 12.8867 11.9401 12.4667 12.2001 12.2067C12.4601 11.9467 12.8801 11.9467 13.1401 12.2067L13.2267 12.2934C13.4867 12.5534 13.4867 12.9734 13.2267 13.2334C13.1001 13.3601 12.9334 13.4267 12.7601 13.4267ZM3.24008 13.4267C3.06675 13.4267 2.90008 13.3601 2.76675 13.2334C2.50675 12.9734 2.50675 12.5534 2.76675 12.2934L2.85342 12.2067C3.11342 11.9467 3.53341 11.9467 3.79341 12.2067C4.05341 12.4667 4.05341 12.8867 3.79341 13.1467L3.70675 13.2334C3.58008 13.3601 3.40675 13.4267 3.24008 13.4267ZM14.6667 8.66675H14.6134C14.2467 8.66675 13.9467 8.36675 13.9467 8.00008C13.9467 7.63341 14.2467 7.33342 14.6134 7.33342C14.9801 7.33342 15.3067 7.63341 15.3067 8.00008C15.3067 8.36675 15.0334 8.66675 14.6667 8.66675ZM1.38675 8.66675H1.33341C0.966748 8.66675 0.666748 8.36675 0.666748 8.00008C0.666748 7.63341 0.966748 7.33342 1.33341 7.33342C1.70008 7.33342 2.02675 7.63341 2.02675 8.00008C2.02675 8.36675 1.75341 8.66675 1.38675 8.66675ZM12.6734 3.99341C12.5001 3.99341 12.3334 3.92675 12.2001 3.80008C11.9401 3.54008 11.9401 3.12008 12.2001 2.86008L12.2867 2.77341C12.5467 2.51341 12.9667 2.51341 13.2267 2.77341C13.4867 3.03341 13.4867 3.45341 13.2267 3.71341L13.1401 3.80008C13.0134 3.92675 12.8467 3.99341 12.6734 3.99341ZM3.32675 3.99341C3.15341 3.99341 2.98675 3.92675 2.85342 3.80008L2.76675 3.70675C2.50675 3.44675 2.50675 3.02675 2.76675 2.76675C3.02675 2.50675 3.44675 2.50675 3.70675 2.76675L3.79341 2.85342C4.05341 3.11342 4.05341 3.53341 3.79341 3.79341C3.66675 3.92675 3.49341 3.99341 3.32675 3.99341ZM8.00008 2.02675C7.63341 2.02675 7.33342 1.75341 7.33342 1.38675V1.33341C7.33342 0.966748 7.63341 0.666748 8.00008 0.666748C8.36675 0.666748 8.66675 0.966748 8.66675 1.33341C8.66675 1.70008 8.36675 2.02675 8.00008 2.02675Z',
                      fill: '#969AA1',
                    }),
                  ],
                }),
              }),
              m.jsx('span', {
                className: 'hidden dark:inline-block',
                children: m.jsx('svg', {
                  width: '16',
                  height: '16',
                  viewBox: '0 0 16 16',
                  fill: 'none',
                  xmlns: 'http://www.w3.org/2000/svg',
                  children: m.jsx('path', {
                    d: 'M14.3533 10.62C14.2466 10.44 13.9466 10.16 13.1999 10.2933C12.7866 10.3667 12.3666 10.4 11.9466 10.38C10.3933 10.3133 8.98659 9.6 8.00659 8.5C7.13993 7.53333 6.60659 6.27333 6.59993 4.91333C6.59993 4.15333 6.74659 3.42 7.04659 2.72666C7.33993 2.05333 7.13326 1.7 6.98659 1.55333C6.83326 1.4 6.47326 1.18666 5.76659 1.48C3.03993 2.62666 1.35326 5.36 1.55326 8.28666C1.75326 11.04 3.68659 13.3933 6.24659 14.28C6.85993 14.4933 7.50659 14.62 8.17326 14.6467C8.27993 14.6533 8.38659 14.66 8.49326 14.66C10.7266 14.66 12.8199 13.6067 14.1399 11.8133C14.5866 11.1933 14.4666 10.8 14.3533 10.62Z',
                    fill: '#969AA1',
                  }),
                }),
              }),
            ],
          }),
        ],
      }),
    });
  },
  gv = (e) =>
    m.jsx('header', {
      className:
        'sticky top-0 z-999 flex w-full bg-white drop-shadow-1 dark:bg-boxdark dark:drop-shadow-none',
      children: m.jsxs('div', {
        className:
          'flex flex-grow items-center justify-between px-4 py-4 shadow-2 md:px-6 2xl:px-11',
        children: [
          m.jsx('div', {
            className: 'flex items-center gap-2 sm:gap-4 lg:hidden',
            children: m.jsx('button', {
              'aria-controls': 'sidebar',
              onClick: (n) => {
                n.stopPropagation(), e.setSidebarOpen(!e.sidebarOpen);
              },
              className:
                'z-99999 block rounded-sm border border-stroke bg-white p-1.5 shadow-sm dark:border-strokedark dark:bg-boxdark lg:hidden',
              children: m.jsxs('span', {
                className: 'relative block h-5.5 w-5.5 cursor-pointer',
                children: [
                  m.jsxs('span', {
                    className: 'du-block absolute right-0 h-full w-full',
                    children: [
                      m.jsx('span', {
                        className: `relative left-0 top-0 my-1 block h-0.5 w-0 rounded-sm bg-black delay-[0] duration-200 ease-in-out dark:bg-white ${
                          !e.sidebarOpen && '!w-full delay-300'
                        }`,
                      }),
                      m.jsx('span', {
                        className: `relative left-0 top-0 my-1 block h-0.5 w-0 rounded-sm bg-black delay-150 duration-200 ease-in-out dark:bg-white ${
                          !e.sidebarOpen && 'delay-400 !w-full'
                        }`,
                      }),
                      m.jsx('span', {
                        className: `relative left-0 top-0 my-1 block h-0.5 w-0 rounded-sm bg-black delay-200 duration-200 ease-in-out dark:bg-white ${
                          !e.sidebarOpen && '!w-full delay-500'
                        }`,
                      }),
                    ],
                  }),
                  m.jsxs('span', {
                    className: 'absolute right-0 h-full w-full rotate-45',
                    children: [
                      m.jsx('span', {
                        className: `absolute left-2.5 top-0 block h-full w-0.5 rounded-sm bg-black delay-300 duration-200 ease-in-out dark:bg-white ${
                          !e.sidebarOpen && '!h-0 !delay-[0]'
                        }`,
                      }),
                      m.jsx('span', {
                        className: `delay-400 absolute left-0 top-2.5 block h-0.5 w-full rounded-sm bg-black duration-200 ease-in-out dark:bg-white ${
                          !e.sidebarOpen && '!h-0 !delay-200'
                        }`,
                      }),
                    ],
                  }),
                ],
              }),
            }),
          }),
          m.jsx('div', {
            className: 'flex items-center gap-3 2xsm:gap-7',
            children: m.jsx('ul', {
              className: 'flex items-center gap-2 2xsm:gap-4',
              children: m.jsx(pv, {}),
            }),
          }),
        ],
      }),
    }),
  mv = ({ children: e, activeCondition: n }) => {
    const [r, c] = ne.useState(n),
      f = () => {
        c(!r);
      };
    return m.jsx('li', { children: e(f, r) });
  },
  xv = ({ sidebarOpen: e, setSidebarOpen: n }) => {
    const r = ar(),
      { pathname: c } = r,
      f = ne.useRef(null),
      g = ne.useRef(null),
      w = localStorage.getItem('sidebar-expanded'),
      [k, M] = ne.useState(w === null ? !1 : w === 'true');
    return (
      ne.useEffect(() => {
        const D = ({ target: z }) => {
          !g.current ||
            !f.current ||
            !e ||
            g.current.contains(z) ||
            f.current.contains(z) ||
            n(!1);
        };
        return (
          document.addEventListener('click', D),
          () => document.removeEventListener('click', D)
        );
      }),
      ne.useEffect(() => {
        const D = ({ keyCode: z }) => {
          !e || z !== 27 || n(!1);
        };
        return (
          document.addEventListener('keydown', D),
          () => document.removeEventListener('keydown', D)
        );
      }),
      ne.useEffect(() => {
        var D, z;
        localStorage.setItem('sidebar-expanded', k.toString()),
          k
            ? (D = document.querySelector('body')) == null ||
              D.classList.add('sidebar-expanded')
            : (z = document.querySelector('body')) == null ||
              z.classList.remove('sidebar-expanded');
      }, [k]),
      m.jsxs('aside', {
        ref: g,
        className: `absolute left-0 top-0 z-9999 flex h-screen w-72.5 flex-col overflow-y-hidden bg-black duration-300 ease-linear dark:bg-boxdark lg:static lg:translate-x-0 ${
          e ? 'translate-x-0' : '-translate-x-full'
        }`,
        children: [
          m.jsxs('div', {
            className:
              'flex items-center justify-center gap-2 px-6 py-5.5 lg:py-6.5',
            children: [
              m.jsx(Tn, {
                to: '/',
                children: m.jsx('button', {
                  className:
                    'bg-blue-200 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-700 transition duration-200',
                  children: 'Back To Home',
                }),
              }),
              m.jsx('button', {
                ref: f,
                onClick: () => n(!e),
                'aria-controls': 'sidebar',
                'aria-expanded': e,
                className: 'block lg:hidden',
                children: m.jsx('svg', {
                  className: 'fill-current',
                  width: '20',
                  height: '18',
                  viewBox: '0 0 20 18',
                  fill: 'none',
                  xmlns: 'http://www.w3.org/2000/svg',
                  children: m.jsx('path', {
                    d: 'M19 8.175H2.98748L9.36248 1.6875C9.69998 1.35 9.69998 0.825 9.36248 0.4875C9.02498 0.15 8.49998 0.15 8.16248 0.4875L0.399976 8.3625C0.0624756 8.7 0.0624756 9.225 0.399976 9.5625L8.16248 17.4375C8.31248 17.5875 8.53748 17.7 8.76248 17.7C8.98748 17.7 9.17498 17.625 9.36248 17.475C9.69998 17.1375 9.69998 16.6125 9.36248 16.275L3.02498 9.8625H19C19.45 9.8625 19.825 9.4875 19.825 9.0375C19.825 8.55 19.45 8.175 19 8.175Z',
                    fill: '',
                  }),
                }),
              }),
            ],
          }),
          m.jsx('div', {
            className:
              'no-scrollbar flex flex-col overflow-y-auto duration-300 ease-linear',
            children: m.jsx('nav', {
              className: 'mt-5 py-4 px-4 lg:mt-9 lg:px-6',
              children: m.jsxs('div', {
                children: [
                  m.jsx('h3', {
                    className: 'mb-4 ml-4 text-sm font-semibold text-bodydark2',
                    children: 'MENU',
                  }),
                  m.jsxs('ul', {
                    className: 'mb-6 flex flex-col gap-1.5',
                    children: [
                      m.jsx(mv, {
                        activeCondition: c === '/' || c.includes('dashboard'),
                        children: (D, z) =>
                          m.jsxs(mc.Fragment, {
                            children: [
                              m.jsxs(Tn, {
                                to: '#',
                                className: `group relative flex items-center gap-2.5 rounded-sm px-4 py-2 font-medium text-bodydark1 duration-300 ease-in-out hover:bg-graydark dark:hover:bg-meta-4 ${
                                  (c === '/' || c.includes('dashboard')) &&
                                  'bg-graydark dark:bg-meta-4'
                                }`,
                                onClick: (Y) => {
                                  Y.preventDefault(), k ? D() : M(!0);
                                },
                                children: [
                                  m.jsxs('svg', {
                                    className: 'fill-current',
                                    width: '18',
                                    height: '18',
                                    viewBox: '0 0 18 18',
                                    fill: 'none',
                                    xmlns: 'http://www.w3.org/2000/svg',
                                    children: [
                                      m.jsx('path', {
                                        d: 'M6.10322 0.956299H2.53135C1.5751 0.956299 0.787598 1.7438 0.787598 2.70005V6.27192C0.787598 7.22817 1.5751 8.01567 2.53135 8.01567H6.10322C7.05947 8.01567 7.84697 7.22817 7.84697 6.27192V2.72817C7.8751 1.7438 7.0876 0.956299 6.10322 0.956299ZM6.60947 6.30005C6.60947 6.5813 6.38447 6.8063 6.10322 6.8063H2.53135C2.2501 6.8063 2.0251 6.5813 2.0251 6.30005V2.72817C2.0251 2.44692 2.2501 2.22192 2.53135 2.22192H6.10322C6.38447 2.22192 6.60947 2.44692 6.60947 2.72817V6.30005Z',
                                        fill: '',
                                      }),
                                      m.jsx('path', {
                                        d: 'M15.4689 0.956299H11.8971C10.9408 0.956299 10.1533 1.7438 10.1533 2.70005V6.27192C10.1533 7.22817 10.9408 8.01567 11.8971 8.01567H15.4689C16.4252 8.01567 17.2127 7.22817 17.2127 6.27192V2.72817C17.2127 1.7438 16.4252 0.956299 15.4689 0.956299ZM15.9752 6.30005C15.9752 6.5813 15.7502 6.8063 15.4689 6.8063H11.8971C11.6158 6.8063 11.3908 6.5813 11.3908 6.30005V2.72817C11.3908 2.44692 11.6158 2.22192 11.8971 2.22192H15.4689C15.7502 2.22192 15.9752 2.44692 15.9752 2.72817V6.30005Z',
                                        fill: '',
                                      }),
                                      m.jsx('path', {
                                        d: 'M6.10322 9.92822H2.53135C1.5751 9.92822 0.787598 10.7157 0.787598 11.672V15.2438C0.787598 16.2001 1.5751 16.9876 2.53135 16.9876H6.10322C7.05947 16.9876 7.84697 16.2001 7.84697 15.2438V11.7001C7.8751 10.7157 7.0876 9.92822 6.10322 9.92822ZM6.60947 15.272C6.60947 15.5532 6.38447 15.7782 6.10322 15.7782H2.53135C2.2501 15.7782 2.0251 15.5532 2.0251 15.272V11.7001C2.0251 11.4188 2.2501 11.1938 2.53135 11.1938H6.10322C6.38447 11.1938 6.60947 11.4188 6.60947 11.7001V15.272Z',
                                        fill: '',
                                      }),
                                      m.jsx('path', {
                                        d: 'M15.4689 9.92822H11.8971C10.9408 9.92822 10.1533 10.7157 10.1533 11.672V15.2438C10.1533 16.2001 10.9408 16.9876 11.8971 16.9876H15.4689C16.4252 16.9876 17.2127 16.2001 17.2127 15.2438V11.7001C17.2127 10.7157 16.4252 9.92822 15.4689 9.92822ZM15.9752 15.272C15.9752 15.5532 15.7502 15.7782 15.4689 15.7782H11.8971C11.6158 15.7782 11.3908 15.5532 11.3908 15.272V11.7001C11.3908 11.4188 11.6158 11.1938 11.8971 11.1938H15.4689C15.7502 11.1938 15.9752 11.4188 15.9752 11.7001V15.272Z',
                                        fill: '',
                                      }),
                                    ],
                                  }),
                                  'Dashboard',
                                  m.jsx('svg', {
                                    className: `absolute right-4 top-1/2 -translate-y-1/2 fill-current ${
                                      z && 'rotate-180'
                                    }`,
                                    width: '20',
                                    height: '20',
                                    viewBox: '0 0 20 20',
                                    fill: 'none',
                                    xmlns: 'http://www.w3.org/2000/svg',
                                    children: m.jsx('path', {
                                      fillRule: 'evenodd',
                                      clipRule: 'evenodd',
                                      d: 'M4.41107 6.9107C4.73651 6.58527 5.26414 6.58527 5.58958 6.9107L10.0003 11.3214L14.4111 6.91071C14.7365 6.58527 15.2641 6.58527 15.5896 6.91071C15.915 7.23614 15.915 7.76378 15.5896 8.08922L10.5896 13.0892C10.2641 13.4147 9.73651 13.4147 9.41107 13.0892L4.41107 8.08922C4.08563 7.76378 4.08563 7.23614 4.41107 6.9107Z',
                                      fill: '',
                                    }),
                                  }),
                                ],
                              }),
                              m.jsx('div', {
                                className: `translate transform overflow-hidden ${
                                  !z && 'hidden'
                                }`,
                                children: m.jsxs('ul', {
                                  className:
                                    'mt-4 mb-5.5 flex flex-col gap-2.5 pl-6',
                                  children: [
                                    m.jsx('li', {
                                      children: m.jsx(Tn, {
                                        to: '/',
                                        className: ({ isActive: Y }) =>
                                          'group relative flex items-center gap-2.5 rounded-md px-4 font-medium text-bodydark2 duration-300 ease-in-out hover:text-white ' +
                                          (Y && '!text-white'),
                                        children: 'Air Quality',
                                      }),
                                    }),
                                    m.jsx('li', {
                                      children: m.jsx(Tn, {
                                        to: '/tables',
                                        className: `group relative flex items-center gap-2.5 rounded-md px-4 font-medium text-bodydark2 duration-300 ease-in-out hover:text-white ' +
                                (isActive && '!text-white'
                              }`,
                                        children: 'Tables',
                                      }),
                                    }),
                                  ],
                                }),
                              }),
                            ],
                          }),
                      }),
                      m.jsx('li', {
                        children: m.jsxs(Tn, {
                          to: '/profile',
                          className: `group relative flex items-center gap-2.5 rounded-sm py-2 px-4 font-medium text-bodydark1 duration-300 ease-in-out hover:bg-graydark dark:hover:bg-meta-4 ${
                            c.includes('profile') &&
                            'bg-graydark dark:bg-meta-4'
                          }`,
                          children: [
                            m.jsxs('svg', {
                              className: 'fill-current',
                              width: '18',
                              height: '18',
                              viewBox: '0 0 18 18',
                              fill: 'none',
                              xmlns: 'http://www.w3.org/2000/svg',
                              children: [
                                m.jsx('path', {
                                  d: 'M9.0002 7.79065C11.0814 7.79065 12.7689 6.1594 12.7689 4.1344C12.7689 2.1094 11.0814 0.478149 9.0002 0.478149C6.91895 0.478149 5.23145 2.1094 5.23145 4.1344C5.23145 6.1594 6.91895 7.79065 9.0002 7.79065ZM9.0002 1.7719C10.3783 1.7719 11.5033 2.84065 11.5033 4.16252C11.5033 5.4844 10.3783 6.55315 9.0002 6.55315C7.62207 6.55315 6.49707 5.4844 6.49707 4.16252C6.49707 2.84065 7.62207 1.7719 9.0002 1.7719Z',
                                  fill: '',
                                }),
                                m.jsx('path', {
                                  d: 'M10.8283 9.05627H7.17207C4.16269 9.05627 1.71582 11.5313 1.71582 14.5406V16.875C1.71582 17.2125 1.99707 17.5219 2.3627 17.5219C2.72832 17.5219 3.00957 17.2407 3.00957 16.875V14.5406C3.00957 12.2344 4.89394 10.3219 7.22832 10.3219H10.8564C13.1627 10.3219 15.0752 12.2063 15.0752 14.5406V16.875C15.0752 17.2125 15.3564 17.5219 15.7221 17.5219C16.0877 17.5219 16.3689 17.2407 16.3689 16.875V14.5406C16.2846 11.5313 13.8377 9.05627 10.8283 9.05627Z',
                                  fill: '',
                                }),
                              ],
                            }),
                            'Profile',
                          ],
                        }),
                      }),
                    ],
                  }),
                ],
              }),
            }),
          }),
        ],
      })
    );
  },
  vv = ({ children: e }) => {
    const [n, r] = ne.useState(!1);
    return m.jsx('div', {
      className: 'dark:bg-boxdark-2 dark:text-bodydark',
      children: m.jsxs('div', {
        className: 'flex h-screen overflow-hidden',
        children: [
          m.jsx(xv, { sidebarOpen: n, setSidebarOpen: r }),
          m.jsxs('div', {
            className:
              'relative flex flex-1 flex-col overflow-y-auto overflow-x-hidden',
            children: [
              m.jsx(gv, { sidebarOpen: n, setSidebarOpen: r }),
              m.jsx('main', {
                children: m.jsx('div', {
                  className: 'mx-auto max-w-screen-2xl p-4 md:p-6 2xl:p-10',
                  children: e,
                }),
              }),
            ],
          }),
        ],
      }),
    });
  };
function bv() {
  const [e, n] = ne.useState(!0),
    { pathname: r } = ar();
  return (
    ne.useEffect(() => {
      window.scrollTo(0, 0);
    }, [r]),
    ne.useEffect(() => {
      setTimeout(() => n(!1), 1e3);
    }, []),
    e
      ? m.jsx(Pm, {})
      : m.jsx(vv, {
          children: m.jsxs(wm, {
            children: [
              m.jsx(It, {
                index: !0,
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'eCommerce Dashboard | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(R2, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/calendar',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Calendar | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(Im, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/profile',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Profile | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(sv, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/forms/form-elements',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Form Elements | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(tv, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/forms/form-layout',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Form Layout | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(rv, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/tables',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Tables | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(cv, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/settings',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Settings | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(lv, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/chart',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Basic Chart | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(M2, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/ui/alerts',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Alerts | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(dv, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/ui/buttons',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Buttons | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(uv, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/auth/signin',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Signin | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(Tm, {}),
                  ],
                }),
              }),
              m.jsx(It, {
                path: '/auth/signup',
                element: m.jsxs(m.Fragment, {
                  children: [
                    m.jsx(Zt, {
                      title:
                        'Signup | TailAdmin - Tailwind CSS Admin Dashboard Template',
                    }),
                    m.jsx(Dm, {}),
                  ],
                }),
              }),
            ],
          }),
        })
  );
}
ol.createRoot(document.getElementById('root')).render(
  m.jsx(mc.StrictMode, { children: m.jsx(Nm, { children: m.jsx(bv, {}) }) })
);
